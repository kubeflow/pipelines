apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: param-substitutions-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.7.0, pipelines.kubeflow.org/pipeline_compilation_time: '2021-08-08T21:54:33.403588',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Test the same PipelineParam
      getting substituted in multiple places", "name": "Param Substitutions"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.7.0}
spec:
  entrypoint: param-substitutions
  templates:
  - name: cop
    container:
      args: [--param, '{{inputs.parameters.create-volume-name}}']
      image: image
      volumeMounts:
      - {mountPath: /mnt, name: create-volume}
    inputs:
      parameters:
      - {name: create-volume-name}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
    volumes:
    - name: create-volume
      persistentVolumeClaim: {claimName: '{{inputs.parameters.create-volume-name}}'}
  - name: create-volume
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-data'
        spec:
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: 1Gi
    outputs:
      parameters:
      - name: create-volume-manifest
        valueFrom: {jsonPath: '{}'}
      - name: create-volume-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: create-volume-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: param-substitutions
    dag:
      tasks:
      - name: cop
        template: cop
        dependencies: [create-volume]
        arguments:
          parameters:
          - {name: create-volume-name, value: '{{tasks.create-volume.outputs.parameters.create-volume-name}}'}
      - {name: create-volume, template: create-volume}
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
