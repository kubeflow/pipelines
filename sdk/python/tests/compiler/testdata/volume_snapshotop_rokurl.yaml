apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: volumesnapshotop-rokurl-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.7.0, pipelines.kubeflow.org/pipeline_compilation_time: '2021-08-08T21:54:40.563986',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "The fifth example of the
      design doc.", "inputs": [{"name": "rok_url"}], "name": "VolumeSnapshotOp RokURL"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.7.0}
spec:
  entrypoint: volumesnapshotop-rokurl
  templates:
  - name: create-snapshot-1
    resource:
      action: create
      successCondition: status.readyToUse == true
      manifest: |
        apiVersion: snapshot.storage.k8s.io/v1alpha1
        kind: VolumeSnapshot
        metadata:
          name: '{{workflow.name}}-snap1'
        spec:
          source:
            kind: PersistentVolumeClaim
            name: '{{inputs.parameters.create-volume-1-name}}'
    inputs:
      parameters:
      - {name: create-volume-1-name}
    outputs:
      parameters:
      - name: create-snapshot-1-manifest
        valueFrom: {jsonPath: '{}'}
      - name: create-snapshot-1-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: create-snapshot-1-size
        valueFrom: {jsonPath: '{.status.restoreSize}'}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: create-snapshot-2
    resource:
      action: create
      successCondition: status.readyToUse == true
      manifest: |
        apiVersion: snapshot.storage.k8s.io/v1alpha1
        kind: VolumeSnapshot
        metadata:
          name: '{{workflow.name}}-snap2'
        spec:
          source:
            kind: PersistentVolumeClaim
            name: '{{inputs.parameters.create-volume-2-name}}'
    inputs:
      parameters:
      - {name: create-volume-2-name}
    outputs:
      parameters:
      - name: create-snapshot-2-manifest
        valueFrom: {jsonPath: '{}'}
      - name: create-snapshot-2-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: create-snapshot-2-size
        valueFrom: {jsonPath: '{.status.restoreSize}'}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: create-volume-1
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          annotations:
            rok/origin: '{{inputs.parameters.rok_url}}'
          name: '{{workflow.name}}-vol1'
        spec:
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: 1Gi
    inputs:
      parameters:
      - {name: rok_url}
    outputs:
      parameters:
      - name: create-volume-1-manifest
        valueFrom: {jsonPath: '{}'}
      - name: create-volume-1-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: create-volume-1-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: create-volume-2
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-vol2'
        spec:
          accessModes:
          - ReadWriteMany
          dataSource:
            apiGroup: snapshot.storage.k8s.io
            kind: VolumeSnapshot
            name: '{{inputs.parameters.create-snapshot-1-name}}'
          resources:
            requests:
              storage: '{{inputs.parameters.create-snapshot-1-size}}'
    inputs:
      parameters:
      - {name: create-snapshot-1-name}
      - {name: create-snapshot-1-size}
    outputs:
      parameters:
      - name: create-volume-2-manifest
        valueFrom: {jsonPath: '{}'}
      - name: create-volume-2-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: create-volume-2-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: create-volume-3
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-vol3'
        spec:
          accessModes:
          - ReadWriteMany
          dataSource:
            apiGroup: snapshot.storage.k8s.io
            kind: VolumeSnapshot
            name: '{{inputs.parameters.create-snapshot-2-name}}'
          resources:
            requests:
              storage: '{{inputs.parameters.create-snapshot-2-size}}'
    inputs:
      parameters:
      - {name: create-snapshot-2-name}
      - {name: create-snapshot-2-size}
    outputs:
      parameters:
      - name: create-volume-3-manifest
        valueFrom: {jsonPath: '{}'}
      - name: create-volume-3-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: create-volume-3-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: step1-concat
    container:
      args: [cat /data/file*| gzip -c >/data/full.gz]
      command: [sh, -c]
      image: library/bash:4.4.23
      volumeMounts:
      - {mountPath: /data, name: create-volume-1}
    inputs:
      parameters:
      - {name: create-volume-1-name}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
    volumes:
    - name: create-volume-1
      persistentVolumeClaim: {claimName: '{{inputs.parameters.create-volume-1-name}}'}
  - name: step2-gunzip
    container:
      command: [gunzip, -k, /data/full.gz]
      image: library/bash:4.4.23
      volumeMounts:
      - {mountPath: /data, name: create-volume-2}
    inputs:
      parameters:
      - {name: create-volume-2-name}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
    volumes:
    - name: create-volume-2
      persistentVolumeClaim: {claimName: '{{inputs.parameters.create-volume-2-name}}'}
  - name: step3-output
    container:
      command: [cat, /data/full]
      image: library/bash:4.4.23
      volumeMounts:
      - {mountPath: /data, name: create-volume-3}
    inputs:
      parameters:
      - {name: create-volume-3-name}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
    volumes:
    - name: create-volume-3
      persistentVolumeClaim: {claimName: '{{inputs.parameters.create-volume-3-name}}'}
  - name: volumesnapshotop-rokurl
    inputs:
      parameters:
      - {name: rok_url}
    dag:
      tasks:
      - name: create-snapshot-1
        template: create-snapshot-1
        dependencies: [create-volume-1, step1-concat]
        arguments:
          parameters:
          - {name: create-volume-1-name, value: '{{tasks.create-volume-1.outputs.parameters.create-volume-1-name}}'}
      - name: create-snapshot-2
        template: create-snapshot-2
        dependencies: [create-volume-2, step2-gunzip]
        arguments:
          parameters:
          - {name: create-volume-2-name, value: '{{tasks.create-volume-2.outputs.parameters.create-volume-2-name}}'}
      - name: create-volume-1
        template: create-volume-1
        arguments:
          parameters:
          - {name: rok_url, value: '{{inputs.parameters.rok_url}}'}
      - name: create-volume-2
        template: create-volume-2
        dependencies: [create-snapshot-1]
        arguments:
          parameters:
          - {name: create-snapshot-1-name, value: '{{tasks.create-snapshot-1.outputs.parameters.create-snapshot-1-name}}'}
          - {name: create-snapshot-1-size, value: '{{tasks.create-snapshot-1.outputs.parameters.create-snapshot-1-size}}'}
      - name: create-volume-3
        template: create-volume-3
        dependencies: [create-snapshot-2]
        arguments:
          parameters:
          - {name: create-snapshot-2-name, value: '{{tasks.create-snapshot-2.outputs.parameters.create-snapshot-2-name}}'}
          - {name: create-snapshot-2-size, value: '{{tasks.create-snapshot-2.outputs.parameters.create-snapshot-2-size}}'}
      - name: step1-concat
        template: step1-concat
        dependencies: [create-volume-1]
        arguments:
          parameters:
          - {name: create-volume-1-name, value: '{{tasks.create-volume-1.outputs.parameters.create-volume-1-name}}'}
      - name: step2-gunzip
        template: step2-gunzip
        dependencies: [create-volume-2]
        arguments:
          parameters:
          - {name: create-volume-2-name, value: '{{tasks.create-volume-2.outputs.parameters.create-volume-2-name}}'}
      - name: step3-output
        template: step3-output
        dependencies: [create-volume-3]
        arguments:
          parameters:
          - {name: create-volume-3-name, value: '{{tasks.create-volume-3.outputs.parameters.create-volume-3-name}}'}
  arguments:
    parameters:
    - {name: rok_url}
  serviceAccountName: pipeline-runner
