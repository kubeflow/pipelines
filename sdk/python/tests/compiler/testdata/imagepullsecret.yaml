apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: save-most-frequent-
spec:
  arguments:
    parameters:
    - name: message
  entrypoint: save-most-frequent
  imagePullSecrets:
  - name: secretA
  serviceAccountName: pipeline-runner
  templates:
  - container:
      args:
      - python -c "from collections import Counter; words = Counter('{{inputs.parameters.message}}'.split());
        print(max(words, key=words.get))" | tee /tmp/message.txt
      command:
      - sh
      - -c
      image: python:3.5-jessie
    inputs:
      parameters:
      - name: message
    name: get-frequent
    outputs:
      artifacts:
      - name: mlpipeline-ui-metadata
        path: /mlpipeline-ui-metadata.json
        s3:
          accessKeySecret:
            key: accesskey
            name: mlpipeline-minio-artifact
          bucket: mlpipeline
          endpoint: minio-service.kubeflow:9000
          insecure: true
          key: runs/{{workflow.uid}}/{{pod.name}}/mlpipeline-ui-metadata.tgz
          secretKeySecret:
            key: secretkey
            name: mlpipeline-minio-artifact
      - name: mlpipeline-metrics
        path: /mlpipeline-metrics.json
        s3:
          accessKeySecret:
            key: accesskey
            name: mlpipeline-minio-artifact
          bucket: mlpipeline
          endpoint: minio-service.kubeflow:9000
          insecure: true
          key: runs/{{workflow.uid}}/{{pod.name}}/mlpipeline-metrics.tgz
          secretKeySecret:
            key: secretkey
            name: mlpipeline-minio-artifact
      parameters:
      - name: get-frequent-word
        valueFrom:
          path: /tmp/message.txt
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: message
            value: '{{inputs.parameters.message}}'
        name: get-frequent
        template: get-frequent
    inputs:
      parameters:
      - name: message
    name: save-most-frequent
