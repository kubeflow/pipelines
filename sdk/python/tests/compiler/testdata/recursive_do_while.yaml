apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: pipeline-flip-coin-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.7.0, pipelines.kubeflow.org/pipeline_compilation_time: '2021-08-09T15:45:04.137204',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "shows how to use graph_component.",
      "name": "pipeline flip coin"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.7.0}
spec:
  entrypoint: pipeline-flip-coin
  templates:
  - name: condition-2
    inputs:
      parameters:
      - {name: flip-3-output}
    dag:
      tasks:
      - name: graph-flip-component-1
        template: graph-flip-component-1
        arguments:
          parameters:
          - {name: flip-output, value: '{{inputs.parameters.flip-3-output}}'}
  - name: flip
    container:
      args: ['python -c "import random; result = ''heads'' if random.randint(0,1)
          == 0 else ''tails''; print(result)" | tee /tmp/output']
      command: [sh, -c]
      image: python:alpine3.6
    outputs:
      parameters:
      - name: flip-output
        valueFrom: {path: /tmp/output}
      artifacts:
      - {name: flip-output, path: /tmp/output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: flip-2
    container:
      args: ['python -c "import random; result = ''heads'' if random.randint(0,1)
          == 0 else ''tails''; print(result)" | tee /tmp/output']
      command: [sh, -c]
      image: python:alpine3.6
    outputs:
      artifacts:
      - {name: flip-2-output, path: /tmp/output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: flip-3
    container:
      args: ['python -c "import random; result = ''heads'' if random.randint(0,1)
          == 0 else ''tails''; print(result)" | tee /tmp/output']
      command: [sh, -c]
      image: python:alpine3.6
    outputs:
      parameters:
      - name: flip-3-output
        valueFrom: {path: /tmp/output}
      artifacts:
      - {name: flip-3-output, path: /tmp/output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: graph-flip-component-1
    inputs:
      parameters:
      - {name: flip-output}
    dag:
      tasks:
      - name: condition-2
        template: condition-2
        when: '"{{tasks.flip-3.outputs.parameters.flip-3-output}}" == "heads"'
        dependencies: [flip-3]
        arguments:
          parameters:
          - {name: flip-3-output, value: '{{tasks.flip-3.outputs.parameters.flip-3-output}}'}
      - name: flip-3
        template: flip-3
        dependencies: [print]
      - name: print
        template: print
        arguments:
          parameters:
          - {name: flip-output, value: '{{inputs.parameters.flip-output}}'}
  - name: pipeline-flip-coin
    dag:
      tasks:
      - {name: flip, template: flip}
      - {name: flip-2, template: flip-2}
      - name: graph-flip-component-1
        template: graph-flip-component-1
        dependencies: [flip, flip-2]
        arguments:
          parameters:
          - {name: flip-output, value: '{{tasks.flip.outputs.parameters.flip-output}}'}
      - name: print-2
        template: print-2
        dependencies: [flip, graph-flip-component-1]
        arguments:
          parameters:
          - {name: flip-output, value: '{{tasks.flip.outputs.parameters.flip-output}}'}
  - name: print
    container:
      command: [echo, '{{inputs.parameters.flip-output}}']
      image: alpine:3.6
    inputs:
      parameters:
      - {name: flip-output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: print-2
    container:
      command: [echo, 'cool, it is over. {{inputs.parameters.flip-output}}']
      image: alpine:3.6
    inputs:
      parameters:
      - {name: flip-output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.7.0
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
