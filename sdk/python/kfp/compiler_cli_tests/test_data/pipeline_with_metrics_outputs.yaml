pipelineInfo:
  name: pipeline-with-metrics-outputs
sdkVersion: kfp-2.0.0-alpha.1
schemaVersion: 2.1.0
deploymentSpec:
  executors:
    exec-output-metrics:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef output_metrics(metrics: Output[Metrics]):\n    \"\"\"Dummy component\
          \ that outputs metrics with a random accuracy.\"\"\"\n    import random\n\
          \    result = random.randint(0, 100)\n    metrics.log_metric('accuracy',\
          \ result)\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - output_metrics
    exec-output-metrics-2:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef output_metrics(metrics: Output[Metrics]):\n    \"\"\"Dummy component\
          \ that outputs metrics with a random accuracy.\"\"\"\n    import random\n\
          \    result = random.randint(0, 100)\n    metrics.log_metric('accuracy',\
          \ result)\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - output_metrics
components:
  comp-for-loop-2:
    inputDefinitions:
      parameters:
        pipelinechannel--loop-item-param-1:
          parameterType: NUMBER_INTEGER
    outputDefinitions:
      artifacts:
        output-metrics-2-metrics:
          artifactType:
            schemaTitle: system.Metrics
            schemaVersion: 0.0.1
    dag:
      tasks:
        output-metrics-2:
          taskInfo:
            name: output-metrics-2
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-output-metrics-2
      outputs:
        artifacts:
          output-metrics-2-metrics:
            artifactSelectors:
            - producerSubtask: output-metrics-2
              outputArtifactKey: metrics
  comp-output-metrics:
    outputDefinitions:
      artifacts:
        metrics:
          artifactType:
            schemaTitle: system.Metrics
            schemaVersion: 0.0.1
    executorLabel: exec-output-metrics
  comp-output-metrics-2:
    outputDefinitions:
      artifacts:
        metrics:
          artifactType:
            schemaTitle: system.Metrics
            schemaVersion: 0.0.1
    executorLabel: exec-output-metrics-2
root:
  outputDefinitions:
    artifacts:
      output-metrics-metrics:
        artifactType:
          schemaTitle: system.Metrics
          schemaVersion: 0.0.1
      output-metrics-2-metrics:
        artifactType:
          schemaTitle: system.Metrics
          schemaVersion: 0.0.1
  dag:
    tasks:
      for-loop-2:
        taskInfo:
          name: for-loop-2
        componentRef:
          name: comp-for-loop-2
        parameterIterator:
          items:
            raw: '[1, 2]'
          itemInput: pipelinechannel--loop-item-param-1
      output-metrics:
        taskInfo:
          name: output-metrics
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-output-metrics
    outputs:
      artifacts:
        output-metrics-metrics:
          artifactSelectors:
          - producerSubtask: output-metrics
            outputArtifactKey: metrics
        output-metrics-2-metrics:
          artifactSelectors:
          - producerSubtask: for-loop-2
            outputArtifactKey: output-metrics-2-metrics
defaultPipelineRoot: dummy_root
