pipelineInfo:
  name: conditional-execution-pipeline
sdkVersion: kfp-2.0.0-alpha.1
schemaVersion: 2.1.0
deploymentSpec:
  executors:
    exec-flip-coin:
      container:
        image: python:alpine3.6
        command:
        - sh
        - -c
        args:
        - mkdir -p "$(dirname $0)" && python -c "import random; result = 'heads' if
          random.randint(0,1) == 0 else 'tails'; print(result, end='')" | tee $0
        - '{{$.outputs.parameters[''output''].output_file}}'
    exec-generate-random-number:
      container:
        image: python:alpine3.6
        command:
        - sh
        - -c
        args:
        - mkdir -p "$(dirname $2)" && python -c "import random; print(random.randint($0,
          $1), end='')" | tee $2
        - '0'
        - '9'
        - '{{$.outputs.parameters[''output''].output_file}}'
    exec-print:
      container:
        image: python:alpine3.6
        command:
        - echo
        - '{{$.inputs.parameters[''msg'']}}'
    exec-print-2:
      container:
        image: python:alpine3.6
        command:
        - echo
        - '{{$.inputs.parameters[''msg'']}}'
    exec-generate-random-number-2:
      container:
        image: python:alpine3.6
        command:
        - sh
        - -c
        args:
        - mkdir -p "$(dirname $2)" && python -c "import random; print(random.randint($0,
          $1), end='')" | tee $2
        - '10'
        - '19'
        - '{{$.outputs.parameters[''output''].output_file}}'
    exec-print-3:
      container:
        image: python:alpine3.6
        command:
        - echo
        - '{{$.inputs.parameters[''msg'']}}'
    exec-print-4:
      container:
        image: python:alpine3.6
        command:
        - echo
        - '{{$.inputs.parameters[''msg'']}}'
components:
  comp-condition-1:
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-output:
          parameterType: STRING
    dag:
      tasks:
        condition-2:
          taskInfo:
            name: condition-2
          inputs:
            parameters:
              pipelinechannel--flip-coin-output:
                componentInputParameter: pipelinechannel--flip-coin-output
              pipelinechannel--generate-random-number-output:
                taskOutputParameter:
                  producerTask: generate-random-number
                  outputParameterKey: output
          dependentTasks:
          - generate-random-number
          componentRef:
            name: comp-condition-2
          triggerPolicy:
            condition: int(inputs.parameter_values['pipelinechannel--generate-random-number-output'])
              > 5
        condition-3:
          taskInfo:
            name: condition-3
          inputs:
            parameters:
              pipelinechannel--flip-coin-output:
                componentInputParameter: pipelinechannel--flip-coin-output
              pipelinechannel--generate-random-number-output:
                taskOutputParameter:
                  producerTask: generate-random-number
                  outputParameterKey: output
          dependentTasks:
          - generate-random-number
          componentRef:
            name: comp-condition-3
          triggerPolicy:
            condition: int(inputs.parameter_values['pipelinechannel--generate-random-number-output'])
              <= 5
        generate-random-number:
          taskInfo:
            name: generate-random-number
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-generate-random-number
  comp-condition-4:
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-output:
          parameterType: STRING
    dag:
      tasks:
        condition-5:
          taskInfo:
            name: condition-5
          inputs:
            parameters:
              pipelinechannel--flip-coin-output:
                componentInputParameter: pipelinechannel--flip-coin-output
              pipelinechannel--generate-random-number-2-output:
                taskOutputParameter:
                  producerTask: generate-random-number-2
                  outputParameterKey: output
          dependentTasks:
          - generate-random-number-2
          componentRef:
            name: comp-condition-5
          triggerPolicy:
            condition: int(inputs.parameter_values['pipelinechannel--generate-random-number-2-output'])
              > 15
        condition-6:
          taskInfo:
            name: condition-6
          inputs:
            parameters:
              pipelinechannel--flip-coin-output:
                componentInputParameter: pipelinechannel--flip-coin-output
              pipelinechannel--generate-random-number-2-output:
                taskOutputParameter:
                  producerTask: generate-random-number-2
                  outputParameterKey: output
          dependentTasks:
          - generate-random-number-2
          componentRef:
            name: comp-condition-6
          triggerPolicy:
            condition: int(inputs.parameter_values['pipelinechannel--generate-random-number-2-output'])
              <= 15
        generate-random-number-2:
          taskInfo:
            name: generate-random-number-2
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-generate-random-number-2
  comp-flip-coin:
    outputDefinitions:
      parameters:
        output:
          parameterType: STRING
    executorLabel: exec-flip-coin
  comp-condition-2:
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-output:
          parameterType: STRING
        pipelinechannel--generate-random-number-output:
          parameterType: NUMBER_INTEGER
    dag:
      tasks:
        print:
          taskInfo:
            name: print
          inputs:
            parameters:
              pipelinechannel--generate-random-number-output:
                componentInputParameter: pipelinechannel--generate-random-number-output
              msg:
                runtimeValue:
                  constant: heads and {{$.inputs.parameters['pipelinechannel--generate-random-number-output']}}
                    > 5!
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print
  comp-condition-3:
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-output:
          parameterType: STRING
        pipelinechannel--generate-random-number-output:
          parameterType: NUMBER_INTEGER
    dag:
      tasks:
        print-2:
          taskInfo:
            name: print-2
          inputs:
            parameters:
              pipelinechannel--generate-random-number-output:
                componentInputParameter: pipelinechannel--generate-random-number-output
              msg:
                runtimeValue:
                  constant: heads and {{$.inputs.parameters['pipelinechannel--generate-random-number-output']}}
                    <= 5!
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-2
  comp-generate-random-number:
    outputDefinitions:
      parameters:
        output:
          parameterType: NUMBER_INTEGER
    executorLabel: exec-generate-random-number
  comp-print:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print
  comp-print-2:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print-2
  comp-condition-5:
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-output:
          parameterType: STRING
        pipelinechannel--generate-random-number-2-output:
          parameterType: NUMBER_INTEGER
    dag:
      tasks:
        print-3:
          taskInfo:
            name: print-3
          inputs:
            parameters:
              pipelinechannel--generate-random-number-2-output:
                componentInputParameter: pipelinechannel--generate-random-number-2-output
              msg:
                runtimeValue:
                  constant: tails and {{$.inputs.parameters['pipelinechannel--generate-random-number-2-output']}}
                    > 15!
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-3
  comp-condition-6:
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-output:
          parameterType: STRING
        pipelinechannel--generate-random-number-2-output:
          parameterType: NUMBER_INTEGER
    dag:
      tasks:
        print-4:
          taskInfo:
            name: print-4
          inputs:
            parameters:
              pipelinechannel--generate-random-number-2-output:
                componentInputParameter: pipelinechannel--generate-random-number-2-output
              msg:
                runtimeValue:
                  constant: tails and {{$.inputs.parameters['pipelinechannel--generate-random-number-2-output']}}
                    <= 15!
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-4
  comp-generate-random-number-2:
    outputDefinitions:
      parameters:
        output:
          parameterType: NUMBER_INTEGER
    executorLabel: exec-generate-random-number-2
  comp-print-3:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print-3
  comp-print-4:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print-4
root:
  dag:
    tasks:
      condition-1:
        taskInfo:
          name: condition-1
        inputs:
          parameters:
            pipelinechannel--flip-coin-output:
              taskOutputParameter:
                producerTask: flip-coin
                outputParameterKey: output
        dependentTasks:
        - flip-coin
        componentRef:
          name: comp-condition-1
        triggerPolicy:
          condition: inputs.parameter_values['pipelinechannel--flip-coin-output']
            == 'heads'
      condition-4:
        taskInfo:
          name: condition-4
        inputs:
          parameters:
            pipelinechannel--flip-coin-output:
              taskOutputParameter:
                producerTask: flip-coin
                outputParameterKey: output
        dependentTasks:
        - flip-coin
        componentRef:
          name: comp-condition-4
        triggerPolicy:
          condition: inputs.parameter_values['pipelinechannel--flip-coin-output']
            == 'tails'
      flip-coin:
        taskInfo:
          name: flip-coin
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-flip-coin
defaultPipelineRoot: dummy_root
