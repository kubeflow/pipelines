pipelineInfo:
  name: pipeline-with-loops-and-conditions-multi-layers
sdkVersion: kfp-2.0.0-alpha.1
schemaVersion: 2.1.0
deploymentSpec:
  executors:
    exec-flip-coin-op:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef flip_coin_op() -> str:\n    \"\"\"Flip a coin and output heads\
          \ or tails randomly.\"\"\"\n    import random\n    result = 'heads' if random.randint(0,\
          \ 1) == 0 else 'tails'\n    return result\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - flip_coin_op
    exec-args-generator-op:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef args_generator_op() -> list:\n    return [\n        {\n     \
          \       'A_a': '1',\n            'B_b': ['2', '20'],\n        },\n     \
          \   {\n            'A_a': '10',\n            'B_b': ['22', '222'],\n   \
          \     },\n    ]\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - args_generator_op
    exec-args-generator-op-2:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef args_generator_op() -> list:\n    return [\n        {\n     \
          \       'A_a': '1',\n            'B_b': ['2', '20'],\n        },\n     \
          \   {\n            'A_a': '10',\n            'B_b': ['22', '222'],\n   \
          \     },\n    ]\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - args_generator_op
    exec-print-text:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_text(msg: str, msg2: Optional[str] = None):\n    print(f'msg:\
          \ {msg}, msg2: {msg2}')\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_text
    exec-print-text-2:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_text(msg: str, msg2: Optional[str] = None):\n    print(f'msg:\
          \ {msg}, msg2: {msg2}')\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_text
    exec-print-text-3:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_text(msg: str, msg2: Optional[str] = None):\n    print(f'msg:\
          \ {msg}, msg2: {msg2}')\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_text
    exec-print-struct:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_struct(struct: dict):\n    print(struct)\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_struct
    exec-print-text-4:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_text(msg: str, msg2: Optional[str] = None):\n    print(f'msg:\
          \ {msg}, msg2: {msg2}')\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_text
    exec-print-text-5:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_text(msg: str, msg2: Optional[str] = None):\n    print(f'msg:\
          \ {msg}, msg2: {msg2}')\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_text
    exec-print-text-6:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_text(msg: str, msg2: Optional[str] = None):\n    print(f'msg:\
          \ {msg}, msg2: {msg2}')\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_text
    exec-print-text-7:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_text(msg: str, msg2: Optional[str] = None):\n    print(f'msg:\
          \ {msg}, msg2: {msg2}')\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_text
    exec-print-text-8:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_text(msg: str, msg2: Optional[str] = None):\n    print(f'msg:\
          \ {msg}, msg2: {msg2}')\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_text
    exec-print-text-9:
      container:
        image: python:3.7
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_text(msg: str, msg2: Optional[str] = None):\n    print(f'msg:\
          \ {msg}, msg2: {msg2}')\n\n"
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_text
components:
  comp-condition-1:
    inputDefinitions:
      parameters:
        pipelinechannel--loop_parameter:
          parameterType: LIST
        pipelinechannel--msg:
          parameterType: STRING
        pipelinechannel--args-generator-op-Output:
          parameterType: LIST
        pipelinechannel--flip-coin-op-Output:
          parameterType: STRING
    dag:
      tasks:
        for-loop-2:
          taskInfo:
            name: for-loop-2
          inputs:
            parameters:
              pipelinechannel--loop_parameter:
                componentInputParameter: pipelinechannel--loop_parameter
              pipelinechannel--args-generator-op-2-Output:
                taskOutputParameter:
                  producerTask: args-generator-op-2
                  outputParameterKey: Output
              pipelinechannel--args-generator-op-Output:
                componentInputParameter: pipelinechannel--args-generator-op-Output
              pipelinechannel--msg:
                componentInputParameter: pipelinechannel--msg
              pipelinechannel--flip-coin-op-Output:
                componentInputParameter: pipelinechannel--flip-coin-op-Output
          dependentTasks:
          - args-generator-op-2
          componentRef:
            name: comp-for-loop-2
          parameterIterator:
            items:
              inputParameter: pipelinechannel--args-generator-op-Output
            itemInput: pipelinechannel--args-generator-op-Output-loop-item
        args-generator-op-2:
          taskInfo:
            name: args-generator-op-2
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-args-generator-op-2
  comp-for-loop-14:
    inputDefinitions:
      parameters:
        pipelinechannel--loop_parameter:
          parameterType: LIST
        pipelinechannel--loop_parameter-loop-item:
          parameterType: STRING
    dag:
      tasks:
        condition-15:
          taskInfo:
            name: condition-15
          inputs:
            parameters:
              pipelinechannel--loop_parameter-loop-item:
                componentInputParameter: pipelinechannel--loop_parameter-loop-item
              pipelinechannel--loop_parameter-loop-item-subvar-A_a:
                componentInputParameter: pipelinechannel--loop_parameter-loop-item
                parameterExpressionSelector: parseJson(string_value)["A_a"]
          componentRef:
            name: comp-condition-15
          triggerPolicy:
            condition: inputs.parameter_values['pipelinechannel--loop_parameter-loop-item-subvar-A_a']
              == 'heads'
  comp-flip-coin-op:
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
    executorLabel: exec-flip-coin-op
  comp-args-generator-op:
    outputDefinitions:
      parameters:
        Output:
          parameterType: LIST
    executorLabel: exec-args-generator-op
  comp-for-loop-2:
    inputDefinitions:
      parameters:
        pipelinechannel--loop_parameter:
          parameterType: LIST
        pipelinechannel--args-generator-op-2-Output:
          parameterType: LIST
        pipelinechannel--args-generator-op-Output:
          parameterType: LIST
        pipelinechannel--msg:
          parameterType: STRING
        pipelinechannel--flip-coin-op-Output:
          parameterType: STRING
        pipelinechannel--args-generator-op-Output-loop-item:
          parameterType: STRING
    dag:
      tasks:
        condition-3:
          taskInfo:
            name: condition-3
          inputs:
            parameters:
              pipelinechannel--args-generator-op-Output-loop-item:
                componentInputParameter: pipelinechannel--args-generator-op-Output-loop-item
              pipelinechannel--flip-coin-op-Output:
                componentInputParameter: pipelinechannel--flip-coin-op-Output
              pipelinechannel--args-generator-op-Output-loop-item-subvar-A_a:
                componentInputParameter: pipelinechannel--args-generator-op-Output-loop-item
                parameterExpressionSelector: parseJson(string_value)["A_a"]
          componentRef:
            name: comp-condition-3
          triggerPolicy:
            condition: inputs.parameter_values['pipelinechannel--args-generator-op-Output-loop-item-subvar-A_a']
              == 'heads'
        condition-4:
          taskInfo:
            name: condition-4
          inputs:
            parameters:
              pipelinechannel--args-generator-op-Output-loop-item:
                componentInputParameter: pipelinechannel--args-generator-op-Output-loop-item
              pipelinechannel--flip-coin-op-Output:
                componentInputParameter: pipelinechannel--flip-coin-op-Output
          componentRef:
            name: comp-condition-4
          triggerPolicy:
            condition: inputs.parameter_values['pipelinechannel--flip-coin-op-Output']
              == 'heads'
        condition-5:
          taskInfo:
            name: condition-5
          inputs:
            parameters:
              pipelinechannel--args-generator-op-Output-loop-item:
                componentInputParameter: pipelinechannel--args-generator-op-Output-loop-item
              pipelinechannel--flip-coin-op-Output:
                componentInputParameter: pipelinechannel--flip-coin-op-Output
              pipelinechannel--args-generator-op-Output-loop-item-subvar-A_a:
                componentInputParameter: pipelinechannel--args-generator-op-Output-loop-item
                parameterExpressionSelector: parseJson(string_value)["A_a"]
          componentRef:
            name: comp-condition-5
          triggerPolicy:
            condition: inputs.parameter_values['pipelinechannel--args-generator-op-Output-loop-item-subvar-A_a']
              == 'tails'
        for-loop-8:
          taskInfo:
            name: for-loop-8
          inputs:
            parameters:
              pipelinechannel--args-generator-op-Output-loop-item:
                componentInputParameter: pipelinechannel--args-generator-op-Output-loop-item
              pipelinechannel--flip-coin-op-Output:
                componentInputParameter: pipelinechannel--flip-coin-op-Output
              pipelinechannel--args-generator-op-Output-loop-item-subvar-B_b:
                componentInputParameter: pipelinechannel--args-generator-op-Output-loop-item
                parameterExpressionSelector: parseJson(string_value)["B_b"]
          componentRef:
            name: comp-for-loop-8
          parameterIterator:
            items:
              inputParameter: pipelinechannel--args-generator-op-Output-loop-item-subvar-B_b
            itemInput: pipelinechannel--args-generator-op-Output-loop-item-subvar-B_b-loop-item
        for-loop-9:
          taskInfo:
            name: for-loop-9
          inputs:
            parameters:
              pipelinechannel--loop_parameter:
                componentInputParameter: pipelinechannel--loop_parameter
              pipelinechannel--flip-coin-op-Output:
                componentInputParameter: pipelinechannel--flip-coin-op-Output
              pipelinechannel--args-generator-op-2-Output:
                componentInputParameter: pipelinechannel--args-generator-op-2-Output
          componentRef:
            name: comp-for-loop-9
          parameterIterator:
            items:
              inputParameter: pipelinechannel--loop_parameter
            itemInput: pipelinechannel--loop_parameter-loop-item
        for-loop-12:
          taskInfo:
            name: for-loop-12
          inputs:
            parameters:
              pipelinechannel--flip-coin-op-Output:
                componentInputParameter: pipelinechannel--flip-coin-op-Output
          componentRef:
            name: comp-for-loop-12
          parameterIterator:
            items:
              raw: '["1", "2"]'
            itemInput: pipelinechannel--loop-item-param-11
        print-text:
          taskInfo:
            name: print-text
          inputs:
            parameters:
              msg:
                componentInputParameter: pipelinechannel--msg
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-text
  comp-args-generator-op-2:
    outputDefinitions:
      parameters:
        Output:
          parameterType: LIST
    executorLabel: exec-args-generator-op-2
  comp-condition-3:
    inputDefinitions:
      parameters:
        pipelinechannel--args-generator-op-Output-loop-item:
          parameterType: STRING
        pipelinechannel--flip-coin-op-Output:
          parameterType: STRING
        pipelinechannel--args-generator-op-Output-loop-item-subvar-A_a:
          parameterType: STRING
    dag:
      tasks:
        print-text-2:
          taskInfo:
            name: print-text-2
          inputs:
            parameters:
              msg:
                componentInputParameter: pipelinechannel--args-generator-op-Output-loop-item
                parameterExpressionSelector: parseJson(string_value)["B_b"]
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-text-2
  comp-condition-4:
    inputDefinitions:
      parameters:
        pipelinechannel--args-generator-op-Output-loop-item:
          parameterType: STRING
        pipelinechannel--flip-coin-op-Output:
          parameterType: STRING
    dag:
      tasks:
        print-text-3:
          taskInfo:
            name: print-text-3
          inputs:
            parameters:
              msg:
                componentInputParameter: pipelinechannel--args-generator-op-Output-loop-item
                parameterExpressionSelector: parseJson(string_value)["B_b"]
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-text-3
  comp-condition-5:
    inputDefinitions:
      parameters:
        pipelinechannel--args-generator-op-Output-loop-item:
          parameterType: STRING
        pipelinechannel--flip-coin-op-Output:
          parameterType: STRING
        pipelinechannel--args-generator-op-Output-loop-item-subvar-A_a:
          parameterType: STRING
    dag:
      tasks:
        for-loop-7:
          taskInfo:
            name: for-loop-7
          inputs:
            parameters:
              pipelinechannel--args-generator-op-Output-loop-item:
                componentInputParameter: pipelinechannel--args-generator-op-Output-loop-item
              pipelinechannel--flip-coin-op-Output:
                componentInputParameter: pipelinechannel--flip-coin-op-Output
          componentRef:
            name: comp-for-loop-7
          parameterIterator:
            items:
              raw: '[{"a": "-1"}, {"a": "-2"}]'
            itemInput: pipelinechannel--loop-item-param-6
  comp-for-loop-8:
    inputDefinitions:
      parameters:
        pipelinechannel--args-generator-op-Output-loop-item:
          parameterType: STRING
        pipelinechannel--flip-coin-op-Output:
          parameterType: STRING
        pipelinechannel--args-generator-op-Output-loop-item-subvar-B_b:
          parameterType: STRING
        pipelinechannel--args-generator-op-Output-loop-item-subvar-B_b-loop-item:
          parameterType: STRING
    dag:
      tasks:
        print-text-4:
          taskInfo:
            name: print-text-4
          inputs:
            parameters:
              msg:
                componentInputParameter: pipelinechannel--args-generator-op-Output-loop-item-subvar-B_b-loop-item
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-text-4
  comp-for-loop-9:
    inputDefinitions:
      parameters:
        pipelinechannel--loop_parameter:
          parameterType: LIST
        pipelinechannel--flip-coin-op-Output:
          parameterType: STRING
        pipelinechannel--args-generator-op-2-Output:
          parameterType: LIST
        pipelinechannel--loop_parameter-loop-item:
          parameterType: STRING
    dag:
      tasks:
        for-loop-10:
          taskInfo:
            name: for-loop-10
          inputs:
            parameters:
              pipelinechannel--flip-coin-op-Output:
                componentInputParameter: pipelinechannel--flip-coin-op-Output
              pipelinechannel--args-generator-op-2-Output:
                componentInputParameter: pipelinechannel--args-generator-op-2-Output
              pipelinechannel--loop_parameter-loop-item:
                componentInputParameter: pipelinechannel--loop_parameter-loop-item
          componentRef:
            name: comp-for-loop-10
          parameterIterator:
            items:
              inputParameter: pipelinechannel--args-generator-op-2-Output
            itemInput: pipelinechannel--args-generator-op-2-Output-loop-item
        print-text-5:
          taskInfo:
            name: print-text-5
          inputs:
            parameters:
              msg:
                componentInputParameter: pipelinechannel--loop_parameter-loop-item
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-text-5
  comp-for-loop-12:
    inputDefinitions:
      parameters:
        pipelinechannel--loop-item-param-11:
          parameterType: STRING
        pipelinechannel--flip-coin-op-Output:
          parameterType: STRING
    dag:
      tasks:
        condition-13:
          taskInfo:
            name: condition-13
          inputs:
            parameters:
              pipelinechannel--loop-item-param-11:
                componentInputParameter: pipelinechannel--loop-item-param-11
              pipelinechannel--flip-coin-op-Output:
                componentInputParameter: pipelinechannel--flip-coin-op-Output
          componentRef:
            name: comp-condition-13
          triggerPolicy:
            condition: inputs.parameter_values['pipelinechannel--loop-item-param-11']
              == '1'
        print-text-7:
          taskInfo:
            name: print-text-7
          inputs:
            parameters:
              msg:
                componentInputParameter: pipelinechannel--loop-item-param-11
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-text-7
  comp-print-text:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print-text
  comp-print-text-2:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print-text-2
  comp-print-text-3:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print-text-3
  comp-for-loop-7:
    inputDefinitions:
      parameters:
        pipelinechannel--args-generator-op-Output-loop-item:
          parameterType: STRING
        pipelinechannel--flip-coin-op-Output:
          parameterType: STRING
        pipelinechannel--loop-item-param-6:
          parameterType: STRUCT
    dag:
      tasks:
        print-struct:
          taskInfo:
            name: print-struct
          inputs:
            parameters:
              struct:
                componentInputParameter: pipelinechannel--loop-item-param-6
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-struct
  comp-print-struct:
    inputDefinitions:
      parameters:
        struct:
          parameterType: STRUCT
    executorLabel: exec-print-struct
  comp-print-text-4:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print-text-4
  comp-for-loop-10:
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-op-Output:
          parameterType: STRING
        pipelinechannel--args-generator-op-2-Output:
          parameterType: LIST
        pipelinechannel--loop_parameter-loop-item:
          parameterType: STRING
        pipelinechannel--args-generator-op-2-Output-loop-item:
          parameterType: STRING
    dag:
      tasks:
        print-text-6:
          taskInfo:
            name: print-text-6
          inputs:
            parameters:
              msg:
                componentInputParameter: pipelinechannel--loop_parameter-loop-item
              msg2:
                componentInputParameter: pipelinechannel--args-generator-op-2-Output-loop-item
                parameterExpressionSelector: parseJson(string_value)["A_a"]
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-text-6
  comp-print-text-5:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print-text-5
  comp-print-text-6:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
        msg2:
          parameterType: STRING
    executorLabel: exec-print-text-6
  comp-condition-13:
    inputDefinitions:
      parameters:
        pipelinechannel--loop-item-param-11:
          parameterType: STRING
        pipelinechannel--flip-coin-op-Output:
          parameterType: STRING
    dag:
      tasks:
        print-text-8:
          taskInfo:
            name: print-text-8
          inputs:
            parameters:
              msg:
                runtimeValue:
                  constant: '1'
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-text-8
  comp-print-text-7:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print-text-7
  comp-print-text-8:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print-text-8
  comp-condition-15:
    inputDefinitions:
      parameters:
        pipelinechannel--loop_parameter-loop-item:
          parameterType: STRING
        pipelinechannel--loop_parameter-loop-item-subvar-A_a:
          parameterType: STRING
    dag:
      tasks:
        for-loop-16:
          taskInfo:
            name: for-loop-16
          inputs:
            parameters:
              pipelinechannel--loop_parameter-loop-item:
                componentInputParameter: pipelinechannel--loop_parameter-loop-item
              pipelinechannel--loop_parameter-loop-item-subvar-B_b:
                componentInputParameter: pipelinechannel--loop_parameter-loop-item
                parameterExpressionSelector: parseJson(string_value)["B_b"]
          componentRef:
            name: comp-for-loop-16
          parameterIterator:
            items:
              inputParameter: pipelinechannel--loop_parameter-loop-item-subvar-B_b
            itemInput: pipelinechannel--loop_parameter-loop-item-subvar-B_b-loop-item
  comp-for-loop-16:
    inputDefinitions:
      parameters:
        pipelinechannel--loop_parameter-loop-item:
          parameterType: STRING
        pipelinechannel--loop_parameter-loop-item-subvar-B_b:
          parameterType: STRING
        pipelinechannel--loop_parameter-loop-item-subvar-B_b-loop-item:
          parameterType: STRING
    dag:
      tasks:
        print-text-9:
          taskInfo:
            name: print-text-9
          inputs:
            parameters:
              msg:
                componentInputParameter: pipelinechannel--loop_parameter-loop-item-subvar-B_b-loop-item
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-text-9
  comp-print-text-9:
    inputDefinitions:
      parameters:
        msg:
          parameterType: STRING
    executorLabel: exec-print-text-9
root:
  inputDefinitions:
    parameters:
      msg:
        parameterType: STRING
        defaultValue: hello
      loop_parameter:
        parameterType: LIST
        defaultValue:
        - A_a: heads
          B_b:
          - A
          - B
        - A_a: tails
          B_b:
          - X
          - Y
          - Z
  dag:
    tasks:
      condition-1:
        taskInfo:
          name: condition-1
        inputs:
          parameters:
            pipelinechannel--loop_parameter:
              componentInputParameter: loop_parameter
            pipelinechannel--msg:
              componentInputParameter: msg
            pipelinechannel--args-generator-op-Output:
              taskOutputParameter:
                producerTask: args-generator-op
                outputParameterKey: Output
            pipelinechannel--flip-coin-op-Output:
              taskOutputParameter:
                producerTask: flip-coin-op
                outputParameterKey: Output
        dependentTasks:
        - args-generator-op
        - flip-coin-op
        componentRef:
          name: comp-condition-1
        triggerPolicy:
          condition: inputs.parameter_values['pipelinechannel--flip-coin-op-Output']
            != 'no-such-result'
      for-loop-14:
        taskInfo:
          name: for-loop-14
        inputs:
          parameters:
            pipelinechannel--loop_parameter:
              componentInputParameter: loop_parameter
        componentRef:
          name: comp-for-loop-14
        parameterIterator:
          items:
            inputParameter: pipelinechannel--loop_parameter
          itemInput: pipelinechannel--loop_parameter-loop-item
      flip-coin-op:
        taskInfo:
          name: flip-coin-op
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-flip-coin-op
      args-generator-op:
        taskInfo:
          name: args-generator-op
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-args-generator-op
