apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: xgboost-training-
spec:
  entrypoint: xgboost-training
  onExit: exit-handler
  arguments:
    parameters:
    - name: project # GCP project to run dataproc cluster
    - name: region # region to run the dataproc cluster
      value: us-central1
    - name: cluster # cluster name to use
      value: training-{{workflow.name}}
    - name: output # GCS path of output directory
    - name: train # GCS path of training csv
    - name: eval # GCS path of eval csv
    - name: schema # GCS path of json schema for training and eval csv
    - name: target # which column to use as prediction target
    - name: trueclass # the label for true class, used in generating ROC curve.
    - name: package # GCS path of distributed xgboost training package
      value: gs://ml-pipeline-playground/xgboost4j-example-0.8-SNAPSHOT-jar-with-dependencies.jar
    - name: workers # number of works for trainer
    - name: rounds # number of rounds to train
    - name: conf # GCS path of xgboost training config file
      value: gs://ml-pipeline-playground/trainconfcla.json
  templates:
  - name: exit-handler
    inputs:
      parameters:
      - name: project
      - name: region
      - name: cluster
    steps:
    - - name: deletecluster
        template: deletecluster
        arguments:
          parameters:
          - name: project
            value: "{{inputs.parameters.project}}"
          - name: region
            value: "{{inputs.parameters.region}}"
          - name: name
            value: "{{inputs.parameters.cluster}}"
  - name: xgboost-training
    inputs:
      parameters:
      - name: project
      - name: region
      - name: cluster
      - name: output
      - name: train
      - name: eval
      - name: schema
      - name: target
      - name: package
      - name: workers
      - name: rounds
      - name: conf
      - name: trueclass
    steps:
    - - name: createcluster
        template: createcluster
        arguments:
          parameters:
          - name: project
            value: "{{inputs.parameters.project}}"
          - name: region
            value: "{{inputs.parameters.region}}"
          - name: name
            value: "{{inputs.parameters.cluster}}"
          - name: staging
            value: "{{inputs.parameters.output}}/{{workflow.name}}/staging"

    - - name: analyze
        template: analyze
        arguments:
          parameters:
          - name: project
            value: "{{inputs.parameters.project}}"
          - name: region
            value: "{{inputs.parameters.region}}"
          - name: cluster
            value: "{{inputs.parameters.cluster}}"
          - name: output
            value: "{{inputs.parameters.output}}/{{workflow.name}}/analysis"
          - name: train
            value: "{{inputs.parameters.train}}"
          - name: schema
            value: "{{inputs.parameters.schema}}"

    - - name: transform
        template: transform
        arguments:
          parameters:
          - name: project
            value: "{{inputs.parameters.project}}"
          - name: region
            value: "{{inputs.parameters.region}}"
          - name: cluster
            value: "{{inputs.parameters.cluster}}"
          - name: output
            value: "{{inputs.parameters.output}}/{{workflow.name}}/transform"
          - name: train
            value: "{{inputs.parameters.train}}"
          - name: eval
            value: "{{inputs.parameters.eval}}"
          - name: target
            value: "{{inputs.parameters.target}}"
          - name: analysis
            value: "{{inputs.parameters.output}}/{{workflow.name}}/analysis"

    - - name: train
        template: train
        arguments:
          parameters:
          - name: project
            value: "{{inputs.parameters.project}}"
          - name: region
            value: "{{inputs.parameters.region}}"
          - name: cluster
            value: "{{inputs.parameters.cluster}}"
          - name: output
            value: "{{inputs.parameters.output}}/{{workflow.name}}/model"
          - name: train
            value: "{{inputs.parameters.output}}/{{workflow.name}}/transform/train/part-*"
          - name: eval
            value: "{{inputs.parameters.output}}/{{workflow.name}}/transform/eval/part-*"
          - name: target
            value: "{{inputs.parameters.target}}"
          - name: analysis
            value: "{{inputs.parameters.output}}/{{workflow.name}}/analysis"
          - name: package
            value: "{{inputs.parameters.package}}"
          - name: workers
            value: "{{inputs.parameters.workers}}"
          - name: rounds
            value: "{{inputs.parameters.rounds}}"
          - name: conf
            value: "{{inputs.parameters.conf}}"

    - - name: batchpredict
        template: batchpredict
        arguments:
          parameters:
          - name: project
            value: "{{inputs.parameters.project}}"
          - name: region
            value: "{{inputs.parameters.region}}"
          - name: cluster
            value: "{{inputs.parameters.cluster}}"
          - name: output
            value: "{{inputs.parameters.output}}/{{workflow.name}}/batchpredict"
          - name: eval
            value: "{{inputs.parameters.output}}/{{workflow.name}}/transform/eval/part-*"
          - name: target
            value: "{{inputs.parameters.target}}"
          - name: analysis
            value: "{{inputs.parameters.output}}/{{workflow.name}}/analysis"
          - name: package
            value: "{{inputs.parameters.package}}"
          - name: model
            value: "{{inputs.parameters.output}}/{{workflow.name}}/model"

    - - name: roc
        template: roc
        arguments:
          parameters:
          - name: output
            value: "{{inputs.parameters.output}}/{{workflow.name}}/roc"
          - name: predictions
            value: "{{inputs.parameters.output}}/{{workflow.name}}/batchpredict/part-*.csv"
          - name: trueclass
            value: "{{inputs.parameters.trueclass}}"

  - name: createcluster
    inputs:
      parameters:
      - name: project
      - name: region
      - name: name
      - name: staging
    container:
      image: gcr.io/ml-pipeline/ml-pipeline-dataproc-xgboost
      command: [sh, -c]
      args: ["python /ml/create_cluster.py --project {{inputs.parameters.project}} --region {{inputs.parameters.region}} --name {{inputs.parameters.name}} --staging {{inputs.parameters.staging}}"]

  - name: analyze
    inputs:
      parameters:
      - name: project
      - name: region
      - name: cluster
      - name: output
      - name: train
      - name: schema
    container:
      image: gcr.io/ml-pipeline/ml-pipeline-dataproc-xgboost
      command: [sh, -c]
      args: ["python /ml/analyze.py --project {{inputs.parameters.project}} --region {{inputs.parameters.region}} --cluster {{inputs.parameters.cluster}} --output {{inputs.parameters.output}} --train {{inputs.parameters.train}} --schema {{inputs.parameters.schema}}" ]

  - name: transform
    inputs:
      parameters:
      - name: project
      - name: region
      - name: cluster
      - name: output
      - name: train
      - name: eval
      - name: target
      - name: analysis
    container:
      image: gcr.io/ml-pipeline/ml-pipeline-dataproc-xgboost
      command: [sh, -c]
      args: ["python /ml/transform.py --project {{inputs.parameters.project}} --region {{inputs.parameters.region}} --cluster {{inputs.parameters.cluster}} --output {{inputs.parameters.output}} --train {{inputs.parameters.train}} --eval {{inputs.parameters.eval}} --target {{inputs.parameters.target}} --analysis {{inputs.parameters.analysis}}" ]

  - name: train
    inputs:
      parameters:
      - name: project
      - name: region
      - name: cluster
      - name: output
      - name: train
      - name: eval
      - name: target
      - name: analysis
      - name: package
      - name: workers
      - name: rounds
      - name: conf
    container:
      image: gcr.io/ml-pipeline/ml-pipeline-dataproc-xgboost
      command: [sh, -c]
      args: ["python /ml/train.py --project {{inputs.parameters.project}} --region {{inputs.parameters.region}} --cluster {{inputs.parameters.cluster}} --output {{inputs.parameters.output}} --train {{inputs.parameters.train}} --eval {{inputs.parameters.eval}} --target {{inputs.parameters.target}} --analysis {{inputs.parameters.analysis}} --package {{inputs.parameters.package}} --workers {{inputs.parameters.workers}} --rounds {{inputs.parameters.rounds}} --conf {{inputs.parameters.conf}}" ]

  - name: batchpredict
    inputs:
      parameters:
      - name: project
      - name: region
      - name: cluster
      - name: output
      - name: eval
      - name: model
      - name: target
      - name: package
      - name: analysis
    container:
      image: gcr.io/ml-pipeline/ml-pipeline-dataproc-xgboost
      command: [sh, -c]
      args: ["python /ml/predict.py --project {{inputs.parameters.project}} --region {{inputs.parameters.region}} --cluster {{inputs.parameters.cluster}} --output {{inputs.parameters.output}} --predict {{inputs.parameters.eval}} --analysis {{inputs.parameters.analysis}} --target {{inputs.parameters.target}} --model {{inputs.parameters.model}} --package {{inputs.parameters.package}} " ]

  - name: roc
    inputs:
      parameters:
      - name: output
      - name: predictions
      - name: trueclass
    container:
      image: gcr.io/ml-pipeline/ml-pipeline-local
      command: [sh, -c]
      args: ["python /ml/roc.py --output {{inputs.parameters.output}} --predictions {{inputs.parameters.predictions}} --trueclass {{inputs.parameters.trueclass}} " ]    
  - name: deletecluster
    inputs:
      parameters:
      - name: project
      - name: region
      - name: name
    container:
      image: gcr.io/ml-pipeline/ml-pipeline-dataproc-xgboost
      command: [sh, -c]
      args: ["python /ml/delete_cluster.py --project {{inputs.parameters.project}} --region {{inputs.parameters.region}} --name {{inputs.parameters.name}}" ]
