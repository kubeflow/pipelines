# PIPELINE DEFINITION
# Name: parameter-oneof-pipeline
components:
  comp-condition-2:
    dag:
      outputs:
        parameters:
          pipelinechannel--core-comp-Output:
            valueFromParameter:
              outputParameterKey: Output
              producerSubtask: core-comp
      tasks:
        core-comp:
          cachingOptions: {}
          componentRef:
            name: comp-core-comp
          inputs:
            parameters:
              input:
                runtimeValue:
                  constant: Got heads!
          taskInfo:
            name: core-comp
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-Output:
          parameterType: STRING
    outputDefinitions:
      parameters:
        pipelinechannel--core-comp-Output:
          parameterType: STRING
  comp-condition-3:
    dag:
      outputs:
        parameters:
          pipelinechannel--core-output-comp-output_key:
            valueFromParameter:
              outputParameterKey: output_key
              producerSubtask: core-output-comp
      tasks:
        core-output-comp:
          cachingOptions: {}
          componentRef:
            name: comp-core-output-comp
          inputs:
            parameters:
              input:
                runtimeValue:
                  constant: Got tails!
          taskInfo:
            name: core-output-comp
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-Output:
          parameterType: STRING
    outputDefinitions:
      parameters:
        pipelinechannel--core-output-comp-output_key:
          parameterType: STRING
  comp-condition-branches-1:
    dag:
      outputs:
        parameters:
          pipelinechannel--condition-branches-1-oneof-1:
            valueFromOneof:
              parameterSelectors:
              - outputParameterKey: pipelinechannel--core-comp-Output
                producerSubtask: condition-2
              - outputParameterKey: pipelinechannel--core-output-comp-output_key
                producerSubtask: condition-3
      tasks:
        condition-2:
          componentRef:
            name: comp-condition-2
          inputs:
            parameters:
              pipelinechannel--flip-coin-Output:
                componentInputParameter: pipelinechannel--flip-coin-Output
          taskInfo:
            name: condition-2
          triggerPolicy:
            condition: inputs.parameter_values['pipelinechannel--flip-coin-Output']
              == 'heads'
        condition-3:
          componentRef:
            name: comp-condition-3
          inputs:
            parameters:
              pipelinechannel--flip-coin-Output:
                componentInputParameter: pipelinechannel--flip-coin-Output
          taskInfo:
            name: condition-3
          triggerPolicy:
            condition: '!(inputs.parameter_values[''pipelinechannel--flip-coin-Output'']
              == ''heads'')'
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-Output:
          parameterType: STRING
    outputDefinitions:
      parameters:
        pipelinechannel--condition-branches-1-oneof-1:
          parameterType: STRING
  comp-core:
    dag:
      outputs:
        parameters:
          Output:
            valueFromParameter:
              outputParameterKey: pipelinechannel--condition-branches-1-oneof-1
              producerSubtask: condition-branches-1
      tasks:
        condition-branches-1:
          componentRef:
            name: comp-condition-branches-1
          dependentTasks:
          - flip-coin
          inputs:
            parameters:
              pipelinechannel--flip-coin-Output:
                taskOutputParameter:
                  outputParameterKey: Output
                  producerTask: flip-coin
          taskInfo:
            name: condition-branches-1
        flip-coin:
          cachingOptions: {}
          componentRef:
            name: comp-flip-coin
          taskInfo:
            name: flip-coin
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-core-comp:
    executorLabel: exec-core-comp
    inputDefinitions:
      parameters:
        input:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-core-output-comp:
    executorLabel: exec-core-output-comp
    inputDefinitions:
      parameters:
        input:
          parameterType: STRING
    outputDefinitions:
      parameters:
        output_key:
          parameterType: STRING
  comp-crust-comp:
    executorLabel: exec-crust-comp
    inputDefinitions:
      parameters:
        input:
          parameterType: STRING
  comp-flip-coin:
    executorLabel: exec-flip-coin
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-mantle:
    dag:
      outputs:
        parameters:
          Output:
            valueFromParameter:
              outputParameterKey: Output
              producerSubtask: core
      tasks:
        core:
          cachingOptions: {}
          componentRef:
            name: comp-core
          taskInfo:
            name: core
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-core-comp:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - core_comp
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.3'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef core_comp(input: str) -> str:\n    print('input :', input)\n\
          \    return input\n\n"
        image: python:3.9
    exec-core-output-comp:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - core_output_comp
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.3'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef core_output_comp(input: str, output_key: dsl.OutputPath(str)):\n\
          \    print('input :', input)\n    with open(output_key, 'w') as f:\n   \
          \     f.write(input)\n\n"
        image: python:3.9
    exec-crust-comp:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - crust_comp
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.3'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef crust_comp(input: str):\n    print('input :', input)\n\n"
        image: python:3.9
    exec-flip-coin:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - flip_coin
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.3'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef flip_coin() -> str:\n    import random\n    return 'heads' if\
          \ random.randint(0, 1) == 0 else 'tails'\n\n"
        image: python:3.9
pipelineInfo:
  name: parameter-oneof-pipeline
root:
  dag:
    tasks:
      crust-comp:
        cachingOptions: {}
        componentRef:
          name: comp-crust-comp
        dependentTasks:
        - mantle
        inputs:
          parameters:
            input:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: mantle
        taskInfo:
          name: crust-comp
      mantle:
        cachingOptions: {}
        componentRef:
          name: comp-mantle
        taskInfo:
          name: mantle
schemaVersion: 2.1.0
sdkVersion: kfp-2.13.0
