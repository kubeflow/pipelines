# PIPELINE DEFINITION
# Name: pipeline-secret-env
# Inputs:
#    secret_parm: str [Default: 'test-secret-1']
components:
  comp-comp:
    executorLabel: exec-comp
  comp-generate-secret-name:
    executorLabel: exec-generate-secret-name
    outputDefinitions:
      parameters:
        some_output:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-comp:
      container:
        args:
          - --executor_input
          - '{{$}}'
          - --function_to_execute
          - comp
        command:
          - sh
          - -c
          - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.3'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
          - sh
          - -ec
          - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
          - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef comp():\n    import os\n    username = os.getenv(\"USER_NAME\"\
          , \"\")\n    psw1 = os.getenv(\"PASSWORD_VAR1\", \"\")\n    psw2 = os.getenv(\"\
          PASSWORD_VAR2\", \"\")\n    assert username == \"user1\"\n    assert psw1\
          \ == \"psw1\"\n    assert psw2 == \"psw2\"\n\n"
        image: python:3.9
    exec-generate-secret-name:
      container:
        args:
          - --executor_input
          - '{{$}}'
          - --function_to_execute
          - generate_secret_name
        command:
          - sh
          - -c
          - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.3'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
          - sh
          - -ec
          - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
          - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef generate_secret_name(some_output: OutputPath(str)):\n    secret_name\
          \ = \"test-secret-3\"\n    with open(some_output, 'w') as f:\n        f.write(secret_name)\n\
          \n"
        image: python:3.9
pipelineInfo:
  name: pipeline-secret-env
root:
  dag:
    tasks:
      comp:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-comp
        dependentTasks:
          - generate-secret-name
        taskInfo:
          name: comp
      generate-secret-name:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-generate-secret-name
        taskInfo:
          name: generate-secret-name
  inputDefinitions:
    parameters:
      secret_parm:
        defaultValue: test-secret-1
        isOptional: true
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.3
---
platforms:
  kubernetes:
    deploymentSpec:
      executors:
        exec-comp:
          secretAsEnv:
            - keyToEnv:
                - envVar: USER_NAME
                  secretKey: username
              optional: false
              secretNameParameter:
                componentInputParameter: secret_parm
            - keyToEnv:
                - envVar: PASSWORD_VAR1
                  secretKey: password
              optional: false
              secretName: test-secret-2
              secretNameParameter:
                runtimeValue:
                  constant: test-secret-2
            - keyToEnv:
                - envVar: PASSWORD_VAR2
                  secretKey: password
              optional: false
              secretNameParameter:
                taskOutputParameter:
                  outputParameterKey: some_output
                  producerTask: generate-secret-name