# PIPELINE DEFINITION
# Name: pipeline-with-datasets
# Description: Download Hugging Face Data Set, upload it as an artifact and print its metadata
# Inputs:
#    dataset_name: str [Default: '']
#    dataset_repo: str [Default: 'google/frames-benchmark']
components:
  comp-download-dataset-and-upload-as-artifact:
    executorLabel: exec-download-dataset-and-upload-as-artifact
    inputDefinitions:
      parameters:
        dataset_name:
          parameterType: STRING
        dataset_repo:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        output_dataset:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
  comp-print-dataset-info:
    executorLabel: exec-print-dataset-info
    inputDefinitions:
      artifacts:
        dataset:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-download-dataset-and-upload-as-artifact:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - download_dataset_and_upload_as_artifact
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'datasets==4.0.0'\
          \  &&  python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.3'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef download_dataset_and_upload_as_artifact(dataset_repo: str, dataset_name:\
          \ str, output_dataset: Output[Dataset]):\n    from datasets import load_dataset\n\
          \    # Load data set from hugging face\n    ds = load_dataset(dataset_repo,\
          \ dataset_name)\n    print(\"Downloaded Hugging Face data\")\n    print(f\"\
          Now saving to {output_dataset.path}\")\n    ds.save_to_disk(output_dataset.path)\n\
          \    print(f\"Saved to {output_dataset.path}\")\n\n"
        image: python:3.9
    exec-print-dataset-info:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_dataset_info
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.3'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_dataset_info(dataset: Dataset):\n    print('Information\
          \ about the artifact')\n    print('Name:', dataset.name)\n    print('URI:',\
          \ dataset.uri)\n    assert \"download-dataset-and-upload-as-artifact\" in\
          \ dataset.uri, \"The URI of the downloaded artifact does not match the expected\
          \ function's name that generated it\"\n\n"
        image: python:3.9
pipelineInfo:
  description: Download Hugging Face Data Set, upload it as an artifact and print
    its metadata
  name: pipeline-with-datasets
root:
  dag:
    tasks:
      download-dataset-and-upload-as-artifact:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-download-dataset-and-upload-as-artifact
        inputs:
          parameters:
            dataset_name:
              componentInputParameter: dataset_name
            dataset_repo:
              componentInputParameter: dataset_repo
        taskInfo:
          name: download-dataset-and-upload-as-artifact
      print-dataset-info:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-print-dataset-info
        dependentTasks:
        - download-dataset-and-upload-as-artifact
        inputs:
          artifacts:
            dataset:
              taskOutputArtifact:
                outputArtifactKey: output_dataset
                producerTask: download-dataset-and-upload-as-artifact
        taskInfo:
          name: print-dataset-info
  inputDefinitions:
    parameters:
      dataset_name:
        defaultValue: ''
        isOptional: true
        parameterType: STRING
      dataset_repo:
        defaultValue: google/frames-benchmark
        isOptional: true
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.3
