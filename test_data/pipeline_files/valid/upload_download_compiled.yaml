# PIPELINE DEFINITION
# Name: test-data-passing-pipeline-1
# Inputs:
#    bucket_name: str
#    mlpipeline_minio_artifact_secret: str
components:
  comp-receive-file:
    executorLabel: exec-receive-file
    inputDefinitions:
      artifacts:
        incomingfile:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
    outputDefinitions:
      artifacts:
        saveartifact:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-send-file:
    executorLabel: exec-send-file
    inputDefinitions:
      parameters:
        file_size_bytes:
          parameterType: NUMBER_INTEGER
    outputDefinitions:
      artifacts:
        outgoingfile:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-test-uploaded-artifact:
    executorLabel: exec-test-uploaded-artifact
    inputDefinitions:
      artifacts:
        previous_step:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        bucket_name:
          parameterType: STRING
        file_size_bytes:
          parameterType: NUMBER_INTEGER
        mlpipeline_minio_artifact_secret:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-receive-file:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - receive_file
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.13.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef receive_file(\n    incomingfile: dsl.InputPath(),\n    saveartifact:\
          \ dsl.OutputPath(),\n):\n    import os  # noqa: PLC0415\n    import shutil\
          \  # noqa: PLC0415\n\n    print(\"reading %s, size is %s\" % (incomingfile,\
          \ os.path.getsize(incomingfile)))\n\n    with open(incomingfile, \"rb\"\
          ) as f:\n        b = f.read(1)\n        print(\"read byte: %s\" % b)\n \
          \       f.close()\n\n    print(\"copying in %s to out %s\" % (incomingfile,\
          \ saveartifact))\n    shutil.copyfile(incomingfile, saveartifact)\n\n"
        image: registry.redhat.io/ubi9/python-312@sha256:e80ff3673c95b91f0dafdbe97afb261eab8244d7fd8b47e20ffcbcfee27fb168
    exec-send-file:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - send_file
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.13.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef send_file(\n    file_size_bytes: int,\n    outgoingfile: dsl.OutputPath(),\n\
          ):\n    import os  # noqa: PLC0415\n    import zipfile  # noqa: PLC0415\n\
          \n    def create_large_file(file_path, size_in_bytes):\n        with open(file_path,\
          \ \"wb\") as f:\n            f.write(os.urandom(size_in_bytes))\n\n    def\
          \ zip_file(input_file_path, output_zip_path):\n        with zipfile.ZipFile(output_zip_path,\
          \ \"w\", compression=zipfile.ZIP_DEFLATED) as zipf:\n            zipf.write(input_file_path,\
          \ os.path.basename(input_file_path))\n\n    print(\"starting creating the\
          \ file...\")\n    file_path = \"/tmp/large_file.txt\"\n    create_large_file(file_path,\
          \ file_size_bytes)\n    zip_file(file_path, outgoingfile)\n    print(f\"\
          saved: {outgoingfile}\")\n\n"
        image: registry.redhat.io/ubi9/python-312@sha256:e80ff3673c95b91f0dafdbe97afb261eab8244d7fd8b47e20ffcbcfee27fb168
    exec-test-uploaded-artifact:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - test_uploaded_artifact
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.13.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'minio' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef test_uploaded_artifact(\n    previous_step: dsl.InputPath(),\n\
          \    file_size_bytes: int,\n    mlpipeline_minio_artifact_secret: str,\n\
          \    bucket_name: str,\n):\n    import base64  # noqa: PLC0415\n    import\
          \ json  # noqa: PLC0415\n\n    from minio import Minio  # noqa: PLC0415\n\
          \n    def inner_decode(my_str):\n        return base64.b64decode(my_str).decode(\"\
          utf-8\")\n\n    mlpipeline_minio_artifact_secret = json.loads(mlpipeline_minio_artifact_secret.replace(\"\
          '\", '\"'))\n    host = inner_decode(mlpipeline_minio_artifact_secret[\"\
          host\"])\n    port = inner_decode(mlpipeline_minio_artifact_secret[\"port\"\
          ])\n    access_key = inner_decode(mlpipeline_minio_artifact_secret[\"accesskey\"\
          ])\n    secret_key = inner_decode(mlpipeline_minio_artifact_secret[\"secretkey\"\
          ])\n    secure = inner_decode(mlpipeline_minio_artifact_secret[\"secure\"\
          ])\n    secure = secure.lower() == \"true\"\n    client = Minio(f\"{host}:{port}\"\
          , access_key=access_key, secret_key=secret_key, secure=secure)\n\n    store_object\
          \ = previous_step.replace(f\"/s3/{bucket_name}/\", \"\")\n    print(f\"\
          parsing {previous_step} to {store_object} \")\n    data = client.get_object(bucket_name,\
          \ store_object)\n\n    with open(\"my-testfile\", \"wb\") as file_data:\n\
          \        for d in data.stream(32 * 1024):\n            file_data.write(d)\n\
          \        bytes_written = file_data.tell()\n\n    print(file_size_bytes,\
          \ bytes_written)\n    diff = round((bytes_written / file_size_bytes) - 1,\
          \ 3)\n    print(diff)\n    # if not matching, the test will fail\n    assert\
          \ diff == 0\n\n"
        image: registry.redhat.io/ubi9/python-312@sha256:e80ff3673c95b91f0dafdbe97afb261eab8244d7fd8b47e20ffcbcfee27fb168
pipelineInfo:
  name: test-data-passing-pipeline-1
root:
  dag:
    tasks:
      receive-file:
        cachingOptions: {}
        componentRef:
          name: comp-receive-file
        dependentTasks:
        - send-file
        inputs:
          artifacts:
            incomingfile:
              taskOutputArtifact:
                outputArtifactKey: outgoingfile
                producerTask: send-file
        taskInfo:
          name: receive-file
      send-file:
        cachingOptions: {}
        componentRef:
          name: comp-send-file
        inputs:
          parameters:
            file_size_bytes:
              runtimeValue:
                constant: 20971520.0
        taskInfo:
          name: send-file
      test-uploaded-artifact:
        cachingOptions: {}
        componentRef:
          name: comp-test-uploaded-artifact
        dependentTasks:
        - receive-file
        inputs:
          artifacts:
            previous_step:
              taskOutputArtifact:
                outputArtifactKey: saveartifact
                producerTask: receive-file
          parameters:
            bucket_name:
              componentInputParameter: bucket_name
            file_size_bytes:
              runtimeValue:
                constant: 20971520.0
            mlpipeline_minio_artifact_secret:
              componentInputParameter: mlpipeline_minio_artifact_secret
        taskInfo:
          name: test-uploaded-artifact
  inputDefinitions:
    parameters:
      bucket_name:
        parameterType: STRING
      mlpipeline_minio_artifact_secret:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.13.0
