apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  generateName: metrics-visualization-pipeline-
spec:
  arguments:
    parameters:
    - name: components-1e13061c086c82fca98c3bec1d9f3c373acd890377eb9145cfdb7f69de426019
      value: '{"executorLabel":"exec-digit-classification","outputDefinitions":{"artifacts":{"metrics":{"artifactType":{"schemaTitle":"system.Metrics","schemaVersion":"0.0.1"}}}}}'
    - name: implementations-1e13061c086c82fca98c3bec1d9f3c373acd890377eb9145cfdb7f69de426019
      value: '{"args":["--executor_input","{{$}}","--function_to_execute","digit_classification"],"command":["sh","-c","\nif
        ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
        -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
        python3 -m pip install --quiet --no-warn-script-location ''scikit-learn''  \u0026\u0026  python3
        -m pip install --quiet --no-warn-script-location ''kfp==2.14.3'' ''--no-deps''
        ''typing-extensions\u003e=3.7.4,\u003c5; python_version\u003c\"3.9\"'' \u0026\u0026
        \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\"
        \u003e \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3
        -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
        kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
        digit_classification(metrics: Output[Metrics]):\n    from sklearn import model_selection\n    from
        sklearn.linear_model import LogisticRegression\n    from sklearn import datasets\n    from
        sklearn.metrics import accuracy_score\n\n    # Load digits dataset\n    iris
        = datasets.load_iris()\n\n    # # Create feature matrix\n    X = iris.data\n\n    #
        Create target vector\n    y = iris.target\n\n    #test size\n    test_size
        = 0.33\n\n    seed = 7\n    #cross-validation settings\n    kfold = model_selection.KFold(n_splits=10,
        random_state=seed, shuffle=True)\n\n    #Model instance\n    model = LogisticRegression()\n    scoring
        = ''accuracy''\n    results = model_selection.cross_val_score(\n        model,
        X, y, cv=kfold, scoring=scoring)\n\n    #split data\n    X_train, X_test,
        y_train, y_test = model_selection.train_test_split(\n        X, y, test_size=test_size,
        random_state=seed)\n    #fit model\n    model.fit(X_train, y_train)\n\n    #accuracy
        on test set\n    result = model.score(X_test, y_test)\n    metrics.log_metric(''accuracy'',
        (result * 100.0))\n\n"],"image":"python:3.9"}'
    - name: components-507141586ba39388ea617640b16454b71ab71dfefbfda1d7add5fd6b13fc6f36
      value: '{"executorLabel":"exec-html-visualization","outputDefinitions":{"artifacts":{"html_artifact":{"artifactType":{"schemaTitle":"system.HTML","schemaVersion":"0.0.1"}}}}}'
    - name: implementations-507141586ba39388ea617640b16454b71ab71dfefbfda1d7add5fd6b13fc6f36
      value: '{"args":["--executor_input","{{$}}","--function_to_execute","html_visualization"],"command":["sh","-c","\nif
        ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
        -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
        python3 -m pip install --quiet --no-warn-script-location ''kfp==2.14.3'' ''--no-deps''
        ''typing-extensions\u003e=3.7.4,\u003c5; python_version\u003c\"3.9\"'' \u0026\u0026
        \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\"
        \u003e \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3
        -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
        kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
        html_visualization(html_artifact: Output[HTML]):\n    html_content = ''\u003c!DOCTYPE
        html\u003e\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eHello world\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e''\n    with
        open(html_artifact.path, ''w'') as f:\n        f.write(html_content)\n\n"],"image":"python:3.9"}'
    - name: components-070c6090f000ab4579ea9970fdbe93fd311d1b7a3d4e4c9735898c872ed91a8f
      value: '{"executorLabel":"exec-iris-sgdclassifier","inputDefinitions":{"parameters":{"test_samples_fraction":{"parameterType":"NUMBER_DOUBLE"}}},"outputDefinitions":{"artifacts":{"metrics":{"artifactType":{"schemaTitle":"system.ClassificationMetrics","schemaVersion":"0.0.1"}}}}}'
    - name: implementations-070c6090f000ab4579ea9970fdbe93fd311d1b7a3d4e4c9735898c872ed91a8f
      value: '{"args":["--executor_input","{{$}}","--function_to_execute","iris_sgdclassifier"],"command":["sh","-c","\nif
        ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
        -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
        python3 -m pip install --quiet --no-warn-script-location ''scikit-learn''  \u0026\u0026  python3
        -m pip install --quiet --no-warn-script-location ''kfp==2.14.3'' ''--no-deps''
        ''typing-extensions\u003e=3.7.4,\u003c5; python_version\u003c\"3.9\"'' \u0026\u0026
        \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\"
        \u003e \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3
        -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
        kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
        iris_sgdclassifier(test_samples_fraction: float,\n                       metrics:
        Output[ClassificationMetrics]):\n    from sklearn import datasets, model_selection\n    from
        sklearn.linear_model import SGDClassifier\n    from sklearn.metrics import
        confusion_matrix\n\n    iris_dataset = datasets.load_iris()\n    train_x,
        test_x, train_y, test_y = model_selection.train_test_split(\n        iris_dataset[''data''],\n        iris_dataset[''target''],\n        test_size=test_samples_fraction)\n\n    classifier
        = SGDClassifier()\n    classifier.fit(train_x, train_y)\n    predictions =
        model_selection.cross_val_predict(\n        classifier, train_x, train_y,
        cv=3)\n    metrics.log_confusion_matrix(\n        [''Setosa'', ''Versicolour'',
        ''Virginica''],\n        confusion_matrix(\n            train_y,\n            predictions).tolist()  #
        .tolist() to convert np array to list.\n    )\n\n"],"image":"python:3.9"}'
    - name: components-837e3b5eebdb2f6e1895391076d11f242320d5ee805a3712c681d87af27a0322
      value: '{"executorLabel":"exec-markdown-visualization","outputDefinitions":{"artifacts":{"markdown_artifact":{"artifactType":{"schemaTitle":"system.Markdown","schemaVersion":"0.0.1"}}}}}'
    - name: implementations-837e3b5eebdb2f6e1895391076d11f242320d5ee805a3712c681d87af27a0322
      value: '{"args":["--executor_input","{{$}}","--function_to_execute","markdown_visualization"],"command":["sh","-c","\nif
        ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
        -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
        python3 -m pip install --quiet --no-warn-script-location ''kfp==2.14.3'' ''--no-deps''
        ''typing-extensions\u003e=3.7.4,\u003c5; python_version\u003c\"3.9\"'' \u0026\u0026
        \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\"
        \u003e \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3
        -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
        kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
        markdown_visualization(markdown_artifact: Output[Markdown]):\n    markdown_content
        = ''## Hello world \\n\\n Markdown content''\n    with open(markdown_artifact.path,
        ''w'') as f:\n        f.write(markdown_content)\n\n"],"image":"python:3.9"}'
    - name: components-cedc2096e3940b72ca9724db5ab3d0ab9680a848e3c724b60de8adea53f2b7c8
      value: '{"executorLabel":"exec-wine-classification","outputDefinitions":{"artifacts":{"metrics":{"artifactType":{"schemaTitle":"system.ClassificationMetrics","schemaVersion":"0.0.1"}}}}}'
    - name: implementations-cedc2096e3940b72ca9724db5ab3d0ab9680a848e3c724b60de8adea53f2b7c8
      value: '{"args":["--executor_input","{{$}}","--function_to_execute","wine_classification"],"command":["sh","-c","\nif
        ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
        -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
        python3 -m pip install --quiet --no-warn-script-location ''scikit-learn''  \u0026\u0026  python3
        -m pip install --quiet --no-warn-script-location ''kfp==2.14.3'' ''--no-deps''
        ''typing-extensions\u003e=3.7.4,\u003c5; python_version\u003c\"3.9\"'' \u0026\u0026
        \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\"
        \u003e \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3
        -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
        kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
        wine_classification(metrics: Output[ClassificationMetrics]):\n    from sklearn.ensemble
        import RandomForestClassifier\n    from sklearn.metrics import roc_curve\n    from
        sklearn.datasets import load_wine\n    from sklearn.model_selection import
        train_test_split, cross_val_predict\n\n    X, y = load_wine(return_X_y=True)\n    #
        Binary classification problem for label 1.\n    y = y == 1\n\n    X_train,
        X_test, y_train, y_test = train_test_split(X, y, random_state=42)\n    rfc
        = RandomForestClassifier(n_estimators=10, random_state=42)\n    rfc.fit(X_train,
        y_train)\n    y_scores = cross_val_predict(\n        rfc, X_train, y_train,
        cv=3, method=''predict_proba'')\n    y_predict = cross_val_predict(rfc, X_train,
        y_train, cv=3, method=''predict'')\n    fpr, tpr, thresholds = roc_curve(\n        y_true=y_train,
        y_score=y_scores[:, 1], pos_label=True)\n\n    # avoid inf thresholds\n    epsilon
        = 1e-6\n    thresholds = [1 - epsilon if t == float(''inf'') else t for t
        in thresholds]\n\n    metrics.log_roc_curve(fpr, tpr, thresholds)\n\n"],"image":"python:3.9"}'
    - name: components-root
      value: '{"dag":{"tasks":{"digit-classification":{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-digit-classification"},"taskInfo":{"name":"digit-classification"}},"html-visualization":{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-html-visualization"},"taskInfo":{"name":"html-visualization"}},"iris-sgdclassifier":{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-iris-sgdclassifier"},"inputs":{"parameters":{"test_samples_fraction":{"runtimeValue":{"constant":0.3}}}},"taskInfo":{"name":"iris-sgdclassifier"}},"markdown-visualization":{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-markdown-visualization"},"taskInfo":{"name":"markdown-visualization"}},"wine-classification":{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-wine-classification"},"taskInfo":{"name":"wine-classification"}}}}}'
  entrypoint: entrypoint
  podMetadata:
    annotations:
      pipelines.kubeflow.org/v2_component: "true"
    labels:
      pipelines.kubeflow.org/v2_component: "true"
  serviceAccountName: pipeline-runner
  templates:
  - container:
      args:
      - --type
      - CONTAINER
      - --pipeline_name
      - metrics-visualization-pipeline
      - --run_id
      - '{{workflow.uid}}'
      - --run_name
      - '{{workflow.name}}'
      - --run_display_name
      - ""
      - --dag_execution_id
      - '{{inputs.parameters.parent-dag-id}}'
      - --component
      - '{{inputs.parameters.component}}'
      - --task
      - '{{inputs.parameters.task}}'
      - --task_name
      - '{{inputs.parameters.task-name}}'
      - --container
      - '{{inputs.parameters.container}}'
      - --iteration_index
      - '{{inputs.parameters.iteration-index}}'
      - --cached_decision_path
      - '{{outputs.parameters.cached-decision.path}}'
      - --pod_spec_patch_path
      - '{{outputs.parameters.pod-spec-patch.path}}'
      - --condition_path
      - '{{outputs.parameters.condition.path}}'
      - --kubernetes_config
      - '{{inputs.parameters.kubernetes-config}}'
      - --http_proxy
      - ""
      - --https_proxy
      - ""
      - --no_proxy
      - ""
      command:
      - driver
      image: ghcr.io/kubeflow/kfp-driver:latest
      name: ""
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 64Mi
    inputs:
      parameters:
      - name: component
      - name: task
      - name: container
      - name: task-name
      - name: parent-dag-id
      - default: "-1"
        name: iteration-index
      - default: ""
        name: kubernetes-config
    metadata: {}
    name: system-container-driver
    outputs:
      parameters:
      - name: pod-spec-patch
        valueFrom:
          default: ""
          path: /tmp/outputs/pod-spec-patch
      - default: "false"
        name: cached-decision
        valueFrom:
          default: "false"
          path: /tmp/outputs/cached-decision
      - name: condition
        valueFrom:
          default: "true"
          path: /tmp/outputs/condition
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{inputs.parameters.pod-spec-patch}}'
        name: executor
        template: system-container-impl
        when: '{{inputs.parameters.cached-decision}} != true'
    inputs:
      parameters:
      - name: pod-spec-patch
      - default: "false"
        name: cached-decision
    metadata: {}
    name: system-container-executor
    outputs: {}
  - container:
      command:
      - should-be-overridden-during-runtime
      env:
      - name: KFP_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: KFP_POD_UID
        valueFrom:
          fieldRef:
            fieldPath: metadata.uid
      envFrom:
      - configMapRef:
          name: metadata-grpc-configmap
          optional: true
      image: gcr.io/ml-pipeline/should-be-overridden-during-runtime
      name: ""
      resources: {}
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
      - mountPath: /gcs
        name: gcs-scratch
      - mountPath: /s3
        name: s3-scratch
      - mountPath: /minio
        name: minio-scratch
      - mountPath: /.local
        name: dot-local-scratch
      - mountPath: /.cache
        name: dot-cache-scratch
      - mountPath: /.config
        name: dot-config-scratch
    initContainers:
    - args:
      - --copy
      - /kfp-launcher/launch
      command:
      - launcher-v2
      image: ghcr.io/kubeflow/kfp-launcher:latest
      name: kfp-launcher
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
    inputs:
      parameters:
      - name: pod-spec-patch
    metadata: {}
    name: system-container-impl
    outputs: {}
    podSpecPatch: '{{inputs.parameters.pod-spec-patch}}'
    volumes:
    - emptyDir: {}
      name: kfp-launcher
    - emptyDir: {}
      name: gcs-scratch
    - emptyDir: {}
      name: s3-scratch
    - emptyDir: {}
      name: minio-scratch
    - emptyDir: {}
      name: dot-local-scratch
    - emptyDir: {}
      name: dot-cache-scratch
    - emptyDir: {}
      name: dot-config-scratch
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-1e13061c086c82fca98c3bec1d9f3c373acd890377eb9145cfdb7f69de426019}}'
          - name: task
            value: '{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-digit-classification"},"taskInfo":{"name":"digit-classification"}}'
          - name: container
            value: '{{workflow.parameters.implementations-1e13061c086c82fca98c3bec1d9f3c373acd890377eb9145cfdb7f69de426019}}'
          - name: task-name
            value: digit-classification
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
        name: digit-classification-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.digit-classification-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.digit-classification-driver.outputs.parameters.cached-decision}}'
        depends: digit-classification-driver.Succeeded
        name: digit-classification
        template: system-container-executor
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-507141586ba39388ea617640b16454b71ab71dfefbfda1d7add5fd6b13fc6f36}}'
          - name: task
            value: '{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-html-visualization"},"taskInfo":{"name":"html-visualization"}}'
          - name: container
            value: '{{workflow.parameters.implementations-507141586ba39388ea617640b16454b71ab71dfefbfda1d7add5fd6b13fc6f36}}'
          - name: task-name
            value: html-visualization
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
        name: html-visualization-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.html-visualization-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.html-visualization-driver.outputs.parameters.cached-decision}}'
        depends: html-visualization-driver.Succeeded
        name: html-visualization
        template: system-container-executor
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-070c6090f000ab4579ea9970fdbe93fd311d1b7a3d4e4c9735898c872ed91a8f}}'
          - name: task
            value: '{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-iris-sgdclassifier"},"inputs":{"parameters":{"test_samples_fraction":{"runtimeValue":{"constant":0.3}}}},"taskInfo":{"name":"iris-sgdclassifier"}}'
          - name: container
            value: '{{workflow.parameters.implementations-070c6090f000ab4579ea9970fdbe93fd311d1b7a3d4e4c9735898c872ed91a8f}}'
          - name: task-name
            value: iris-sgdclassifier
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
        name: iris-sgdclassifier-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.iris-sgdclassifier-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.iris-sgdclassifier-driver.outputs.parameters.cached-decision}}'
        depends: iris-sgdclassifier-driver.Succeeded
        name: iris-sgdclassifier
        template: system-container-executor
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-837e3b5eebdb2f6e1895391076d11f242320d5ee805a3712c681d87af27a0322}}'
          - name: task
            value: '{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-markdown-visualization"},"taskInfo":{"name":"markdown-visualization"}}'
          - name: container
            value: '{{workflow.parameters.implementations-837e3b5eebdb2f6e1895391076d11f242320d5ee805a3712c681d87af27a0322}}'
          - name: task-name
            value: markdown-visualization
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
        name: markdown-visualization-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.markdown-visualization-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.markdown-visualization-driver.outputs.parameters.cached-decision}}'
        depends: markdown-visualization-driver.Succeeded
        name: markdown-visualization
        template: system-container-executor
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-cedc2096e3940b72ca9724db5ab3d0ab9680a848e3c724b60de8adea53f2b7c8}}'
          - name: task
            value: '{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-wine-classification"},"taskInfo":{"name":"wine-classification"}}'
          - name: container
            value: '{{workflow.parameters.implementations-cedc2096e3940b72ca9724db5ab3d0ab9680a848e3c724b60de8adea53f2b7c8}}'
          - name: task-name
            value: wine-classification
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
        name: wine-classification-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.wine-classification-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.wine-classification-driver.outputs.parameters.cached-decision}}'
        depends: wine-classification-driver.Succeeded
        name: wine-classification
        template: system-container-executor
    inputs:
      parameters:
      - name: parent-dag-id
    metadata: {}
    name: root
    outputs: {}
  - container:
      args:
      - --type
      - '{{inputs.parameters.driver-type}}'
      - --pipeline_name
      - metrics-visualization-pipeline
      - --run_id
      - '{{workflow.uid}}'
      - --run_name
      - '{{workflow.name}}'
      - --run_display_name
      - ""
      - --dag_execution_id
      - '{{inputs.parameters.parent-dag-id}}'
      - --component
      - '{{inputs.parameters.component}}'
      - --task
      - '{{inputs.parameters.task}}'
      - --task_name
      - '{{inputs.parameters.task-name}}'
      - --runtime_config
      - '{{inputs.parameters.runtime-config}}'
      - --iteration_index
      - '{{inputs.parameters.iteration-index}}'
      - --execution_id_path
      - '{{outputs.parameters.execution-id.path}}'
      - --iteration_count_path
      - '{{outputs.parameters.iteration-count.path}}'
      - --condition_path
      - '{{outputs.parameters.condition.path}}'
      - --http_proxy
      - ""
      - --https_proxy
      - ""
      - --no_proxy
      - ""
      command:
      - driver
      image: ghcr.io/kubeflow/kfp-driver:latest
      name: ""
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 64Mi
    inputs:
      parameters:
      - name: component
      - default: ""
        name: runtime-config
      - default: ""
        name: task
      - default: ""
        name: task-name
      - default: "0"
        name: parent-dag-id
      - default: "-1"
        name: iteration-index
      - default: DAG
        name: driver-type
    metadata: {}
    name: system-dag-driver
    outputs:
      parameters:
      - name: execution-id
        valueFrom:
          path: /tmp/outputs/execution-id
      - name: iteration-count
        valueFrom:
          default: "0"
          path: /tmp/outputs/iteration-count
      - name: condition
        valueFrom:
          default: "true"
          path: /tmp/outputs/condition
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-root}}'
          - name: runtime-config
            value: '{}'
          - name: driver-type
            value: ROOT_DAG
        name: root-driver
        template: system-dag-driver
      - arguments:
          parameters:
          - name: parent-dag-id
            value: '{{tasks.root-driver.outputs.parameters.execution-id}}'
          - name: condition
            value: ""
        depends: root-driver.Succeeded
        name: root
        template: root
    inputs: {}
    metadata: {}
    name: entrypoint
    outputs: {}
status:
  finishedAt: null
  startedAt: null
