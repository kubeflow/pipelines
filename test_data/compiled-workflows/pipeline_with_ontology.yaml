apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  generateName: two-step-pipeline-with-ontology-
spec:
  arguments:
    parameters:
    - name: components-312eb15f363a7eaefbd0dd2c67c93d175c581d4d8bb249b46e70662b3f716438
      value: '{"executorLabel":"exec-ingestion","inputDefinitions":{"parameters":{"input_location":{"parameterType":"STRING"}}},"outputDefinitions":{"artifacts":{"examples":{"artifactType":{"schemaTitle":"system.Dataset","schemaVersion":"0.0.1"}}}}}'
    - name: implementations-312eb15f363a7eaefbd0dd2c67c93d175c581d4d8bb249b46e70662b3f716438
      value: '{"args":["--input-location","{{$.inputs.parameters[''input_location'']}}","--output-examples","{{$.outputs.artifacts[''examples''].uri}}"],"image":"gcr.io/my-project/my-ingestor"}'
    - name: components-91eb23b3c282dae36b40c721c79b6e287a7fa085c69dc7dc8ef02f7f39ea4d0a
      value: '{"executorLabel":"exec-trainer","inputDefinitions":{"artifacts":{"examples":{"artifactType":{"schemaTitle":"system.Dataset","schemaVersion":"0.0.1"}}},"parameters":{"n_epochs":{"parameterType":"NUMBER_INTEGER"},"optimizer":{"parameterType":"STRING"}}},"outputDefinitions":{"artifacts":{"model":{"artifactType":{"schemaTitle":"system.Model","schemaVersion":"0.0.1"}}}}}'
    - name: implementations-91eb23b3c282dae36b40c721c79b6e287a7fa085c69dc7dc8ef02f7f39ea4d0a
      value: '{"args":["--input-examples","{{$.inputs.artifacts[''examples''].uri}}","--optimizer","{{$.inputs.parameters[''optimizer'']}}","--n_epochs","{{$.inputs.parameters[''n_epochs'']}}","--output-model","{{$.outputs.artifacts[''model''].uri}}"],"image":"gcr.io/my-project/my-fancy-trainer"}'
    - name: components-root
      value: '{"dag":{"tasks":{"ingestion":{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-ingestion"},"inputs":{"parameters":{"input_location":{"componentInputParameter":"input_location"}}},"taskInfo":{"name":"ingestion"}},"trainer":{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-trainer"},"dependentTasks":["ingestion"],"inputs":{"artifacts":{"examples":{"taskOutputArtifact":{"outputArtifactKey":"examples","producerTask":"ingestion"}}},"parameters":{"n_epochs":{"componentInputParameter":"n_epochs"},"optimizer":{"componentInputParameter":"optimizer"}}},"taskInfo":{"name":"trainer"}}}},"inputDefinitions":{"parameters":{"input_location":{"defaultValue":"gs://test-bucket/pipeline_root","isOptional":true,"parameterType":"STRING"},"n_epochs":{"defaultValue":200,"isOptional":true,"parameterType":"NUMBER_INTEGER"},"optimizer":{"defaultValue":"sgd","isOptional":true,"parameterType":"STRING"}}}}'
  entrypoint: entrypoint
  podMetadata:
    annotations:
      pipelines.kubeflow.org/v2_component: "true"
    labels:
      pipelines.kubeflow.org/v2_component: "true"
  serviceAccountName: pipeline-runner
  templates:
  - inputs:
      parameters:
      - name: component
      - name: task
      - name: container
      - name: task-name
      - name: parent-dag-id
      - default: "-1"
        name: iteration-index
      - default: ""
        name: kubernetes-config
    metadata: {}
    name: system-container-driver
    outputs:
      parameters:
      - name: pod-spec-patch
        valueFrom:
          default: ""
          jsonPath: $.pod-spec-patch
      - default: "false"
        name: cached-decision
        valueFrom:
          default: "false"
          jsonPath: $.cached-decision
      - name: condition
        valueFrom:
          default: "true"
          jsonPath: $.condition
    plugin:
      driver-plugin:
        args:
          cache_disabled: true
          cached_decision_path: '{{outputs.parameters.cached-decision.path}}'
          component: '{{inputs.parameters.component}}'
          condition_path: '{{outputs.parameters.condition.path}}'
          container: '{{inputs.parameters.container}}'
          dag_execution_id: '{{inputs.parameters.parent-dag-id}}'
          http_proxy: ""
          https_proxy: ""
          iteration_index: '{{inputs.parameters.iteration-index}}'
          kubernetes_config: '{{inputs.parameters.kubernetes-config}}'
          log_level: ""
          no_proxy: ""
          pipeline_name: two-step-pipeline-with-ontology
          pod_spec_patch_path: '{{outputs.parameters.pod-spec-patch.path}}'
          publish_logs: ""
          run_display_name: ""
          run_id: '{{workflow.uid}}'
          run_name: '{{workflow.name}}'
          task: '{{inputs.parameters.task}}'
          task_name: '{{inputs.parameters.task-name}}'
          type: CONTAINER
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{inputs.parameters.pod-spec-patch}}'
        name: executor
        template: system-container-impl
        when: '{{inputs.parameters.cached-decision}} != true'
    inputs:
      parameters:
      - name: pod-spec-patch
      - default: "false"
        name: cached-decision
    metadata: {}
    name: system-container-executor
    outputs: {}
  - container:
      command:
      - should-be-overridden-during-runtime
      env:
      - name: KFP_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: KFP_POD_UID
        valueFrom:
          fieldRef:
            fieldPath: metadata.uid
      envFrom:
      - configMapRef:
          name: metadata-grpc-configmap
          optional: true
      image: gcr.io/ml-pipeline/should-be-overridden-during-runtime
      name: ""
      resources: {}
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
      - mountPath: /gcs
        name: gcs-scratch
      - mountPath: /s3
        name: s3-scratch
      - mountPath: /minio
        name: minio-scratch
      - mountPath: /.local
        name: dot-local-scratch
      - mountPath: /.cache
        name: dot-cache-scratch
      - mountPath: /.config
        name: dot-config-scratch
    initContainers:
    - args:
      - --copy
      - /kfp-launcher/launch
      command:
      - launcher-v2
      image: ghcr.io/kubeflow/kfp-launcher:latest
      name: kfp-launcher
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
    inputs:
      parameters:
      - name: pod-spec-patch
    metadata: {}
    name: system-container-impl
    outputs: {}
    podSpecPatch: '{{inputs.parameters.pod-spec-patch}}'
    volumes:
    - emptyDir: {}
      name: kfp-launcher
    - emptyDir: {}
      name: gcs-scratch
    - emptyDir: {}
      name: s3-scratch
    - emptyDir: {}
      name: minio-scratch
    - emptyDir: {}
      name: dot-local-scratch
    - emptyDir: {}
      name: dot-cache-scratch
    - emptyDir: {}
      name: dot-config-scratch
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-312eb15f363a7eaefbd0dd2c67c93d175c581d4d8bb249b46e70662b3f716438}}'
          - name: task
            value: '{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-ingestion"},"inputs":{"parameters":{"input_location":{"componentInputParameter":"input_location"}}},"taskInfo":{"name":"ingestion"}}'
          - name: container
            value: '{{workflow.parameters.implementations-312eb15f363a7eaefbd0dd2c67c93d175c581d4d8bb249b46e70662b3f716438}}'
          - name: task-name
            value: ingestion
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
        name: ingestion-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.ingestion-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.ingestion-driver.outputs.parameters.cached-decision}}'
        depends: ingestion-driver.Succeeded
        name: ingestion
        template: system-container-executor
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-91eb23b3c282dae36b40c721c79b6e287a7fa085c69dc7dc8ef02f7f39ea4d0a}}'
          - name: task
            value: '{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-trainer"},"dependentTasks":["ingestion"],"inputs":{"artifacts":{"examples":{"taskOutputArtifact":{"outputArtifactKey":"examples","producerTask":"ingestion"}}},"parameters":{"n_epochs":{"componentInputParameter":"n_epochs"},"optimizer":{"componentInputParameter":"optimizer"}}},"taskInfo":{"name":"trainer"}}'
          - name: container
            value: '{{workflow.parameters.implementations-91eb23b3c282dae36b40c721c79b6e287a7fa085c69dc7dc8ef02f7f39ea4d0a}}'
          - name: task-name
            value: trainer
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
        depends: ingestion.Succeeded
        name: trainer-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.trainer-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.trainer-driver.outputs.parameters.cached-decision}}'
        depends: trainer-driver.Succeeded
        name: trainer
        template: system-container-executor
    inputs:
      parameters:
      - name: parent-dag-id
    metadata: {}
    name: root
    outputs: {}
  - inputs:
      parameters:
      - name: component
      - default: ""
        name: runtime-config
      - default: ""
        name: task
      - default: ""
        name: task-name
      - default: "0"
        name: parent-dag-id
      - default: "-1"
        name: iteration-index
      - default: DAG
        name: driver-type
    metadata: {}
    name: system-dag-driver
    outputs:
      parameters:
      - name: execution-id
        valueFrom:
          jsonPath: $.execution-id
      - name: iteration-count
        valueFrom:
          default: "0"
          jsonPath: $.iteration-count
      - name: condition
        valueFrom:
          default: "true"
          jsonPath: $.condition
    plugin:
      driver-plugin:
        args:
          cache_disabled: true
          component: '{{inputs.parameters.component}}'
          condition_path: '{{outputs.parameters.condition.path}}'
          dag_execution_id: '{{inputs.parameters.parent-dag-id}}'
          execution_id_path: '{{outputs.parameters.execution-id.path}}'
          http_proxy: ""
          https_proxy: ""
          iteration_count_path: '{{outputs.parameters.iteration-count.path}}'
          iteration_index: '{{inputs.parameters.iteration-index}}'
          log_level: ""
          no_proxy: ""
          pipeline_name: two-step-pipeline-with-ontology
          publish_logs: ""
          run_display_name: ""
          run_id: '{{workflow.uid}}'
          run_name: '{{workflow.name}}'
          runtime_config: '{{inputs.parameters.runtime-config}}'
          task: '{{inputs.parameters.task}}'
          task_name: '{{inputs.parameters.task-name}}'
          type: '{{inputs.parameters.driver-type}}'
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-root}}'
          - name: runtime-config
            value: '{"parameterValues":{"input_location":"gs://test-bucket/pipeline_root","n_epochs":200,"optimizer":"sgd"}}'
          - name: driver-type
            value: ROOT_DAG
        name: root-driver
        template: system-dag-driver
      - arguments:
          parameters:
          - name: parent-dag-id
            value: '{{tasks.root-driver.outputs.parameters.execution-id}}'
          - name: condition
            value: ""
        depends: root-driver.Succeeded
        name: root
        template: root
    inputs: {}
    metadata: {}
    name: entrypoint
    outputs: {}
status:
  finishedAt: null
  startedAt: null
