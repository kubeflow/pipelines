apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  generateName: pipeline-with-pod-metadata-
spec:
  arguments:
    parameters:
    - name: kubernetes-comp-validate-no-pod-metadata
      value: '{"fieldPathAsEnv":[{"fieldPath":"metadata.annotations[''task-annotation'']","name":"POD_TASK_ANNOTATION"},{"fieldPath":"metadata.annotations[''task-annotation-1'']","name":"POD_TASK_ANNOTATION_1"},{"fieldPath":"metadata.labels[''task-label'']","name":"POD_TASK_LABEL"},{"fieldPath":"metadata.labels[''task-label-1'']","name":"POD_TASK_LABEL_1"}]}'
    - name: components-3d278faa61c986d801a417f587e50005053b72d5108dc720e6ce32593c050c24
      value: '{"executorLabel":"exec-validate-no-pod-metadata","outputDefinitions":{"parameters":{"Output":{"parameterType":"BOOLEAN"}}}}'
    - name: implementations-3d278faa61c986d801a417f587e50005053b72d5108dc720e6ce32593c050c24
      value: '{"args":["--executor_input","{{$}}","--function_to_execute","validate_no_pod_metadata"],"command":["sh","-c","\nif
        ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
        -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
        python3 -m pip install --quiet --no-warn-script-location ''kfp==2.14.3'' ''--no-deps''
        ''typing-extensions\u003e=3.7.4,\u003c5; python_version\u003c\"3.9\"'' \u0026\u0026
        \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\"
        \u003e \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3
        -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
        kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
        validate_no_pod_metadata() -\u003e bool:\n    import os\n    annotation =
        os.getenv(''POD_TASK_ANNOTATION'')\n    annotation_2 = os.getenv(''POD_TASK_ANNOTATION_1'')\n    if
        annotation != '''' or annotation_2 != '''':\n        raise ValueError(\n            f''Pod
        annotation is {annotation} but is supposed to be None.''\n        )\n    label
        = os.getenv(''POD_TASK_LABEL'')\n    label_2 = os.getenv(''POD_TASK_LABEL_1'')\n    if
        label != '''' or label_2 != '''':\n        raise ValueError(\n            f''Pod
        label is {label} but is supposed to be None.''\n        )\n    return True\n\n"],"image":"python:3.9"}'
    - name: kubernetes-comp-validate-pod-metadata-task-a
      value: '{"fieldPathAsEnv":[{"fieldPath":"metadata.annotations[''task-annotation'']","name":"POD_TASK_ANNOTATION"},{"fieldPath":"metadata.labels[''task-label-1'']","name":"POD_TASK_LABEL_1"},{"fieldPath":"metadata.labels[''task-label-2'']","name":"POD_TASK_LABEL_2"}],"podMetadata":{"annotations":{"task-annotation":"annotation"},"labels":{"task-label-1":"label-1","task-label-2":"label-2"}}}'
    - name: components-a58a8ba91674b53e9cfd2a56b122fa32c32733648c4337cfd4d489147baa0351
      value: '{"executorLabel":"exec-validate-pod-metadata-task-a","inputDefinitions":{"parameters":{"annotation_exp_val":{"parameterType":"STRING"},"annotation_path":{"parameterType":"STRING"},"label_exp_val_1":{"parameterType":"STRING"},"label_exp_val_2":{"parameterType":"STRING"},"label_path_1":{"parameterType":"STRING"},"label_path_2":{"parameterType":"STRING"}}},"outputDefinitions":{"parameters":{"Output":{"parameterType":"BOOLEAN"}}}}'
    - name: implementations-a58a8ba91674b53e9cfd2a56b122fa32c32733648c4337cfd4d489147baa0351
      value: '{"args":["--executor_input","{{$}}","--function_to_execute","validate_pod_metadata_task_a"],"command":["sh","-c","\nif
        ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
        -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
        python3 -m pip install --quiet --no-warn-script-location ''kfp==2.14.3'' ''--no-deps''
        ''typing-extensions\u003e=3.7.4,\u003c5; python_version\u003c\"3.9\"'' \u0026\u0026
        \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\"
        \u003e \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3
        -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
        kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
        validate_pod_metadata_task_a(annotation_path: str,\n                                 annotation_exp_val:
        str,\n                                 label_path_1: str,\n                                 label_exp_val_1:
        str,\n                                 label_path_2: str,\n                                 label_exp_val_2:
        str) -\u003e bool:\n    import os\n    annotation_val = os.getenv(annotation_path)\n    if
        annotation_val != annotation_exp_val:\n        raise ValueError(\n            f''Pod
        annotation is {annotation_val} but is supposed to be {annotation_exp_val}.''\n        )\n\n    label_val_1
        = os.getenv(label_path_1)\n    if label_val_1 != label_exp_val_1:\n        raise
        ValueError(\n            f''Pod label is {label_val_1} but is supposed to
        be {label_exp_val_1}.''\n        )\n\n    label_val_2 = os.getenv(label_path_2)\n    if
        label_val_2 != label_exp_val_2:\n        raise ValueError(\n            f''Pod
        label is {label_val_2} but is supposed to be {label_exp_val_2}.''\n        )\n    return
        True\n\n"],"image":"python:3.9"}'
    - name: kubernetes-comp-validate-pod-metadata-task-b
      value: '{"fieldPathAsEnv":[{"fieldPath":"metadata.annotations[''task-annotation-1'']","name":"POD_TASK_ANNOTATION_1"},{"fieldPath":"metadata.annotations[''task-annotation-2'']","name":"POD_TASK_ANNOTATION_2"},{"fieldPath":"metadata.annotations[''task-annotation-3'']","name":"POD_TASK_ANNOTATION_3"},{"fieldPath":"metadata.annotations[''task-annotation-4'']","name":"POD_TASK_ANNOTATION_4"},{"fieldPath":"metadata.labels[''task-label-1'']","name":"POD_TASK_LABEL_1"},{"fieldPath":"metadata.labels[''task-label-2'']","name":"POD_TASK_LABEL_2"},{"fieldPath":"metadata.labels[''task-label-3'']","name":"POD_TASK_LABEL_3"}],"podMetadata":{"annotations":{"task-annotation-1":"annotation-1","task-annotation-2":"annotation-2","task-annotation-3":"annotation-3","task-annotation-4":"annotation-4"},"labels":{"task-label-1":"label-1","task-label-2":"label-2","task-label-3":"label-3"}}}'
    - name: components-ff4adfd20fbb1ccd7f6e9330882576b7e34ffba16bc568acc10956b8652c28d9
      value: '{"executorLabel":"exec-validate-pod-metadata-task-b","inputDefinitions":{"parameters":{"annotation_exp_val_1":{"parameterType":"STRING"},"annotation_exp_val_2":{"parameterType":"STRING"},"annotation_exp_val_3":{"parameterType":"STRING"},"annotation_exp_val_4":{"parameterType":"STRING"},"annotation_path_1":{"parameterType":"STRING"},"annotation_path_2":{"parameterType":"STRING"},"annotation_path_3":{"parameterType":"STRING"},"annotation_path_4":{"parameterType":"STRING"},"label_exp_val_1":{"parameterType":"STRING"},"label_exp_val_2":{"parameterType":"STRING"},"label_exp_val_3":{"parameterType":"STRING"},"label_path_1":{"parameterType":"STRING"},"label_path_2":{"parameterType":"STRING"},"label_path_3":{"parameterType":"STRING"}}},"outputDefinitions":{"parameters":{"Output":{"parameterType":"BOOLEAN"}}}}'
    - name: implementations-ff4adfd20fbb1ccd7f6e9330882576b7e34ffba16bc568acc10956b8652c28d9
      value: '{"args":["--executor_input","{{$}}","--function_to_execute","validate_pod_metadata_task_b"],"command":["sh","-c","\nif
        ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
        -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
        python3 -m pip install --quiet --no-warn-script-location ''kfp==2.14.3'' ''--no-deps''
        ''typing-extensions\u003e=3.7.4,\u003c5; python_version\u003c\"3.9\"'' \u0026\u0026
        \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\"
        \u003e \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3
        -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
        kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
        validate_pod_metadata_task_b(annotation_path_1: str,\n                                 annotation_exp_val_1:
        str,\n                                 annotation_path_2: str,\n                                 annotation_exp_val_2:
        str,\n                                 annotation_path_3: str,\n                                 annotation_exp_val_3:
        str,\n                                 annotation_path_4: str,\n                                 annotation_exp_val_4:
        str,\n                                 label_path_1: str,\n                                 label_exp_val_1:
        str,\n                                 label_path_2: str,\n                                 label_exp_val_2:
        str,\n                                 label_path_3: str,\n                                 label_exp_val_3:
        str) -\u003e bool:\n    import os\n    annotation_val_1 = os.getenv(annotation_path_1)\n    if
        annotation_val_1 != annotation_exp_val_1:\n        raise ValueError(\n            f''Pod
        annotation is {annotation_val_1} but is supposed to be {annotation_exp_val_1}.''\n        )\n    annotation_val_2
        = os.getenv(annotation_path_2)\n    if annotation_val_2 != annotation_exp_val_2:\n        raise
        ValueError(\n            f''Pod annotation is {annotation_val_2} but is supposed
        to be {annotation_exp_val_2}.''\n        )\n    annotation_val_3 = os.getenv(annotation_path_3)\n    if
        annotation_val_3 != annotation_exp_val_3:\n        raise ValueError(\n            f''Pod
        annotation is {annotation_val_3} but is supposed to be {annotation_exp_val_3}.''\n        )\n    annotation_val_4
        = os.getenv(annotation_path_4)\n    if annotation_val_4 != annotation_exp_val_4:\n        raise
        ValueError(\n            f''Pod annotation is {annotation_val_4} but is supposed
        to be {annotation_exp_val_4}.''\n        )\n    label_val_1 = os.getenv(label_path_1)\n    if
        label_val_1 != label_exp_val_1:\n        raise ValueError(\n            f''Pod
        label is {label_val_1} but is supposed to be {label_exp_val_1}.''\n        )\n    label_val_2
        = os.getenv(label_path_2)\n    if label_val_2 != label_exp_val_2:\n        raise
        ValueError(\n            f''Pod label is {label_val_2} but is supposed to
        be {label_exp_val_2}.''\n        )\n    label_val_3 = os.getenv(label_path_3)\n    if
        label_val_3 != label_exp_val_3:\n        raise ValueError(\n            f''Pod
        label is {label_val_3} but is supposed to be {label_exp_val_3}.''\n        )\n    return
        True\n\n"],"image":"python:3.9"}'
    - name: kubernetes-comp-validate-pod-metadata-task-c
      value: '{"fieldPathAsEnv":[{"fieldPath":"metadata.annotations[''task-annotation-1'']","name":"POD_TASK_ANNOTATION_1"},{"fieldPath":"metadata.annotations[''task-annotation-2'']","name":"POD_TASK_ANNOTATION_2"}],"podMetadata":{"annotations":{"task-annotation-1":"annotation-1","task-annotation-2":"annotation-2"}}}'
    - name: components-0fe8b44e6cf954e8e447976b0b620a7737c5a0371bfd14ca4329c665328fa1d6
      value: '{"executorLabel":"exec-validate-pod-metadata-task-c","inputDefinitions":{"parameters":{"annotation_exp_val_1":{"parameterType":"STRING"},"annotation_exp_val_2":{"parameterType":"STRING"},"annotation_path_1":{"parameterType":"STRING"},"annotation_path_2":{"parameterType":"STRING"}}},"outputDefinitions":{"parameters":{"Output":{"parameterType":"BOOLEAN"}}}}'
    - name: implementations-0fe8b44e6cf954e8e447976b0b620a7737c5a0371bfd14ca4329c665328fa1d6
      value: '{"args":["--executor_input","{{$}}","--function_to_execute","validate_pod_metadata_task_c"],"command":["sh","-c","\nif
        ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
        -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
        python3 -m pip install --quiet --no-warn-script-location ''kfp==2.14.3'' ''--no-deps''
        ''typing-extensions\u003e=3.7.4,\u003c5; python_version\u003c\"3.9\"'' \u0026\u0026
        \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\"
        \u003e \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3
        -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
        kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
        validate_pod_metadata_task_c(annotation_path_1: str,\n                                 annotation_exp_val_1:
        str,\n                                 annotation_path_2: str,\n                                 annotation_exp_val_2:
        str) -\u003e bool:\n    import os\n    annotation_val_1 = os.getenv(annotation_path_1)\n    if
        annotation_val_1 != annotation_exp_val_1:\n        raise ValueError(\n            f''Pod
        annotation is {annotation_val_1} but is supposed to be {annotation_exp_val_1}.''\n        )\n\n    annotation_val_2
        = os.getenv(annotation_path_2)\n    if annotation_val_2 != annotation_exp_val_2:\n        raise
        ValueError(\n            f''Pod annotation is {annotation_val_2} but is supposed
        to be {annotation_exp_val_2}.''\n        )\n    return True\n\n"],"image":"python:3.9"}'
    - name: kubernetes-comp-validate-pod-metadata-task-d
      value: '{"fieldPathAsEnv":[{"fieldPath":"metadata.labels[''task-label-1'']","name":"POD_TASK_LABEL_1"},{"fieldPath":"metadata.labels[''task-label-2'']","name":"POD_TASK_LABEL_2"},{"fieldPath":"metadata.labels[''task-label-3'']","name":"POD_TASK_LABEL_3"}],"podMetadata":{"labels":{"task-label-1":"label-1","task-label-2":"label-2","task-label-3":"label-3"}}}'
    - name: components-9ed49be6257bd027ea2d0882c606eddc7d5d2e83c82c63774ddd209b876bc316
      value: '{"executorLabel":"exec-validate-pod-metadata-task-d","inputDefinitions":{"parameters":{"label_exp_val_1":{"parameterType":"STRING"},"label_exp_val_2":{"parameterType":"STRING"},"label_exp_val_3":{"parameterType":"STRING"},"label_path_1":{"parameterType":"STRING"},"label_path_2":{"parameterType":"STRING"},"label_path_3":{"parameterType":"STRING"}}},"outputDefinitions":{"parameters":{"Output":{"parameterType":"BOOLEAN"}}}}'
    - name: implementations-9ed49be6257bd027ea2d0882c606eddc7d5d2e83c82c63774ddd209b876bc316
      value: '{"args":["--executor_input","{{$}}","--function_to_execute","validate_pod_metadata_task_d"],"command":["sh","-c","\nif
        ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
        -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
        python3 -m pip install --quiet --no-warn-script-location ''kfp==2.14.3'' ''--no-deps''
        ''typing-extensions\u003e=3.7.4,\u003c5; python_version\u003c\"3.9\"'' \u0026\u0026
        \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\"
        \u003e \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3
        -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
        kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
        validate_pod_metadata_task_d(label_path_1: str,\n                                 label_exp_val_1:
        str,\n                                 label_path_2: str,\n                                 label_exp_val_2:
        str,\n                                 label_path_3: str,\n                                 label_exp_val_3:
        str) -\u003e bool:\n    import os\n    label_val_1 = os.getenv(label_path_1)\n    if
        label_val_1 != label_exp_val_1:\n        raise ValueError(\n            f''Pod
        label is {label_val_1} but is supposed to be {label_exp_val_1}.''\n        )\n    label_val_2
        = os.getenv(label_path_2)\n    if label_val_2 != label_exp_val_2:\n        raise
        ValueError(\n            f''Pod label is {label_val_2} but is supposed to
        be {label_exp_val_2}.''\n        )\n    label_val_3 = os.getenv(label_path_3)\n    if
        label_val_3 != label_exp_val_3:\n        raise ValueError(\n            f''Pod
        label is {label_val_3} but is supposed to be {label_exp_val_3}.''\n        )\n    return
        True\n\n"],"image":"python:3.9"}'
    - name: components-root
      value: '{"dag":{"tasks":{"validate-no-pod-metadata":{"cachingOptions":{},"componentRef":{"name":"comp-validate-no-pod-metadata"},"taskInfo":{"name":"validate-no-pod-metadata"}},"validate-pod-metadata-task-a":{"cachingOptions":{},"componentRef":{"name":"comp-validate-pod-metadata-task-a"},"inputs":{"parameters":{"annotation_exp_val":{"runtimeValue":{"constant":"annotation"}},"annotation_path":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION"}},"label_exp_val_1":{"runtimeValue":{"constant":"label-1"}},"label_exp_val_2":{"runtimeValue":{"constant":"label-2"}},"label_path_1":{"runtimeValue":{"constant":"POD_TASK_LABEL_1"}},"label_path_2":{"runtimeValue":{"constant":"POD_TASK_LABEL_2"}}}},"taskInfo":{"name":"validate-pod-metadata-task-a"}},"validate-pod-metadata-task-b":{"cachingOptions":{},"componentRef":{"name":"comp-validate-pod-metadata-task-b"},"inputs":{"parameters":{"annotation_exp_val_1":{"runtimeValue":{"constant":"annotation-1"}},"annotation_exp_val_2":{"runtimeValue":{"constant":"annotation-2"}},"annotation_exp_val_3":{"runtimeValue":{"constant":"annotation-3"}},"annotation_exp_val_4":{"runtimeValue":{"constant":"annotation-4"}},"annotation_path_1":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_1"}},"annotation_path_2":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_2"}},"annotation_path_3":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_3"}},"annotation_path_4":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_4"}},"label_exp_val_1":{"runtimeValue":{"constant":"label-1"}},"label_exp_val_2":{"runtimeValue":{"constant":"label-2"}},"label_exp_val_3":{"runtimeValue":{"constant":"label-3"}},"label_path_1":{"runtimeValue":{"constant":"POD_TASK_LABEL_1"}},"label_path_2":{"runtimeValue":{"constant":"POD_TASK_LABEL_2"}},"label_path_3":{"runtimeValue":{"constant":"POD_TASK_LABEL_3"}}}},"taskInfo":{"name":"validate-pod-metadata-task-b"}},"validate-pod-metadata-task-c":{"cachingOptions":{},"componentRef":{"name":"comp-validate-pod-metadata-task-c"},"inputs":{"parameters":{"annotation_exp_val_1":{"runtimeValue":{"constant":"annotation-1"}},"annotation_exp_val_2":{"runtimeValue":{"constant":"annotation-2"}},"annotation_path_1":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_1"}},"annotation_path_2":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_2"}}}},"taskInfo":{"name":"validate-pod-metadata-task-c"}},"validate-pod-metadata-task-d":{"cachingOptions":{},"componentRef":{"name":"comp-validate-pod-metadata-task-d"},"inputs":{"parameters":{"label_exp_val_1":{"runtimeValue":{"constant":"label-1"}},"label_exp_val_2":{"runtimeValue":{"constant":"label-2"}},"label_exp_val_3":{"runtimeValue":{"constant":"label-3"}},"label_path_1":{"runtimeValue":{"constant":"POD_TASK_LABEL_1"}},"label_path_2":{"runtimeValue":{"constant":"POD_TASK_LABEL_2"}},"label_path_3":{"runtimeValue":{"constant":"POD_TASK_LABEL_3"}}}},"taskInfo":{"name":"validate-pod-metadata-task-d"}}}}}'
  entrypoint: entrypoint
  podMetadata:
    annotations:
      pipelines.kubeflow.org/v2_component: "true"
    labels:
      pipelines.kubeflow.org/v2_component: "true"
  serviceAccountName: pipeline-runner
  templates:
  - container:
      args:
      - --type
      - CONTAINER
      - --pipeline_name
      - pipeline-with-pod-metadata
      - --run_id
      - '{{workflow.uid}}'
      - --run_name
      - '{{workflow.name}}'
      - --run_display_name
      - ""
      - --dag_execution_id
      - '{{inputs.parameters.parent-dag-id}}'
      - --component
      - '{{inputs.parameters.component}}'
      - --task
      - '{{inputs.parameters.task}}'
      - --task_name
      - '{{inputs.parameters.task-name}}'
      - --container
      - '{{inputs.parameters.container}}'
      - --iteration_index
      - '{{inputs.parameters.iteration-index}}'
      - --cached_decision_path
      - '{{outputs.parameters.cached-decision.path}}'
      - --pod_spec_patch_path
      - '{{outputs.parameters.pod-spec-patch.path}}'
      - --condition_path
      - '{{outputs.parameters.condition.path}}'
      - --kubernetes_config
      - '{{inputs.parameters.kubernetes-config}}'
      - --http_proxy
      - ""
      - --https_proxy
      - ""
      - --no_proxy
      - ""
      command:
      - driver
      image: ghcr.io/kubeflow/kfp-driver:latest
      name: ""
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 64Mi
    inputs:
      parameters:
      - name: component
      - name: task
      - name: container
      - name: task-name
      - name: parent-dag-id
      - default: "-1"
        name: iteration-index
      - default: ""
        name: kubernetes-config
    metadata: {}
    name: system-container-driver
    outputs:
      parameters:
      - name: pod-spec-patch
        valueFrom:
          default: ""
          path: /tmp/outputs/pod-spec-patch
      - default: "false"
        name: cached-decision
        valueFrom:
          default: "false"
          path: /tmp/outputs/cached-decision
      - name: condition
        valueFrom:
          default: "true"
          path: /tmp/outputs/condition
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{inputs.parameters.pod-spec-patch}}'
        name: executor
        template: system-container-impl
        when: '{{inputs.parameters.cached-decision}} != true'
    inputs:
      parameters:
      - name: pod-spec-patch
      - default: "false"
        name: cached-decision
    metadata: {}
    name: system-container-executor
    outputs: {}
  - container:
      command:
      - should-be-overridden-during-runtime
      env:
      - name: KFP_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: KFP_POD_UID
        valueFrom:
          fieldRef:
            fieldPath: metadata.uid
      envFrom:
      - configMapRef:
          name: metadata-grpc-configmap
          optional: true
      image: gcr.io/ml-pipeline/should-be-overridden-during-runtime
      name: ""
      resources: {}
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
      - mountPath: /gcs
        name: gcs-scratch
      - mountPath: /s3
        name: s3-scratch
      - mountPath: /minio
        name: minio-scratch
      - mountPath: /.local
        name: dot-local-scratch
      - mountPath: /.cache
        name: dot-cache-scratch
      - mountPath: /.config
        name: dot-config-scratch
    initContainers:
    - args:
      - --copy
      - /kfp-launcher/launch
      command:
      - launcher-v2
      image: ghcr.io/kubeflow/kfp-launcher:latest
      name: kfp-launcher
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
    inputs:
      parameters:
      - name: pod-spec-patch
    metadata: {}
    name: system-container-impl
    outputs: {}
    podSpecPatch: '{{inputs.parameters.pod-spec-patch}}'
    volumes:
    - emptyDir: {}
      name: kfp-launcher
    - emptyDir: {}
      name: gcs-scratch
    - emptyDir: {}
      name: s3-scratch
    - emptyDir: {}
      name: minio-scratch
    - emptyDir: {}
      name: dot-local-scratch
    - emptyDir: {}
      name: dot-cache-scratch
    - emptyDir: {}
      name: dot-config-scratch
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{inputs.parameters.pod-spec-patch}}'
          - name: pod-metadata-annotation-key
            value: '{{inputs.parameters.pod-metadata-annotation-key}}'
          - name: pod-metadata-annotation-val
            value: '{{inputs.parameters.pod-metadata-annotation-val}}'
          - name: pod-metadata-label-key-1
            value: '{{inputs.parameters.pod-metadata-label-key-1}}'
          - name: pod-metadata-label-val-1
            value: '{{inputs.parameters.pod-metadata-label-val-1}}'
          - name: pod-metadata-label-key-2
            value: '{{inputs.parameters.pod-metadata-label-key-2}}'
          - name: pod-metadata-label-val-2
            value: '{{inputs.parameters.pod-metadata-label-val-2}}'
        name: executor
        template: metadata-1-2-system-container-impl
        when: '{{inputs.parameters.cached-decision}} != true'
    inputs:
      parameters:
      - name: pod-spec-patch
      - default: "false"
        name: cached-decision
      - name: pod-metadata-annotation-key
      - name: pod-metadata-annotation-val
      - name: pod-metadata-label-key-1
      - name: pod-metadata-label-val-1
      - name: pod-metadata-label-key-2
      - name: pod-metadata-label-val-2
    metadata: {}
    name: metadata-1-2-system-container-executor
    outputs: {}
  - container:
      command:
      - should-be-overridden-during-runtime
      env:
      - name: KFP_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: KFP_POD_UID
        valueFrom:
          fieldRef:
            fieldPath: metadata.uid
      envFrom:
      - configMapRef:
          name: metadata-grpc-configmap
          optional: true
      image: gcr.io/ml-pipeline/should-be-overridden-during-runtime
      name: ""
      resources: {}
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
      - mountPath: /gcs
        name: gcs-scratch
      - mountPath: /s3
        name: s3-scratch
      - mountPath: /minio
        name: minio-scratch
      - mountPath: /.local
        name: dot-local-scratch
      - mountPath: /.cache
        name: dot-cache-scratch
      - mountPath: /.config
        name: dot-config-scratch
    initContainers:
    - args:
      - --copy
      - /kfp-launcher/launch
      command:
      - launcher-v2
      image: ghcr.io/kubeflow/kfp-launcher:latest
      name: kfp-launcher
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
    inputs:
      parameters:
      - name: pod-spec-patch
      - name: pod-metadata-annotation-key
      - name: pod-metadata-annotation-val
      - name: pod-metadata-label-key-1
      - name: pod-metadata-label-val-1
      - name: pod-metadata-label-key-2
      - name: pod-metadata-label-val-2
    metadata:
      annotations:
        '{{inputs.parameters.pod-metadata-annotation-key}}': '{{inputs.parameters.pod-metadata-annotation-val}}'
      labels:
        '{{inputs.parameters.pod-metadata-label-key-1}}': '{{inputs.parameters.pod-metadata-label-val-1}}'
        '{{inputs.parameters.pod-metadata-label-key-2}}': '{{inputs.parameters.pod-metadata-label-val-2}}'
    name: metadata-1-2-system-container-impl
    outputs: {}
    podSpecPatch: '{{inputs.parameters.pod-spec-patch}}'
    volumes:
    - emptyDir: {}
      name: kfp-launcher
    - emptyDir: {}
      name: gcs-scratch
    - emptyDir: {}
      name: s3-scratch
    - emptyDir: {}
      name: minio-scratch
    - emptyDir: {}
      name: dot-local-scratch
    - emptyDir: {}
      name: dot-cache-scratch
    - emptyDir: {}
      name: dot-config-scratch
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{inputs.parameters.pod-spec-patch}}'
          - name: pod-metadata-annotation-key-1
            value: '{{inputs.parameters.pod-metadata-annotation-key-1}}'
          - name: pod-metadata-annotation-val-1
            value: '{{inputs.parameters.pod-metadata-annotation-val-1}}'
          - name: pod-metadata-annotation-key-2
            value: '{{inputs.parameters.pod-metadata-annotation-key-2}}'
          - name: pod-metadata-annotation-val-2
            value: '{{inputs.parameters.pod-metadata-annotation-val-2}}'
          - name: pod-metadata-annotation-key-3
            value: '{{inputs.parameters.pod-metadata-annotation-key-3}}'
          - name: pod-metadata-annotation-val-3
            value: '{{inputs.parameters.pod-metadata-annotation-val-3}}'
          - name: pod-metadata-annotation-key-4
            value: '{{inputs.parameters.pod-metadata-annotation-key-4}}'
          - name: pod-metadata-annotation-val-4
            value: '{{inputs.parameters.pod-metadata-annotation-val-4}}'
          - name: pod-metadata-label-key-1
            value: '{{inputs.parameters.pod-metadata-label-key-1}}'
          - name: pod-metadata-label-val-1
            value: '{{inputs.parameters.pod-metadata-label-val-1}}'
          - name: pod-metadata-label-key-2
            value: '{{inputs.parameters.pod-metadata-label-key-2}}'
          - name: pod-metadata-label-val-2
            value: '{{inputs.parameters.pod-metadata-label-val-2}}'
          - name: pod-metadata-label-key-3
            value: '{{inputs.parameters.pod-metadata-label-key-3}}'
          - name: pod-metadata-label-val-3
            value: '{{inputs.parameters.pod-metadata-label-val-3}}'
        name: executor
        template: metadata-4-3-system-container-impl
        when: '{{inputs.parameters.cached-decision}} != true'
    inputs:
      parameters:
      - name: pod-spec-patch
      - default: "false"
        name: cached-decision
      - name: pod-metadata-annotation-key-1
      - name: pod-metadata-annotation-val-1
      - name: pod-metadata-annotation-key-2
      - name: pod-metadata-annotation-val-2
      - name: pod-metadata-annotation-key-3
      - name: pod-metadata-annotation-val-3
      - name: pod-metadata-annotation-key-4
      - name: pod-metadata-annotation-val-4
      - name: pod-metadata-label-key-1
      - name: pod-metadata-label-val-1
      - name: pod-metadata-label-key-2
      - name: pod-metadata-label-val-2
      - name: pod-metadata-label-key-3
      - name: pod-metadata-label-val-3
    metadata: {}
    name: metadata-4-3-system-container-executor
    outputs: {}
  - container:
      command:
      - should-be-overridden-during-runtime
      env:
      - name: KFP_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: KFP_POD_UID
        valueFrom:
          fieldRef:
            fieldPath: metadata.uid
      envFrom:
      - configMapRef:
          name: metadata-grpc-configmap
          optional: true
      image: gcr.io/ml-pipeline/should-be-overridden-during-runtime
      name: ""
      resources: {}
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
      - mountPath: /gcs
        name: gcs-scratch
      - mountPath: /s3
        name: s3-scratch
      - mountPath: /minio
        name: minio-scratch
      - mountPath: /.local
        name: dot-local-scratch
      - mountPath: /.cache
        name: dot-cache-scratch
      - mountPath: /.config
        name: dot-config-scratch
    initContainers:
    - args:
      - --copy
      - /kfp-launcher/launch
      command:
      - launcher-v2
      image: ghcr.io/kubeflow/kfp-launcher:latest
      name: kfp-launcher
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
    inputs:
      parameters:
      - name: pod-spec-patch
      - name: pod-metadata-annotation-key-1
      - name: pod-metadata-annotation-val-1
      - name: pod-metadata-annotation-key-2
      - name: pod-metadata-annotation-val-2
      - name: pod-metadata-annotation-key-3
      - name: pod-metadata-annotation-val-3
      - name: pod-metadata-annotation-key-4
      - name: pod-metadata-annotation-val-4
      - name: pod-metadata-label-key-1
      - name: pod-metadata-label-val-1
      - name: pod-metadata-label-key-2
      - name: pod-metadata-label-val-2
      - name: pod-metadata-label-key-3
      - name: pod-metadata-label-val-3
    metadata:
      annotations:
        '{{inputs.parameters.pod-metadata-annotation-key-1}}': '{{inputs.parameters.pod-metadata-annotation-val-1}}'
        '{{inputs.parameters.pod-metadata-annotation-key-2}}': '{{inputs.parameters.pod-metadata-annotation-val-2}}'
        '{{inputs.parameters.pod-metadata-annotation-key-3}}': '{{inputs.parameters.pod-metadata-annotation-val-3}}'
        '{{inputs.parameters.pod-metadata-annotation-key-4}}': '{{inputs.parameters.pod-metadata-annotation-val-4}}'
      labels:
        '{{inputs.parameters.pod-metadata-label-key-1}}': '{{inputs.parameters.pod-metadata-label-val-1}}'
        '{{inputs.parameters.pod-metadata-label-key-2}}': '{{inputs.parameters.pod-metadata-label-val-2}}'
        '{{inputs.parameters.pod-metadata-label-key-3}}': '{{inputs.parameters.pod-metadata-label-val-3}}'
    name: metadata-4-3-system-container-impl
    outputs: {}
    podSpecPatch: '{{inputs.parameters.pod-spec-patch}}'
    volumes:
    - emptyDir: {}
      name: kfp-launcher
    - emptyDir: {}
      name: gcs-scratch
    - emptyDir: {}
      name: s3-scratch
    - emptyDir: {}
      name: minio-scratch
    - emptyDir: {}
      name: dot-local-scratch
    - emptyDir: {}
      name: dot-cache-scratch
    - emptyDir: {}
      name: dot-config-scratch
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{inputs.parameters.pod-spec-patch}}'
          - name: pod-metadata-annotation-key-1
            value: '{{inputs.parameters.pod-metadata-annotation-key-1}}'
          - name: pod-metadata-annotation-val-1
            value: '{{inputs.parameters.pod-metadata-annotation-val-1}}'
          - name: pod-metadata-annotation-key-2
            value: '{{inputs.parameters.pod-metadata-annotation-key-2}}'
          - name: pod-metadata-annotation-val-2
            value: '{{inputs.parameters.pod-metadata-annotation-val-2}}'
        name: executor
        template: metadata-2-0-system-container-impl
        when: '{{inputs.parameters.cached-decision}} != true'
    inputs:
      parameters:
      - name: pod-spec-patch
      - default: "false"
        name: cached-decision
      - name: pod-metadata-annotation-key-1
      - name: pod-metadata-annotation-val-1
      - name: pod-metadata-annotation-key-2
      - name: pod-metadata-annotation-val-2
    metadata: {}
    name: metadata-2-0-system-container-executor
    outputs: {}
  - container:
      command:
      - should-be-overridden-during-runtime
      env:
      - name: KFP_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: KFP_POD_UID
        valueFrom:
          fieldRef:
            fieldPath: metadata.uid
      envFrom:
      - configMapRef:
          name: metadata-grpc-configmap
          optional: true
      image: gcr.io/ml-pipeline/should-be-overridden-during-runtime
      name: ""
      resources: {}
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
      - mountPath: /gcs
        name: gcs-scratch
      - mountPath: /s3
        name: s3-scratch
      - mountPath: /minio
        name: minio-scratch
      - mountPath: /.local
        name: dot-local-scratch
      - mountPath: /.cache
        name: dot-cache-scratch
      - mountPath: /.config
        name: dot-config-scratch
    initContainers:
    - args:
      - --copy
      - /kfp-launcher/launch
      command:
      - launcher-v2
      image: ghcr.io/kubeflow/kfp-launcher:latest
      name: kfp-launcher
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
    inputs:
      parameters:
      - name: pod-spec-patch
      - name: pod-metadata-annotation-key-1
      - name: pod-metadata-annotation-val-1
      - name: pod-metadata-annotation-key-2
      - name: pod-metadata-annotation-val-2
    metadata:
      annotations:
        '{{inputs.parameters.pod-metadata-annotation-key-1}}': '{{inputs.parameters.pod-metadata-annotation-val-1}}'
        '{{inputs.parameters.pod-metadata-annotation-key-2}}': '{{inputs.parameters.pod-metadata-annotation-val-2}}'
    name: metadata-2-0-system-container-impl
    outputs: {}
    podSpecPatch: '{{inputs.parameters.pod-spec-patch}}'
    volumes:
    - emptyDir: {}
      name: kfp-launcher
    - emptyDir: {}
      name: gcs-scratch
    - emptyDir: {}
      name: s3-scratch
    - emptyDir: {}
      name: minio-scratch
    - emptyDir: {}
      name: dot-local-scratch
    - emptyDir: {}
      name: dot-cache-scratch
    - emptyDir: {}
      name: dot-config-scratch
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{inputs.parameters.pod-spec-patch}}'
          - name: pod-metadata-label-key-1
            value: '{{inputs.parameters.pod-metadata-label-key-1}}'
          - name: pod-metadata-label-val-1
            value: '{{inputs.parameters.pod-metadata-label-val-1}}'
          - name: pod-metadata-label-key-2
            value: '{{inputs.parameters.pod-metadata-label-key-2}}'
          - name: pod-metadata-label-val-2
            value: '{{inputs.parameters.pod-metadata-label-val-2}}'
          - name: pod-metadata-label-key-3
            value: '{{inputs.parameters.pod-metadata-label-key-3}}'
          - name: pod-metadata-label-val-3
            value: '{{inputs.parameters.pod-metadata-label-val-3}}'
        name: executor
        template: metadata-0-3-system-container-impl
        when: '{{inputs.parameters.cached-decision}} != true'
    inputs:
      parameters:
      - name: pod-spec-patch
      - default: "false"
        name: cached-decision
      - name: pod-metadata-label-key-1
      - name: pod-metadata-label-val-1
      - name: pod-metadata-label-key-2
      - name: pod-metadata-label-val-2
      - name: pod-metadata-label-key-3
      - name: pod-metadata-label-val-3
    metadata: {}
    name: metadata-0-3-system-container-executor
    outputs: {}
  - container:
      command:
      - should-be-overridden-during-runtime
      env:
      - name: KFP_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: KFP_POD_UID
        valueFrom:
          fieldRef:
            fieldPath: metadata.uid
      envFrom:
      - configMapRef:
          name: metadata-grpc-configmap
          optional: true
      image: gcr.io/ml-pipeline/should-be-overridden-during-runtime
      name: ""
      resources: {}
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
      - mountPath: /gcs
        name: gcs-scratch
      - mountPath: /s3
        name: s3-scratch
      - mountPath: /minio
        name: minio-scratch
      - mountPath: /.local
        name: dot-local-scratch
      - mountPath: /.cache
        name: dot-cache-scratch
      - mountPath: /.config
        name: dot-config-scratch
    initContainers:
    - args:
      - --copy
      - /kfp-launcher/launch
      command:
      - launcher-v2
      image: ghcr.io/kubeflow/kfp-launcher:latest
      name: kfp-launcher
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /kfp-launcher
        name: kfp-launcher
    inputs:
      parameters:
      - name: pod-spec-patch
      - name: pod-metadata-label-key-1
      - name: pod-metadata-label-val-1
      - name: pod-metadata-label-key-2
      - name: pod-metadata-label-val-2
      - name: pod-metadata-label-key-3
      - name: pod-metadata-label-val-3
    metadata:
      labels:
        '{{inputs.parameters.pod-metadata-label-key-1}}': '{{inputs.parameters.pod-metadata-label-val-1}}'
        '{{inputs.parameters.pod-metadata-label-key-2}}': '{{inputs.parameters.pod-metadata-label-val-2}}'
        '{{inputs.parameters.pod-metadata-label-key-3}}': '{{inputs.parameters.pod-metadata-label-val-3}}'
    name: metadata-0-3-system-container-impl
    outputs: {}
    podSpecPatch: '{{inputs.parameters.pod-spec-patch}}'
    volumes:
    - emptyDir: {}
      name: kfp-launcher
    - emptyDir: {}
      name: gcs-scratch
    - emptyDir: {}
      name: s3-scratch
    - emptyDir: {}
      name: minio-scratch
    - emptyDir: {}
      name: dot-local-scratch
    - emptyDir: {}
      name: dot-cache-scratch
    - emptyDir: {}
      name: dot-config-scratch
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-3d278faa61c986d801a417f587e50005053b72d5108dc720e6ce32593c050c24}}'
          - name: task
            value: '{"cachingOptions":{},"componentRef":{"name":"comp-validate-no-pod-metadata"},"taskInfo":{"name":"validate-no-pod-metadata"}}'
          - name: container
            value: '{{workflow.parameters.implementations-3d278faa61c986d801a417f587e50005053b72d5108dc720e6ce32593c050c24}}'
          - name: task-name
            value: validate-no-pod-metadata
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
          - name: kubernetes-config
            value: '{{workflow.parameters.kubernetes-comp-validate-no-pod-metadata}}'
        name: validate-no-pod-metadata-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.validate-no-pod-metadata-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.validate-no-pod-metadata-driver.outputs.parameters.cached-decision}}'
        depends: validate-no-pod-metadata-driver.Succeeded
        name: validate-no-pod-metadata
        template: system-container-executor
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-a58a8ba91674b53e9cfd2a56b122fa32c32733648c4337cfd4d489147baa0351}}'
          - name: task
            value: '{"cachingOptions":{},"componentRef":{"name":"comp-validate-pod-metadata-task-a"},"inputs":{"parameters":{"annotation_exp_val":{"runtimeValue":{"constant":"annotation"}},"annotation_path":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION"}},"label_exp_val_1":{"runtimeValue":{"constant":"label-1"}},"label_exp_val_2":{"runtimeValue":{"constant":"label-2"}},"label_path_1":{"runtimeValue":{"constant":"POD_TASK_LABEL_1"}},"label_path_2":{"runtimeValue":{"constant":"POD_TASK_LABEL_2"}}}},"taskInfo":{"name":"validate-pod-metadata-task-a"}}'
          - name: container
            value: '{{workflow.parameters.implementations-a58a8ba91674b53e9cfd2a56b122fa32c32733648c4337cfd4d489147baa0351}}'
          - name: task-name
            value: validate-pod-metadata-task-a
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
          - name: kubernetes-config
            value: '{{workflow.parameters.kubernetes-comp-validate-pod-metadata-task-a}}'
        name: validate-pod-metadata-task-a-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.validate-pod-metadata-task-a-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.validate-pod-metadata-task-a-driver.outputs.parameters.cached-decision}}'
          - name: pod-metadata-annotation-key
            value: task-annotation
          - name: pod-metadata-annotation-val
            value: annotation
          - name: pod-metadata-label-key-1
            value: task-label-1
          - name: pod-metadata-label-val-1
            value: label-1
          - name: pod-metadata-label-key-2
            value: task-label-2
          - name: pod-metadata-label-val-2
            value: label-2
        depends: validate-pod-metadata-task-a-driver.Succeeded
        name: validate-pod-metadata-task-a
        template: metadata-1-2-system-container-executor
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-ff4adfd20fbb1ccd7f6e9330882576b7e34ffba16bc568acc10956b8652c28d9}}'
          - name: task
            value: '{"cachingOptions":{},"componentRef":{"name":"comp-validate-pod-metadata-task-b"},"inputs":{"parameters":{"annotation_exp_val_1":{"runtimeValue":{"constant":"annotation-1"}},"annotation_exp_val_2":{"runtimeValue":{"constant":"annotation-2"}},"annotation_exp_val_3":{"runtimeValue":{"constant":"annotation-3"}},"annotation_exp_val_4":{"runtimeValue":{"constant":"annotation-4"}},"annotation_path_1":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_1"}},"annotation_path_2":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_2"}},"annotation_path_3":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_3"}},"annotation_path_4":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_4"}},"label_exp_val_1":{"runtimeValue":{"constant":"label-1"}},"label_exp_val_2":{"runtimeValue":{"constant":"label-2"}},"label_exp_val_3":{"runtimeValue":{"constant":"label-3"}},"label_path_1":{"runtimeValue":{"constant":"POD_TASK_LABEL_1"}},"label_path_2":{"runtimeValue":{"constant":"POD_TASK_LABEL_2"}},"label_path_3":{"runtimeValue":{"constant":"POD_TASK_LABEL_3"}}}},"taskInfo":{"name":"validate-pod-metadata-task-b"}}'
          - name: container
            value: '{{workflow.parameters.implementations-ff4adfd20fbb1ccd7f6e9330882576b7e34ffba16bc568acc10956b8652c28d9}}'
          - name: task-name
            value: validate-pod-metadata-task-b
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
          - name: kubernetes-config
            value: '{{workflow.parameters.kubernetes-comp-validate-pod-metadata-task-b}}'
        name: validate-pod-metadata-task-b-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.validate-pod-metadata-task-b-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.validate-pod-metadata-task-b-driver.outputs.parameters.cached-decision}}'
          - name: pod-metadata-annotation-key-1
            value: task-annotation-1
          - name: pod-metadata-annotation-val-1
            value: annotation-1
          - name: pod-metadata-annotation-key-2
            value: task-annotation-2
          - name: pod-metadata-annotation-val-2
            value: annotation-2
          - name: pod-metadata-annotation-key-3
            value: task-annotation-3
          - name: pod-metadata-annotation-val-3
            value: annotation-3
          - name: pod-metadata-annotation-key-4
            value: task-annotation-4
          - name: pod-metadata-annotation-val-4
            value: annotation-4
          - name: pod-metadata-label-key-1
            value: task-label-1
          - name: pod-metadata-label-val-1
            value: label-1
          - name: pod-metadata-label-key-2
            value: task-label-2
          - name: pod-metadata-label-val-2
            value: label-2
          - name: pod-metadata-label-key-3
            value: task-label-3
          - name: pod-metadata-label-val-3
            value: label-3
        depends: validate-pod-metadata-task-b-driver.Succeeded
        name: validate-pod-metadata-task-b
        template: metadata-4-3-system-container-executor
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-0fe8b44e6cf954e8e447976b0b620a7737c5a0371bfd14ca4329c665328fa1d6}}'
          - name: task
            value: '{"cachingOptions":{},"componentRef":{"name":"comp-validate-pod-metadata-task-c"},"inputs":{"parameters":{"annotation_exp_val_1":{"runtimeValue":{"constant":"annotation-1"}},"annotation_exp_val_2":{"runtimeValue":{"constant":"annotation-2"}},"annotation_path_1":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_1"}},"annotation_path_2":{"runtimeValue":{"constant":"POD_TASK_ANNOTATION_2"}}}},"taskInfo":{"name":"validate-pod-metadata-task-c"}}'
          - name: container
            value: '{{workflow.parameters.implementations-0fe8b44e6cf954e8e447976b0b620a7737c5a0371bfd14ca4329c665328fa1d6}}'
          - name: task-name
            value: validate-pod-metadata-task-c
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
          - name: kubernetes-config
            value: '{{workflow.parameters.kubernetes-comp-validate-pod-metadata-task-c}}'
        name: validate-pod-metadata-task-c-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.validate-pod-metadata-task-c-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.validate-pod-metadata-task-c-driver.outputs.parameters.cached-decision}}'
          - name: pod-metadata-annotation-key-1
            value: task-annotation-1
          - name: pod-metadata-annotation-val-1
            value: annotation-1
          - name: pod-metadata-annotation-key-2
            value: task-annotation-2
          - name: pod-metadata-annotation-val-2
            value: annotation-2
        depends: validate-pod-metadata-task-c-driver.Succeeded
        name: validate-pod-metadata-task-c
        template: metadata-2-0-system-container-executor
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-9ed49be6257bd027ea2d0882c606eddc7d5d2e83c82c63774ddd209b876bc316}}'
          - name: task
            value: '{"cachingOptions":{},"componentRef":{"name":"comp-validate-pod-metadata-task-d"},"inputs":{"parameters":{"label_exp_val_1":{"runtimeValue":{"constant":"label-1"}},"label_exp_val_2":{"runtimeValue":{"constant":"label-2"}},"label_exp_val_3":{"runtimeValue":{"constant":"label-3"}},"label_path_1":{"runtimeValue":{"constant":"POD_TASK_LABEL_1"}},"label_path_2":{"runtimeValue":{"constant":"POD_TASK_LABEL_2"}},"label_path_3":{"runtimeValue":{"constant":"POD_TASK_LABEL_3"}}}},"taskInfo":{"name":"validate-pod-metadata-task-d"}}'
          - name: container
            value: '{{workflow.parameters.implementations-9ed49be6257bd027ea2d0882c606eddc7d5d2e83c82c63774ddd209b876bc316}}'
          - name: task-name
            value: validate-pod-metadata-task-d
          - name: parent-dag-id
            value: '{{inputs.parameters.parent-dag-id}}'
          - name: kubernetes-config
            value: '{{workflow.parameters.kubernetes-comp-validate-pod-metadata-task-d}}'
        name: validate-pod-metadata-task-d-driver
        template: system-container-driver
      - arguments:
          parameters:
          - name: pod-spec-patch
            value: '{{tasks.validate-pod-metadata-task-d-driver.outputs.parameters.pod-spec-patch}}'
          - default: "false"
            name: cached-decision
            value: '{{tasks.validate-pod-metadata-task-d-driver.outputs.parameters.cached-decision}}'
          - name: pod-metadata-label-key-1
            value: task-label-1
          - name: pod-metadata-label-val-1
            value: label-1
          - name: pod-metadata-label-key-2
            value: task-label-2
          - name: pod-metadata-label-val-2
            value: label-2
          - name: pod-metadata-label-key-3
            value: task-label-3
          - name: pod-metadata-label-val-3
            value: label-3
        depends: validate-pod-metadata-task-d-driver.Succeeded
        name: validate-pod-metadata-task-d
        template: metadata-0-3-system-container-executor
    inputs:
      parameters:
      - name: parent-dag-id
    metadata: {}
    name: root
    outputs: {}
  - container:
      args:
      - --type
      - '{{inputs.parameters.driver-type}}'
      - --pipeline_name
      - pipeline-with-pod-metadata
      - --run_id
      - '{{workflow.uid}}'
      - --run_name
      - '{{workflow.name}}'
      - --run_display_name
      - ""
      - --dag_execution_id
      - '{{inputs.parameters.parent-dag-id}}'
      - --component
      - '{{inputs.parameters.component}}'
      - --task
      - '{{inputs.parameters.task}}'
      - --task_name
      - '{{inputs.parameters.task-name}}'
      - --runtime_config
      - '{{inputs.parameters.runtime-config}}'
      - --iteration_index
      - '{{inputs.parameters.iteration-index}}'
      - --execution_id_path
      - '{{outputs.parameters.execution-id.path}}'
      - --iteration_count_path
      - '{{outputs.parameters.iteration-count.path}}'
      - --condition_path
      - '{{outputs.parameters.condition.path}}'
      - --http_proxy
      - ""
      - --https_proxy
      - ""
      - --no_proxy
      - ""
      command:
      - driver
      image: ghcr.io/kubeflow/kfp-driver:latest
      name: ""
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 64Mi
    inputs:
      parameters:
      - name: component
      - default: ""
        name: runtime-config
      - default: ""
        name: task
      - default: ""
        name: task-name
      - default: "0"
        name: parent-dag-id
      - default: "-1"
        name: iteration-index
      - default: DAG
        name: driver-type
    metadata: {}
    name: system-dag-driver
    outputs:
      parameters:
      - name: execution-id
        valueFrom:
          path: /tmp/outputs/execution-id
      - name: iteration-count
        valueFrom:
          default: "0"
          path: /tmp/outputs/iteration-count
      - name: condition
        valueFrom:
          default: "true"
          path: /tmp/outputs/condition
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: component
            value: '{{workflow.parameters.components-root}}'
          - name: runtime-config
            value: '{}'
          - name: driver-type
            value: ROOT_DAG
        name: root-driver
        template: system-dag-driver
      - arguments:
          parameters:
          - name: parent-dag-id
            value: '{{tasks.root-driver.outputs.parameters.execution-id}}'
          - name: condition
            value: ""
        depends: root-driver.Succeeded
        name: root
        template: root
    inputs: {}
    metadata: {}
    name: entrypoint
    outputs: {}
status:
  finishedAt: null
  startedAt: null
