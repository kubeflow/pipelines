# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

matrix:
  include:
    - language: python
      python: "2.7"
      env: TOXENV=py27
      script:
        - python -m pip
        - pip install six>=1.13.0
        # Component SDK tests
        - cd $TRAVIS_BUILD_DIR/components/gcp/container/component_sdk/python
        - ./run_test.sh
    - language: python
      python: "3.5"
      env: TOXENV=py35
      before_install:
        - export PYTHONPATH=$PYTHONPATH:/home/travis/.local/lib/python3.5/site-packages/
      install: &0
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r $TRAVIS_BUILD_DIR/sdk/python/requirements.txt
        # Additional dependencies
        - pip3 install coverage==4.5.4 coveralls==1.9.2 six>=1.13.0
        # Sample test infra dependencies
        - pip3 install minio
        - pip3 install junit_xml
        # Visualization test dependencies
        - cd $TRAVIS_BUILD_DIR/backend/src/apiserver/visualization
        - pip3 install -r requirements-test.txt
      script: &1 # DSL tests
        - cd $TRAVIS_BUILD_DIR/sdk/python
        - python3 -m pip install -e .
        - cd $TRAVIS_BUILD_DIR # Changing the current directory to the repo root for correct coverall paths
        - coverage run --source=kfp --append sdk/python/tests/dsl/main.py
        - coverage run --source=kfp --append sdk/python/tests/compiler/main.py
        - coverage run --source=kfp --append -m unittest discover --verbose --start-dir sdk/python/tests --top-level-directory=sdk/python
        #- coveralls

        # Test against TFX
        # Compile and setup protobuf
        - PROTOC_ZIP=protoc-3.7.1-linux-x86_64.zip
        - curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.7.1/$PROTOC_ZIP
        - sudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc
        - sudo unzip -o $PROTOC_ZIP -d /usr/local 'include/*'
        - rm -f $PROTOC_ZIP
        # Install TFX from head
        - cd $TRAVIS_BUILD_DIR
        - git clone https://github.com/tensorflow/tfx.git
        - cd $TRAVIS_BUILD_DIR/tfx
        - pip3 install --upgrade pip
        - set -x
        - set -e
        - python3 setup.py bdist_wheel
        - WHEEL_PATH=$(find dist -name "tfx-*.whl")
        - python3 -m pip install "${WHEEL_PATH}" --upgrade
        - set +e
        - set +x
        # Three KFP-related unittests
        - cd $TRAVIS_BUILD_DIR/tfx/tfx/orchestration/kubeflow
        - python3 kubeflow_dag_runner_test.py
        - cd $TRAVIS_BUILD_DIR/tfx/tfx/examples/chicago_taxi_pipeline
        - python3 taxi_pipeline_kubeflow_gcp_test.py
        - python3 taxi_pipeline_kubeflow_local_test.py

        # Visualization test
        - cd $TRAVIS_BUILD_DIR/backend/src/apiserver/visualization
        - python3 test_exporter.py
        - python3 test_server.py

        # Test loading all component.yaml definitions
        - $TRAVIS_BUILD_DIR/components/test_load_all_components.sh

        # Component SDK tests
        - cd $TRAVIS_BUILD_DIR/components/gcp/container/component_sdk/python
        - ./run_test.sh

        # Sample test unittests.
        - cd $TRAVIS_BUILD_DIR/test/sample-test/unittests
        - python3 -m unittest utils_tests.py
    - language: python
      python: "3.6"
      env: TOXENV=py36
      before_install:
        - export PYTHONPATH=$PYTHONPATH:/home/travis/.local/lib/python3.6/site-packages/
      install: *0
      script: *1
    - language: python
      python: "3.7"
      env: TOXENV=py37
      before_install:
        - export PYTHONPATH=$PYTHONPATH:/home/travis/.local/lib/python3.7/site-packages/
      install: *0
      script: *1
    - name: "Lint Python code with flake8"
      language: python
      python: "3.7"
      install: pip install flake8
      script: flake8 . --count --exclude=backend/src/apiserver/visualization/types/*.py --select=E9,F63,F7,F82 --show-source --statistics || true
