Metadata-Version: 2.4
Name: kfp
Version: 2.13.0
Summary: Kubeflow Pipelines SDK
Home-page: https://github.com/kubeflow/pipelines
Author: The Kubeflow Authors
Project-URL: Documentation, https://kubeflow-pipelines.readthedocs.io/en/stable/
Project-URL: Bug Tracker, https://github.com/kubeflow/pipelines/issues
Project-URL: Source, https://github.com/kubeflow/pipelines/tree/master/sdk
Project-URL: Changelog, https://github.com/kubeflow/pipelines/blob/master/sdk/RELEASE.md
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.9.0
Description-Content-Type: text/markdown
Requires-Dist: click<9,>=8.0.0
Requires-Dist: docstring-parser<1,>=0.7.3
Requires-Dist: google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5
Requires-Dist: google-auth<3,>=1.6.1
Requires-Dist: google-cloud-storage<4,>=2.2.1
Requires-Dist: kfp-pipeline-spec==0.6.0
Requires-Dist: kfp-server-api<2.5.0,>=2.1.0
Requires-Dist: kubernetes<31,>=8.0.0
Requires-Dist: protobuf<5,>=4.21.1
Requires-Dist: PyYAML<7,>=5.3
Requires-Dist: requests-toolbelt<2,>=0.8.0
Requires-Dist: tabulate<1,>=0.8.6
Requires-Dist: urllib3<3.0.0
Requires-Dist: typing-extensions<5,>=3.7.4; python_version < "3.9"
Provides-Extra: all
Requires-Dist: docker; extra == "all"
Requires-Dist: kfp-kubernetes<2; extra == "all"
Provides-Extra: kubernetes
Requires-Dist: kfp-kubernetes<2; extra == "kubernetes"
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: project-url
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary


Kubeflow Pipelines is a platform for building and deploying portable, scalable machine learning workflows based on Docker containers within the [Kubeflow](https://www.kubeflow.org/) project.

Use Kubeflow Pipelines to compose a multi-step workflow ([pipeline](https://www.kubeflow.org/docs/components/pipelines/concepts/pipeline/)) as a [graph](https://www.kubeflow.org/docs/components/pipelines/concepts/graph/) of containerized [tasks](https://www.kubeflow.org/docs/components/pipelines/concepts/step/) using Python code and/or YAML. Then, [run](https://www.kubeflow.org/docs/components/pipelines/concepts/run/) your pipeline with specified pipeline arguments, rerun your pipeline with new arguments or data, [schedule](https://www.kubeflow.org/docs/components/pipelines/concepts/run-trigger/) your pipeline to run on a recurring basis, organize your runs into [experiments](https://www.kubeflow.org/docs/components/pipelines/concepts/experiment/), save machine learning artifacts to compliant [artifact registries](https://www.kubeflow.org/docs/components/pipelines/concepts/metadata/), and visualize it all through the [Kubeflow Dashboard](https://www.kubeflow.org/docs/components/central-dash/overview/).

## Installation

To install `kfp`, run:

```sh
pip install kfp
```

## Getting started

The following is an example of a simple pipeline that uses the `kfp` v2 syntax:

```python
from kfp import dsl
import kfp


@dsl.component
def add(a: float, b: float) -> float:
    '''Calculates sum of two arguments'''
    return a + b


@dsl.pipeline(
    name='Addition pipeline',
    description='An example pipeline that performs addition calculations.')
def add_pipeline(
    a: float = 1.0,
    b: float = 7.0,
):
    first_add_task = add(a=a, b=4.0)
    second_add_task = add(a=first_add_task.output, b=b)


client = kfp.Client(host='<my-host-url>')
client.create_run_from_pipeline_func(
    add_pipeline, arguments={
        'a': 7.0,
        'b': 8.0
    })

```
