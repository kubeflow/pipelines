// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailsFieldValue does not render boolean:false as JSON 1`] = `
<span>
  false
</span>
`;

exports[`DetailsFieldValue does not render boolean:true as JSON 1`] = `
<span>
  true
</span>
`;

exports[`DetailsFieldValue does not render nulls as JSON 1`] = `
<span>
  null
</span>
`;

exports[`DetailsFieldValue does not render numbers as JSON 1`] = `
<span>
  10
</span>
`;

exports[`DetailsFieldValue does render JSON string as JSON 1`] = `
<div
  className="row"
  key="1"
>
  <span
    className="key"
  >
    key
  </span>
  <Editor
    cursorStart={1}
    editorProps={Object {}}
    enableBasicAutocompletion={false}
    enableLiveAutocompletion={false}
    enableSnippets={false}
    focus={false}
    fontSize={12}
    height="500px"
    highlightActiveLine={true}
    maxLines={20}
    minLines={3}
    mode="json"
    name="brace-editor"
    navigateToFileEnd={true}
    onChange={null}
    onLoad={null}
    onPaste={null}
    onScroll={null}
    placeholder={null}
    readOnly={true}
    scrollMargin={
      Array [
        0,
        0,
        0,
        0,
      ]
    }
    setOptions={Object {}}
    showGutter={true}
    showPrintMargin={true}
    style={Object {}}
    tabSize={4}
    theme="github"
    value="{
  \\"foo\\": \\"bar\\"
}"
    width="100%"
    wrapEnabled={false}
  />
</div>
`;

exports[`DetailsFieldValue does render argo s3artifacts as MinioArtifactPreview 1`] = `
<MinioArtifactPreview
  artifact={
    Object {
      "bucket": "bucket",
      "key": "key",
    }
  }
/>
`;

exports[`DetailsFieldValue does render arrays as JSON 1`] = `
<div
  className="row"
  key="1"
>
  <span
    className="key"
  >
    key
  </span>
  <Editor
    cursorStart={1}
    editorProps={Object {}}
    enableBasicAutocompletion={false}
    enableLiveAutocompletion={false}
    enableSnippets={false}
    focus={false}
    fontSize={12}
    height="500px"
    highlightActiveLine={true}
    maxLines={20}
    minLines={3}
    mode="json"
    name="brace-editor"
    navigateToFileEnd={true}
    onChange={null}
    onLoad={null}
    onPaste={null}
    onScroll={null}
    placeholder={null}
    readOnly={true}
    scrollMargin={
      Array [
        0,
        0,
        0,
        0,
      ]
    }
    setOptions={Object {}}
    showGutter={true}
    showPrintMargin={true}
    style={Object {}}
    tabSize={4}
    theme="github"
    value="[]"
    width="100%"
    wrapEnabled={false}
  />
</div>
`;

exports[`DetailsFieldValue does render empty object as JSON 1`] = `
<div
  className="row"
  key="1"
>
  <span
    className="key"
  >
    key
  </span>
  <Editor
    cursorStart={1}
    editorProps={Object {}}
    enableBasicAutocompletion={false}
    enableLiveAutocompletion={false}
    enableSnippets={false}
    focus={false}
    fontSize={12}
    height="500px"
    highlightActiveLine={true}
    maxLines={20}
    minLines={3}
    mode="json"
    name="brace-editor"
    navigateToFileEnd={true}
    onChange={null}
    onLoad={null}
    onPaste={null}
    onScroll={null}
    placeholder={null}
    readOnly={true}
    scrollMargin={
      Array [
        0,
        0,
        0,
        0,
      ]
    }
    setOptions={Object {}}
    showGutter={true}
    showPrintMargin={true}
    style={Object {}}
    tabSize={4}
    theme="github"
    value="{}"
    width="100%"
    wrapEnabled={false}
  />
</div>
`;

exports[`DetailsFieldValue does render string as SPAN 1`] = `
<span>
  text
</span>
`;

exports[`DetailsTable does not render booleans as JSON 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key1
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key1"
          fieldvalue="true"
          index={0}
        />
      </span>
    </div>
    <div
      className="row"
      key="1"
    >
      <span
        className="key"
      >
        key2
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key2"
          fieldvalue="false"
          index={1}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does not render nulls as JSON 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue="null"
          index={0}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does not render numbers as JSON 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue="10"
          index={0}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does not render strings as JSON 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue="\\"some string\\""
          index={0}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does render arrays as JSON 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue="[]"
          index={0}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does render arrays as JSON 2`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue="{}"
          index={0}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does render empty object as JSON 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue="{}"
          index={0}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does render previews if the values of the fields are S3Artifacts obj 1`] = `
<DetailsTable
  fields={
    Array [
      Array [
        "key",
        Object {
          "bucket": "someBucket",
          "endpoint": "s3.amazonaws.com",
          "key": "foobar",
        },
      ],
    ]
  }
>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue={
            Object {
              "bucket": "someBucket",
              "endpoint": "s3.amazonaws.com",
              "key": "foobar",
            }
          }
          index={0}
        >
          <MinioArtifactPreview
            artifact={
              Object {
                "bucket": "someBucket",
                "endpoint": "s3.amazonaws.com",
                "key": "foobar",
              }
            }
          >
            <div>
              <a
                href="artifacts/get?source=s3&bucket=someBucket&key=foobar"
                rel="noreferrer noopener"
                target="_blank"
                title="s3://someBucket/foobar"
              >
                s3://someBucket/foobar
              </a>
              <div>
                <small>
                  <pre />
                </small>
              </div>
            </div>
          </MinioArtifactPreview>
        </DetailsFieldValue>
      </span>
    </div>
  </div>
</DetailsTable>
`;

exports[`DetailsTable shows a row with a title 1`] = `
<Fragment>
  <div
    className="header"
  >
    some title
  </div>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue="value"
          index={0}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable shows key and JSON value in row 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue="[{\\"jsonKey\\":\\"jsonValue\\"}]"
          index={0}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable shows key and value for large values 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue="Lorem Ipsum is simply dummy text of the printing and typesetting
      industry. Lorem Ipsum has been the industry's standard dummy text ever
      since the 1500s, when an unknown printer took a galley of type and
      scrambled it to make a type specimen book. It has survived not only five
      centuries, but also the leap into electronic typesetting, remaining
      essentially unchanged. It was popularised in the 1960s with the release
      of Letraset sheets containing Lorem Ipsum passages, and more recently
      with desktop publishing software like Aldus PageMaker including versions
      of Lorem Ipsum."
          index={0}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable shows key and value in row 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue="value"
          index={0}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable shows keys and values for multiple rows 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key1
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key1"
          fieldvalue="value1"
          index={0}
        />
      </span>
    </div>
    <div
      className="row"
      key="1"
    >
      <span
        className="key"
      >
        key2
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key2"
          fieldvalue="[{\\"jsonKey\\":\\"jsonValue2\\"}]"
          index={1}
        />
      </span>
    </div>
    <div
      className="row"
      key="2"
    >
      <span
        className="key"
      >
        key3
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key3"
          fieldvalue="value3"
          index={2}
        />
      </span>
    </div>
    <div
      className="row"
      key="3"
    >
      <span
        className="key"
      >
        key4
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key4"
          fieldvalue="value4"
          index={3}
        />
      </span>
    </div>
    <div
      className="row"
      key="4"
    >
      <span
        className="key"
      >
        key5
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key5"
          fieldvalue="{\\"jsonKey\\":{\\"nestedJsonKey\\":\\"jsonValue\\"}}"
          index={4}
        />
      </span>
    </div>
    <div
      className="row"
      key="5"
    >
      <span
        className="key"
      >
        key6
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key6"
          fieldvalue="value6"
          index={5}
        />
      </span>
    </div>
    <div
      className="row"
      key="6"
    >
      <span
        className="key"
      >
        key6
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key6"
          fieldvalue="value7"
          index={6}
        />
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable shows no rows 1`] = `
<Fragment>
  <div />
</Fragment>
`;

exports[`DetailsTable shows one row 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        <DetailsFieldValue
          fieldname="key"
          fieldvalue="value"
          index={0}
        />
      </span>
    </div>
  </div>
</Fragment>
`;
