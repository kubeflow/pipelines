// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailsTable does not render booleans as JSON 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key1
      </span>
      <span
        className="valueText"
      >
        true
      </span>
    </div>
    <div
      className="row"
      key="1"
    >
      <span
        className="key"
      >
        key2
      </span>
      <span
        className="valueText"
      >
        false
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does not render nulls as JSON 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        null
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does not render numbers as JSON 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        10
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does not render strings as JSON 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        "some string"
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does render arrays as JSON 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <Editor
        cursorStart={1}
        editorProps={Object {}}
        enableBasicAutocompletion={false}
        enableLiveAutocompletion={false}
        enableSnippets={false}
        focus={false}
        fontSize={12}
        height="500px"
        highlightActiveLine={true}
        maxLines={20}
        minLines={3}
        mode="json"
        name="brace-editor"
        navigateToFileEnd={true}
        onChange={null}
        onLoad={null}
        onPaste={null}
        onScroll={null}
        placeholder={null}
        readOnly={true}
        scrollMargin={
          Array [
            0,
            0,
            0,
            0,
          ]
        }
        setOptions={Object {}}
        showGutter={true}
        showPrintMargin={true}
        style={Object {}}
        tabSize={4}
        theme="github"
        value="[]"
        width="100%"
        wrapEnabled={false}
      />
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable does render arrays as JSON 2`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <Editor
        cursorStart={1}
        editorProps={Object {}}
        enableBasicAutocompletion={false}
        enableLiveAutocompletion={false}
        enableSnippets={false}
        focus={false}
        fontSize={12}
        height="500px"
        highlightActiveLine={true}
        maxLines={20}
        minLines={3}
        mode="json"
        name="brace-editor"
        navigateToFileEnd={true}
        onChange={null}
        onLoad={null}
        onPaste={null}
        onScroll={null}
        placeholder={null}
        readOnly={true}
        scrollMargin={
          Array [
            0,
            0,
            0,
            0,
          ]
        }
        setOptions={Object {}}
        showGutter={true}
        showPrintMargin={true}
        style={Object {}}
        tabSize={4}
        theme="github"
        value="{}"
        width="100%"
        wrapEnabled={false}
      />
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable shows a row with a title 1`] = `
<Fragment>
  <div
    className="header"
  >
    some title
  </div>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        value
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable shows key and JSON value in row 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <Editor
        cursorStart={1}
        editorProps={Object {}}
        enableBasicAutocompletion={false}
        enableLiveAutocompletion={false}
        enableSnippets={false}
        focus={false}
        fontSize={12}
        height="500px"
        highlightActiveLine={true}
        maxLines={20}
        minLines={3}
        mode="json"
        name="brace-editor"
        navigateToFileEnd={true}
        onChange={null}
        onLoad={null}
        onPaste={null}
        onScroll={null}
        placeholder={null}
        readOnly={true}
        scrollMargin={
          Array [
            0,
            0,
            0,
            0,
          ]
        }
        setOptions={Object {}}
        showGutter={true}
        showPrintMargin={true}
        style={Object {}}
        tabSize={4}
        theme="github"
        value="[
  {
    \\"jsonKey\\": \\"jsonValue\\"
  }
]"
        width="100%"
        wrapEnabled={false}
      />
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable shows key and value for large values 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        Lorem Ipsum is simply dummy text of the printing and typesetting
      industry. Lorem Ipsum has been the industry's standard dummy text ever
      since the 1500s, when an unknown printer took a galley of type and
      scrambled it to make a type specimen book. It has survived not only five
      centuries, but also the leap into electronic typesetting, remaining
      essentially unchanged. It was popularised in the 1960s with the release
      of Letraset sheets containing Lorem Ipsum passages, and more recently
      with desktop publishing software like Aldus PageMaker including versions
      of Lorem Ipsum.
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable shows key and value in row 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        value
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable shows keys and values for multiple rows 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key1
      </span>
      <span
        className="valueText"
      >
        value1
      </span>
    </div>
    <div
      className="row"
      key="1"
    >
      <span
        className="key"
      >
        key2
      </span>
      <Editor
        cursorStart={1}
        editorProps={Object {}}
        enableBasicAutocompletion={false}
        enableLiveAutocompletion={false}
        enableSnippets={false}
        focus={false}
        fontSize={12}
        height="500px"
        highlightActiveLine={true}
        maxLines={20}
        minLines={3}
        mode="json"
        name="brace-editor"
        navigateToFileEnd={true}
        onChange={null}
        onLoad={null}
        onPaste={null}
        onScroll={null}
        placeholder={null}
        readOnly={true}
        scrollMargin={
          Array [
            0,
            0,
            0,
            0,
          ]
        }
        setOptions={Object {}}
        showGutter={true}
        showPrintMargin={true}
        style={Object {}}
        tabSize={4}
        theme="github"
        value="[
  {
    \\"jsonKey\\": \\"jsonValue2\\"
  }
]"
        width="100%"
        wrapEnabled={false}
      />
    </div>
    <div
      className="row"
      key="2"
    >
      <span
        className="key"
      >
        key3
      </span>
      <span
        className="valueText"
      >
        value3
      </span>
    </div>
    <div
      className="row"
      key="3"
    >
      <span
        className="key"
      >
        key4
      </span>
      <span
        className="valueText"
      >
        value4
      </span>
    </div>
    <div
      className="row"
      key="4"
    >
      <span
        className="key"
      >
        key5
      </span>
      <Editor
        cursorStart={1}
        editorProps={Object {}}
        enableBasicAutocompletion={false}
        enableLiveAutocompletion={false}
        enableSnippets={false}
        focus={false}
        fontSize={12}
        height="500px"
        highlightActiveLine={true}
        maxLines={20}
        minLines={3}
        mode="json"
        name="brace-editor"
        navigateToFileEnd={true}
        onChange={null}
        onLoad={null}
        onPaste={null}
        onScroll={null}
        placeholder={null}
        readOnly={true}
        scrollMargin={
          Array [
            0,
            0,
            0,
            0,
          ]
        }
        setOptions={Object {}}
        showGutter={true}
        showPrintMargin={true}
        style={Object {}}
        tabSize={4}
        theme="github"
        value="{
  \\"jsonKey\\": {
    \\"nestedJsonKey\\": \\"jsonValue\\"
  }
}"
        width="100%"
        wrapEnabled={false}
      />
    </div>
    <div
      className="row"
      key="5"
    >
      <span
        className="key"
      >
        key6
      </span>
      <span
        className="valueText"
      >
        value6
      </span>
    </div>
    <div
      className="row"
      key="6"
    >
      <span
        className="key"
      >
        key6
      </span>
      <span
        className="valueText"
      >
        value7
      </span>
    </div>
  </div>
</Fragment>
`;

exports[`DetailsTable shows no rows 1`] = `
<Fragment>
  <div />
</Fragment>
`;

exports[`DetailsTable shows one row 1`] = `
<Fragment>
  <div>
    <div
      className="row"
      key="0"
    >
      <span
        className="key"
      >
        key
      </span>
      <span
        className="valueText"
      >
        value
      </span>
    </div>
  </div>
</Fragment>
`;
