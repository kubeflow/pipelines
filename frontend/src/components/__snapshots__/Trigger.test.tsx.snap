// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Trigger enables a single day on click 1`] = `
<div>
  <Component
    label="Trigger type"
    onChange={[Function]}
    required={true}
    select={true}
    value={1}
    variant="outlined"
  >
    <WithStyles(MenuItem)
      key="0"
      value={0}
    >
      Periodic
    </WithStyles(MenuItem)>
    <WithStyles(MenuItem)
      key="1"
      value={1}
    >
      Cron
    </WithStyles(MenuItem)>
  </Component>
  <div>
    <Component
      label="Maximum concurrent runs"
      onChange={[Function]}
      required={true}
      value="10"
      variant="outlined"
    />
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has start date"
      />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="Start date"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        value="2018-12-21"
        variant="outlined"
        width={160}
      />
      <Component />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="Start time"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        value="07:53"
        variant="outlined"
        width={120}
      />
    </div>
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has end date"
      />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="End date"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        value="2018-12-21"
        variant="outlined"
        width={160}
      />
      <Component />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="End time"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        value="07:53"
        variant="outlined"
        width={120}
      />
    </div>
    <span
      className="flex"
    >
      Run every
      <Component />
      <Component
        height={30}
        onChange={[Function]}
        required={true}
        select={true}
        value="Week"
        variant="outlined"
        width={95}
      >
        <WithStyles(MenuItem)
          key="0"
          value="Minute"
        >
          Minute
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="Hour"
        >
          Hour
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="2"
          value="Day"
        >
          Day
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="3"
          value="Week"
        >
          Week
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="4"
          value="Month"
        >
          Month
        </WithStyles(MenuItem)>
      </Component>
    </span>
  </div>
  <div>
    <div>
      <span>
        On:
      </span>
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="All"
      />
      <Component />
      <WithStyles(Button)
        color="primary"
        key="0"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="1"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        M
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="2"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="3"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        W
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="4"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="5"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        F
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="6"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
    </div>
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label={
          <span>
            Allow editing cron expression. ( format is specified
             
            <a
              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
            >
              here
            </a>
            )
          </span>
        }
      />
    </div>
    <Component
      disabled={true}
      label="cron expression"
      onChange={[Function]}
      value="0 0 0 ? * 0,2,4,5,6"
      variant="outlined"
      width={300}
    />
    <div>
      Note: Start and end dates/times are handled outside of cron.
    </div>
  </div>
</div>
`;

exports[`Trigger renders all week days enabled 1`] = `
<div>
  <Component
    label="Trigger type"
    onChange={[Function]}
    required={true}
    select={true}
    value={1}
    variant="outlined"
  >
    <WithStyles(MenuItem)
      key="0"
      value={0}
    >
      Periodic
    </WithStyles(MenuItem)>
    <WithStyles(MenuItem)
      key="1"
      value={1}
    >
      Cron
    </WithStyles(MenuItem)>
  </Component>
  <div>
    <Component
      label="Maximum concurrent runs"
      onChange={[Function]}
      required={true}
      value="10"
      variant="outlined"
    />
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has start date"
      />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="Start date"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        value="2018-12-21"
        variant="outlined"
        width={160}
      />
      <Component />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="Start time"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        value="07:53"
        variant="outlined"
        width={120}
      />
    </div>
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has end date"
      />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="End date"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        value="2018-12-21"
        variant="outlined"
        width={160}
      />
      <Component />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="End time"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        value="07:53"
        variant="outlined"
        width={120}
      />
    </div>
    <span
      className="flex"
    >
      Run every
      <Component />
      <Component
        height={30}
        onChange={[Function]}
        required={true}
        select={true}
        value="Week"
        variant="outlined"
        width={95}
      >
        <WithStyles(MenuItem)
          key="0"
          value="Minute"
        >
          Minute
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="Hour"
        >
          Hour
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="2"
          value="Day"
        >
          Day
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="3"
          value="Week"
        >
          Week
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="4"
          value="Month"
        >
          Month
        </WithStyles(MenuItem)>
      </Component>
    </span>
  </div>
  <div>
    <div>
      <span>
        On:
      </span>
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="All"
      />
      <Component />
      <WithStyles(Button)
        color="secondary"
        key="0"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="1"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        M
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="2"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="3"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        W
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="4"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="5"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        F
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="6"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
    </div>
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label={
          <span>
            Allow editing cron expression. ( format is specified
             
            <a
              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
            >
              here
            </a>
            )
          </span>
        }
      />
    </div>
    <Component
      disabled={true}
      label="cron expression"
      onChange={[Function]}
      value="0 0 0 ? *"
      variant="outlined"
      width={300}
    />
    <div>
      Note: Start and end dates/times are handled outside of cron.
    </div>
  </div>
</div>
`;

exports[`Trigger renders periodic schedule controls for initial render 1`] = `
<div>
  <Component
    label="Trigger type"
    onChange={[Function]}
    required={true}
    select={true}
    value={0}
    variant="outlined"
  >
    <WithStyles(MenuItem)
      key="0"
      value={0}
    >
      Periodic
    </WithStyles(MenuItem)>
    <WithStyles(MenuItem)
      key="1"
      value={1}
    >
      Cron
    </WithStyles(MenuItem)>
  </Component>
  <div>
    <Component
      label="Maximum concurrent runs"
      onChange={[Function]}
      required={true}
      value="10"
      variant="outlined"
    />
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has start date"
      />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="Start date"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        value="2018-12-21"
        variant="outlined"
        width={160}
      />
      <Component />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="Start time"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        value="07:53"
        variant="outlined"
        width={120}
      />
    </div>
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has end date"
      />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="End date"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        value="2018-12-21"
        variant="outlined"
        width={160}
      />
      <Component />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="End time"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        value="07:53"
        variant="outlined"
        width={120}
      />
    </div>
    <span
      className="flex"
    >
      Run every
      <div
        className="flex"
      >
        <Component />
        <Component
          error={false}
          height={30}
          onChange={[Function]}
          required={true}
          type="number"
          value={1}
          variant="outlined"
          width={65}
        />
      </div>
      <Component />
      <Component
        height={30}
        onChange={[Function]}
        required={true}
        select={true}
        value="Minute"
        variant="outlined"
        width={95}
      >
        <WithStyles(MenuItem)
          key="0"
          value="Minute"
        >
          Minutes
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="Hour"
        >
          Hours
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="2"
          value="Day"
        >
          Days
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="3"
          value="Week"
        >
          Weeks
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="4"
          value="Month"
        >
          Months
        </WithStyles(MenuItem)>
      </Component>
    </span>
  </div>
</div>
`;

exports[`Trigger renders periodic schedule controls if the trigger type is CRON 1`] = `
<div>
  <Component
    label="Trigger type"
    onChange={[Function]}
    required={true}
    select={true}
    value={1}
    variant="outlined"
  >
    <WithStyles(MenuItem)
      key="0"
      value={0}
    >
      Periodic
    </WithStyles(MenuItem)>
    <WithStyles(MenuItem)
      key="1"
      value={1}
    >
      Cron
    </WithStyles(MenuItem)>
  </Component>
  <div>
    <Component
      label="Maximum concurrent runs"
      onChange={[Function]}
      required={true}
      value="10"
      variant="outlined"
    />
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has start date"
      />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="Start date"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        value="2018-12-21"
        variant="outlined"
        width={160}
      />
      <Component />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="Start time"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        value="07:53"
        variant="outlined"
        width={120}
      />
    </div>
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has end date"
      />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="End date"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        value="2018-12-21"
        variant="outlined"
        width={160}
      />
      <Component />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="End time"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        value="07:53"
        variant="outlined"
        width={120}
      />
    </div>
    <span
      className="flex"
    >
      Run every
      <Component />
      <Component
        height={30}
        onChange={[Function]}
        required={true}
        select={true}
        value="Minute"
        variant="outlined"
        width={95}
      >
        <WithStyles(MenuItem)
          key="0"
          value="Minute"
        >
          Minute
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="Hour"
        >
          Hour
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="2"
          value="Day"
        >
          Day
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="3"
          value="Week"
        >
          Week
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="4"
          value="Month"
        >
          Month
        </WithStyles(MenuItem)>
      </Component>
    </span>
  </div>
  <div>
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label={
          <span>
            Allow editing cron expression. ( format is specified
             
            <a
              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
            >
              here
            </a>
            )
          </span>
        }
      />
    </div>
    <Component
      disabled={true}
      label="cron expression"
      onChange={[Function]}
      value="0 * * * * ?"
      variant="outlined"
      width={300}
    />
    <div>
      Note: Start and end dates/times are handled outside of cron.
    </div>
  </div>
</div>
`;

exports[`Trigger renders week days if the trigger type is CRON and interval is weekly 1`] = `
<div>
  <Component
    label="Trigger type"
    onChange={[Function]}
    required={true}
    select={true}
    value={1}
    variant="outlined"
  >
    <WithStyles(MenuItem)
      key="0"
      value={0}
    >
      Periodic
    </WithStyles(MenuItem)>
    <WithStyles(MenuItem)
      key="1"
      value={1}
    >
      Cron
    </WithStyles(MenuItem)>
  </Component>
  <div>
    <Component
      label="Maximum concurrent runs"
      onChange={[Function]}
      required={true}
      value="10"
      variant="outlined"
    />
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has start date"
      />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="Start date"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        value="2018-12-21"
        variant="outlined"
        width={160}
      />
      <Component />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="Start time"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        value="07:53"
        variant="outlined"
        width={120}
      />
    </div>
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has end date"
      />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="End date"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        value="2018-12-21"
        variant="outlined"
        width={160}
      />
      <Component />
      <Component
        InputLabelProps={
          Object {
            "classes": Object {
              "outlined": "noMargin",
            },
            "shrink": true,
          }
        }
        label="End time"
        onChange={[Function]}
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        value="07:53"
        variant="outlined"
        width={120}
      />
    </div>
    <span
      className="flex"
    >
      Run every
      <Component />
      <Component
        height={30}
        onChange={[Function]}
        required={true}
        select={true}
        value="Week"
        variant="outlined"
        width={95}
      >
        <WithStyles(MenuItem)
          key="0"
          value="Minute"
        >
          Minute
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="Hour"
        >
          Hour
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="2"
          value="Day"
        >
          Day
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="3"
          value="Week"
        >
          Week
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="4"
          value="Month"
        >
          Month
        </WithStyles(MenuItem)>
      </Component>
    </span>
  </div>
  <div>
    <div>
      <span>
        On:
      </span>
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={true}
            color="primary"
            onClick={[Function]}
          />
        }
        label="All"
      />
      <Component />
      <WithStyles(Button)
        color="primary"
        key="0"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="1"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        M
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="2"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="3"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        W
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="4"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="5"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        F
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="6"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
    </div>
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label={
          <span>
            Allow editing cron expression. ( format is specified
             
            <a
              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
            >
              here
            </a>
            )
          </span>
        }
      />
    </div>
    <Component
      disabled={true}
      label="cron expression"
      onChange={[Function]}
      value="0 0 0 ? * *"
      variant="outlined"
      width={300}
    />
    <div>
      Note: Start and end dates/times are handled outside of cron.
    </div>
  </div>
</div>
`;
