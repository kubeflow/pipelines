// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Trigger enables a single day on click 1`] = `
<div>
  <Component
    field="type"
    instance={
      Trigger {
        "context": Object {},
        "handleChange": [Function],
        "props": Object {},
        "refs": Object {},
        "setState": [Function],
        "state": Object {
          "cron": "0 0 0 ? * 0,2,4,5,6",
          "editCron": false,
          "endDate": "2018-12-21",
          "endTime": "07:53",
          "hasEndDate": false,
          "hasStartDate": false,
          "intervalCategory": "Week",
          "intervalValue": 1,
          "maxConcurrentRuns": "10",
          "selectedDays": Array [
            true,
            false,
            true,
            false,
            true,
            true,
            true,
          ],
          "startDate": "2018-12-21",
          "startTime": "07:53",
          "type": 1,
        },
        "updater": Updater {
          "_callbacks": Array [],
          "_renderer": ReactShallowRenderer {
            "_context": Object {},
            "_element": <Trigger />,
            "_forcedUpdate": false,
            "_instance": [Circular],
            "_newState": Object {
              "cron": "0 0 0 ? * 0,2,4,5,6",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                false,
                true,
                false,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "_rendered": <div>
              <Unknown
                field="type"
                instance={[Circular]}
                label="Trigger type"
                required={true}
                select={true}
              >
                <WithStyles(MenuItem)
                  value={0}
                >
                  Periodic
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value={1}
                >
                  Cron
                </WithStyles(MenuItem)>
              </Unknown>
              <div>
                <Unknown
                  field="maxConcurrentRuns"
                  instance={[Circular]}
                  label="Maximum concurrent runs"
                  required={true}
                />
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="Has start date"
                  />
                  <Unknown
                    field="startDate"
                    instance={[Circular]}
                    label="Start date"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="date"
                    width={160}
                  />
                  <Unknown />
                  <Unknown
                    field="startTime"
                    instance={[Circular]}
                    label="Start time"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="time"
                    width={120}
                  />
                </div>
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="Has end date"
                  />
                  <Unknown
                    field="endDate"
                    instance={[Circular]}
                    label="End date"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="date"
                    width={160}
                  />
                  <Unknown />
                  <Unknown
                    field="endTime"
                    instance={[Circular]}
                    label="End time"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="time"
                    width={120}
                  />
                </div>
                <span
                  className="flex"
                >
                  Run every
                  <Unknown />
                  <Unknown
                    field="intervalCategory"
                    height={30}
                    instance={[Circular]}
                    required={true}
                    select={true}
                    width={95}
                  >
                    <WithStyles(MenuItem)
                      value="Minute"
                    >
                      Minute
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Hour"
                    >
                      Hour
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Day"
                    >
                      Day
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Week"
                    >
                      Week
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Month"
                    >
                      Month
                    </WithStyles(MenuItem)>
                  </Unknown>
                </span>
              </div>
              <div>
                <div>
                  <span>
                    On:
                  </span>
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="All"
                  />
                  <Unknown />
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    S
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="secondary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    M
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    T
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="secondary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    W
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    T
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    F
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    S
                  </WithStyles(Button)>
                </div>
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label={
                      <span>
                        Allow editing cron expression. ( format is specified 
                        <a
                          href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                        >
                          here
                        </a>
                        )
                      </span>
                    }
                  />
                </div>
                <Unknown
                  disabled={true}
                  field="cron"
                  instance={[Circular]}
                  label="cron expression"
                  onChange={[Function]}
                  width={300}
                />
                <div>
                  Note: Start and end dates/times are handled outside of cron.
                </div>
              </div>
            </div>,
            "_rendering": false,
            "_updater": [Circular],
          },
        },
        Symbol(enzyme.__setState__): [Function],
      }
    }
    label="Trigger type"
    required={true}
    select={true}
  >
    <WithStyles(MenuItem)
      key="0"
      value={0}
    >
      Periodic
    </WithStyles(MenuItem)>
    <WithStyles(MenuItem)
      key="1"
      value={1}
    >
      Cron
    </WithStyles(MenuItem)>
  </Component>
  <div>
    <Component
      field="maxConcurrentRuns"
      instance={
        Trigger {
          "context": Object {},
          "handleChange": [Function],
          "props": Object {},
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "cron": "0 0 0 ? * 0,2,4,5,6",
            "editCron": false,
            "endDate": "2018-12-21",
            "endTime": "07:53",
            "hasEndDate": false,
            "hasStartDate": false,
            "intervalCategory": "Week",
            "intervalValue": 1,
            "maxConcurrentRuns": "10",
            "selectedDays": Array [
              true,
              false,
              true,
              false,
              true,
              true,
              true,
            ],
            "startDate": "2018-12-21",
            "startTime": "07:53",
            "type": 1,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_element": <Trigger />,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_newState": Object {
                "cron": "0 0 0 ? * 0,2,4,5,6",
                "editCron": false,
                "endDate": "2018-12-21",
                "endTime": "07:53",
                "hasEndDate": false,
                "hasStartDate": false,
                "intervalCategory": "Week",
                "intervalValue": 1,
                "maxConcurrentRuns": "10",
                "selectedDays": Array [
                  true,
                  false,
                  true,
                  false,
                  true,
                  true,
                  true,
                ],
                "startDate": "2018-12-21",
                "startTime": "07:53",
                "type": 1,
              },
              "_rendered": <div>
                <Unknown
                  field="type"
                  instance={[Circular]}
                  label="Trigger type"
                  required={true}
                  select={true}
                >
                  <WithStyles(MenuItem)
                    value={0}
                  >
                    Periodic
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value={1}
                  >
                    Cron
                  </WithStyles(MenuItem)>
                </Unknown>
                <div>
                  <Unknown
                    field="maxConcurrentRuns"
                    instance={[Circular]}
                    label="Maximum concurrent runs"
                    required={true}
                  />
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has start date"
                    />
                    <Unknown
                      field="startDate"
                      instance={[Circular]}
                      label="Start date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="startTime"
                      instance={[Circular]}
                      label="Start time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has end date"
                    />
                    <Unknown
                      field="endDate"
                      instance={[Circular]}
                      label="End date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="endTime"
                      instance={[Circular]}
                      label="End time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <span
                    className="flex"
                  >
                    Run every
                    <Unknown />
                    <Unknown
                      field="intervalCategory"
                      height={30}
                      instance={[Circular]}
                      required={true}
                      select={true}
                      width={95}
                    >
                      <WithStyles(MenuItem)
                        value="Minute"
                      >
                        Minute
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Hour"
                      >
                        Hour
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Day"
                      >
                        Day
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Week"
                      >
                        Week
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Month"
                      >
                        Month
                      </WithStyles(MenuItem)>
                    </Unknown>
                  </span>
                </div>
                <div>
                  <div>
                    <span>
                      On:
                    </span>
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="All"
                    />
                    <Unknown />
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      M
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      W
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      F
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label={
                        <span>
                          Allow editing cron expression. ( format is specified 
                          <a
                            href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                          >
                            here
                          </a>
                          )
                        </span>
                      }
                    />
                  </div>
                  <Unknown
                    disabled={true}
                    field="cron"
                    instance={[Circular]}
                    label="cron expression"
                    onChange={[Function]}
                    width={300}
                  />
                  <div>
                    Note: Start and end dates/times are handled outside of cron.
                  </div>
                </div>
              </div>,
              "_rendering": false,
              "_updater": [Circular],
            },
          },
          Symbol(enzyme.__setState__): [Function],
        }
      }
      label="Maximum concurrent runs"
      required={true}
    />
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has start date"
      />
      <Component
        field="startDate"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? * 0,2,4,5,6",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                false,
                true,
                false,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? * 0,2,4,5,6",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    false,
                    true,
                    false,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="Start date"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        width={160}
      />
      <Component />
      <Component
        field="startTime"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? * 0,2,4,5,6",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                false,
                true,
                false,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? * 0,2,4,5,6",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    false,
                    true,
                    false,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="Start time"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        width={120}
      />
    </div>
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has end date"
      />
      <Component
        field="endDate"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? * 0,2,4,5,6",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                false,
                true,
                false,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? * 0,2,4,5,6",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    false,
                    true,
                    false,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="End date"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        width={160}
      />
      <Component />
      <Component
        field="endTime"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? * 0,2,4,5,6",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                false,
                true,
                false,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? * 0,2,4,5,6",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    false,
                    true,
                    false,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="End time"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        width={120}
      />
    </div>
    <span
      className="flex"
    >
      Run every
      <Component />
      <Component
        field="intervalCategory"
        height={30}
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? * 0,2,4,5,6",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                false,
                true,
                false,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? * 0,2,4,5,6",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    false,
                    true,
                    false,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        required={true}
        select={true}
        width={95}
      >
        <WithStyles(MenuItem)
          key="0"
          value="Minute"
        >
          Minute
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="Hour"
        >
          Hour
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="2"
          value="Day"
        >
          Day
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="3"
          value="Week"
        >
          Week
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="4"
          value="Month"
        >
          Month
        </WithStyles(MenuItem)>
      </Component>
    </span>
  </div>
  <div>
    <div>
      <span>
        On:
      </span>
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="All"
      />
      <Component />
      <WithStyles(Button)
        color="primary"
        key="0"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="1"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        M
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="2"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="3"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        W
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="4"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="5"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        F
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="6"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
    </div>
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label={
          <span>
            Allow editing cron expression. ( format is specified 
            <a
              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
            >
              here
            </a>
            )
          </span>
        }
      />
    </div>
    <Component
      disabled={true}
      field="cron"
      instance={
        Trigger {
          "context": Object {},
          "handleChange": [Function],
          "props": Object {},
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "cron": "0 0 0 ? * 0,2,4,5,6",
            "editCron": false,
            "endDate": "2018-12-21",
            "endTime": "07:53",
            "hasEndDate": false,
            "hasStartDate": false,
            "intervalCategory": "Week",
            "intervalValue": 1,
            "maxConcurrentRuns": "10",
            "selectedDays": Array [
              true,
              false,
              true,
              false,
              true,
              true,
              true,
            ],
            "startDate": "2018-12-21",
            "startTime": "07:53",
            "type": 1,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_element": <Trigger />,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_newState": Object {
                "cron": "0 0 0 ? * 0,2,4,5,6",
                "editCron": false,
                "endDate": "2018-12-21",
                "endTime": "07:53",
                "hasEndDate": false,
                "hasStartDate": false,
                "intervalCategory": "Week",
                "intervalValue": 1,
                "maxConcurrentRuns": "10",
                "selectedDays": Array [
                  true,
                  false,
                  true,
                  false,
                  true,
                  true,
                  true,
                ],
                "startDate": "2018-12-21",
                "startTime": "07:53",
                "type": 1,
              },
              "_rendered": <div>
                <Unknown
                  field="type"
                  instance={[Circular]}
                  label="Trigger type"
                  required={true}
                  select={true}
                >
                  <WithStyles(MenuItem)
                    value={0}
                  >
                    Periodic
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value={1}
                  >
                    Cron
                  </WithStyles(MenuItem)>
                </Unknown>
                <div>
                  <Unknown
                    field="maxConcurrentRuns"
                    instance={[Circular]}
                    label="Maximum concurrent runs"
                    required={true}
                  />
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has start date"
                    />
                    <Unknown
                      field="startDate"
                      instance={[Circular]}
                      label="Start date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="startTime"
                      instance={[Circular]}
                      label="Start time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has end date"
                    />
                    <Unknown
                      field="endDate"
                      instance={[Circular]}
                      label="End date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="endTime"
                      instance={[Circular]}
                      label="End time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <span
                    className="flex"
                  >
                    Run every
                    <Unknown />
                    <Unknown
                      field="intervalCategory"
                      height={30}
                      instance={[Circular]}
                      required={true}
                      select={true}
                      width={95}
                    >
                      <WithStyles(MenuItem)
                        value="Minute"
                      >
                        Minute
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Hour"
                      >
                        Hour
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Day"
                      >
                        Day
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Week"
                      >
                        Week
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Month"
                      >
                        Month
                      </WithStyles(MenuItem)>
                    </Unknown>
                  </span>
                </div>
                <div>
                  <div>
                    <span>
                      On:
                    </span>
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="All"
                    />
                    <Unknown />
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      M
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      W
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      F
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label={
                        <span>
                          Allow editing cron expression. ( format is specified 
                          <a
                            href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                          >
                            here
                          </a>
                          )
                        </span>
                      }
                    />
                  </div>
                  <Unknown
                    disabled={true}
                    field="cron"
                    instance={[Circular]}
                    label="cron expression"
                    onChange={[Function]}
                    width={300}
                  />
                  <div>
                    Note: Start and end dates/times are handled outside of cron.
                  </div>
                </div>
              </div>,
              "_rendering": false,
              "_updater": [Circular],
            },
          },
          Symbol(enzyme.__setState__): [Function],
        }
      }
      label="cron expression"
      onChange={[Function]}
      width={300}
    />
    <div>
      Note: Start and end dates/times are handled outside of cron.
    </div>
  </div>
</div>
`;

exports[`Trigger renders all week days enabled 1`] = `
<div>
  <Component
    field="type"
    instance={
      Trigger {
        "context": Object {},
        "handleChange": [Function],
        "props": Object {},
        "refs": Object {},
        "setState": [Function],
        "state": Object {
          "cron": "0 0 0 ? *",
          "editCron": false,
          "endDate": "2018-12-21",
          "endTime": "07:53",
          "hasEndDate": false,
          "hasStartDate": false,
          "intervalCategory": "Week",
          "intervalValue": 1,
          "maxConcurrentRuns": "10",
          "selectedDays": Array [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
          ],
          "startDate": "2018-12-21",
          "startTime": "07:53",
          "type": 1,
        },
        "updater": Updater {
          "_callbacks": Array [],
          "_renderer": ReactShallowRenderer {
            "_context": Object {},
            "_element": <Trigger />,
            "_forcedUpdate": false,
            "_instance": [Circular],
            "_newState": Object {
              "cron": "0 0 0 ? *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                false,
                false,
                false,
                false,
                false,
                false,
                false,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "_rendered": <div>
              <Unknown
                field="type"
                instance={[Circular]}
                label="Trigger type"
                required={true}
                select={true}
              >
                <WithStyles(MenuItem)
                  value={0}
                >
                  Periodic
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value={1}
                >
                  Cron
                </WithStyles(MenuItem)>
              </Unknown>
              <div>
                <Unknown
                  field="maxConcurrentRuns"
                  instance={[Circular]}
                  label="Maximum concurrent runs"
                  required={true}
                />
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="Has start date"
                  />
                  <Unknown
                    field="startDate"
                    instance={[Circular]}
                    label="Start date"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="date"
                    width={160}
                  />
                  <Unknown />
                  <Unknown
                    field="startTime"
                    instance={[Circular]}
                    label="Start time"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="time"
                    width={120}
                  />
                </div>
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="Has end date"
                  />
                  <Unknown
                    field="endDate"
                    instance={[Circular]}
                    label="End date"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="date"
                    width={160}
                  />
                  <Unknown />
                  <Unknown
                    field="endTime"
                    instance={[Circular]}
                    label="End time"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="time"
                    width={120}
                  />
                </div>
                <span
                  className="flex"
                >
                  Run every
                  <Unknown />
                  <Unknown
                    field="intervalCategory"
                    height={30}
                    instance={[Circular]}
                    required={true}
                    select={true}
                    width={95}
                  >
                    <WithStyles(MenuItem)
                      value="Minute"
                    >
                      Minute
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Hour"
                    >
                      Hour
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Day"
                    >
                      Day
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Week"
                    >
                      Week
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Month"
                    >
                      Month
                    </WithStyles(MenuItem)>
                  </Unknown>
                </span>
              </div>
              <div>
                <div>
                  <span>
                    On:
                  </span>
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="All"
                  />
                  <Unknown />
                  <WithStyles(Button)
                    color="secondary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    S
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="secondary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    M
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="secondary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    T
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="secondary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    W
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="secondary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    T
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="secondary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    F
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="secondary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    S
                  </WithStyles(Button)>
                </div>
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label={
                      <span>
                        Allow editing cron expression. ( format is specified 
                        <a
                          href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                        >
                          here
                        </a>
                        )
                      </span>
                    }
                  />
                </div>
                <Unknown
                  disabled={true}
                  field="cron"
                  instance={[Circular]}
                  label="cron expression"
                  onChange={[Function]}
                  width={300}
                />
                <div>
                  Note: Start and end dates/times are handled outside of cron.
                </div>
              </div>
            </div>,
            "_rendering": false,
            "_updater": [Circular],
          },
        },
        Symbol(enzyme.__setState__): [Function],
      }
    }
    label="Trigger type"
    required={true}
    select={true}
  >
    <WithStyles(MenuItem)
      key="0"
      value={0}
    >
      Periodic
    </WithStyles(MenuItem)>
    <WithStyles(MenuItem)
      key="1"
      value={1}
    >
      Cron
    </WithStyles(MenuItem)>
  </Component>
  <div>
    <Component
      field="maxConcurrentRuns"
      instance={
        Trigger {
          "context": Object {},
          "handleChange": [Function],
          "props": Object {},
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "cron": "0 0 0 ? *",
            "editCron": false,
            "endDate": "2018-12-21",
            "endTime": "07:53",
            "hasEndDate": false,
            "hasStartDate": false,
            "intervalCategory": "Week",
            "intervalValue": 1,
            "maxConcurrentRuns": "10",
            "selectedDays": Array [
              false,
              false,
              false,
              false,
              false,
              false,
              false,
            ],
            "startDate": "2018-12-21",
            "startTime": "07:53",
            "type": 1,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_element": <Trigger />,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_newState": Object {
                "cron": "0 0 0 ? *",
                "editCron": false,
                "endDate": "2018-12-21",
                "endTime": "07:53",
                "hasEndDate": false,
                "hasStartDate": false,
                "intervalCategory": "Week",
                "intervalValue": 1,
                "maxConcurrentRuns": "10",
                "selectedDays": Array [
                  false,
                  false,
                  false,
                  false,
                  false,
                  false,
                  false,
                ],
                "startDate": "2018-12-21",
                "startTime": "07:53",
                "type": 1,
              },
              "_rendered": <div>
                <Unknown
                  field="type"
                  instance={[Circular]}
                  label="Trigger type"
                  required={true}
                  select={true}
                >
                  <WithStyles(MenuItem)
                    value={0}
                  >
                    Periodic
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value={1}
                  >
                    Cron
                  </WithStyles(MenuItem)>
                </Unknown>
                <div>
                  <Unknown
                    field="maxConcurrentRuns"
                    instance={[Circular]}
                    label="Maximum concurrent runs"
                    required={true}
                  />
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has start date"
                    />
                    <Unknown
                      field="startDate"
                      instance={[Circular]}
                      label="Start date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="startTime"
                      instance={[Circular]}
                      label="Start time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has end date"
                    />
                    <Unknown
                      field="endDate"
                      instance={[Circular]}
                      label="End date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="endTime"
                      instance={[Circular]}
                      label="End time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <span
                    className="flex"
                  >
                    Run every
                    <Unknown />
                    <Unknown
                      field="intervalCategory"
                      height={30}
                      instance={[Circular]}
                      required={true}
                      select={true}
                      width={95}
                    >
                      <WithStyles(MenuItem)
                        value="Minute"
                      >
                        Minute
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Hour"
                      >
                        Hour
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Day"
                      >
                        Day
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Week"
                      >
                        Week
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Month"
                      >
                        Month
                      </WithStyles(MenuItem)>
                    </Unknown>
                  </span>
                </div>
                <div>
                  <div>
                    <span>
                      On:
                    </span>
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="All"
                    />
                    <Unknown />
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      M
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      W
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      F
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label={
                        <span>
                          Allow editing cron expression. ( format is specified 
                          <a
                            href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                          >
                            here
                          </a>
                          )
                        </span>
                      }
                    />
                  </div>
                  <Unknown
                    disabled={true}
                    field="cron"
                    instance={[Circular]}
                    label="cron expression"
                    onChange={[Function]}
                    width={300}
                  />
                  <div>
                    Note: Start and end dates/times are handled outside of cron.
                  </div>
                </div>
              </div>,
              "_rendering": false,
              "_updater": [Circular],
            },
          },
          Symbol(enzyme.__setState__): [Function],
        }
      }
      label="Maximum concurrent runs"
      required={true}
    />
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has start date"
      />
      <Component
        field="startDate"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                false,
                false,
                false,
                false,
                false,
                false,
                false,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? *",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="Start date"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        width={160}
      />
      <Component />
      <Component
        field="startTime"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                false,
                false,
                false,
                false,
                false,
                false,
                false,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? *",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="Start time"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        width={120}
      />
    </div>
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has end date"
      />
      <Component
        field="endDate"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                false,
                false,
                false,
                false,
                false,
                false,
                false,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? *",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="End date"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        width={160}
      />
      <Component />
      <Component
        field="endTime"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                false,
                false,
                false,
                false,
                false,
                false,
                false,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? *",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="End time"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        width={120}
      />
    </div>
    <span
      className="flex"
    >
      Run every
      <Component />
      <Component
        field="intervalCategory"
        height={30}
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                false,
                false,
                false,
                false,
                false,
                false,
                false,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? *",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="secondary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        required={true}
        select={true}
        width={95}
      >
        <WithStyles(MenuItem)
          key="0"
          value="Minute"
        >
          Minute
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="Hour"
        >
          Hour
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="2"
          value="Day"
        >
          Day
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="3"
          value="Week"
        >
          Week
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="4"
          value="Month"
        >
          Month
        </WithStyles(MenuItem)>
      </Component>
    </span>
  </div>
  <div>
    <div>
      <span>
        On:
      </span>
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="All"
      />
      <Component />
      <WithStyles(Button)
        color="secondary"
        key="0"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="1"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        M
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="2"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="3"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        W
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="4"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="5"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        F
      </WithStyles(Button)>
      <WithStyles(Button)
        color="secondary"
        key="6"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
    </div>
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label={
          <span>
            Allow editing cron expression. ( format is specified 
            <a
              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
            >
              here
            </a>
            )
          </span>
        }
      />
    </div>
    <Component
      disabled={true}
      field="cron"
      instance={
        Trigger {
          "context": Object {},
          "handleChange": [Function],
          "props": Object {},
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "cron": "0 0 0 ? *",
            "editCron": false,
            "endDate": "2018-12-21",
            "endTime": "07:53",
            "hasEndDate": false,
            "hasStartDate": false,
            "intervalCategory": "Week",
            "intervalValue": 1,
            "maxConcurrentRuns": "10",
            "selectedDays": Array [
              false,
              false,
              false,
              false,
              false,
              false,
              false,
            ],
            "startDate": "2018-12-21",
            "startTime": "07:53",
            "type": 1,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_element": <Trigger />,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_newState": Object {
                "cron": "0 0 0 ? *",
                "editCron": false,
                "endDate": "2018-12-21",
                "endTime": "07:53",
                "hasEndDate": false,
                "hasStartDate": false,
                "intervalCategory": "Week",
                "intervalValue": 1,
                "maxConcurrentRuns": "10",
                "selectedDays": Array [
                  false,
                  false,
                  false,
                  false,
                  false,
                  false,
                  false,
                ],
                "startDate": "2018-12-21",
                "startTime": "07:53",
                "type": 1,
              },
              "_rendered": <div>
                <Unknown
                  field="type"
                  instance={[Circular]}
                  label="Trigger type"
                  required={true}
                  select={true}
                >
                  <WithStyles(MenuItem)
                    value={0}
                  >
                    Periodic
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value={1}
                  >
                    Cron
                  </WithStyles(MenuItem)>
                </Unknown>
                <div>
                  <Unknown
                    field="maxConcurrentRuns"
                    instance={[Circular]}
                    label="Maximum concurrent runs"
                    required={true}
                  />
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has start date"
                    />
                    <Unknown
                      field="startDate"
                      instance={[Circular]}
                      label="Start date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="startTime"
                      instance={[Circular]}
                      label="Start time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has end date"
                    />
                    <Unknown
                      field="endDate"
                      instance={[Circular]}
                      label="End date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="endTime"
                      instance={[Circular]}
                      label="End time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <span
                    className="flex"
                  >
                    Run every
                    <Unknown />
                    <Unknown
                      field="intervalCategory"
                      height={30}
                      instance={[Circular]}
                      required={true}
                      select={true}
                      width={95}
                    >
                      <WithStyles(MenuItem)
                        value="Minute"
                      >
                        Minute
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Hour"
                      >
                        Hour
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Day"
                      >
                        Day
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Week"
                      >
                        Week
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Month"
                      >
                        Month
                      </WithStyles(MenuItem)>
                    </Unknown>
                  </span>
                </div>
                <div>
                  <div>
                    <span>
                      On:
                    </span>
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="All"
                    />
                    <Unknown />
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      M
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      W
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      F
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="secondary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label={
                        <span>
                          Allow editing cron expression. ( format is specified 
                          <a
                            href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                          >
                            here
                          </a>
                          )
                        </span>
                      }
                    />
                  </div>
                  <Unknown
                    disabled={true}
                    field="cron"
                    instance={[Circular]}
                    label="cron expression"
                    onChange={[Function]}
                    width={300}
                  />
                  <div>
                    Note: Start and end dates/times are handled outside of cron.
                  </div>
                </div>
              </div>,
              "_rendering": false,
              "_updater": [Circular],
            },
          },
          Symbol(enzyme.__setState__): [Function],
        }
      }
      label="cron expression"
      onChange={[Function]}
      width={300}
    />
    <div>
      Note: Start and end dates/times are handled outside of cron.
    </div>
  </div>
</div>
`;

exports[`Trigger renders periodic schedule controls for initial render 1`] = `
<div>
  <Component
    field="type"
    instance={
      Trigger {
        "context": Object {},
        "handleChange": [Function],
        "props": Object {},
        "refs": Object {},
        "setState": [Function],
        "state": Object {
          "cron": "0 * * * * ?",
          "editCron": false,
          "endDate": "2018-12-21",
          "endTime": "07:53",
          "hasEndDate": false,
          "hasStartDate": false,
          "intervalCategory": "Minute",
          "intervalValue": 1,
          "maxConcurrentRuns": "10",
          "selectedDays": Array [
            true,
            true,
            true,
            true,
            true,
            true,
            true,
          ],
          "startDate": "2018-12-21",
          "startTime": "07:53",
          "type": 0,
        },
        "updater": Updater {
          "_callbacks": Array [],
          "_renderer": ReactShallowRenderer {
            "_context": Object {},
            "_element": <Trigger />,
            "_forcedUpdate": false,
            "_instance": [Circular],
            "_newState": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 0,
            },
            "_rendered": <div>
              <Unknown
                field="type"
                instance={[Circular]}
                label="Trigger type"
                required={true}
                select={true}
              >
                <WithStyles(MenuItem)
                  value={0}
                >
                  Periodic
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value={1}
                >
                  Cron
                </WithStyles(MenuItem)>
              </Unknown>
              <div>
                <Unknown
                  field="maxConcurrentRuns"
                  instance={[Circular]}
                  label="Maximum concurrent runs"
                  required={true}
                />
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="Has start date"
                  />
                  <Unknown
                    field="startDate"
                    instance={[Circular]}
                    label="Start date"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="date"
                    width={160}
                  />
                  <Unknown />
                  <Unknown
                    field="startTime"
                    instance={[Circular]}
                    label="Start time"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="time"
                    width={120}
                  />
                </div>
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="Has end date"
                  />
                  <Unknown
                    field="endDate"
                    instance={[Circular]}
                    label="End date"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="date"
                    width={160}
                  />
                  <Unknown />
                  <Unknown
                    field="endTime"
                    instance={[Circular]}
                    label="End time"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="time"
                    width={120}
                  />
                </div>
                <span
                  className="flex"
                >
                  Run every
                  <div
                    className="flex"
                  >
                    <Unknown />
                    <Unknown
                      error={false}
                      field="intervalValue"
                      height={30}
                      instance={[Circular]}
                      required={true}
                      type="number"
                      width={65}
                    />
                  </div>
                  <Unknown />
                  <Unknown
                    field="intervalCategory"
                    height={30}
                    instance={[Circular]}
                    required={true}
                    select={true}
                    width={95}
                  >
                    <WithStyles(MenuItem)
                      value="Minute"
                    >
                      Minutes
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Hour"
                    >
                      Hours
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Day"
                    >
                      Days
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Week"
                    >
                      Weeks
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Month"
                    >
                      Months
                    </WithStyles(MenuItem)>
                  </Unknown>
                </span>
              </div>
            </div>,
            "_rendering": false,
            "_updater": [Circular],
          },
        },
        Symbol(enzyme.__setState__): [Function],
      }
    }
    label="Trigger type"
    required={true}
    select={true}
  >
    <WithStyles(MenuItem)
      key="0"
      value={0}
    >
      Periodic
    </WithStyles(MenuItem)>
    <WithStyles(MenuItem)
      key="1"
      value={1}
    >
      Cron
    </WithStyles(MenuItem)>
  </Component>
  <div>
    <Component
      field="maxConcurrentRuns"
      instance={
        Trigger {
          "context": Object {},
          "handleChange": [Function],
          "props": Object {},
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "cron": "0 * * * * ?",
            "editCron": false,
            "endDate": "2018-12-21",
            "endTime": "07:53",
            "hasEndDate": false,
            "hasStartDate": false,
            "intervalCategory": "Minute",
            "intervalValue": 1,
            "maxConcurrentRuns": "10",
            "selectedDays": Array [
              true,
              true,
              true,
              true,
              true,
              true,
              true,
            ],
            "startDate": "2018-12-21",
            "startTime": "07:53",
            "type": 0,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_element": <Trigger />,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_newState": Object {
                "cron": "0 * * * * ?",
                "editCron": false,
                "endDate": "2018-12-21",
                "endTime": "07:53",
                "hasEndDate": false,
                "hasStartDate": false,
                "intervalCategory": "Minute",
                "intervalValue": 1,
                "maxConcurrentRuns": "10",
                "selectedDays": Array [
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                ],
                "startDate": "2018-12-21",
                "startTime": "07:53",
                "type": 0,
              },
              "_rendered": <div>
                <Unknown
                  field="type"
                  instance={[Circular]}
                  label="Trigger type"
                  required={true}
                  select={true}
                >
                  <WithStyles(MenuItem)
                    value={0}
                  >
                    Periodic
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value={1}
                  >
                    Cron
                  </WithStyles(MenuItem)>
                </Unknown>
                <div>
                  <Unknown
                    field="maxConcurrentRuns"
                    instance={[Circular]}
                    label="Maximum concurrent runs"
                    required={true}
                  />
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has start date"
                    />
                    <Unknown
                      field="startDate"
                      instance={[Circular]}
                      label="Start date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="startTime"
                      instance={[Circular]}
                      label="Start time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has end date"
                    />
                    <Unknown
                      field="endDate"
                      instance={[Circular]}
                      label="End date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="endTime"
                      instance={[Circular]}
                      label="End time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <span
                    className="flex"
                  >
                    Run every
                    <div
                      className="flex"
                    >
                      <Unknown />
                      <Unknown
                        error={false}
                        field="intervalValue"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        type="number"
                        width={65}
                      />
                    </div>
                    <Unknown />
                    <Unknown
                      field="intervalCategory"
                      height={30}
                      instance={[Circular]}
                      required={true}
                      select={true}
                      width={95}
                    >
                      <WithStyles(MenuItem)
                        value="Minute"
                      >
                        Minutes
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Hour"
                      >
                        Hours
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Day"
                      >
                        Days
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Week"
                      >
                        Weeks
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Month"
                      >
                        Months
                      </WithStyles(MenuItem)>
                    </Unknown>
                  </span>
                </div>
              </div>,
              "_rendering": false,
              "_updater": [Circular],
            },
          },
          Symbol(enzyme.__setState__): [Function],
        }
      }
      label="Maximum concurrent runs"
      required={true}
    />
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has start date"
      />
      <Component
        field="startDate"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 0,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 * * * * ?",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Minute",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 0,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <div
                        className="flex"
                      >
                        <Unknown />
                        <Unknown
                          error={false}
                          field="intervalValue"
                          height={30}
                          instance={[Circular]}
                          required={true}
                          type="number"
                          width={65}
                        />
                      </div>
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minutes
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hours
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Days
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Weeks
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Months
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="Start date"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        width={160}
      />
      <Component />
      <Component
        field="startTime"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 0,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 * * * * ?",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Minute",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 0,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <div
                        className="flex"
                      >
                        <Unknown />
                        <Unknown
                          error={false}
                          field="intervalValue"
                          height={30}
                          instance={[Circular]}
                          required={true}
                          type="number"
                          width={65}
                        />
                      </div>
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minutes
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hours
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Days
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Weeks
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Months
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="Start time"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        width={120}
      />
    </div>
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has end date"
      />
      <Component
        field="endDate"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 0,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 * * * * ?",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Minute",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 0,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <div
                        className="flex"
                      >
                        <Unknown />
                        <Unknown
                          error={false}
                          field="intervalValue"
                          height={30}
                          instance={[Circular]}
                          required={true}
                          type="number"
                          width={65}
                        />
                      </div>
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minutes
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hours
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Days
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Weeks
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Months
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="End date"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        width={160}
      />
      <Component />
      <Component
        field="endTime"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 0,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 * * * * ?",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Minute",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 0,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <div
                        className="flex"
                      >
                        <Unknown />
                        <Unknown
                          error={false}
                          field="intervalValue"
                          height={30}
                          instance={[Circular]}
                          required={true}
                          type="number"
                          width={65}
                        />
                      </div>
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minutes
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hours
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Days
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Weeks
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Months
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="End time"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        width={120}
      />
    </div>
    <span
      className="flex"
    >
      Run every
      <div
        className="flex"
      >
        <Component />
        <Component
          error={false}
          field="intervalValue"
          height={30}
          instance={
            Trigger {
              "context": Object {},
              "handleChange": [Function],
              "props": Object {},
              "refs": Object {},
              "setState": [Function],
              "state": Object {
                "cron": "0 * * * * ?",
                "editCron": false,
                "endDate": "2018-12-21",
                "endTime": "07:53",
                "hasEndDate": false,
                "hasStartDate": false,
                "intervalCategory": "Minute",
                "intervalValue": 1,
                "maxConcurrentRuns": "10",
                "selectedDays": Array [
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                ],
                "startDate": "2018-12-21",
                "startTime": "07:53",
                "type": 0,
              },
              "updater": Updater {
                "_callbacks": Array [],
                "_renderer": ReactShallowRenderer {
                  "_context": Object {},
                  "_element": <Trigger />,
                  "_forcedUpdate": false,
                  "_instance": [Circular],
                  "_newState": Object {
                    "cron": "0 * * * * ?",
                    "editCron": false,
                    "endDate": "2018-12-21",
                    "endTime": "07:53",
                    "hasEndDate": false,
                    "hasStartDate": false,
                    "intervalCategory": "Minute",
                    "intervalValue": 1,
                    "maxConcurrentRuns": "10",
                    "selectedDays": Array [
                      true,
                      true,
                      true,
                      true,
                      true,
                      true,
                      true,
                    ],
                    "startDate": "2018-12-21",
                    "startTime": "07:53",
                    "type": 0,
                  },
                  "_rendered": <div>
                    <Unknown
                      field="type"
                      instance={[Circular]}
                      label="Trigger type"
                      required={true}
                      select={true}
                    >
                      <WithStyles(MenuItem)
                        value={0}
                      >
                        Periodic
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value={1}
                      >
                        Cron
                      </WithStyles(MenuItem)>
                    </Unknown>
                    <div>
                      <Unknown
                        field="maxConcurrentRuns"
                        instance={[Circular]}
                        label="Maximum concurrent runs"
                        required={true}
                      />
                      <div
                        className="flex"
                      >
                        <WithStyles(FormControlLabel)
                          control={
                            <WithStyles(Checkbox)
                              checked={false}
                              color="primary"
                              onClick={[Function]}
                            />
                          }
                          label="Has start date"
                        />
                        <Unknown
                          field="startDate"
                          instance={[Circular]}
                          label="Start date"
                          style={
                            Object {
                              "visibility": "hidden",
                            }
                          }
                          type="date"
                          width={160}
                        />
                        <Unknown />
                        <Unknown
                          field="startTime"
                          instance={[Circular]}
                          label="Start time"
                          style={
                            Object {
                              "visibility": "hidden",
                            }
                          }
                          type="time"
                          width={120}
                        />
                      </div>
                      <div
                        className="flex"
                      >
                        <WithStyles(FormControlLabel)
                          control={
                            <WithStyles(Checkbox)
                              checked={false}
                              color="primary"
                              onClick={[Function]}
                            />
                          }
                          label="Has end date"
                        />
                        <Unknown
                          field="endDate"
                          instance={[Circular]}
                          label="End date"
                          style={
                            Object {
                              "visibility": "hidden",
                            }
                          }
                          type="date"
                          width={160}
                        />
                        <Unknown />
                        <Unknown
                          field="endTime"
                          instance={[Circular]}
                          label="End time"
                          style={
                            Object {
                              "visibility": "hidden",
                            }
                          }
                          type="time"
                          width={120}
                        />
                      </div>
                      <span
                        className="flex"
                      >
                        Run every
                        <div
                          className="flex"
                        >
                          <Unknown />
                          <Unknown
                            error={false}
                            field="intervalValue"
                            height={30}
                            instance={[Circular]}
                            required={true}
                            type="number"
                            width={65}
                          />
                        </div>
                        <Unknown />
                        <Unknown
                          field="intervalCategory"
                          height={30}
                          instance={[Circular]}
                          required={true}
                          select={true}
                          width={95}
                        >
                          <WithStyles(MenuItem)
                            value="Minute"
                          >
                            Minutes
                          </WithStyles(MenuItem)>
                          <WithStyles(MenuItem)
                            value="Hour"
                          >
                            Hours
                          </WithStyles(MenuItem)>
                          <WithStyles(MenuItem)
                            value="Day"
                          >
                            Days
                          </WithStyles(MenuItem)>
                          <WithStyles(MenuItem)
                            value="Week"
                          >
                            Weeks
                          </WithStyles(MenuItem)>
                          <WithStyles(MenuItem)
                            value="Month"
                          >
                            Months
                          </WithStyles(MenuItem)>
                        </Unknown>
                      </span>
                    </div>
                  </div>,
                  "_rendering": false,
                  "_updater": [Circular],
                },
              },
              Symbol(enzyme.__setState__): [Function],
            }
          }
          required={true}
          type="number"
          width={65}
        />
      </div>
      <Component />
      <Component
        field="intervalCategory"
        height={30}
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 0,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 * * * * ?",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Minute",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 0,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <div
                        className="flex"
                      >
                        <Unknown />
                        <Unknown
                          error={false}
                          field="intervalValue"
                          height={30}
                          instance={[Circular]}
                          required={true}
                          type="number"
                          width={65}
                        />
                      </div>
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minutes
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hours
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Days
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Weeks
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Months
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        required={true}
        select={true}
        width={95}
      >
        <WithStyles(MenuItem)
          key="0"
          value="Minute"
        >
          Minutes
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="Hour"
        >
          Hours
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="2"
          value="Day"
        >
          Days
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="3"
          value="Week"
        >
          Weeks
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="4"
          value="Month"
        >
          Months
        </WithStyles(MenuItem)>
      </Component>
    </span>
  </div>
</div>
`;

exports[`Trigger renders periodic schedule controls if the trigger type is CRON 1`] = `
<div>
  <Component
    field="type"
    instance={
      Trigger {
        "context": Object {},
        "handleChange": [Function],
        "props": Object {},
        "refs": Object {},
        "setState": [Function],
        "state": Object {
          "cron": "0 * * * * ?",
          "editCron": false,
          "endDate": "2018-12-21",
          "endTime": "07:53",
          "hasEndDate": false,
          "hasStartDate": false,
          "intervalCategory": "Minute",
          "intervalValue": 1,
          "maxConcurrentRuns": "10",
          "selectedDays": Array [
            true,
            true,
            true,
            true,
            true,
            true,
            true,
          ],
          "startDate": "2018-12-21",
          "startTime": "07:53",
          "type": 1,
        },
        "updater": Updater {
          "_callbacks": Array [],
          "_renderer": ReactShallowRenderer {
            "_context": Object {},
            "_element": <Trigger />,
            "_forcedUpdate": false,
            "_instance": [Circular],
            "_newState": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "_rendered": <div>
              <Unknown
                field="type"
                instance={[Circular]}
                label="Trigger type"
                required={true}
                select={true}
              >
                <WithStyles(MenuItem)
                  value={0}
                >
                  Periodic
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value={1}
                >
                  Cron
                </WithStyles(MenuItem)>
              </Unknown>
              <div>
                <Unknown
                  field="maxConcurrentRuns"
                  instance={[Circular]}
                  label="Maximum concurrent runs"
                  required={true}
                />
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="Has start date"
                  />
                  <Unknown
                    field="startDate"
                    instance={[Circular]}
                    label="Start date"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="date"
                    width={160}
                  />
                  <Unknown />
                  <Unknown
                    field="startTime"
                    instance={[Circular]}
                    label="Start time"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="time"
                    width={120}
                  />
                </div>
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="Has end date"
                  />
                  <Unknown
                    field="endDate"
                    instance={[Circular]}
                    label="End date"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="date"
                    width={160}
                  />
                  <Unknown />
                  <Unknown
                    field="endTime"
                    instance={[Circular]}
                    label="End time"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="time"
                    width={120}
                  />
                </div>
                <span
                  className="flex"
                >
                  Run every
                  <Unknown />
                  <Unknown
                    field="intervalCategory"
                    height={30}
                    instance={[Circular]}
                    required={true}
                    select={true}
                    width={95}
                  >
                    <WithStyles(MenuItem)
                      value="Minute"
                    >
                      Minute
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Hour"
                    >
                      Hour
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Day"
                    >
                      Day
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Week"
                    >
                      Week
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Month"
                    >
                      Month
                    </WithStyles(MenuItem)>
                  </Unknown>
                </span>
              </div>
              <div>
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label={
                      <span>
                        Allow editing cron expression. ( format is specified 
                        <a
                          href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                        >
                          here
                        </a>
                        )
                      </span>
                    }
                  />
                </div>
                <Unknown
                  disabled={true}
                  field="cron"
                  instance={[Circular]}
                  label="cron expression"
                  onChange={[Function]}
                  width={300}
                />
                <div>
                  Note: Start and end dates/times are handled outside of cron.
                </div>
              </div>
            </div>,
            "_rendering": false,
            "_updater": [Circular],
          },
        },
        Symbol(enzyme.__setState__): [Function],
      }
    }
    label="Trigger type"
    required={true}
    select={true}
  >
    <WithStyles(MenuItem)
      key="0"
      value={0}
    >
      Periodic
    </WithStyles(MenuItem)>
    <WithStyles(MenuItem)
      key="1"
      value={1}
    >
      Cron
    </WithStyles(MenuItem)>
  </Component>
  <div>
    <Component
      field="maxConcurrentRuns"
      instance={
        Trigger {
          "context": Object {},
          "handleChange": [Function],
          "props": Object {},
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "cron": "0 * * * * ?",
            "editCron": false,
            "endDate": "2018-12-21",
            "endTime": "07:53",
            "hasEndDate": false,
            "hasStartDate": false,
            "intervalCategory": "Minute",
            "intervalValue": 1,
            "maxConcurrentRuns": "10",
            "selectedDays": Array [
              true,
              true,
              true,
              true,
              true,
              true,
              true,
            ],
            "startDate": "2018-12-21",
            "startTime": "07:53",
            "type": 1,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_element": <Trigger />,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_newState": Object {
                "cron": "0 * * * * ?",
                "editCron": false,
                "endDate": "2018-12-21",
                "endTime": "07:53",
                "hasEndDate": false,
                "hasStartDate": false,
                "intervalCategory": "Minute",
                "intervalValue": 1,
                "maxConcurrentRuns": "10",
                "selectedDays": Array [
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                ],
                "startDate": "2018-12-21",
                "startTime": "07:53",
                "type": 1,
              },
              "_rendered": <div>
                <Unknown
                  field="type"
                  instance={[Circular]}
                  label="Trigger type"
                  required={true}
                  select={true}
                >
                  <WithStyles(MenuItem)
                    value={0}
                  >
                    Periodic
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value={1}
                  >
                    Cron
                  </WithStyles(MenuItem)>
                </Unknown>
                <div>
                  <Unknown
                    field="maxConcurrentRuns"
                    instance={[Circular]}
                    label="Maximum concurrent runs"
                    required={true}
                  />
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has start date"
                    />
                    <Unknown
                      field="startDate"
                      instance={[Circular]}
                      label="Start date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="startTime"
                      instance={[Circular]}
                      label="Start time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has end date"
                    />
                    <Unknown
                      field="endDate"
                      instance={[Circular]}
                      label="End date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="endTime"
                      instance={[Circular]}
                      label="End time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <span
                    className="flex"
                  >
                    Run every
                    <Unknown />
                    <Unknown
                      field="intervalCategory"
                      height={30}
                      instance={[Circular]}
                      required={true}
                      select={true}
                      width={95}
                    >
                      <WithStyles(MenuItem)
                        value="Minute"
                      >
                        Minute
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Hour"
                      >
                        Hour
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Day"
                      >
                        Day
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Week"
                      >
                        Week
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Month"
                      >
                        Month
                      </WithStyles(MenuItem)>
                    </Unknown>
                  </span>
                </div>
                <div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label={
                        <span>
                          Allow editing cron expression. ( format is specified 
                          <a
                            href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                          >
                            here
                          </a>
                          )
                        </span>
                      }
                    />
                  </div>
                  <Unknown
                    disabled={true}
                    field="cron"
                    instance={[Circular]}
                    label="cron expression"
                    onChange={[Function]}
                    width={300}
                  />
                  <div>
                    Note: Start and end dates/times are handled outside of cron.
                  </div>
                </div>
              </div>,
              "_rendering": false,
              "_updater": [Circular],
            },
          },
          Symbol(enzyme.__setState__): [Function],
        }
      }
      label="Maximum concurrent runs"
      required={true}
    />
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has start date"
      />
      <Component
        field="startDate"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 * * * * ?",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Minute",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="Start date"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        width={160}
      />
      <Component />
      <Component
        field="startTime"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 * * * * ?",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Minute",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="Start time"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        width={120}
      />
    </div>
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has end date"
      />
      <Component
        field="endDate"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 * * * * ?",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Minute",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="End date"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        width={160}
      />
      <Component />
      <Component
        field="endTime"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 * * * * ?",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Minute",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="End time"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        width={120}
      />
    </div>
    <span
      className="flex"
    >
      Run every
      <Component />
      <Component
        field="intervalCategory"
        height={30}
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 * * * * ?",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Minute",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 * * * * ?",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Minute",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        required={true}
        select={true}
        width={95}
      >
        <WithStyles(MenuItem)
          key="0"
          value="Minute"
        >
          Minute
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="Hour"
        >
          Hour
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="2"
          value="Day"
        >
          Day
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="3"
          value="Week"
        >
          Week
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="4"
          value="Month"
        >
          Month
        </WithStyles(MenuItem)>
      </Component>
    </span>
  </div>
  <div>
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label={
          <span>
            Allow editing cron expression. ( format is specified 
            <a
              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
            >
              here
            </a>
            )
          </span>
        }
      />
    </div>
    <Component
      disabled={true}
      field="cron"
      instance={
        Trigger {
          "context": Object {},
          "handleChange": [Function],
          "props": Object {},
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "cron": "0 * * * * ?",
            "editCron": false,
            "endDate": "2018-12-21",
            "endTime": "07:53",
            "hasEndDate": false,
            "hasStartDate": false,
            "intervalCategory": "Minute",
            "intervalValue": 1,
            "maxConcurrentRuns": "10",
            "selectedDays": Array [
              true,
              true,
              true,
              true,
              true,
              true,
              true,
            ],
            "startDate": "2018-12-21",
            "startTime": "07:53",
            "type": 1,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_element": <Trigger />,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_newState": Object {
                "cron": "0 * * * * ?",
                "editCron": false,
                "endDate": "2018-12-21",
                "endTime": "07:53",
                "hasEndDate": false,
                "hasStartDate": false,
                "intervalCategory": "Minute",
                "intervalValue": 1,
                "maxConcurrentRuns": "10",
                "selectedDays": Array [
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                ],
                "startDate": "2018-12-21",
                "startTime": "07:53",
                "type": 1,
              },
              "_rendered": <div>
                <Unknown
                  field="type"
                  instance={[Circular]}
                  label="Trigger type"
                  required={true}
                  select={true}
                >
                  <WithStyles(MenuItem)
                    value={0}
                  >
                    Periodic
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value={1}
                  >
                    Cron
                  </WithStyles(MenuItem)>
                </Unknown>
                <div>
                  <Unknown
                    field="maxConcurrentRuns"
                    instance={[Circular]}
                    label="Maximum concurrent runs"
                    required={true}
                  />
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has start date"
                    />
                    <Unknown
                      field="startDate"
                      instance={[Circular]}
                      label="Start date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="startTime"
                      instance={[Circular]}
                      label="Start time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has end date"
                    />
                    <Unknown
                      field="endDate"
                      instance={[Circular]}
                      label="End date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="endTime"
                      instance={[Circular]}
                      label="End time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <span
                    className="flex"
                  >
                    Run every
                    <Unknown />
                    <Unknown
                      field="intervalCategory"
                      height={30}
                      instance={[Circular]}
                      required={true}
                      select={true}
                      width={95}
                    >
                      <WithStyles(MenuItem)
                        value="Minute"
                      >
                        Minute
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Hour"
                      >
                        Hour
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Day"
                      >
                        Day
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Week"
                      >
                        Week
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Month"
                      >
                        Month
                      </WithStyles(MenuItem)>
                    </Unknown>
                  </span>
                </div>
                <div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label={
                        <span>
                          Allow editing cron expression. ( format is specified 
                          <a
                            href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                          >
                            here
                          </a>
                          )
                        </span>
                      }
                    />
                  </div>
                  <Unknown
                    disabled={true}
                    field="cron"
                    instance={[Circular]}
                    label="cron expression"
                    onChange={[Function]}
                    width={300}
                  />
                  <div>
                    Note: Start and end dates/times are handled outside of cron.
                  </div>
                </div>
              </div>,
              "_rendering": false,
              "_updater": [Circular],
            },
          },
          Symbol(enzyme.__setState__): [Function],
        }
      }
      label="cron expression"
      onChange={[Function]}
      width={300}
    />
    <div>
      Note: Start and end dates/times are handled outside of cron.
    </div>
  </div>
</div>
`;

exports[`Trigger renders week days if the trigger type is CRON and interval is weekly 1`] = `
<div>
  <Component
    field="type"
    instance={
      Trigger {
        "context": Object {},
        "handleChange": [Function],
        "props": Object {},
        "refs": Object {},
        "setState": [Function],
        "state": Object {
          "cron": "0 0 0 ? * *",
          "editCron": false,
          "endDate": "2018-12-21",
          "endTime": "07:53",
          "hasEndDate": false,
          "hasStartDate": false,
          "intervalCategory": "Week",
          "intervalValue": 1,
          "maxConcurrentRuns": "10",
          "selectedDays": Array [
            true,
            true,
            true,
            true,
            true,
            true,
            true,
          ],
          "startDate": "2018-12-21",
          "startTime": "07:53",
          "type": 1,
        },
        "updater": Updater {
          "_callbacks": Array [],
          "_renderer": ReactShallowRenderer {
            "_context": Object {},
            "_element": <Trigger />,
            "_forcedUpdate": false,
            "_instance": [Circular],
            "_newState": Object {
              "cron": "0 0 0 ? * *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "_rendered": <div>
              <Unknown
                field="type"
                instance={[Circular]}
                label="Trigger type"
                required={true}
                select={true}
              >
                <WithStyles(MenuItem)
                  value={0}
                >
                  Periodic
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value={1}
                >
                  Cron
                </WithStyles(MenuItem)>
              </Unknown>
              <div>
                <Unknown
                  field="maxConcurrentRuns"
                  instance={[Circular]}
                  label="Maximum concurrent runs"
                  required={true}
                />
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="Has start date"
                  />
                  <Unknown
                    field="startDate"
                    instance={[Circular]}
                    label="Start date"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="date"
                    width={160}
                  />
                  <Unknown />
                  <Unknown
                    field="startTime"
                    instance={[Circular]}
                    label="Start time"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="time"
                    width={120}
                  />
                </div>
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="Has end date"
                  />
                  <Unknown
                    field="endDate"
                    instance={[Circular]}
                    label="End date"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="date"
                    width={160}
                  />
                  <Unknown />
                  <Unknown
                    field="endTime"
                    instance={[Circular]}
                    label="End time"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    type="time"
                    width={120}
                  />
                </div>
                <span
                  className="flex"
                >
                  Run every
                  <Unknown />
                  <Unknown
                    field="intervalCategory"
                    height={30}
                    instance={[Circular]}
                    required={true}
                    select={true}
                    width={95}
                  >
                    <WithStyles(MenuItem)
                      value="Minute"
                    >
                      Minute
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Hour"
                    >
                      Hour
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Day"
                    >
                      Day
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Week"
                    >
                      Week
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value="Month"
                    >
                      Month
                    </WithStyles(MenuItem)>
                  </Unknown>
                </span>
              </div>
              <div>
                <div>
                  <span>
                    On:
                  </span>
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={true}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label="All"
                  />
                  <Unknown />
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    S
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    M
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    T
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    W
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    T
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    F
                  </WithStyles(Button)>
                  <WithStyles(Button)
                    color="primary"
                    mini={true}
                    onClick={[Function]}
                    variant="fab"
                  >
                    S
                  </WithStyles(Button)>
                </div>
                <div
                  className="flex"
                >
                  <WithStyles(FormControlLabel)
                    control={
                      <WithStyles(Checkbox)
                        checked={false}
                        color="primary"
                        onClick={[Function]}
                      />
                    }
                    label={
                      <span>
                        Allow editing cron expression. ( format is specified 
                        <a
                          href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                        >
                          here
                        </a>
                        )
                      </span>
                    }
                  />
                </div>
                <Unknown
                  disabled={true}
                  field="cron"
                  instance={[Circular]}
                  label="cron expression"
                  onChange={[Function]}
                  width={300}
                />
                <div>
                  Note: Start and end dates/times are handled outside of cron.
                </div>
              </div>
            </div>,
            "_rendering": false,
            "_updater": [Circular],
          },
        },
        Symbol(enzyme.__setState__): [Function],
      }
    }
    label="Trigger type"
    required={true}
    select={true}
  >
    <WithStyles(MenuItem)
      key="0"
      value={0}
    >
      Periodic
    </WithStyles(MenuItem)>
    <WithStyles(MenuItem)
      key="1"
      value={1}
    >
      Cron
    </WithStyles(MenuItem)>
  </Component>
  <div>
    <Component
      field="maxConcurrentRuns"
      instance={
        Trigger {
          "context": Object {},
          "handleChange": [Function],
          "props": Object {},
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "cron": "0 0 0 ? * *",
            "editCron": false,
            "endDate": "2018-12-21",
            "endTime": "07:53",
            "hasEndDate": false,
            "hasStartDate": false,
            "intervalCategory": "Week",
            "intervalValue": 1,
            "maxConcurrentRuns": "10",
            "selectedDays": Array [
              true,
              true,
              true,
              true,
              true,
              true,
              true,
            ],
            "startDate": "2018-12-21",
            "startTime": "07:53",
            "type": 1,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_element": <Trigger />,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_newState": Object {
                "cron": "0 0 0 ? * *",
                "editCron": false,
                "endDate": "2018-12-21",
                "endTime": "07:53",
                "hasEndDate": false,
                "hasStartDate": false,
                "intervalCategory": "Week",
                "intervalValue": 1,
                "maxConcurrentRuns": "10",
                "selectedDays": Array [
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                ],
                "startDate": "2018-12-21",
                "startTime": "07:53",
                "type": 1,
              },
              "_rendered": <div>
                <Unknown
                  field="type"
                  instance={[Circular]}
                  label="Trigger type"
                  required={true}
                  select={true}
                >
                  <WithStyles(MenuItem)
                    value={0}
                  >
                    Periodic
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value={1}
                  >
                    Cron
                  </WithStyles(MenuItem)>
                </Unknown>
                <div>
                  <Unknown
                    field="maxConcurrentRuns"
                    instance={[Circular]}
                    label="Maximum concurrent runs"
                    required={true}
                  />
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has start date"
                    />
                    <Unknown
                      field="startDate"
                      instance={[Circular]}
                      label="Start date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="startTime"
                      instance={[Circular]}
                      label="Start time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has end date"
                    />
                    <Unknown
                      field="endDate"
                      instance={[Circular]}
                      label="End date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="endTime"
                      instance={[Circular]}
                      label="End time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <span
                    className="flex"
                  >
                    Run every
                    <Unknown />
                    <Unknown
                      field="intervalCategory"
                      height={30}
                      instance={[Circular]}
                      required={true}
                      select={true}
                      width={95}
                    >
                      <WithStyles(MenuItem)
                        value="Minute"
                      >
                        Minute
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Hour"
                      >
                        Hour
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Day"
                      >
                        Day
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Week"
                      >
                        Week
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Month"
                      >
                        Month
                      </WithStyles(MenuItem)>
                    </Unknown>
                  </span>
                </div>
                <div>
                  <div>
                    <span>
                      On:
                    </span>
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={true}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="All"
                    />
                    <Unknown />
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      M
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      W
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      F
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label={
                        <span>
                          Allow editing cron expression. ( format is specified 
                          <a
                            href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                          >
                            here
                          </a>
                          )
                        </span>
                      }
                    />
                  </div>
                  <Unknown
                    disabled={true}
                    field="cron"
                    instance={[Circular]}
                    label="cron expression"
                    onChange={[Function]}
                    width={300}
                  />
                  <div>
                    Note: Start and end dates/times are handled outside of cron.
                  </div>
                </div>
              </div>,
              "_rendering": false,
              "_updater": [Circular],
            },
          },
          Symbol(enzyme.__setState__): [Function],
        }
      }
      label="Maximum concurrent runs"
      required={true}
    />
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has start date"
      />
      <Component
        field="startDate"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? * *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? * *",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={true}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="Start date"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        width={160}
      />
      <Component />
      <Component
        field="startTime"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? * *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? * *",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={true}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="Start time"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        width={120}
      />
    </div>
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label="Has end date"
      />
      <Component
        field="endDate"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? * *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? * *",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={true}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="End date"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="date"
        width={160}
      />
      <Component />
      <Component
        field="endTime"
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? * *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? * *",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={true}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        label="End time"
        style={
          Object {
            "visibility": "hidden",
          }
        }
        type="time"
        width={120}
      />
    </div>
    <span
      className="flex"
    >
      Run every
      <Component />
      <Component
        field="intervalCategory"
        height={30}
        instance={
          Trigger {
            "context": Object {},
            "handleChange": [Function],
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": Object {
              "cron": "0 0 0 ? * *",
              "editCron": false,
              "endDate": "2018-12-21",
              "endTime": "07:53",
              "hasEndDate": false,
              "hasStartDate": false,
              "intervalCategory": "Week",
              "intervalValue": 1,
              "maxConcurrentRuns": "10",
              "selectedDays": Array [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
              ],
              "startDate": "2018-12-21",
              "startTime": "07:53",
              "type": 1,
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <Trigger />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": Object {
                  "cron": "0 0 0 ? * *",
                  "editCron": false,
                  "endDate": "2018-12-21",
                  "endTime": "07:53",
                  "hasEndDate": false,
                  "hasStartDate": false,
                  "intervalCategory": "Week",
                  "intervalValue": 1,
                  "maxConcurrentRuns": "10",
                  "selectedDays": Array [
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                  ],
                  "startDate": "2018-12-21",
                  "startTime": "07:53",
                  "type": 1,
                },
                "_rendered": <div>
                  <Unknown
                    field="type"
                    instance={[Circular]}
                    label="Trigger type"
                    required={true}
                    select={true}
                  >
                    <WithStyles(MenuItem)
                      value={0}
                    >
                      Periodic
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      value={1}
                    >
                      Cron
                    </WithStyles(MenuItem)>
                  </Unknown>
                  <div>
                    <Unknown
                      field="maxConcurrentRuns"
                      instance={[Circular]}
                      label="Maximum concurrent runs"
                      required={true}
                    />
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has start date"
                      />
                      <Unknown
                        field="startDate"
                        instance={[Circular]}
                        label="Start date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="startTime"
                        instance={[Circular]}
                        label="Start time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="Has end date"
                      />
                      <Unknown
                        field="endDate"
                        instance={[Circular]}
                        label="End date"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="date"
                        width={160}
                      />
                      <Unknown />
                      <Unknown
                        field="endTime"
                        instance={[Circular]}
                        label="End time"
                        style={
                          Object {
                            "visibility": "hidden",
                          }
                        }
                        type="time"
                        width={120}
                      />
                    </div>
                    <span
                      className="flex"
                    >
                      Run every
                      <Unknown />
                      <Unknown
                        field="intervalCategory"
                        height={30}
                        instance={[Circular]}
                        required={true}
                        select={true}
                        width={95}
                      >
                        <WithStyles(MenuItem)
                          value="Minute"
                        >
                          Minute
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Hour"
                        >
                          Hour
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Day"
                        >
                          Day
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Week"
                        >
                          Week
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          value="Month"
                        >
                          Month
                        </WithStyles(MenuItem)>
                      </Unknown>
                    </span>
                  </div>
                  <div>
                    <div>
                      <span>
                        On:
                      </span>
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={true}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label="All"
                      />
                      <Unknown />
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        M
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        W
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        T
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        F
                      </WithStyles(Button)>
                      <WithStyles(Button)
                        color="primary"
                        mini={true}
                        onClick={[Function]}
                        variant="fab"
                      >
                        S
                      </WithStyles(Button)>
                    </div>
                    <div
                      className="flex"
                    >
                      <WithStyles(FormControlLabel)
                        control={
                          <WithStyles(Checkbox)
                            checked={false}
                            color="primary"
                            onClick={[Function]}
                          />
                        }
                        label={
                          <span>
                            Allow editing cron expression. ( format is specified 
                            <a
                              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                            >
                              here
                            </a>
                            )
                          </span>
                        }
                      />
                    </div>
                    <Unknown
                      disabled={true}
                      field="cron"
                      instance={[Circular]}
                      label="cron expression"
                      onChange={[Function]}
                      width={300}
                    />
                    <div>
                      Note: Start and end dates/times are handled outside of cron.
                    </div>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          }
        }
        required={true}
        select={true}
        width={95}
      >
        <WithStyles(MenuItem)
          key="0"
          value="Minute"
        >
          Minute
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="Hour"
        >
          Hour
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="2"
          value="Day"
        >
          Day
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="3"
          value="Week"
        >
          Week
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="4"
          value="Month"
        >
          Month
        </WithStyles(MenuItem)>
      </Component>
    </span>
  </div>
  <div>
    <div>
      <span>
        On:
      </span>
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={true}
            color="primary"
            onClick={[Function]}
          />
        }
        label="All"
      />
      <Component />
      <WithStyles(Button)
        color="primary"
        key="0"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="1"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        M
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="2"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="3"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        W
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="4"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        T
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="5"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        F
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        key="6"
        mini={true}
        onClick={[Function]}
        variant="fab"
      >
        S
      </WithStyles(Button)>
    </div>
    <div
      className="flex"
    >
      <WithStyles(FormControlLabel)
        control={
          <WithStyles(Checkbox)
            checked={false}
            color="primary"
            onClick={[Function]}
          />
        }
        label={
          <span>
            Allow editing cron expression. ( format is specified 
            <a
              href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
            >
              here
            </a>
            )
          </span>
        }
      />
    </div>
    <Component
      disabled={true}
      field="cron"
      instance={
        Trigger {
          "context": Object {},
          "handleChange": [Function],
          "props": Object {},
          "refs": Object {},
          "setState": [Function],
          "state": Object {
            "cron": "0 0 0 ? * *",
            "editCron": false,
            "endDate": "2018-12-21",
            "endTime": "07:53",
            "hasEndDate": false,
            "hasStartDate": false,
            "intervalCategory": "Week",
            "intervalValue": 1,
            "maxConcurrentRuns": "10",
            "selectedDays": Array [
              true,
              true,
              true,
              true,
              true,
              true,
              true,
            ],
            "startDate": "2018-12-21",
            "startTime": "07:53",
            "type": 1,
          },
          "updater": Updater {
            "_callbacks": Array [],
            "_renderer": ReactShallowRenderer {
              "_context": Object {},
              "_element": <Trigger />,
              "_forcedUpdate": false,
              "_instance": [Circular],
              "_newState": Object {
                "cron": "0 0 0 ? * *",
                "editCron": false,
                "endDate": "2018-12-21",
                "endTime": "07:53",
                "hasEndDate": false,
                "hasStartDate": false,
                "intervalCategory": "Week",
                "intervalValue": 1,
                "maxConcurrentRuns": "10",
                "selectedDays": Array [
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                  true,
                ],
                "startDate": "2018-12-21",
                "startTime": "07:53",
                "type": 1,
              },
              "_rendered": <div>
                <Unknown
                  field="type"
                  instance={[Circular]}
                  label="Trigger type"
                  required={true}
                  select={true}
                >
                  <WithStyles(MenuItem)
                    value={0}
                  >
                    Periodic
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    value={1}
                  >
                    Cron
                  </WithStyles(MenuItem)>
                </Unknown>
                <div>
                  <Unknown
                    field="maxConcurrentRuns"
                    instance={[Circular]}
                    label="Maximum concurrent runs"
                    required={true}
                  />
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has start date"
                    />
                    <Unknown
                      field="startDate"
                      instance={[Circular]}
                      label="Start date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="startTime"
                      instance={[Circular]}
                      label="Start time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="Has end date"
                    />
                    <Unknown
                      field="endDate"
                      instance={[Circular]}
                      label="End date"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="date"
                      width={160}
                    />
                    <Unknown />
                    <Unknown
                      field="endTime"
                      instance={[Circular]}
                      label="End time"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                      type="time"
                      width={120}
                    />
                  </div>
                  <span
                    className="flex"
                  >
                    Run every
                    <Unknown />
                    <Unknown
                      field="intervalCategory"
                      height={30}
                      instance={[Circular]}
                      required={true}
                      select={true}
                      width={95}
                    >
                      <WithStyles(MenuItem)
                        value="Minute"
                      >
                        Minute
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Hour"
                      >
                        Hour
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Day"
                      >
                        Day
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Week"
                      >
                        Week
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        value="Month"
                      >
                        Month
                      </WithStyles(MenuItem)>
                    </Unknown>
                  </span>
                </div>
                <div>
                  <div>
                    <span>
                      On:
                    </span>
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={true}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label="All"
                    />
                    <Unknown />
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      M
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      W
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      T
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      F
                    </WithStyles(Button)>
                    <WithStyles(Button)
                      color="primary"
                      mini={true}
                      onClick={[Function]}
                      variant="fab"
                    >
                      S
                    </WithStyles(Button)>
                  </div>
                  <div
                    className="flex"
                  >
                    <WithStyles(FormControlLabel)
                      control={
                        <WithStyles(Checkbox)
                          checked={false}
                          color="primary"
                          onClick={[Function]}
                        />
                      }
                      label={
                        <span>
                          Allow editing cron expression. ( format is specified 
                          <a
                            href="https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format"
                          >
                            here
                          </a>
                          )
                        </span>
                      }
                    />
                  </div>
                  <Unknown
                    disabled={true}
                    field="cron"
                    instance={[Circular]}
                    label="cron expression"
                    onChange={[Function]}
                    width={300}
                  />
                  <div>
                    Note: Start and end dates/times are handled outside of cron.
                  </div>
                </div>
              </div>,
              "_rendering": false,
              "_updater": [Circular],
            },
          },
          Symbol(enzyme.__setState__): [Function],
        }
      }
      label="cron expression"
      onChange={[Function]}
      width={300}
    />
    <div>
      Note: Start and end dates/times are handled outside of cron.
    </div>
  </div>
</div>
`;
