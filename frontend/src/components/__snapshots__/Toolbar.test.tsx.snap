// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Toolbar disables the back button when there is no browser history 1`] = `
<div
  className="root topLevelToolbar"
>
  <div
    style={
      Object {
        "minWidth": 100,
      }
    }
  >
    <div
      className="breadcrumbs flex"
    >
      <span
        className="flex"
        key="0"
        title="test display name"
      >
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path"
        >
          test display name
        </Link>
      </span>
      <span
        className="flex"
        key="1"
        title="test display name2"
      >
        <pure(ChevronRightIcon)
          className="chevron"
        />
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path2"
        >
          test display name2
        </Link>
      </span>
    </div>
    <div
      className="flex"
    >
      <WithStyles(Tooltip)
        enterDelay={300}
        title="Back"
      >
        <div>
           
          <WithStyles(IconButton)
            className="backLink"
            disabled={true}
            onClick={[Function]}
          >
            <pure(ArrowBackIcon)
              className="backIcon disabled"
            />
          </WithStyles(IconButton)>
        </div>
      </WithStyles(Tooltip)>
      <span
        className="pageName ellipsis"
        data-testid="page-title"
      />
    </div>
  </div>
  <div
    className="actions"
  >
    <WithStyles(Tooltip)
      enterDelay={300}
      key="0"
      title="test tooltip"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          icon={[Function]}
          id="test id"
          onClick={[MockFunction]}
          outlined={false}
          title="test title"
        />
      </div>
    </WithStyles(Tooltip)>
    <WithStyles(Tooltip)
      enterDelay={300}
      key="1"
      title="test disabled title2"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          disabled={true}
          icon={[Function]}
          id="test id2"
          onClick={[MockFunction]}
          outlined={false}
          title="test title2"
        />
      </div>
    </WithStyles(Tooltip)>
  </div>
</div>
`;

exports[`Toolbar renders nothing when there are no breadcrumbs or actions 1`] = `""`;

exports[`Toolbar renders outlined action buttons 1`] = `
<div
  className="root topLevelToolbar"
>
  <div
    style={
      Object {
        "minWidth": 100,
      }
    }
  >
    <div
      className="breadcrumbs flex"
    >
      <span
        className="flex"
        key="0"
        title="test display name"
      >
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path"
        >
          test display name
        </Link>
      </span>
      <span
        className="flex"
        key="1"
        title="test display name2"
      >
        <pure(ChevronRightIcon)
          className="chevron"
        />
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path2"
        >
          test display name2
        </Link>
      </span>
    </div>
    <div
      className="flex"
    >
      <WithStyles(Tooltip)
        enterDelay={300}
        title="Back"
      >
        <div>
           
          <WithStyles(IconButton)
            className="backLink"
            disabled={false}
            onClick={[Function]}
          >
            <pure(ArrowBackIcon)
              className="backIcon enabled"
            />
          </WithStyles(IconButton)>
        </div>
      </WithStyles(Tooltip)>
      <span
        className="pageName ellipsis"
        data-testid="page-title"
      />
    </div>
  </div>
  <div
    className="actions"
  >
    <WithStyles(Tooltip)
      enterDelay={300}
      key="0"
      title="test outlined tooltip"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          id="test outlined id"
          onClick={[MockFunction]}
          outlined={true}
          title="test outlined title"
        />
      </div>
    </WithStyles(Tooltip)>
  </div>
</div>
`;

exports[`Toolbar renders primary action buttons 1`] = `
<div
  className="root topLevelToolbar"
>
  <div
    style={
      Object {
        "minWidth": 100,
      }
    }
  >
    <div
      className="breadcrumbs flex"
    >
      <span
        className="flex"
        key="0"
        title="test display name"
      >
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path"
        >
          test display name
        </Link>
      </span>
      <span
        className="flex"
        key="1"
        title="test display name2"
      >
        <pure(ChevronRightIcon)
          className="chevron"
        />
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path2"
        >
          test display name2
        </Link>
      </span>
    </div>
    <div
      className="flex"
    >
      <WithStyles(Tooltip)
        enterDelay={300}
        title="Back"
      >
        <div>
           
          <WithStyles(IconButton)
            className="backLink"
            disabled={false}
            onClick={[Function]}
          >
            <pure(ArrowBackIcon)
              className="backIcon enabled"
            />
          </WithStyles(IconButton)>
        </div>
      </WithStyles(Tooltip)>
      <span
        className="pageName ellipsis"
        data-testid="page-title"
      />
    </div>
  </div>
  <div
    className="actions"
  >
    <WithStyles(Tooltip)
      enterDelay={300}
      key="0"
      title="test primary tooltip"
    >
      <div>
        <BusyButton
          busy={false}
          className="buttonAction"
          color="secondary"
          id="test primary id"
          onClick={[MockFunction]}
          outlined={false}
          title="test primary title"
        />
      </div>
    </WithStyles(Tooltip)>
  </div>
</div>
`;

exports[`Toolbar renders primary action buttons without outline, even if outline is true 1`] = `
<div
  className="root topLevelToolbar"
>
  <div
    style={
      Object {
        "minWidth": 100,
      }
    }
  >
    <div
      className="breadcrumbs flex"
    >
      <span
        className="flex"
        key="0"
        title="test display name"
      >
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path"
        >
          test display name
        </Link>
      </span>
      <span
        className="flex"
        key="1"
        title="test display name2"
      >
        <pure(ChevronRightIcon)
          className="chevron"
        />
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path2"
        >
          test display name2
        </Link>
      </span>
    </div>
    <div
      className="flex"
    >
      <WithStyles(Tooltip)
        enterDelay={300}
        title="Back"
      >
        <div>
           
          <WithStyles(IconButton)
            className="backLink"
            disabled={false}
            onClick={[Function]}
          >
            <pure(ArrowBackIcon)
              className="backIcon enabled"
            />
          </WithStyles(IconButton)>
        </div>
      </WithStyles(Tooltip)>
      <span
        className="pageName ellipsis"
        data-testid="page-title"
      />
    </div>
  </div>
  <div
    className="actions"
  >
    <WithStyles(Tooltip)
      enterDelay={300}
      key="0"
      title="test tooltip"
    >
      <div>
        <BusyButton
          busy={false}
          className="buttonAction"
          color="secondary"
          id="test id"
          onClick={[MockFunction]}
          outlined={false}
          title="test title"
        />
      </div>
    </WithStyles(Tooltip)>
  </div>
</div>
`;

exports[`Toolbar renders with two breadcrumbs and two actions 1`] = `
<div
  className="root topLevelToolbar"
>
  <div
    style={
      Object {
        "minWidth": 100,
      }
    }
  >
    <div
      className="breadcrumbs flex"
    >
      <span
        className="flex"
        key="0"
        title="test display name"
      >
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path"
        >
          test display name
        </Link>
      </span>
      <span
        className="flex"
        key="1"
        title="test display name2"
      >
        <pure(ChevronRightIcon)
          className="chevron"
        />
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path2"
        >
          test display name2
        </Link>
      </span>
    </div>
    <div
      className="flex"
    >
      <WithStyles(Tooltip)
        enterDelay={300}
        title="Back"
      >
        <div>
           
          <WithStyles(IconButton)
            className="backLink"
            disabled={false}
            onClick={[Function]}
          >
            <pure(ArrowBackIcon)
              className="backIcon enabled"
            />
          </WithStyles(IconButton)>
        </div>
      </WithStyles(Tooltip)>
      <span
        className="pageName ellipsis"
        data-testid="page-title"
      />
    </div>
  </div>
  <div
    className="actions"
  >
    <WithStyles(Tooltip)
      enterDelay={300}
      key="0"
      title="test tooltip"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          icon={[Function]}
          id="test id"
          onClick={[MockFunction]}
          outlined={false}
          title="test title"
        />
      </div>
    </WithStyles(Tooltip)>
    <WithStyles(Tooltip)
      enterDelay={300}
      key="1"
      title="test disabled title2"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          disabled={true}
          icon={[Function]}
          id="test id2"
          onClick={[MockFunction]}
          outlined={false}
          title="test title2"
        />
      </div>
    </WithStyles(Tooltip)>
  </div>
</div>
`;

exports[`Toolbar renders without actions and one breadcrumb 1`] = `
<div
  className="root topLevelToolbar"
>
  <div
    style={
      Object {
        "minWidth": 100,
      }
    }
  >
    <div
      className="breadcrumbs flex"
    >
      <span
        className="flex"
        key="0"
        title="test display name"
      >
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path"
        >
          test display name
        </Link>
      </span>
    </div>
    <div
      className="flex"
    >
      <WithStyles(Tooltip)
        enterDelay={300}
        title="Back"
      >
        <div>
           
          <WithStyles(IconButton)
            className="backLink"
            disabled={false}
            onClick={[Function]}
          >
            <pure(ArrowBackIcon)
              className="backIcon enabled"
            />
          </WithStyles(IconButton)>
        </div>
      </WithStyles(Tooltip)>
      <span
        className="pageName ellipsis"
        data-testid="page-title"
      >
        test page title
      </span>
    </div>
  </div>
  <div
    className="actions"
  />
</div>
`;

exports[`Toolbar renders without actions, one breadcrumb, and a page name 1`] = `
<div
  className="root topLevelToolbar"
>
  <div
    style={
      Object {
        "minWidth": 100,
      }
    }
  >
    <div
      className="breadcrumbs flex"
    >
      <span
        className="flex"
        key="0"
        title="test display name"
      >
        <Link
          className="unstyled ellipsis link"
          replace={false}
          to="/some/test/path"
        >
          test display name
        </Link>
      </span>
    </div>
    <div
      className="flex"
    >
      <WithStyles(Tooltip)
        enterDelay={300}
        title="Back"
      >
        <div>
           
          <WithStyles(IconButton)
            className="backLink"
            disabled={false}
            onClick={[Function]}
          >
            <pure(ArrowBackIcon)
              className="backIcon enabled"
            />
          </WithStyles(IconButton)>
        </div>
      </WithStyles(Tooltip)>
      <span
        className="pageName ellipsis"
        data-testid="page-title"
      >
        test page title
      </span>
    </div>
  </div>
  <div
    className="actions"
  />
</div>
`;

exports[`Toolbar renders without breadcrumbs and a component page title 1`] = `
<div
  className="root topLevelToolbar"
>
  <div
    style={
      Object {
        "minWidth": 100,
      }
    }
  >
    <div
      className="breadcrumbs flex"
    />
    <div
      className="flex"
    >
      <span
        className="pageName ellipsis"
        data-testid="page-title"
      >
        <div
          id="myComponent"
        >
          test page title
        </div>
      </span>
    </div>
  </div>
  <div
    className="actions"
  >
    <WithStyles(Tooltip)
      enterDelay={300}
      key="0"
      title="test tooltip"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          icon={[Function]}
          id="test id"
          onClick={[MockFunction]}
          outlined={false}
          title="test title"
        />
      </div>
    </WithStyles(Tooltip)>
    <WithStyles(Tooltip)
      enterDelay={300}
      key="1"
      title="test disabled title2"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          disabled={true}
          icon={[Function]}
          id="test id2"
          onClick={[MockFunction]}
          outlined={false}
          title="test title2"
        />
      </div>
    </WithStyles(Tooltip)>
  </div>
</div>
`;

exports[`Toolbar renders without breadcrumbs and a string page title 1`] = `
<div
  className="root topLevelToolbar"
>
  <div
    style={
      Object {
        "minWidth": 100,
      }
    }
  >
    <div
      className="breadcrumbs flex"
    />
    <div
      className="flex"
    >
      <span
        className="pageName ellipsis"
        data-testid="page-title"
      >
        test page title
      </span>
    </div>
  </div>
  <div
    className="actions"
  >
    <WithStyles(Tooltip)
      enterDelay={300}
      key="0"
      title="test tooltip"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          icon={[Function]}
          id="test id"
          onClick={[MockFunction]}
          outlined={false}
          title="test title"
        />
      </div>
    </WithStyles(Tooltip)>
    <WithStyles(Tooltip)
      enterDelay={300}
      key="1"
      title="test disabled title2"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          disabled={true}
          icon={[Function]}
          id="test id2"
          onClick={[MockFunction]}
          outlined={false}
          title="test title2"
        />
      </div>
    </WithStyles(Tooltip)>
  </div>
</div>
`;

exports[`Toolbar renders without breadcrumbs and one action 1`] = `
<div
  className="root topLevelToolbar"
>
  <div
    style={
      Object {
        "minWidth": 100,
      }
    }
  >
    <div
      className="breadcrumbs flex"
    />
    <div
      className="flex"
    >
      <span
        className="pageName ellipsis"
        data-testid="page-title"
      >
        test page title
      </span>
    </div>
  </div>
  <div
    className="actions"
  >
    <WithStyles(Tooltip)
      enterDelay={300}
      key="0"
      title="test tooltip"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          icon={[Function]}
          id="test id"
          onClick={[MockFunction]}
          outlined={false}
          title="test title"
        />
      </div>
    </WithStyles(Tooltip)>
  </div>
</div>
`;

exports[`Toolbar renders without breadcrumbs and two actions 1`] = `
<div
  className="root topLevelToolbar"
>
  <div
    style={
      Object {
        "minWidth": 100,
      }
    }
  >
    <div
      className="breadcrumbs flex"
    />
    <div
      className="flex"
    >
      <span
        className="pageName ellipsis"
        data-testid="page-title"
      >
        test page title
      </span>
    </div>
  </div>
  <div
    className="actions"
  >
    <WithStyles(Tooltip)
      enterDelay={300}
      key="0"
      title="test tooltip"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          icon={[Function]}
          id="test id"
          onClick={[MockFunction]}
          outlined={false}
          title="test title"
        />
      </div>
    </WithStyles(Tooltip)>
    <WithStyles(Tooltip)
      enterDelay={300}
      key="1"
      title="test disabled title2"
    >
      <div>
        <BusyButton
          busy={false}
          className=""
          color="secondary"
          disabled={true}
          icon={[Function]}
          id="test id2"
          onClick={[MockFunction]}
          outlined={false}
          title="test title2"
        />
      </div>
    </WithStyles(Tooltip)>
  </div>
</div>
`;
