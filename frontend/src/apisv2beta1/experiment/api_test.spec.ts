/**
 * backend/api/v2beta1/experiment.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 *
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from './api';
import { Configuration } from './configuration';

const config: Configuration = {};

describe('ExperimentServiceApi', () => {
  let instance: api.ExperimentServiceApi;
  beforeEach(function() {
    instance = new api.ExperimentServiceApi(config);
  });

  test('archiveExperiment', () => {
    const experiment_id: string = 'experiment_id_example';
    return expect(instance.archiveExperiment(experiment_id, {})).resolves.toBe(null);
  });
  test('createExperiment', () => {
    const body: api.V2beta1Experiment = undefined;
    return expect(instance.createExperiment(body, {})).resolves.toBe(null);
  });
  test('deleteExperiment', () => {
    const experiment_id: string = 'experiment_id_example';
    return expect(instance.deleteExperiment(experiment_id, {})).resolves.toBe(null);
  });
  test('getExperiment', () => {
    const experiment_id: string = 'experiment_id_example';
    return expect(instance.getExperiment(experiment_id, {})).resolves.toBe(null);
  });
  test('listExperiments', () => {
    const page_token: string = 'page_token_example';
    const page_size: number = 56;
    const sort_by: string = 'sort_by_example';
    const filter: string = 'filter_example';
    const namespace: string = 'namespace_example';
    return expect(
      instance.listExperiments(page_token, page_size, sort_by, filter, namespace, {}),
    ).resolves.toBe(null);
  });
  test('unarchiveExperiment', () => {
    const experiment_id: string = 'experiment_id_example';
    return expect(instance.unarchiveExperiment(experiment_id, {})).resolves.toBe(null);
  });
});
