// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExperimentList renders a list of one experiment 1`] = `
<div
  className="page"
>
  <CustomTable
    columns={
      Array [
        Object {
          "customRenderer": [Function],
          "flex": 1,
          "label": "Experiment name",
          "sortKey": "name",
        },
        Object {
          "flex": 2,
          "label": "Description",
        },
        Object {
          "customRenderer": [Function],
          "flex": 1,
          "label": "Last 5 runs",
        },
      ]
    }
    disableSelection={true}
    emptyMessage="No experiments found. Click \\"Create experiment\\" to start."
    filterLabel="Filter experiments"
    getExpandComponent={[Function]}
    initialSortColumn="created_at"
    reload={[Function]}
    rows={
      Array [
        Object {
          "error": undefined,
          "expandState": 0,
          "id": undefined,
          "otherFields": Array [
            "test experiment name",
            "test experiment description",
            undefined,
          ],
        },
      ]
    }
    toggleExpansion={[Function]}
  />
</div>
`;

exports[`ExperimentList renders a list of one experiment with error 1`] = `
<div
  className="page"
>
  <CustomTable
    columns={
      Array [
        Object {
          "customRenderer": [Function],
          "flex": 1,
          "label": "Experiment name",
          "sortKey": "name",
        },
        Object {
          "flex": 2,
          "label": "Description",
        },
        Object {
          "customRenderer": [Function],
          "flex": 1,
          "label": "Last 5 runs",
        },
      ]
    }
    disableSelection={true}
    emptyMessage="No experiments found. Click \\"Create experiment\\" to start."
    filterLabel="Filter experiments"
    getExpandComponent={[Function]}
    initialSortColumn="created_at"
    reload={[Function]}
    rows={Array []}
    toggleExpansion={[Function]}
  />
</div>
`;

exports[`ExperimentList renders a list of one experiment with no description 1`] = `
<div
  className="page"
>
  <CustomTable
    columns={
      Array [
        Object {
          "customRenderer": [Function],
          "flex": 1,
          "label": "Experiment name",
          "sortKey": "name",
        },
        Object {
          "flex": 2,
          "label": "Description",
        },
        Object {
          "customRenderer": [Function],
          "flex": 1,
          "label": "Last 5 runs",
        },
      ]
    }
    disableSelection={true}
    emptyMessage="No experiments found. Click \\"Create experiment\\" to start."
    filterLabel="Filter experiments"
    getExpandComponent={[Function]}
    initialSortColumn="created_at"
    reload={[Function]}
    rows={Array []}
    toggleExpansion={[Function]}
  />
</div>
`;

exports[`ExperimentList renders an empty list with empty state message 1`] = `
<div
  className="page"
>
  <CustomTable
    columns={
      Array [
        Object {
          "customRenderer": [Function],
          "flex": 1,
          "label": "Experiment name",
          "sortKey": "name",
        },
        Object {
          "flex": 2,
          "label": "Description",
        },
        Object {
          "customRenderer": [Function],
          "flex": 1,
          "label": "Last 5 runs",
        },
      ]
    }
    disableSelection={true}
    emptyMessage="No experiments found. Click \\"Create experiment\\" to start."
    filterLabel="Filter experiments"
    getExpandComponent={[Function]}
    initialSortColumn="created_at"
    reload={[Function]}
    rows={Array []}
    toggleExpansion={[Function]}
  />
</div>
`;

exports[`ExperimentList renders experiment names as links to their details pages 1`] = `
<WithStyles(Tooltip)
  enterDelay={300}
  placement="top-start"
  title="experiment name"
>
  <Link
    className="link"
    onClick={[Function]}
    replace={false}
    to="/experiments/details/experiment-id"
  >
    experiment name
  </Link>
</WithStyles(Tooltip)>
`;

exports[`ExperimentList renders last 5 runs statuses 1`] = `
<div
  className="flex"
>
  <span
    style={
      Object {
        "margin": "0 1px",
      }
    }
  >
    <WithStyles(Tooltip)
      title={
        <div>
          <div>
            Executed successfully
          </div>
        </div>
      }
    >
      <span
        style={
          Object {
            "height": 18,
          }
        }
      >
        <pure(CheckCircleIcon)
          data-testid="node-status-sign"
          style={
            Object {
              "color": "#34a853",
              "height": 18,
              "width": 18,
            }
          }
        />
      </span>
    </WithStyles(Tooltip)>
  </span>
  <span
    style={
      Object {
        "margin": "0 1px",
      }
    }
  >
    <WithStyles(Tooltip)
      title={
        <div>
          <div>
            Pending execution
          </div>
        </div>
      }
    >
      <span
        style={
          Object {
            "height": 18,
          }
        }
      >
        <pure(ScheduleIcon)
          data-testid="node-status-sign"
          style={
            Object {
              "color": "#9aa0a6",
              "height": 18,
              "width": 18,
            }
          }
        />
      </span>
    </WithStyles(Tooltip)>
  </span>
  <span
    style={
      Object {
        "margin": "0 1px",
      }
    }
  >
    <WithStyles(Tooltip)
      title={
        <div>
          <div>
            Resource failed to execute
          </div>
        </div>
      }
    >
      <span
        style={
          Object {
            "height": 18,
          }
        }
      >
        <pure(ErrorIcon)
          data-testid="node-status-sign"
          style={
            Object {
              "color": "#d50000",
              "height": 18,
              "width": 18,
            }
          }
        />
      </span>
    </WithStyles(Tooltip)>
  </span>
  <span
    style={
      Object {
        "margin": "0 1px",
      }
    }
  >
    <WithStyles(Tooltip)
      title={
        <div>
          <div>
            Unknown status
          </div>
        </div>
      }
    >
      <span
        style={
          Object {
            "height": 18,
          }
        }
      >
        <pure(HelpIcon)
          data-testid="node-status-sign"
          style={
            Object {
              "color": "#5f6368",
              "height": 18,
              "width": 18,
            }
          }
        />
      </span>
    </WithStyles(Tooltip)>
  </span>
  <span
    style={
      Object {
        "margin": "0 1px",
      }
    }
  >
    <WithStyles(Tooltip)
      title={
        <div>
          <div>
            Executed successfully
          </div>
        </div>
      }
    >
      <span
        style={
          Object {
            "height": 18,
          }
        }
      >
        <pure(CheckCircleIcon)
          data-testid="node-status-sign"
          style={
            Object {
              "color": "#34a853",
              "height": 18,
              "width": 18,
            }
          }
        />
      </span>
    </WithStyles(Tooltip)>
  </span>
</div>
`;
