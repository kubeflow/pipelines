// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PipelineDetails closes side panel when close button is clicked 1`] = `
<div
  className="page"
>
  <div
    className="page"
  >
    <MD2Tabs
      onSwitch={[Function]}
      selectedTab={0}
      tabs={
        Array [
          "Graph",
          "YAML",
        ]
      }
    />
    <div
      className="page"
    >
      <div
        className="page"
      >
        <div
          className="page"
          style={
            Object {
              "overflow": "hidden",
              "position": "relative",
            }
          }
        >
          <WithStyles(Paper)
            className="summaryCard"
          >
            <div
              style={
                Object {
                  "alignItems": "baseline",
                  "display": "flex",
                  "justifyContent": "space-between",
                }
              }
            >
              <div
                className="header"
              >
                Summary
              </div>
              <WithStyles(Button)
                color="secondary"
                onClick={[Function]}
              >
                Hide
              </WithStyles(Button)>
            </div>
            <div
              className="summaryKey"
            >
              ID
            </div>
            <div>
              test-pipeline-id
            </div>
            <form
              autoComplete="off"
            >
              <WithStyles(FormControl)>
                <WithStyles(WithFormControlContext(InputLabel))>
                  Version
                </WithStyles(WithFormControlContext(InputLabel))>
                <WithStyles(WithFormControlContext(Select))
                  inputProps={
                    Object {
                      "id": "version-selector",
                      "name": "selectedVersion",
                    }
                  }
                  onChange={[Function]}
                  value="test-pipeline-version-id"
                >
                  <WithStyles(MenuItem)
                    key="test-pipeline-version-id"
                    value="test-pipeline-version-id"
                  >
                    test-pipeline-version
                  </WithStyles(MenuItem)>
                </WithStyles(WithFormControlContext(Select))>
              </WithStyles(FormControl)>
            </form>
            <div
              className="summaryKey"
            >
              <a
                rel="noopener noreferrer"
                target="_blank"
              >
                Version source
              </a>
            </div>
            <div
              className="summaryKey"
            >
              Uploaded on
            </div>
            <div>
              9/5/2018, 4:03:02 AM
            </div>
            <div
              className="summaryKey"
            >
              Description
            </div>
            <Description
              description="test pipeline description"
            />
          </WithStyles(Paper)>
          <EnhancedGraph
            graph={
              Graph {
                "_defaultEdgeLabelFn": [Function],
                "_defaultNodeLabelFn": [Function],
                "_edgeLabels": Object {},
                "_edgeObjs": Object {},
                "_in": Object {},
                "_isCompound": false,
                "_isDirected": true,
                "_isMultigraph": false,
                "_label": undefined,
                "_nodes": Object {},
                "_out": Object {},
                "_preds": Object {},
                "_sucs": Object {},
              }
            }
            onClick={[Function]}
            onError={[Function]}
            selectedNodeId=""
          />
          <SidePanel
            isOpen={false}
            onClose={[Function]}
            title=""
          >
            <div
              className="page"
            >
              <div
                className="absoluteCenter"
              >
                Unable to retrieve node info
              </div>
            </div>
          </SidePanel>
          <div
            className="footer"
          >
            <div
              className="flex footerInfoOffset"
            >
              <pure(InfoOutlinedIcon)
                className="infoIcon"
              />
              <span
                className="infoSpan"
              >
                Static pipeline graph
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`PipelineDetails collapses summary card when summary shown state is false 1`] = `
<div
  className="page"
>
  <div
    className="page"
  >
    <MD2Tabs
      onSwitch={[Function]}
      selectedTab={0}
      tabs={
        Array [
          "Graph",
          "YAML",
        ]
      }
    />
    <div
      className="page"
    >
      <div
        className="page"
      >
        <div
          className="page"
          style={
            Object {
              "overflow": "hidden",
              "position": "relative",
            }
          }
        >
          <EnhancedGraph
            graph={
              Graph {
                "_defaultEdgeLabelFn": [Function],
                "_defaultNodeLabelFn": [Function],
                "_edgeLabels": Object {},
                "_edgeObjs": Object {},
                "_in": Object {},
                "_isCompound": false,
                "_isDirected": true,
                "_isMultigraph": false,
                "_label": undefined,
                "_nodes": Object {},
                "_out": Object {},
                "_preds": Object {},
                "_sucs": Object {},
              }
            }
            onClick={[Function]}
            onError={[Function]}
            selectedNodeId=""
          />
          <SidePanel
            isOpen={false}
            onClose={[Function]}
            title=""
          >
            <div
              className="page"
            >
              <div
                className="absoluteCenter"
              >
                Unable to retrieve node info
              </div>
            </div>
          </SidePanel>
          <div
            className="footer"
          >
            <WithStyles(Button)
              color="secondary"
              onClick={[Function]}
            >
              Show summary
            </WithStyles(Button)>
            <div
              className="flex"
            >
              <pure(InfoOutlinedIcon)
                className="infoIcon"
              />
              <span
                className="infoSpan"
              >
                Static pipeline graph
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`PipelineDetails opens side panel on clicked node, shows message when node is not found in graph 1`] = `
<div
  className="page"
>
  <div
    className="page"
  >
    <MD2Tabs
      onSwitch={[Function]}
      selectedTab={0}
      tabs={
        Array [
          "Graph",
          "YAML",
        ]
      }
    />
    <div
      className="page"
    >
      <div
        className="page"
      >
        <div
          className="page"
          style={
            Object {
              "overflow": "hidden",
              "position": "relative",
            }
          }
        >
          <WithStyles(Paper)
            className="summaryCard"
          >
            <div
              style={
                Object {
                  "alignItems": "baseline",
                  "display": "flex",
                  "justifyContent": "space-between",
                }
              }
            >
              <div
                className="header"
              >
                Summary
              </div>
              <WithStyles(Button)
                color="secondary"
                onClick={[Function]}
              >
                Hide
              </WithStyles(Button)>
            </div>
            <div
              className="summaryKey"
            >
              ID
            </div>
            <div>
              test-pipeline-id
            </div>
            <form
              autoComplete="off"
            >
              <WithStyles(FormControl)>
                <WithStyles(WithFormControlContext(InputLabel))>
                  Version
                </WithStyles(WithFormControlContext(InputLabel))>
                <WithStyles(WithFormControlContext(Select))
                  inputProps={
                    Object {
                      "id": "version-selector",
                      "name": "selectedVersion",
                    }
                  }
                  onChange={[Function]}
                  value="test-pipeline-version-id"
                >
                  <WithStyles(MenuItem)
                    key="test-pipeline-version-id"
                    value="test-pipeline-version-id"
                  >
                    test-pipeline-version
                  </WithStyles(MenuItem)>
                </WithStyles(WithFormControlContext(Select))>
              </WithStyles(FormControl)>
            </form>
            <div
              className="summaryKey"
            >
              <a
                rel="noopener noreferrer"
                target="_blank"
              >
                Version source
              </a>
            </div>
            <div
              className="summaryKey"
            >
              Uploaded on
            </div>
            <div>
              9/5/2018, 4:03:02 AM
            </div>
            <div
              className="summaryKey"
            >
              Description
            </div>
            <Description
              description="test pipeline description"
            />
          </WithStyles(Paper)>
          <EnhancedGraph
            graph={
              Graph {
                "_defaultEdgeLabelFn": [Function],
                "_defaultNodeLabelFn": [Function],
                "_edgeLabels": Object {},
                "_edgeObjs": Object {},
                "_in": Object {},
                "_isCompound": false,
                "_isDirected": true,
                "_isMultigraph": false,
                "_label": undefined,
                "_nodes": Object {},
                "_out": Object {},
                "_preds": Object {},
                "_sucs": Object {},
              }
            }
            onClick={[Function]}
            onError={[Function]}
            selectedNodeId="some-node-id"
          />
          <SidePanel
            isOpen={true}
            onClose={[Function]}
            title="some-node-id"
          >
            <div
              className="page"
            >
              <div
                className="absoluteCenter"
              >
                Unable to retrieve node info
              </div>
            </div>
          </SidePanel>
          <div
            className="footer"
          >
            <div
              className="flex footerInfoOffset"
            >
              <pure(InfoOutlinedIcon)
                className="infoIcon"
              />
              <span
                className="infoSpan"
              >
                Static pipeline graph
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`PipelineDetails shows clicked node info in the side panel if it is in the graph 1`] = `
<div
  className="page"
>
  <div
    className="page"
  >
    <MD2Tabs
      onSwitch={[Function]}
      selectedTab={0}
      tabs={
        Array [
          "Graph",
          "YAML",
        ]
      }
    />
    <div
      className="page"
    >
      <div
        className="page"
      >
        <div
          className="page"
          style={
            Object {
              "overflow": "hidden",
              "position": "relative",
            }
          }
        >
          <WithStyles(Paper)
            className="summaryCard"
          >
            <div
              style={
                Object {
                  "alignItems": "baseline",
                  "display": "flex",
                  "justifyContent": "space-between",
                }
              }
            >
              <div
                className="header"
              >
                Summary
              </div>
              <WithStyles(Button)
                color="secondary"
                onClick={[Function]}
              >
                Hide
              </WithStyles(Button)>
            </div>
            <div
              className="summaryKey"
            >
              ID
            </div>
            <div>
              test-pipeline-id
            </div>
            <form
              autoComplete="off"
            >
              <WithStyles(FormControl)>
                <WithStyles(WithFormControlContext(InputLabel))>
                  Version
                </WithStyles(WithFormControlContext(InputLabel))>
                <WithStyles(WithFormControlContext(Select))
                  inputProps={
                    Object {
                      "id": "version-selector",
                      "name": "selectedVersion",
                    }
                  }
                  onChange={[Function]}
                  value="test-pipeline-version-id"
                >
                  <WithStyles(MenuItem)
                    key="test-pipeline-version-id"
                    value="test-pipeline-version-id"
                  >
                    test-pipeline-version
                  </WithStyles(MenuItem)>
                </WithStyles(WithFormControlContext(Select))>
              </WithStyles(FormControl)>
            </form>
            <div
              className="summaryKey"
            >
              <a
                rel="noopener noreferrer"
                target="_blank"
              >
                Version source
              </a>
            </div>
            <div
              className="summaryKey"
            >
              Uploaded on
            </div>
            <div>
              9/5/2018, 4:03:02 AM
            </div>
            <div
              className="summaryKey"
            >
              Description
            </div>
            <Description
              description="test pipeline description"
            />
          </WithStyles(Paper)>
          <EnhancedGraph
            graph={
              Graph {
                "_defaultEdgeLabelFn": [Function],
                "_defaultNodeLabelFn": [Function],
                "_edgeLabels": Object {},
                "_edgeObjs": Object {},
                "_in": Object {
                  "node1": Object {},
                },
                "_isCompound": false,
                "_isDirected": true,
                "_isMultigraph": false,
                "_label": undefined,
                "_nodeCount": 1,
                "_nodes": Object {
                  "node1": Object {
                    "info": SelectedNodeInfo {
                      "args": Array [
                        "test arg",
                        "test arg2",
                      ],
                      "command": Array [
                        "test command",
                        "test command 2",
                      ],
                      "condition": "test condition",
                      "image": "test image",
                      "inputs": Array [
                        Array [
                          "key1",
                          "val1",
                        ],
                        Array [
                          "key2",
                          "val2",
                        ],
                      ],
                      "nodeType": "container",
                      "outputs": Array [
                        Array [
                          "key3",
                          "val3",
                        ],
                        Array [
                          "key4",
                          "val4",
                        ],
                      ],
                      "resource": Array [
                        Array [],
                      ],
                      "volumeMounts": Array [
                        Array [],
                      ],
                    },
                    "label": "node1",
                  },
                },
                "_out": Object {
                  "node1": Object {},
                },
                "_preds": Object {
                  "node1": Object {},
                },
                "_sucs": Object {
                  "node1": Object {},
                },
              }
            }
            onClick={[Function]}
            onError={[Function]}
            selectedNodeId="node1"
          />
          <SidePanel
            isOpen={true}
            onClose={[Function]}
            title="node1"
          >
            <div
              className="page"
            >
              <div
                className=""
              >
                <StaticNodeDetails
                  nodeInfo={
                    SelectedNodeInfo {
                      "args": Array [
                        "test arg",
                        "test arg2",
                      ],
                      "command": Array [
                        "test command",
                        "test command 2",
                      ],
                      "condition": "test condition",
                      "image": "test image",
                      "inputs": Array [
                        Array [
                          "key1",
                          "val1",
                        ],
                        Array [
                          "key2",
                          "val2",
                        ],
                      ],
                      "nodeType": "container",
                      "outputs": Array [
                        Array [
                          "key3",
                          "val3",
                        ],
                        Array [
                          "key4",
                          "val4",
                        ],
                      ],
                      "resource": Array [
                        Array [],
                      ],
                      "volumeMounts": Array [
                        Array [],
                      ],
                    }
                  }
                />
              </div>
            </div>
          </SidePanel>
          <div
            className="footer"
          >
            <div
              className="flex footerInfoOffset"
            >
              <pure(InfoOutlinedIcon)
                className="infoIcon"
              />
              <span
                className="infoSpan"
              >
                Static pipeline graph
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`PipelineDetails shows correct versions in version selector 1`] = `
<div
  className="page"
>
  <div
    className="page"
  >
    <MD2Tabs
      onSwitch={[Function]}
      selectedTab={0}
      tabs={
        Array [
          "Graph",
          "YAML",
        ]
      }
    />
    <div
      className="page"
    >
      <div
        className="page"
      >
        <div
          className="page"
          style={
            Object {
              "overflow": "hidden",
              "position": "relative",
            }
          }
        >
          <WithStyles(Paper)
            className="summaryCard"
          >
            <div
              style={
                Object {
                  "alignItems": "baseline",
                  "display": "flex",
                  "justifyContent": "space-between",
                }
              }
            >
              <div
                className="header"
              >
                Summary
              </div>
              <WithStyles(Button)
                color="secondary"
                onClick={[Function]}
              >
                Hide
              </WithStyles(Button)>
            </div>
            <div
              className="summaryKey"
            >
              ID
            </div>
            <div>
              test-pipeline-id
            </div>
            <form
              autoComplete="off"
            >
              <WithStyles(FormControl)>
                <WithStyles(WithFormControlContext(InputLabel))>
                  Version
                </WithStyles(WithFormControlContext(InputLabel))>
                <WithStyles(WithFormControlContext(Select))
                  inputProps={
                    Object {
                      "id": "version-selector",
                      "name": "selectedVersion",
                    }
                  }
                  onChange={[Function]}
                  value="test-pipeline-version-id"
                >
                  <WithStyles(MenuItem)
                    key="test-pipeline-version-id"
                    value="test-pipeline-version-id"
                  >
                    test-pipeline-version
                  </WithStyles(MenuItem)>
                </WithStyles(WithFormControlContext(Select))>
              </WithStyles(FormControl)>
            </form>
            <div
              className="summaryKey"
            >
              <a
                rel="noopener noreferrer"
                target="_blank"
              >
                Version source
              </a>
            </div>
            <div
              className="summaryKey"
            >
              Uploaded on
            </div>
            <div>
              9/5/2018, 4:03:02 AM
            </div>
            <div
              className="summaryKey"
            >
              Description
            </div>
            <Description
              description="test pipeline description"
            />
          </WithStyles(Paper)>
          <EnhancedGraph
            graph={
              Graph {
                "_defaultEdgeLabelFn": [Function],
                "_defaultNodeLabelFn": [Function],
                "_edgeLabels": Object {},
                "_edgeObjs": Object {},
                "_in": Object {},
                "_isCompound": false,
                "_isDirected": true,
                "_isMultigraph": false,
                "_label": undefined,
                "_nodes": Object {},
                "_out": Object {},
                "_preds": Object {},
                "_sucs": Object {},
              }
            }
            onClick={[Function]}
            onError={[Function]}
            selectedNodeId=""
          />
          <SidePanel
            isOpen={false}
            onClose={[Function]}
            title=""
          >
            <div
              className="page"
            >
              <div
                className="absoluteCenter"
              >
                Unable to retrieve node info
              </div>
            </div>
          </SidePanel>
          <div
            className="footer"
          >
            <div
              className="flex footerInfoOffset"
            >
              <pure(InfoOutlinedIcon)
                className="infoIcon"
              />
              <span
                className="infoSpan"
              >
                Static pipeline graph
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`PipelineDetails shows empty pipeline details with empty graph 1`] = `
<div
  className="page"
>
  <div
    className="page"
  >
    <MD2Tabs
      onSwitch={[Function]}
      selectedTab={0}
      tabs={
        Array [
          "Graph",
          "YAML",
        ]
      }
    />
    <div
      className="page"
    >
      <div
        className="page"
      >
        <div
          className="page"
          style={
            Object {
              "overflow": "hidden",
              "position": "relative",
            }
          }
        >
          <WithStyles(Paper)
            className="summaryCard"
          >
            <div
              style={
                Object {
                  "alignItems": "baseline",
                  "display": "flex",
                  "justifyContent": "space-between",
                }
              }
            >
              <div
                className="header"
              >
                Summary
              </div>
              <WithStyles(Button)
                color="secondary"
                onClick={[Function]}
              >
                Hide
              </WithStyles(Button)>
            </div>
            <div
              className="summaryKey"
            >
              ID
            </div>
            <div>
              test-pipeline-id
            </div>
            <form
              autoComplete="off"
            >
              <WithStyles(FormControl)>
                <WithStyles(WithFormControlContext(InputLabel))>
                  Version
                </WithStyles(WithFormControlContext(InputLabel))>
                <WithStyles(WithFormControlContext(Select))
                  inputProps={
                    Object {
                      "id": "version-selector",
                      "name": "selectedVersion",
                    }
                  }
                  onChange={[Function]}
                  value="test-pipeline-version-id"
                >
                  <WithStyles(MenuItem)
                    key="test-pipeline-version-id"
                    value="test-pipeline-version-id"
                  >
                    test-pipeline-version
                  </WithStyles(MenuItem)>
                </WithStyles(WithFormControlContext(Select))>
              </WithStyles(FormControl)>
            </form>
            <div
              className="summaryKey"
            >
              <a
                rel="noopener noreferrer"
                target="_blank"
              >
                Version source
              </a>
            </div>
            <div
              className="summaryKey"
            >
              Uploaded on
            </div>
            <div>
              9/5/2018, 4:03:02 AM
            </div>
            <div
              className="summaryKey"
            >
              Description
            </div>
            <Description
              description="test pipeline description"
            />
          </WithStyles(Paper)>
          <EnhancedGraph
            graph={
              Graph {
                "_defaultEdgeLabelFn": [Function],
                "_defaultNodeLabelFn": [Function],
                "_edgeLabels": Object {},
                "_edgeObjs": Object {},
                "_in": Object {},
                "_isCompound": false,
                "_isDirected": true,
                "_isMultigraph": false,
                "_label": undefined,
                "_nodes": Object {},
                "_out": Object {},
                "_preds": Object {},
                "_sucs": Object {},
              }
            }
            onClick={[Function]}
            onError={[Function]}
            selectedNodeId=""
          />
          <SidePanel
            isOpen={false}
            onClose={[Function]}
            title=""
          >
            <div
              className="page"
            >
              <div
                className="absoluteCenter"
              >
                Unable to retrieve node info
              </div>
            </div>
          </SidePanel>
          <div
            className="footer"
          >
            <div
              className="flex footerInfoOffset"
            >
              <pure(InfoOutlinedIcon)
                className="infoIcon"
              />
              <span
                className="infoSpan"
              >
                Static pipeline graph
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`PipelineDetails shows empty pipeline details with no graph 1`] = `
<div
  className="page"
>
  <div
    className="page"
  >
    <MD2Tabs
      onSwitch={[Function]}
      selectedTab={0}
      tabs={
        Array [
          "Graph",
          "YAML",
        ]
      }
    />
    <div
      className="page"
    >
      <div
        className="page"
      >
        <span
          style={
            Object {
              "margin": "40px auto",
            }
          }
        >
          No graph to show
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`PipelineDetails shows pipeline source code when config tab is clicked 1`] = `
<div
  className="page"
>
  <div
    className="page"
  >
    <MD2Tabs
      onSwitch={[Function]}
      selectedTab={1}
      tabs={
        Array [
          "Graph",
          "YAML",
        ]
      }
    />
    <div
      className="page"
    >
      <div
        className="containerCss"
      >
        <Editor
          cursorStart={1}
          editorProps={
            Object {
              "$blockScrolling": true,
            }
          }
          enableBasicAutocompletion={false}
          enableLiveAutocompletion={false}
          enableSnippets={false}
          focus={false}
          fontSize={12}
          height="100%"
          highlightActiveLine={true}
          maxLines={null}
          minLines={null}
          mode="yaml"
          name="brace-editor"
          navigateToFileEnd={true}
          onChange={null}
          onLoad={null}
          onPaste={null}
          onScroll={null}
          placeholder={null}
          readOnly={true}
          scrollMargin={
            Array [
              0,
              0,
              0,
              0,
            ]
          }
          setOptions={Object {}}
          showGutter={true}
          showPrintMargin={true}
          style={Object {}}
          tabSize={4}
          theme="github"
          value="test template"
          width="100%"
          wrapEnabled={false}
        />
      </div>
    </div>
  </div>
</div>
`;
