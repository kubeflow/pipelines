{
  "name": "pipelines-frontend",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@kubeflow/frontend": "github:kubeflow/frontend#61966eefef771f6ae88dbbb090ffde24f6e5def0",
    "@material-ui/core": "3.7.1",
    "@material-ui/icons": "^3.0.2",
    "brace": "^0.11.1",
    "d3": "^5.16.0",
    "d3-dsv": "^1.2.0",
    "dagre": "^0.8.5",
    "google-protobuf": "^3.14.0",
    "http-proxy-middleware": "^0.19.2",
    "immer": "^8.0.1",
    "js-yaml": "^3.14.1",
    "lodash": "^4.17.20",
    "markdown-to-jsx": "^6.11.4",
    "portable-fetch": "^3.0.0",
    "re-resizable": "^4.9.0",
    "react": "^16.14.0",
    "react-ace": "^7.0.5",
    "react-dom": "^16.14.0",
    "react-dropzone": "^5.1.0",
    "react-router-dom": "^4.3.1",
    "react-virtualized": "^9.22.3",
    "react-vis": "^1.11.7",
    "typestyle": "^2.1.0"
  },
  "scripts": {
    "analyze-bundle": "node analyze_bundle.js",
    "apis": "npm run apis:experiment && npm run apis:job && npm run apis:pipeline && npm run apis:run && npm run apis:filter && npm run apis:visualization && npm run apis:auth",
    "apis:experiment": "java -jar swagger-codegen-cli.jar generate -i ../backend/api/swagger/experiment.swagger.json -l typescript-fetch -o ./src/apis/experiment -c ./swagger-config.json",
    "apis:job": "java -jar swagger-codegen-cli.jar generate -i ../backend/api/swagger/job.swagger.json -l typescript-fetch -o ./src/apis/job -c ./swagger-config.json",
    "apis:pipeline": "java -jar swagger-codegen-cli.jar generate -i ../backend/api/swagger/pipeline.swagger.json -l typescript-fetch -o ./src/apis/pipeline -c ./swagger-config.json",
    "apis:run": "java -jar swagger-codegen-cli.jar generate -i ../backend/api/swagger/run.swagger.json -l typescript-fetch -o ./src/apis/run -c ./swagger-config.json",
    "apis:filter": "java -jar swagger-codegen-cli.jar generate -i ../backend/api/swagger/filter.swagger.json -l typescript-fetch -o ./src/apis/filter -c ./swagger-config.json",
    "apis:visualization": "java -jar swagger-codegen-cli.jar generate -i ../backend/api/swagger/visualization.swagger.json -l typescript-fetch -o ./src/apis/visualization -c ./swagger-config.json",
    "apis:auth": "java -jar swagger-codegen-cli.jar generate -i ../backend/api/swagger/auth.swagger.json -l typescript-fetch -o ./server/src/generated/apis/auth -c ./swagger-config.json",
    "build": "npm run lint && EXTEND_ESLINT=true react-scripts build",
    "docker": "COMMIT_HASH=`git rev-parse HEAD`; docker build -q -t ml-pipelines-frontend:${COMMIT_HASH} --build-arg COMMIT_HASH=${COMMIT_HASH} --build-arg DATE=\"`date -u`\" -f Dockerfile ..",
    "eject": "react-scripts eject",
    "format": "prettier --write './**/*.{ts,tsx}'",
    "format:check": "prettier --check './**/*.{ts,tsx}' || node ./scripts/check-format-error-info.js",
    "java": "java -version",
    "lint": "eslint --ext js,ts,tsx src",
    "mock:api": "ts-node-dev -O '{\"module\": \"commonjs\"}' --project mock-backend/tsconfig.json mock-backend/mock-api-server.ts 3001",
    "mock:server": "node server/dist/server.js build",
    "mock:server:inspect": "node inspect server/dist/server.js build",
    "postinstall": "cd ./server && npm ci && cd ../mock-backend && npm ci",
    "start:proxy": "./scripts/start-proxy.sh",
    "start:proxy-and-server": "./scripts/start-proxy-and-server.sh",
    "start:proxy-and-server-inspect": "./scripts/start-proxy-and-server.sh --inspect",
    "start": "EXTEND_ESLINT=true react-scripts start",
    "sync-backend-sample-config": "node scripts/sync-backend-sample-config.js",
    "test": "react-scripts test",
    "test:server:coverage": "cd ./server && npm test -- --coverage && cd ..",
    "test:coverage": "npm test -- --coverage && npm run test:server:coverage",
    "test:ci": "export CI=true && npm run format:check && npm run lint && npm run test:coverage",
    "test:ci:prow": "npm set unsafe-perm true && npm ci && npm run test:ci && ./scripts/report-coveralls.sh"
  },
  "devDependencies": {
    "@google-cloud/storage": "^4.7.0",
    "@testing-library/react": "^9.5.0",
    "@types/d3": "^5.16.4",
    "@types/d3-dsv": "^1.2.1",
    "@types/dagre": "^0.7.44",
    "@types/enzyme": "^3.10.8",
    "@types/enzyme-adapter-react-16": "^1.0.6",
    "@types/express": "^4.17.11",
    "@types/google-protobuf": "^3.7.4",
    "@types/http-proxy-middleware": "^0.17.5",
    "@types/jest": "^23.3.14",
    "@types/js-yaml": "^3.12.6",
    "@types/lodash": "^4.14.168",
    "@types/markdown-to-jsx": "^6.11.3",
    "@types/node": "^10.17.51",
    "@types/prettier": "^1.19.1",
    "@types/react": "^16.14.3",
    "@types/react-dom": "^16.9.10",
    "@types/react-router-dom": "^4.3.5",
    "@types/react-test-renderer": "^16.9.4",
    "@types/react-virtualized": "^9.21.11",
    "browserslist": "4.8.7",
    "coveralls": "^3.1.0",
    "enzyme": "^3.11.0",
    "enzyme-adapter-react-16": "^1.15.6",
    "enzyme-to-json": "^3.6.1",
    "prettier": "1.19.1",
    "react-router-test-context": "^0.1.0",
    "react-scripts": "^3.4.4",
    "react-test-renderer": "^16.14.0",
    "snapshot-diff": "^0.6.2",
    "swagger-ts-client": "^0.9.6",
    "ts-node": "^7.0.1",
    "ts-node-dev": "^1.1.1",
    "tslint-config-prettier": "^1.18.0",
    "typescript": "^3.9.7",
    "webpack-bundle-analyzer": "^3.9.0"
  },
  "homepage": "./",
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx}",
      "!src/**/*.d.ts",
      "!src/apis/**/*.ts",
      "!src/icons/*.tsx",
      "!src/third_party/*",
      "!src/index.tsx",
      "!src/CSSReset.tsx"
    ],
    "globalSetup": "./global-setup.js",
    "snapshotSerializers": [
      "./src/__serializers__/mock-function",
      "snapshot-diff/serializer.js",
      "enzyme-to-json/serializer"
    ]
  },
  "proxy": "http://localhost:3001",
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
