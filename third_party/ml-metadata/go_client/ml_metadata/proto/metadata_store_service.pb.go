// Copyright 2019 Google LLC
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//https://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//==============================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.3
// source: ml_metadata/proto/metadata_store_service.proto

package ml_metadata

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// An artifact and type pair. Part of an artifact struct.
type ArtifactAndType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifact *Artifact     `protobuf:"bytes,1,opt,name=artifact" json:"artifact,omitempty"`
	Type     *ArtifactType `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (x *ArtifactAndType) Reset() {
	*x = ArtifactAndType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactAndType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactAndType) ProtoMessage() {}

func (x *ArtifactAndType) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactAndType.ProtoReflect.Descriptor instead.
func (*ArtifactAndType) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{0}
}

func (x *ArtifactAndType) GetArtifact() *Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *ArtifactAndType) GetType() *ArtifactType {
	if x != nil {
		return x.Type
	}
	return nil
}

// A dictionary of artifact structs. Can represent a dictionary.
type ArtifactStructMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An artifact struct that is a dictionary.
	// Can be represented as a JSON dictionary of artifact structs.
	Properties map[string]*ArtifactStruct `protobuf:"bytes,1,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *ArtifactStructMap) Reset() {
	*x = ArtifactStructMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactStructMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactStructMap) ProtoMessage() {}

func (x *ArtifactStructMap) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactStructMap.ProtoReflect.Descriptor instead.
func (*ArtifactStructMap) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{1}
}

func (x *ArtifactStructMap) GetProperties() map[string]*ArtifactStruct {
	if x != nil {
		return x.Properties
	}
	return nil
}

// An artifact struct that is a list.
type ArtifactStructList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Can be represented as a JSON list of artifact structs.
	Elements []*ArtifactStruct `protobuf:"bytes,1,rep,name=elements" json:"elements,omitempty"`
}

func (x *ArtifactStructList) Reset() {
	*x = ArtifactStructList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactStructList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactStructList) ProtoMessage() {}

func (x *ArtifactStructList) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactStructList.ProtoReflect.Descriptor instead.
func (*ArtifactStructList) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{2}
}

func (x *ArtifactStructList) GetElements() []*ArtifactStruct {
	if x != nil {
		return x.Elements
	}
	return nil
}

// An artifact struct represents the input or output of an Execution.
// See the more specific types referenced in the message for more details.
type ArtifactStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Note: an artifact struct may be empty to indicate "None" or null.
	//
	// Types that are assignable to Value:
	//	*ArtifactStruct_Artifact
	//	*ArtifactStruct_Map
	//	*ArtifactStruct_List
	Value isArtifactStruct_Value `protobuf_oneof:"value"`
}

func (x *ArtifactStruct) Reset() {
	*x = ArtifactStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactStruct) ProtoMessage() {}

func (x *ArtifactStruct) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactStruct.ProtoReflect.Descriptor instead.
func (*ArtifactStruct) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{3}
}

func (m *ArtifactStruct) GetValue() isArtifactStruct_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ArtifactStruct) GetArtifact() *ArtifactAndType {
	if x, ok := x.GetValue().(*ArtifactStruct_Artifact); ok {
		return x.Artifact
	}
	return nil
}

func (x *ArtifactStruct) GetMap() *ArtifactStructMap {
	if x, ok := x.GetValue().(*ArtifactStruct_Map); ok {
		return x.Map
	}
	return nil
}

func (x *ArtifactStruct) GetList() *ArtifactStructList {
	if x, ok := x.GetValue().(*ArtifactStruct_List); ok {
		return x.List
	}
	return nil
}

type isArtifactStruct_Value interface {
	isArtifactStruct_Value()
}

type ArtifactStruct_Artifact struct {
	Artifact *ArtifactAndType `protobuf:"bytes,1,opt,name=artifact,oneof"`
}

type ArtifactStruct_Map struct {
	Map *ArtifactStructMap `protobuf:"bytes,2,opt,name=map,oneof"`
}

type ArtifactStruct_List struct {
	List *ArtifactStructList `protobuf:"bytes,3,opt,name=list,oneof"`
}

func (*ArtifactStruct_Artifact) isArtifactStruct_Value() {}

func (*ArtifactStruct_Map) isArtifactStruct_Value() {}

func (*ArtifactStruct_List) isArtifactStruct_Value() {}

type PutArtifactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts" json:"artifacts,omitempty"`
	// Additional options to change the behavior of the method.
	Options *PutArtifactsRequest_Options `protobuf:"bytes,2,opt,name=options" json:"options,omitempty"`
}

func (x *PutArtifactsRequest) Reset() {
	*x = PutArtifactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutArtifactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutArtifactsRequest) ProtoMessage() {}

func (x *PutArtifactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutArtifactsRequest.ProtoReflect.Descriptor instead.
func (*PutArtifactsRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{4}
}

func (x *PutArtifactsRequest) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *PutArtifactsRequest) GetOptions() *PutArtifactsRequest_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type PutArtifactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of artifact ids index-aligned with PutArtifactsRequest.
	ArtifactIds []int64 `protobuf:"varint,1,rep,name=artifact_ids,json=artifactIds" json:"artifact_ids,omitempty"`
}

func (x *PutArtifactsResponse) Reset() {
	*x = PutArtifactsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutArtifactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutArtifactsResponse) ProtoMessage() {}

func (x *PutArtifactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutArtifactsResponse.ProtoReflect.Descriptor instead.
func (*PutArtifactsResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{5}
}

func (x *PutArtifactsResponse) GetArtifactIds() []int64 {
	if x != nil {
		return x.ArtifactIds
	}
	return nil
}

type PutArtifactTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The field is required in any request. Stored types in MLMD can be updated
	// by introducing new properties and remain backward compatible. If a type
	// with the same name exists in the database, it updates the existing type,
	// otherwise it creates a new type.
	ArtifactType *ArtifactType `protobuf:"bytes,1,opt,name=artifact_type,json=artifactType" json:"artifact_type,omitempty"`
	// If true then allows adding properties to an existing stored type.
	// If false, then type update is not allowed and it raises AlreadyExists
	// error if the given type has any new property that is not defined in the
	// stored type.
	CanAddFields *bool `protobuf:"varint,2,opt,name=can_add_fields,json=canAddFields" json:"can_add_fields,omitempty"`
	// If true then allows omitting properties of an existing stored type.
	// If false, then no properties of the stored type can be omitted in the
	// given type, otherwise it raises AlreadyExists error.
	CanOmitFields *bool `protobuf:"varint,5,opt,name=can_omit_fields,json=canOmitFields" json:"can_omit_fields,omitempty"`
	// Deprecated fields.
	//
	// Deprecated: Do not use.
	CanDeleteFields *bool `protobuf:"varint,3,opt,name=can_delete_fields,json=canDeleteFields" json:"can_delete_fields,omitempty"`
	// Deprecated: Do not use.
	AllFieldsMatch *bool `protobuf:"varint,4,opt,name=all_fields_match,json=allFieldsMatch,def=1" json:"all_fields_match,omitempty"`
}

// Default values for PutArtifactTypeRequest fields.
const (
	Default_PutArtifactTypeRequest_AllFieldsMatch = bool(true)
)

func (x *PutArtifactTypeRequest) Reset() {
	*x = PutArtifactTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutArtifactTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutArtifactTypeRequest) ProtoMessage() {}

func (x *PutArtifactTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutArtifactTypeRequest.ProtoReflect.Descriptor instead.
func (*PutArtifactTypeRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{6}
}

func (x *PutArtifactTypeRequest) GetArtifactType() *ArtifactType {
	if x != nil {
		return x.ArtifactType
	}
	return nil
}

func (x *PutArtifactTypeRequest) GetCanAddFields() bool {
	if x != nil && x.CanAddFields != nil {
		return *x.CanAddFields
	}
	return false
}

func (x *PutArtifactTypeRequest) GetCanOmitFields() bool {
	if x != nil && x.CanOmitFields != nil {
		return *x.CanOmitFields
	}
	return false
}

// Deprecated: Do not use.
func (x *PutArtifactTypeRequest) GetCanDeleteFields() bool {
	if x != nil && x.CanDeleteFields != nil {
		return *x.CanDeleteFields
	}
	return false
}

// Deprecated: Do not use.
func (x *PutArtifactTypeRequest) GetAllFieldsMatch() bool {
	if x != nil && x.AllFieldsMatch != nil {
		return *x.AllFieldsMatch
	}
	return Default_PutArtifactTypeRequest_AllFieldsMatch
}

type PutArtifactTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type ID of the artifact type.
	TypeId *int64 `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
}

func (x *PutArtifactTypeResponse) Reset() {
	*x = PutArtifactTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutArtifactTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutArtifactTypeResponse) ProtoMessage() {}

func (x *PutArtifactTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutArtifactTypeResponse.ProtoReflect.Descriptor instead.
func (*PutArtifactTypeResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{7}
}

func (x *PutArtifactTypeResponse) GetTypeId() int64 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

type PutExecutionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executions []*Execution `protobuf:"bytes,1,rep,name=executions" json:"executions,omitempty"`
}

func (x *PutExecutionsRequest) Reset() {
	*x = PutExecutionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutExecutionsRequest) ProtoMessage() {}

func (x *PutExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutExecutionsRequest.ProtoReflect.Descriptor instead.
func (*PutExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{8}
}

func (x *PutExecutionsRequest) GetExecutions() []*Execution {
	if x != nil {
		return x.Executions
	}
	return nil
}

type PutExecutionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of execution ids index-aligned with PutExecutionsRequest.
	ExecutionIds []int64 `protobuf:"varint,1,rep,name=execution_ids,json=executionIds" json:"execution_ids,omitempty"`
}

func (x *PutExecutionsResponse) Reset() {
	*x = PutExecutionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutExecutionsResponse) ProtoMessage() {}

func (x *PutExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutExecutionsResponse.ProtoReflect.Descriptor instead.
func (*PutExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{9}
}

func (x *PutExecutionsResponse) GetExecutionIds() []int64 {
	if x != nil {
		return x.ExecutionIds
	}
	return nil
}

type PutExecutionTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The field is required in any request. Stored types in MLMD can be updated
	// by introducing new properties and remain backward compatible. If a type
	// with the same name exists in the database, it updates the existing type,
	// otherwise it creates a new type.
	ExecutionType *ExecutionType `protobuf:"bytes,1,opt,name=execution_type,json=executionType" json:"execution_type,omitempty"`
	// If true then allows adding properties to an existing stored type.
	// If false, then type update is not allowed and it raises AlreadyExists
	// error if the given type has any new property that is not defined in the
	// stored type.
	CanAddFields *bool `protobuf:"varint,2,opt,name=can_add_fields,json=canAddFields" json:"can_add_fields,omitempty"`
	// If true then allows omitting properties of an existing stored type.
	// If false, then no properties of the stored type can be omitted in the
	// given type, otherwise it raises AlreadyExists error.
	CanOmitFields *bool `protobuf:"varint,5,opt,name=can_omit_fields,json=canOmitFields" json:"can_omit_fields,omitempty"`
	// Deprecated fields.
	//
	// Deprecated: Do not use.
	CanDeleteFields *bool `protobuf:"varint,3,opt,name=can_delete_fields,json=canDeleteFields" json:"can_delete_fields,omitempty"`
	// Deprecated: Do not use.
	AllFieldsMatch *bool `protobuf:"varint,4,opt,name=all_fields_match,json=allFieldsMatch,def=1" json:"all_fields_match,omitempty"`
}

// Default values for PutExecutionTypeRequest fields.
const (
	Default_PutExecutionTypeRequest_AllFieldsMatch = bool(true)
)

func (x *PutExecutionTypeRequest) Reset() {
	*x = PutExecutionTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutExecutionTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutExecutionTypeRequest) ProtoMessage() {}

func (x *PutExecutionTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutExecutionTypeRequest.ProtoReflect.Descriptor instead.
func (*PutExecutionTypeRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{10}
}

func (x *PutExecutionTypeRequest) GetExecutionType() *ExecutionType {
	if x != nil {
		return x.ExecutionType
	}
	return nil
}

func (x *PutExecutionTypeRequest) GetCanAddFields() bool {
	if x != nil && x.CanAddFields != nil {
		return *x.CanAddFields
	}
	return false
}

func (x *PutExecutionTypeRequest) GetCanOmitFields() bool {
	if x != nil && x.CanOmitFields != nil {
		return *x.CanOmitFields
	}
	return false
}

// Deprecated: Do not use.
func (x *PutExecutionTypeRequest) GetCanDeleteFields() bool {
	if x != nil && x.CanDeleteFields != nil {
		return *x.CanDeleteFields
	}
	return false
}

// Deprecated: Do not use.
func (x *PutExecutionTypeRequest) GetAllFieldsMatch() bool {
	if x != nil && x.AllFieldsMatch != nil {
		return *x.AllFieldsMatch
	}
	return Default_PutExecutionTypeRequest_AllFieldsMatch
}

type PutExecutionTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type ID of the execution type.
	TypeId *int64 `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
}

func (x *PutExecutionTypeResponse) Reset() {
	*x = PutExecutionTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutExecutionTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutExecutionTypeResponse) ProtoMessage() {}

func (x *PutExecutionTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutExecutionTypeResponse.ProtoReflect.Descriptor instead.
func (*PutExecutionTypeResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{11}
}

func (x *PutExecutionTypeResponse) GetTypeId() int64 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

type PutEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
}

func (x *PutEventsRequest) Reset() {
	*x = PutEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutEventsRequest) ProtoMessage() {}

func (x *PutEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutEventsRequest.ProtoReflect.Descriptor instead.
func (*PutEventsRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{12}
}

func (x *PutEventsRequest) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type PutEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutEventsResponse) Reset() {
	*x = PutEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutEventsResponse) ProtoMessage() {}

func (x *PutEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutEventsResponse.ProtoReflect.Descriptor instead.
func (*PutEventsResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{13}
}

type PutExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The execution that produces many artifact and event pairs.
	Execution *Execution `protobuf:"bytes,1,opt,name=execution" json:"execution,omitempty"`
	// The list of artifact and event pairs.
	ArtifactEventPairs []*PutExecutionRequest_ArtifactAndEvent `protobuf:"bytes,2,rep,name=artifact_event_pairs,json=artifactEventPairs" json:"artifact_event_pairs,omitempty"`
	// A list of contexts associated with the execution and artifacts. For each
	// given context without a context.id, it inserts the context, otherwise it
	// updates the stored context with the same id.
	// Associations between each pair of contexts and the execution, and
	// attributions between each pair of contexts and artifacts are created if
	// they do not already exist.
	Contexts []*Context `protobuf:"bytes,3,rep,name=contexts" json:"contexts,omitempty"`
	// Additional options to change the behavior of the method.
	Options *PutExecutionRequest_Options `protobuf:"bytes,4,opt,name=options" json:"options,omitempty"`
}

func (x *PutExecutionRequest) Reset() {
	*x = PutExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutExecutionRequest) ProtoMessage() {}

func (x *PutExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutExecutionRequest.ProtoReflect.Descriptor instead.
func (*PutExecutionRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{14}
}

func (x *PutExecutionRequest) GetExecution() *Execution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *PutExecutionRequest) GetArtifactEventPairs() []*PutExecutionRequest_ArtifactAndEvent {
	if x != nil {
		return x.ArtifactEventPairs
	}
	return nil
}

func (x *PutExecutionRequest) GetContexts() []*Context {
	if x != nil {
		return x.Contexts
	}
	return nil
}

func (x *PutExecutionRequest) GetOptions() *PutExecutionRequest_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type PutExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An execution id of the `execution` in PutExecutionRequest.
	ExecutionId *int64 `protobuf:"varint,1,opt,name=execution_id,json=executionId" json:"execution_id,omitempty"`
	// A list of artifact ids index-aligned with `artifact_event_pairs` in the
	// PutExecutionRequest.
	ArtifactIds []int64 `protobuf:"varint,2,rep,name=artifact_ids,json=artifactIds" json:"artifact_ids,omitempty"`
	// A list of context ids index-aligned with `contexts` in the
	// PutExecutionRequest.
	ContextIds []int64 `protobuf:"varint,3,rep,name=context_ids,json=contextIds" json:"context_ids,omitempty"`
}

func (x *PutExecutionResponse) Reset() {
	*x = PutExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutExecutionResponse) ProtoMessage() {}

func (x *PutExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutExecutionResponse.ProtoReflect.Descriptor instead.
func (*PutExecutionResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{15}
}

func (x *PutExecutionResponse) GetExecutionId() int64 {
	if x != nil && x.ExecutionId != nil {
		return *x.ExecutionId
	}
	return 0
}

func (x *PutExecutionResponse) GetArtifactIds() []int64 {
	if x != nil {
		return x.ArtifactIds
	}
	return nil
}

func (x *PutExecutionResponse) GetContextIds() []int64 {
	if x != nil {
		return x.ContextIds
	}
	return nil
}

type PutTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtifactTypes  []*ArtifactType  `protobuf:"bytes,1,rep,name=artifact_types,json=artifactTypes" json:"artifact_types,omitempty"`
	ExecutionTypes []*ExecutionType `protobuf:"bytes,2,rep,name=execution_types,json=executionTypes" json:"execution_types,omitempty"`
	ContextTypes   []*ContextType   `protobuf:"bytes,3,rep,name=context_types,json=contextTypes" json:"context_types,omitempty"`
	// If true then allows adding properties to an existing stored type.
	// If false, then type update is not allowed and it raises AlreadyExists
	// error if the given type has any new property that is not defined in the
	// stored type.
	CanAddFields *bool `protobuf:"varint,4,opt,name=can_add_fields,json=canAddFields" json:"can_add_fields,omitempty"`
	// If true then allows omitting properties of an existing stored type.
	// If false, then no properties of the stored type can be omitted in the
	// given type, otherwise it raises AlreadyExists error.
	CanOmitFields *bool `protobuf:"varint,7,opt,name=can_omit_fields,json=canOmitFields" json:"can_omit_fields,omitempty"`
	// Deprecated fields.
	//
	// Deprecated: Do not use.
	CanDeleteFields *bool `protobuf:"varint,5,opt,name=can_delete_fields,json=canDeleteFields" json:"can_delete_fields,omitempty"`
	// Deprecated: Do not use.
	AllFieldsMatch *bool `protobuf:"varint,6,opt,name=all_fields_match,json=allFieldsMatch,def=1" json:"all_fields_match,omitempty"`
}

// Default values for PutTypesRequest fields.
const (
	Default_PutTypesRequest_AllFieldsMatch = bool(true)
)

func (x *PutTypesRequest) Reset() {
	*x = PutTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutTypesRequest) ProtoMessage() {}

func (x *PutTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutTypesRequest.ProtoReflect.Descriptor instead.
func (*PutTypesRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{16}
}

func (x *PutTypesRequest) GetArtifactTypes() []*ArtifactType {
	if x != nil {
		return x.ArtifactTypes
	}
	return nil
}

func (x *PutTypesRequest) GetExecutionTypes() []*ExecutionType {
	if x != nil {
		return x.ExecutionTypes
	}
	return nil
}

func (x *PutTypesRequest) GetContextTypes() []*ContextType {
	if x != nil {
		return x.ContextTypes
	}
	return nil
}

func (x *PutTypesRequest) GetCanAddFields() bool {
	if x != nil && x.CanAddFields != nil {
		return *x.CanAddFields
	}
	return false
}

func (x *PutTypesRequest) GetCanOmitFields() bool {
	if x != nil && x.CanOmitFields != nil {
		return *x.CanOmitFields
	}
	return false
}

// Deprecated: Do not use.
func (x *PutTypesRequest) GetCanDeleteFields() bool {
	if x != nil && x.CanDeleteFields != nil {
		return *x.CanDeleteFields
	}
	return false
}

// Deprecated: Do not use.
func (x *PutTypesRequest) GetAllFieldsMatch() bool {
	if x != nil && x.AllFieldsMatch != nil {
		return *x.AllFieldsMatch
	}
	return Default_PutTypesRequest_AllFieldsMatch
}

type PutTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type ids of the artifact type.
	ArtifactTypeIds []int64 `protobuf:"varint,1,rep,name=artifact_type_ids,json=artifactTypeIds" json:"artifact_type_ids,omitempty"`
	// The type ids of the execution type.
	ExecutionTypeIds []int64 `protobuf:"varint,2,rep,name=execution_type_ids,json=executionTypeIds" json:"execution_type_ids,omitempty"`
	// The type ids of the context type.
	ContextTypeIds []int64 `protobuf:"varint,3,rep,name=context_type_ids,json=contextTypeIds" json:"context_type_ids,omitempty"`
}

func (x *PutTypesResponse) Reset() {
	*x = PutTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutTypesResponse) ProtoMessage() {}

func (x *PutTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutTypesResponse.ProtoReflect.Descriptor instead.
func (*PutTypesResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{17}
}

func (x *PutTypesResponse) GetArtifactTypeIds() []int64 {
	if x != nil {
		return x.ArtifactTypeIds
	}
	return nil
}

func (x *PutTypesResponse) GetExecutionTypeIds() []int64 {
	if x != nil {
		return x.ExecutionTypeIds
	}
	return nil
}

func (x *PutTypesResponse) GetContextTypeIds() []int64 {
	if x != nil {
		return x.ContextTypeIds
	}
	return nil
}

type PutContextTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The field is required in any request. Stored types in MLMD can be updated
	// by introducing new properties and remain backward compatible. If a type
	// with the same name exists in the database, it updates the existing type,
	// otherwise it creates a new type.
	ContextType *ContextType `protobuf:"bytes,1,opt,name=context_type,json=contextType" json:"context_type,omitempty"`
	// If true then allows adding properties to an existing stored type.
	// If false, then type update is not allowed and it raises AlreadyExists
	// error if the given type has any new property that is not defined in the
	// stored type.
	CanAddFields *bool `protobuf:"varint,2,opt,name=can_add_fields,json=canAddFields" json:"can_add_fields,omitempty"`
	// If true then allows omitting properties of an existing stored type.
	// If false, then no properties of the stored type can be omitted in the
	// given type, otherwise it raises AlreadyExists error.
	CanOmitFields *bool `protobuf:"varint,5,opt,name=can_omit_fields,json=canOmitFields" json:"can_omit_fields,omitempty"`
	// Deprecated fields.
	//
	// Deprecated: Do not use.
	CanDeleteFields *bool `protobuf:"varint,3,opt,name=can_delete_fields,json=canDeleteFields" json:"can_delete_fields,omitempty"`
	// Deprecated: Do not use.
	AllFieldsMatch *bool `protobuf:"varint,4,opt,name=all_fields_match,json=allFieldsMatch,def=1" json:"all_fields_match,omitempty"`
}

// Default values for PutContextTypeRequest fields.
const (
	Default_PutContextTypeRequest_AllFieldsMatch = bool(true)
)

func (x *PutContextTypeRequest) Reset() {
	*x = PutContextTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutContextTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutContextTypeRequest) ProtoMessage() {}

func (x *PutContextTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutContextTypeRequest.ProtoReflect.Descriptor instead.
func (*PutContextTypeRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{18}
}

func (x *PutContextTypeRequest) GetContextType() *ContextType {
	if x != nil {
		return x.ContextType
	}
	return nil
}

func (x *PutContextTypeRequest) GetCanAddFields() bool {
	if x != nil && x.CanAddFields != nil {
		return *x.CanAddFields
	}
	return false
}

func (x *PutContextTypeRequest) GetCanOmitFields() bool {
	if x != nil && x.CanOmitFields != nil {
		return *x.CanOmitFields
	}
	return false
}

// Deprecated: Do not use.
func (x *PutContextTypeRequest) GetCanDeleteFields() bool {
	if x != nil && x.CanDeleteFields != nil {
		return *x.CanDeleteFields
	}
	return false
}

// Deprecated: Do not use.
func (x *PutContextTypeRequest) GetAllFieldsMatch() bool {
	if x != nil && x.AllFieldsMatch != nil {
		return *x.AllFieldsMatch
	}
	return Default_PutContextTypeRequest_AllFieldsMatch
}

type PutContextTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type ID of the context type.
	TypeId *int64 `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
}

func (x *PutContextTypeResponse) Reset() {
	*x = PutContextTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutContextTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutContextTypeResponse) ProtoMessage() {}

func (x *PutContextTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutContextTypeResponse.ProtoReflect.Descriptor instead.
func (*PutContextTypeResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{19}
}

func (x *PutContextTypeResponse) GetTypeId() int64 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

type PutContextsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contexts []*Context `protobuf:"bytes,1,rep,name=contexts" json:"contexts,omitempty"`
}

func (x *PutContextsRequest) Reset() {
	*x = PutContextsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutContextsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutContextsRequest) ProtoMessage() {}

func (x *PutContextsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutContextsRequest.ProtoReflect.Descriptor instead.
func (*PutContextsRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{20}
}

func (x *PutContextsRequest) GetContexts() []*Context {
	if x != nil {
		return x.Contexts
	}
	return nil
}

type PutContextsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of context ids index-aligned with PutContextsRequest.
	ContextIds []int64 `protobuf:"varint,1,rep,name=context_ids,json=contextIds" json:"context_ids,omitempty"`
}

func (x *PutContextsResponse) Reset() {
	*x = PutContextsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutContextsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutContextsResponse) ProtoMessage() {}

func (x *PutContextsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutContextsResponse.ProtoReflect.Descriptor instead.
func (*PutContextsResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{21}
}

func (x *PutContextsResponse) GetContextIds() []int64 {
	if x != nil {
		return x.ContextIds
	}
	return nil
}

type PutAttributionsAndAssociationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributions []*Attribution `protobuf:"bytes,1,rep,name=attributions" json:"attributions,omitempty"`
	Associations []*Association `protobuf:"bytes,2,rep,name=associations" json:"associations,omitempty"`
}

func (x *PutAttributionsAndAssociationsRequest) Reset() {
	*x = PutAttributionsAndAssociationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAttributionsAndAssociationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAttributionsAndAssociationsRequest) ProtoMessage() {}

func (x *PutAttributionsAndAssociationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAttributionsAndAssociationsRequest.ProtoReflect.Descriptor instead.
func (*PutAttributionsAndAssociationsRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{22}
}

func (x *PutAttributionsAndAssociationsRequest) GetAttributions() []*Attribution {
	if x != nil {
		return x.Attributions
	}
	return nil
}

func (x *PutAttributionsAndAssociationsRequest) GetAssociations() []*Association {
	if x != nil {
		return x.Associations
	}
	return nil
}

type PutAttributionsAndAssociationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutAttributionsAndAssociationsResponse) Reset() {
	*x = PutAttributionsAndAssociationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAttributionsAndAssociationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAttributionsAndAssociationsResponse) ProtoMessage() {}

func (x *PutAttributionsAndAssociationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAttributionsAndAssociationsResponse.ProtoReflect.Descriptor instead.
func (*PutAttributionsAndAssociationsResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{23}
}

type PutParentContextsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentContexts []*ParentContext `protobuf:"bytes,1,rep,name=parent_contexts,json=parentContexts" json:"parent_contexts,omitempty"`
}

func (x *PutParentContextsRequest) Reset() {
	*x = PutParentContextsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutParentContextsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutParentContextsRequest) ProtoMessage() {}

func (x *PutParentContextsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutParentContextsRequest.ProtoReflect.Descriptor instead.
func (*PutParentContextsRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{24}
}

func (x *PutParentContextsRequest) GetParentContexts() []*ParentContext {
	if x != nil {
		return x.ParentContexts
	}
	return nil
}

type PutParentContextsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutParentContextsResponse) Reset() {
	*x = PutParentContextsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutParentContextsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutParentContextsResponse) ProtoMessage() {}

func (x *PutParentContextsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutParentContextsResponse.ProtoReflect.Descriptor instead.
func (*PutParentContextsResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{25}
}

type GetArtifactsByTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName *string `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
}

func (x *GetArtifactsByTypeRequest) Reset() {
	*x = GetArtifactsByTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsByTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsByTypeRequest) ProtoMessage() {}

func (x *GetArtifactsByTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsByTypeRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactsByTypeRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetArtifactsByTypeRequest) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

type GetArtifactsByTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts" json:"artifacts,omitempty"`
}

func (x *GetArtifactsByTypeResponse) Reset() {
	*x = GetArtifactsByTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsByTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsByTypeResponse) ProtoMessage() {}

func (x *GetArtifactsByTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsByTypeResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactsByTypeResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetArtifactsByTypeResponse) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

type GetArtifactByTypeAndNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName     *string `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
	ArtifactName *string `protobuf:"bytes,2,opt,name=artifact_name,json=artifactName" json:"artifact_name,omitempty"`
}

func (x *GetArtifactByTypeAndNameRequest) Reset() {
	*x = GetArtifactByTypeAndNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactByTypeAndNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactByTypeAndNameRequest) ProtoMessage() {}

func (x *GetArtifactByTypeAndNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactByTypeAndNameRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactByTypeAndNameRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetArtifactByTypeAndNameRequest) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

func (x *GetArtifactByTypeAndNameRequest) GetArtifactName() string {
	if x != nil && x.ArtifactName != nil {
		return *x.ArtifactName
	}
	return ""
}

type GetArtifactByTypeAndNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifact *Artifact `protobuf:"bytes,1,opt,name=artifact" json:"artifact,omitempty"`
}

func (x *GetArtifactByTypeAndNameResponse) Reset() {
	*x = GetArtifactByTypeAndNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactByTypeAndNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactByTypeAndNameResponse) ProtoMessage() {}

func (x *GetArtifactByTypeAndNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactByTypeAndNameResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactByTypeAndNameResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetArtifactByTypeAndNameResponse) GetArtifact() *Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

type GetArtifactsByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of artifact ids to retrieve.
	ArtifactIds []int64 `protobuf:"varint,1,rep,name=artifact_ids,json=artifactIds" json:"artifact_ids,omitempty"`
}

func (x *GetArtifactsByIDRequest) Reset() {
	*x = GetArtifactsByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsByIDRequest) ProtoMessage() {}

func (x *GetArtifactsByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsByIDRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactsByIDRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetArtifactsByIDRequest) GetArtifactIds() []int64 {
	if x != nil {
		return x.ArtifactIds
	}
	return nil
}

type GetArtifactsByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Artifacts with matching ids.
	// This is not index-aligned: if an id is not found, it is not
	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts" json:"artifacts,omitempty"`
}

func (x *GetArtifactsByIDResponse) Reset() {
	*x = GetArtifactsByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsByIDResponse) ProtoMessage() {}

func (x *GetArtifactsByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsByIDResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactsByIDResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{31}
}

func (x *GetArtifactsByIDResponse) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// Request to retrieve Artifacts using List options.
// If option is not specified then all Artifacts are returned.
type GetArtifactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify options.
	// Currently supports:
	//   1. Field to order the results.
	//   2. Page size.
	Options *ListOperationOptions `protobuf:"bytes,1,opt,name=options" json:"options,omitempty"`
}

func (x *GetArtifactsRequest) Reset() {
	*x = GetArtifactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsRequest) ProtoMessage() {}

func (x *GetArtifactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactsRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetArtifactsRequest) GetOptions() *ListOperationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetArtifactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returned artifacts.
	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts" json:"artifacts,omitempty"`
	// Token to use to retreive next page of results if list options are used in
	// the request.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GetArtifactsResponse) Reset() {
	*x = GetArtifactsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsResponse) ProtoMessage() {}

func (x *GetArtifactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactsResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetArtifactsResponse) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *GetArtifactsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GetArtifactsByURIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of artifact uris to retrieve.
	Uris []string `protobuf:"bytes,2,rep,name=uris" json:"uris,omitempty"`
}

func (x *GetArtifactsByURIRequest) Reset() {
	*x = GetArtifactsByURIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsByURIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsByURIRequest) ProtoMessage() {}

func (x *GetArtifactsByURIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsByURIRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactsByURIRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{34}
}

func (x *GetArtifactsByURIRequest) GetUris() []string {
	if x != nil {
		return x.Uris
	}
	return nil
}

type GetArtifactsByURIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts" json:"artifacts,omitempty"`
}

func (x *GetArtifactsByURIResponse) Reset() {
	*x = GetArtifactsByURIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsByURIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsByURIResponse) ProtoMessage() {}

func (x *GetArtifactsByURIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsByURIResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactsByURIResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{35}
}

func (x *GetArtifactsByURIResponse) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// Request to retrieve Executions using List options.
// If option is not specified then all Executions are returned.
type GetExecutionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify options.
	// Currently supports:
	//   1. Field to order the results.
	//   2. Page size.
	Options *ListOperationOptions `protobuf:"bytes,1,opt,name=options" json:"options,omitempty"`
}

func (x *GetExecutionsRequest) Reset() {
	*x = GetExecutionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionsRequest) ProtoMessage() {}

func (x *GetExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionsRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetExecutionsRequest) GetOptions() *ListOperationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetExecutionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returned executions.
	Executions []*Execution `protobuf:"bytes,1,rep,name=executions" json:"executions,omitempty"`
	// Token to use to retreive next page of results if list options are used in
	// the request.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GetExecutionsResponse) Reset() {
	*x = GetExecutionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionsResponse) ProtoMessage() {}

func (x *GetExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionsResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetExecutionsResponse) GetExecutions() []*Execution {
	if x != nil {
		return x.Executions
	}
	return nil
}

func (x *GetExecutionsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GetArtifactTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName *string `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
}

func (x *GetArtifactTypeRequest) Reset() {
	*x = GetArtifactTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactTypeRequest) ProtoMessage() {}

func (x *GetArtifactTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactTypeRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactTypeRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetArtifactTypeRequest) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

type GetArtifactTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Gets an artifact type, or clear if it does not exist.
	ArtifactType *ArtifactType `protobuf:"bytes,1,opt,name=artifact_type,json=artifactType" json:"artifact_type,omitempty"`
}

func (x *GetArtifactTypeResponse) Reset() {
	*x = GetArtifactTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactTypeResponse) ProtoMessage() {}

func (x *GetArtifactTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactTypeResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactTypeResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{39}
}

func (x *GetArtifactTypeResponse) GetArtifactType() *ArtifactType {
	if x != nil {
		return x.ArtifactType
	}
	return nil
}

type GetArtifactTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetArtifactTypesRequest) Reset() {
	*x = GetArtifactTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactTypesRequest) ProtoMessage() {}

func (x *GetArtifactTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactTypesRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactTypesRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{40}
}

type GetArtifactTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtifactTypes []*ArtifactType `protobuf:"bytes,1,rep,name=artifact_types,json=artifactTypes" json:"artifact_types,omitempty"`
}

func (x *GetArtifactTypesResponse) Reset() {
	*x = GetArtifactTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactTypesResponse) ProtoMessage() {}

func (x *GetArtifactTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactTypesResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactTypesResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{41}
}

func (x *GetArtifactTypesResponse) GetArtifactTypes() []*ArtifactType {
	if x != nil {
		return x.ArtifactTypes
	}
	return nil
}

type GetExecutionTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetExecutionTypesRequest) Reset() {
	*x = GetExecutionTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionTypesRequest) ProtoMessage() {}

func (x *GetExecutionTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionTypesRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionTypesRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{42}
}

type GetExecutionTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionTypes []*ExecutionType `protobuf:"bytes,1,rep,name=execution_types,json=executionTypes" json:"execution_types,omitempty"`
}

func (x *GetExecutionTypesResponse) Reset() {
	*x = GetExecutionTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionTypesResponse) ProtoMessage() {}

func (x *GetExecutionTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionTypesResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionTypesResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{43}
}

func (x *GetExecutionTypesResponse) GetExecutionTypes() []*ExecutionType {
	if x != nil {
		return x.ExecutionTypes
	}
	return nil
}

type GetContextTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetContextTypesRequest) Reset() {
	*x = GetContextTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextTypesRequest) ProtoMessage() {}

func (x *GetContextTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextTypesRequest.ProtoReflect.Descriptor instead.
func (*GetContextTypesRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{44}
}

type GetContextTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextTypes []*ContextType `protobuf:"bytes,1,rep,name=context_types,json=contextTypes" json:"context_types,omitempty"`
}

func (x *GetContextTypesResponse) Reset() {
	*x = GetContextTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextTypesResponse) ProtoMessage() {}

func (x *GetContextTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextTypesResponse.ProtoReflect.Descriptor instead.
func (*GetContextTypesResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{45}
}

func (x *GetContextTypesResponse) GetContextTypes() []*ContextType {
	if x != nil {
		return x.ContextTypes
	}
	return nil
}

type GetExecutionsByTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName *string `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
}

func (x *GetExecutionsByTypeRequest) Reset() {
	*x = GetExecutionsByTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionsByTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionsByTypeRequest) ProtoMessage() {}

func (x *GetExecutionsByTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionsByTypeRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionsByTypeRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{46}
}

func (x *GetExecutionsByTypeRequest) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

type GetExecutionsByTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executions []*Execution `protobuf:"bytes,1,rep,name=executions" json:"executions,omitempty"`
}

func (x *GetExecutionsByTypeResponse) Reset() {
	*x = GetExecutionsByTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionsByTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionsByTypeResponse) ProtoMessage() {}

func (x *GetExecutionsByTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionsByTypeResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionsByTypeResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{47}
}

func (x *GetExecutionsByTypeResponse) GetExecutions() []*Execution {
	if x != nil {
		return x.Executions
	}
	return nil
}

type GetExecutionByTypeAndNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName      *string `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
	ExecutionName *string `protobuf:"bytes,2,opt,name=execution_name,json=executionName" json:"execution_name,omitempty"`
}

func (x *GetExecutionByTypeAndNameRequest) Reset() {
	*x = GetExecutionByTypeAndNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionByTypeAndNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionByTypeAndNameRequest) ProtoMessage() {}

func (x *GetExecutionByTypeAndNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionByTypeAndNameRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionByTypeAndNameRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{48}
}

func (x *GetExecutionByTypeAndNameRequest) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

func (x *GetExecutionByTypeAndNameRequest) GetExecutionName() string {
	if x != nil && x.ExecutionName != nil {
		return *x.ExecutionName
	}
	return ""
}

type GetExecutionByTypeAndNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Execution *Execution `protobuf:"bytes,1,opt,name=execution" json:"execution,omitempty"`
}

func (x *GetExecutionByTypeAndNameResponse) Reset() {
	*x = GetExecutionByTypeAndNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionByTypeAndNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionByTypeAndNameResponse) ProtoMessage() {}

func (x *GetExecutionByTypeAndNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionByTypeAndNameResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionByTypeAndNameResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{49}
}

func (x *GetExecutionByTypeAndNameResponse) GetExecution() *Execution {
	if x != nil {
		return x.Execution
	}
	return nil
}

type GetExecutionsByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of execution ids to retrieve.
	ExecutionIds []int64 `protobuf:"varint,1,rep,name=execution_ids,json=executionIds" json:"execution_ids,omitempty"`
}

func (x *GetExecutionsByIDRequest) Reset() {
	*x = GetExecutionsByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionsByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionsByIDRequest) ProtoMessage() {}

func (x *GetExecutionsByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionsByIDRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionsByIDRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{50}
}

func (x *GetExecutionsByIDRequest) GetExecutionIds() []int64 {
	if x != nil {
		return x.ExecutionIds
	}
	return nil
}

type GetExecutionsByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result is not index-aligned: if an id is not found, it is not
	// returned.
	Executions []*Execution `protobuf:"bytes,1,rep,name=executions" json:"executions,omitempty"`
}

func (x *GetExecutionsByIDResponse) Reset() {
	*x = GetExecutionsByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionsByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionsByIDResponse) ProtoMessage() {}

func (x *GetExecutionsByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionsByIDResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionsByIDResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{51}
}

func (x *GetExecutionsByIDResponse) GetExecutions() []*Execution {
	if x != nil {
		return x.Executions
	}
	return nil
}

type GetExecutionTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName *string `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
}

func (x *GetExecutionTypeRequest) Reset() {
	*x = GetExecutionTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionTypeRequest) ProtoMessage() {}

func (x *GetExecutionTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionTypeRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionTypeRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{52}
}

func (x *GetExecutionTypeRequest) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

type GetExecutionTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Gets an execution type, or clear if it does not exist.
	ExecutionType *ExecutionType `protobuf:"bytes,1,opt,name=execution_type,json=executionType" json:"execution_type,omitempty"`
}

func (x *GetExecutionTypeResponse) Reset() {
	*x = GetExecutionTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionTypeResponse) ProtoMessage() {}

func (x *GetExecutionTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionTypeResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionTypeResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{53}
}

func (x *GetExecutionTypeResponse) GetExecutionType() *ExecutionType {
	if x != nil {
		return x.ExecutionType
	}
	return nil
}

// Gets all events with matching execution ids.
type GetEventsByExecutionIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionIds []int64 `protobuf:"varint,1,rep,name=execution_ids,json=executionIds" json:"execution_ids,omitempty"`
}

func (x *GetEventsByExecutionIDsRequest) Reset() {
	*x = GetEventsByExecutionIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsByExecutionIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsByExecutionIDsRequest) ProtoMessage() {}

func (x *GetEventsByExecutionIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsByExecutionIDsRequest.ProtoReflect.Descriptor instead.
func (*GetEventsByExecutionIDsRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{54}
}

func (x *GetEventsByExecutionIDsRequest) GetExecutionIds() []int64 {
	if x != nil {
		return x.ExecutionIds
	}
	return nil
}

type GetEventsByExecutionIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
}

func (x *GetEventsByExecutionIDsResponse) Reset() {
	*x = GetEventsByExecutionIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsByExecutionIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsByExecutionIDsResponse) ProtoMessage() {}

func (x *GetEventsByExecutionIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsByExecutionIDsResponse.ProtoReflect.Descriptor instead.
func (*GetEventsByExecutionIDsResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{55}
}

func (x *GetEventsByExecutionIDsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetEventsByArtifactIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtifactIds []int64 `protobuf:"varint,1,rep,name=artifact_ids,json=artifactIds" json:"artifact_ids,omitempty"`
}

func (x *GetEventsByArtifactIDsRequest) Reset() {
	*x = GetEventsByArtifactIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsByArtifactIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsByArtifactIDsRequest) ProtoMessage() {}

func (x *GetEventsByArtifactIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsByArtifactIDsRequest.ProtoReflect.Descriptor instead.
func (*GetEventsByArtifactIDsRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{56}
}

func (x *GetEventsByArtifactIDsRequest) GetArtifactIds() []int64 {
	if x != nil {
		return x.ArtifactIds
	}
	return nil
}

type GetEventsByArtifactIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
}

func (x *GetEventsByArtifactIDsResponse) Reset() {
	*x = GetEventsByArtifactIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsByArtifactIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsByArtifactIDsResponse) ProtoMessage() {}

func (x *GetEventsByArtifactIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsByArtifactIDsResponse.ProtoReflect.Descriptor instead.
func (*GetEventsByArtifactIDsResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{57}
}

func (x *GetEventsByArtifactIDsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetArtifactTypesByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeIds []int64 `protobuf:"varint,1,rep,name=type_ids,json=typeIds" json:"type_ids,omitempty"`
}

func (x *GetArtifactTypesByIDRequest) Reset() {
	*x = GetArtifactTypesByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactTypesByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactTypesByIDRequest) ProtoMessage() {}

func (x *GetArtifactTypesByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactTypesByIDRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactTypesByIDRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{58}
}

func (x *GetArtifactTypesByIDRequest) GetTypeIds() []int64 {
	if x != nil {
		return x.TypeIds
	}
	return nil
}

type GetArtifactTypesByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result is not index-aligned: if an id is not found, it is not
	// returned.
	ArtifactTypes []*ArtifactType `protobuf:"bytes,1,rep,name=artifact_types,json=artifactTypes" json:"artifact_types,omitempty"`
}

func (x *GetArtifactTypesByIDResponse) Reset() {
	*x = GetArtifactTypesByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactTypesByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactTypesByIDResponse) ProtoMessage() {}

func (x *GetArtifactTypesByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactTypesByIDResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactTypesByIDResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{59}
}

func (x *GetArtifactTypesByIDResponse) GetArtifactTypes() []*ArtifactType {
	if x != nil {
		return x.ArtifactTypes
	}
	return nil
}

type GetExecutionTypesByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeIds []int64 `protobuf:"varint,1,rep,name=type_ids,json=typeIds" json:"type_ids,omitempty"`
}

func (x *GetExecutionTypesByIDRequest) Reset() {
	*x = GetExecutionTypesByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionTypesByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionTypesByIDRequest) ProtoMessage() {}

func (x *GetExecutionTypesByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionTypesByIDRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionTypesByIDRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{60}
}

func (x *GetExecutionTypesByIDRequest) GetTypeIds() []int64 {
	if x != nil {
		return x.TypeIds
	}
	return nil
}

type GetExecutionTypesByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result is not index-aligned: if an id is not found, it is not
	// returned.
	ExecutionTypes []*ExecutionType `protobuf:"bytes,1,rep,name=execution_types,json=executionTypes" json:"execution_types,omitempty"`
}

func (x *GetExecutionTypesByIDResponse) Reset() {
	*x = GetExecutionTypesByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionTypesByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionTypesByIDResponse) ProtoMessage() {}

func (x *GetExecutionTypesByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionTypesByIDResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionTypesByIDResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{61}
}

func (x *GetExecutionTypesByIDResponse) GetExecutionTypes() []*ExecutionType {
	if x != nil {
		return x.ExecutionTypes
	}
	return nil
}

type GetContextTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName *string `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
}

func (x *GetContextTypeRequest) Reset() {
	*x = GetContextTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextTypeRequest) ProtoMessage() {}

func (x *GetContextTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextTypeRequest.ProtoReflect.Descriptor instead.
func (*GetContextTypeRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{62}
}

func (x *GetContextTypeRequest) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

type GetContextTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Gets a context type, or clear if it does not exist.
	ContextType *ContextType `protobuf:"bytes,1,opt,name=context_type,json=contextType" json:"context_type,omitempty"`
}

func (x *GetContextTypeResponse) Reset() {
	*x = GetContextTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextTypeResponse) ProtoMessage() {}

func (x *GetContextTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextTypeResponse.ProtoReflect.Descriptor instead.
func (*GetContextTypeResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{63}
}

func (x *GetContextTypeResponse) GetContextType() *ContextType {
	if x != nil {
		return x.ContextType
	}
	return nil
}

type GetContextTypesByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeIds []int64 `protobuf:"varint,1,rep,name=type_ids,json=typeIds" json:"type_ids,omitempty"`
}

func (x *GetContextTypesByIDRequest) Reset() {
	*x = GetContextTypesByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextTypesByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextTypesByIDRequest) ProtoMessage() {}

func (x *GetContextTypesByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextTypesByIDRequest.ProtoReflect.Descriptor instead.
func (*GetContextTypesByIDRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{64}
}

func (x *GetContextTypesByIDRequest) GetTypeIds() []int64 {
	if x != nil {
		return x.TypeIds
	}
	return nil
}

type GetContextTypesByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result is not index-aligned: if an id is not found, it is not
	// returned.
	ContextTypes []*ContextType `protobuf:"bytes,1,rep,name=context_types,json=contextTypes" json:"context_types,omitempty"`
}

func (x *GetContextTypesByIDResponse) Reset() {
	*x = GetContextTypesByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextTypesByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextTypesByIDResponse) ProtoMessage() {}

func (x *GetContextTypesByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextTypesByIDResponse.ProtoReflect.Descriptor instead.
func (*GetContextTypesByIDResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{65}
}

func (x *GetContextTypesByIDResponse) GetContextTypes() []*ContextType {
	if x != nil {
		return x.ContextTypes
	}
	return nil
}

// Request to retrieve Contexts using List options.
// If option is not specified then all Contexts are returned.
type GetContextsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify options.
	// Currently supports:
	//   1. Field to order the results.
	//   2. Page size.
	Options *ListOperationOptions `protobuf:"bytes,1,opt,name=options" json:"options,omitempty"`
}

func (x *GetContextsRequest) Reset() {
	*x = GetContextsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextsRequest) ProtoMessage() {}

func (x *GetContextsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextsRequest.ProtoReflect.Descriptor instead.
func (*GetContextsRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{66}
}

func (x *GetContextsRequest) GetOptions() *ListOperationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetContextsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returned contexts.
	Contexts []*Context `protobuf:"bytes,1,rep,name=contexts" json:"contexts,omitempty"`
	// Token to use to retreive next page of results if list options are used in
	// the request.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GetContextsResponse) Reset() {
	*x = GetContextsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextsResponse) ProtoMessage() {}

func (x *GetContextsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextsResponse.ProtoReflect.Descriptor instead.
func (*GetContextsResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{67}
}

func (x *GetContextsResponse) GetContexts() []*Context {
	if x != nil {
		return x.Contexts
	}
	return nil
}

func (x *GetContextsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GetContextsByTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName *string `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
}

func (x *GetContextsByTypeRequest) Reset() {
	*x = GetContextsByTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextsByTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextsByTypeRequest) ProtoMessage() {}

func (x *GetContextsByTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextsByTypeRequest.ProtoReflect.Descriptor instead.
func (*GetContextsByTypeRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{68}
}

func (x *GetContextsByTypeRequest) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

type GetContextsByTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contexts []*Context `protobuf:"bytes,1,rep,name=contexts" json:"contexts,omitempty"`
}

func (x *GetContextsByTypeResponse) Reset() {
	*x = GetContextsByTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextsByTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextsByTypeResponse) ProtoMessage() {}

func (x *GetContextsByTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextsByTypeResponse.ProtoReflect.Descriptor instead.
func (*GetContextsByTypeResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{69}
}

func (x *GetContextsByTypeResponse) GetContexts() []*Context {
	if x != nil {
		return x.Contexts
	}
	return nil
}

type GetContextByTypeAndNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName    *string `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
	ContextName *string `protobuf:"bytes,2,opt,name=context_name,json=contextName" json:"context_name,omitempty"`
}

func (x *GetContextByTypeAndNameRequest) Reset() {
	*x = GetContextByTypeAndNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextByTypeAndNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextByTypeAndNameRequest) ProtoMessage() {}

func (x *GetContextByTypeAndNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextByTypeAndNameRequest.ProtoReflect.Descriptor instead.
func (*GetContextByTypeAndNameRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{70}
}

func (x *GetContextByTypeAndNameRequest) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

func (x *GetContextByTypeAndNameRequest) GetContextName() string {
	if x != nil && x.ContextName != nil {
		return *x.ContextName
	}
	return ""
}

type GetContextByTypeAndNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context *Context `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
}

func (x *GetContextByTypeAndNameResponse) Reset() {
	*x = GetContextByTypeAndNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextByTypeAndNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextByTypeAndNameResponse) ProtoMessage() {}

func (x *GetContextByTypeAndNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextByTypeAndNameResponse.ProtoReflect.Descriptor instead.
func (*GetContextByTypeAndNameResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{71}
}

func (x *GetContextByTypeAndNameResponse) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type GetContextsByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of context ids to retrieve.
	ContextIds []int64 `protobuf:"varint,1,rep,name=context_ids,json=contextIds" json:"context_ids,omitempty"`
}

func (x *GetContextsByIDRequest) Reset() {
	*x = GetContextsByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextsByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextsByIDRequest) ProtoMessage() {}

func (x *GetContextsByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextsByIDRequest.ProtoReflect.Descriptor instead.
func (*GetContextsByIDRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{72}
}

func (x *GetContextsByIDRequest) GetContextIds() []int64 {
	if x != nil {
		return x.ContextIds
	}
	return nil
}

type GetContextsByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result is not index-aligned: if an id is not found, it is not
	// returned.
	Contexts []*Context `protobuf:"bytes,1,rep,name=contexts" json:"contexts,omitempty"`
}

func (x *GetContextsByIDResponse) Reset() {
	*x = GetContextsByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextsByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextsByIDResponse) ProtoMessage() {}

func (x *GetContextsByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextsByIDResponse.ProtoReflect.Descriptor instead.
func (*GetContextsByIDResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{73}
}

func (x *GetContextsByIDResponse) GetContexts() []*Context {
	if x != nil {
		return x.Contexts
	}
	return nil
}

type GetContextsByArtifactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtifactId *int64 `protobuf:"varint,1,opt,name=artifact_id,json=artifactId" json:"artifact_id,omitempty"`
}

func (x *GetContextsByArtifactRequest) Reset() {
	*x = GetContextsByArtifactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextsByArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextsByArtifactRequest) ProtoMessage() {}

func (x *GetContextsByArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextsByArtifactRequest.ProtoReflect.Descriptor instead.
func (*GetContextsByArtifactRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{74}
}

func (x *GetContextsByArtifactRequest) GetArtifactId() int64 {
	if x != nil && x.ArtifactId != nil {
		return *x.ArtifactId
	}
	return 0
}

type GetContextsByArtifactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contexts []*Context `protobuf:"bytes,1,rep,name=contexts" json:"contexts,omitempty"`
}

func (x *GetContextsByArtifactResponse) Reset() {
	*x = GetContextsByArtifactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextsByArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextsByArtifactResponse) ProtoMessage() {}

func (x *GetContextsByArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextsByArtifactResponse.ProtoReflect.Descriptor instead.
func (*GetContextsByArtifactResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{75}
}

func (x *GetContextsByArtifactResponse) GetContexts() []*Context {
	if x != nil {
		return x.Contexts
	}
	return nil
}

type GetContextsByExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionId *int64 `protobuf:"varint,1,opt,name=execution_id,json=executionId" json:"execution_id,omitempty"`
}

func (x *GetContextsByExecutionRequest) Reset() {
	*x = GetContextsByExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextsByExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextsByExecutionRequest) ProtoMessage() {}

func (x *GetContextsByExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextsByExecutionRequest.ProtoReflect.Descriptor instead.
func (*GetContextsByExecutionRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{76}
}

func (x *GetContextsByExecutionRequest) GetExecutionId() int64 {
	if x != nil && x.ExecutionId != nil {
		return *x.ExecutionId
	}
	return 0
}

type GetContextsByExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contexts []*Context `protobuf:"bytes,1,rep,name=contexts" json:"contexts,omitempty"`
}

func (x *GetContextsByExecutionResponse) Reset() {
	*x = GetContextsByExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextsByExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextsByExecutionResponse) ProtoMessage() {}

func (x *GetContextsByExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextsByExecutionResponse.ProtoReflect.Descriptor instead.
func (*GetContextsByExecutionResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{77}
}

func (x *GetContextsByExecutionResponse) GetContexts() []*Context {
	if x != nil {
		return x.Contexts
	}
	return nil
}

type GetParentContextsByContextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *int64 `protobuf:"varint,1,opt,name=context_id,json=contextId" json:"context_id,omitempty"`
}

func (x *GetParentContextsByContextRequest) Reset() {
	*x = GetParentContextsByContextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParentContextsByContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParentContextsByContextRequest) ProtoMessage() {}

func (x *GetParentContextsByContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParentContextsByContextRequest.ProtoReflect.Descriptor instead.
func (*GetParentContextsByContextRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{78}
}

func (x *GetParentContextsByContextRequest) GetContextId() int64 {
	if x != nil && x.ContextId != nil {
		return *x.ContextId
	}
	return 0
}

type GetParentContextsByContextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contexts []*Context `protobuf:"bytes,1,rep,name=contexts" json:"contexts,omitempty"`
}

func (x *GetParentContextsByContextResponse) Reset() {
	*x = GetParentContextsByContextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParentContextsByContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParentContextsByContextResponse) ProtoMessage() {}

func (x *GetParentContextsByContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParentContextsByContextResponse.ProtoReflect.Descriptor instead.
func (*GetParentContextsByContextResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{79}
}

func (x *GetParentContextsByContextResponse) GetContexts() []*Context {
	if x != nil {
		return x.Contexts
	}
	return nil
}

type GetChildrenContextsByContextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *int64 `protobuf:"varint,1,opt,name=context_id,json=contextId" json:"context_id,omitempty"`
}

func (x *GetChildrenContextsByContextRequest) Reset() {
	*x = GetChildrenContextsByContextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChildrenContextsByContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChildrenContextsByContextRequest) ProtoMessage() {}

func (x *GetChildrenContextsByContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChildrenContextsByContextRequest.ProtoReflect.Descriptor instead.
func (*GetChildrenContextsByContextRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{80}
}

func (x *GetChildrenContextsByContextRequest) GetContextId() int64 {
	if x != nil && x.ContextId != nil {
		return *x.ContextId
	}
	return 0
}

type GetChildrenContextsByContextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contexts []*Context `protobuf:"bytes,1,rep,name=contexts" json:"contexts,omitempty"`
}

func (x *GetChildrenContextsByContextResponse) Reset() {
	*x = GetChildrenContextsByContextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChildrenContextsByContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChildrenContextsByContextResponse) ProtoMessage() {}

func (x *GetChildrenContextsByContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChildrenContextsByContextResponse.ProtoReflect.Descriptor instead.
func (*GetChildrenContextsByContextResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{81}
}

func (x *GetChildrenContextsByContextResponse) GetContexts() []*Context {
	if x != nil {
		return x.Contexts
	}
	return nil
}

type GetArtifactsByContextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *int64 `protobuf:"varint,1,opt,name=context_id,json=contextId" json:"context_id,omitempty"`
	// Specify List options.
	// Currently supports:
	//   1. Field to order the results.
	//   2. Page size.
	Options *ListOperationOptions `protobuf:"bytes,2,opt,name=options" json:"options,omitempty"`
}

func (x *GetArtifactsByContextRequest) Reset() {
	*x = GetArtifactsByContextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsByContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsByContextRequest) ProtoMessage() {}

func (x *GetArtifactsByContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsByContextRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactsByContextRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{82}
}

func (x *GetArtifactsByContextRequest) GetContextId() int64 {
	if x != nil && x.ContextId != nil {
		return *x.ContextId
	}
	return 0
}

func (x *GetArtifactsByContextRequest) GetOptions() *ListOperationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetArtifactsByContextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts" json:"artifacts,omitempty"`
	// Token to use to retreive next page of results if list options are used in
	// the request.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GetArtifactsByContextResponse) Reset() {
	*x = GetArtifactsByContextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsByContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsByContextResponse) ProtoMessage() {}

func (x *GetArtifactsByContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsByContextResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactsByContextResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{83}
}

func (x *GetArtifactsByContextResponse) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *GetArtifactsByContextResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type GetExecutionsByContextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *int64 `protobuf:"varint,1,opt,name=context_id,json=contextId" json:"context_id,omitempty"`
	// Specify List options.
	// Currently supports:
	//   1. Field to order the results.
	//   2. Page size.
	Options *ListOperationOptions `protobuf:"bytes,2,opt,name=options" json:"options,omitempty"`
}

func (x *GetExecutionsByContextRequest) Reset() {
	*x = GetExecutionsByContextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionsByContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionsByContextRequest) ProtoMessage() {}

func (x *GetExecutionsByContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionsByContextRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionsByContextRequest) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{84}
}

func (x *GetExecutionsByContextRequest) GetContextId() int64 {
	if x != nil && x.ContextId != nil {
		return *x.ContextId
	}
	return 0
}

func (x *GetExecutionsByContextRequest) GetOptions() *ListOperationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetExecutionsByContextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executions []*Execution `protobuf:"bytes,1,rep,name=executions" json:"executions,omitempty"`
	// Token to use to retreive next page of results if list options are used in
	// the request.
	NextPageToken *string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (x *GetExecutionsByContextResponse) Reset() {
	*x = GetExecutionsByContextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionsByContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionsByContextResponse) ProtoMessage() {}

func (x *GetExecutionsByContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionsByContextResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionsByContextResponse) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{85}
}

func (x *GetExecutionsByContextResponse) GetExecutions() []*Execution {
	if x != nil {
		return x.Executions
	}
	return nil
}

func (x *GetExecutionsByContextResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type PutArtifactsRequest_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// When there are multiple writers to update an existing node to
	// different states, there may be a race and the end result of the
	// concurrent update is nondeterministic. If the field is set, then an
	// optimistic concurrency control (OCC) scheme is used during update:
	// it compares the `artifact`.`last_update_time_since_epoch` in the request
	// with the stored `last_update_time_since_epoch` having the same
	// `artifact`.`id`. If they are different, the request fails, and the user
	// can read the stored node and retry node update.
	// When the option is set, the timestamp after update is guaranteed to be
	// increased and different from the input artifact.
	// When set the option, the caller should set it for all concurrent writers.
	AbortIfLatestUpdatedTimeChanged *bool `protobuf:"varint,1,opt,name=abort_if_latest_updated_time_changed,json=abortIfLatestUpdatedTimeChanged" json:"abort_if_latest_updated_time_changed,omitempty"`
}

func (x *PutArtifactsRequest_Options) Reset() {
	*x = PutArtifactsRequest_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutArtifactsRequest_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutArtifactsRequest_Options) ProtoMessage() {}

func (x *PutArtifactsRequest_Options) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutArtifactsRequest_Options.ProtoReflect.Descriptor instead.
func (*PutArtifactsRequest_Options) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PutArtifactsRequest_Options) GetAbortIfLatestUpdatedTimeChanged() bool {
	if x != nil && x.AbortIfLatestUpdatedTimeChanged != nil {
		return *x.AbortIfLatestUpdatedTimeChanged
	}
	return false
}

// A pair of an artifact and an event used or generated by an execution, e.g.,
// during the execution run, it uses none or many artifacts as input, and
// generate none or many artifacts as output.
type PutExecutionRequest_ArtifactAndEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The pair may have an artifact. If present and no artifact.id is given,
	// then it inserts the artifact, otherwise it updates the artifact.
	Artifact *Artifact `protobuf:"bytes,1,opt,name=artifact" json:"artifact,omitempty"`
	// The pair may have an event. Providing event.artifact_id or
	// event.execution_id is optional. If the ids are given, it must align with
	// the `artifact`.id / `execution`.id respectively. If artifact is not
	// given and event.artifact_id is set, it must exist in the backend.
	Event *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (x *PutExecutionRequest_ArtifactAndEvent) Reset() {
	*x = PutExecutionRequest_ArtifactAndEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutExecutionRequest_ArtifactAndEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutExecutionRequest_ArtifactAndEvent) ProtoMessage() {}

func (x *PutExecutionRequest_ArtifactAndEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutExecutionRequest_ArtifactAndEvent.ProtoReflect.Descriptor instead.
func (*PutExecutionRequest_ArtifactAndEvent) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{14, 0}
}

func (x *PutExecutionRequest_ArtifactAndEvent) GetArtifact() *Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *PutExecutionRequest_ArtifactAndEvent) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type PutExecutionRequest_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// When there's a race to publish executions with a new context with the
	// same context.name, by default there'll be one writer succeeds and
	// the rest of the writers returning AlreadyExists errors. If set the field,
	// the failed writer will reuse the stored context in the transaction.
	ReuseContextIfAlreadyExist *bool `protobuf:"varint,1,opt,name=reuse_context_if_already_exist,json=reuseContextIfAlreadyExist" json:"reuse_context_if_already_exist,omitempty"`
}

func (x *PutExecutionRequest_Options) Reset() {
	*x = PutExecutionRequest_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutExecutionRequest_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutExecutionRequest_Options) ProtoMessage() {}

func (x *PutExecutionRequest_Options) ProtoReflect() protoreflect.Message {
	mi := &file_ml_metadata_proto_metadata_store_service_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutExecutionRequest_Options.ProtoReflect.Descriptor instead.
func (*PutExecutionRequest_Options) Descriptor() ([]byte, []int) {
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP(), []int{14, 1}
}

func (x *PutExecutionRequest_Options) GetReuseContextIfAlreadyExist() bool {
	if x != nil && x.ReuseContextIfAlreadyExist != nil {
		return *x.ReuseContextIfAlreadyExist
	}
	return false
}

var File_ml_metadata_proto_metadata_store_service_proto protoreflect.FileDescriptor

var file_ml_metadata_proto_metadata_store_service_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x26, 0x6d,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x11, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x70,
	0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x4d, 0x61, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x1a, 0x5a, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x12,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x0e,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x3a,
	0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x6d, 0x61,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x35,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe8,
	0x01, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x58, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4d, 0x0a, 0x24, 0x61, 0x62,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x66, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x49,
	0x66, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0x39, 0x0a, 0x14, 0x50, 0x75, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x8a, 0x02, 0x0a, 0x16, 0x50, 0x75, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x6f, 0x6d, 0x69,
	0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x63, 0x61, 0x6e, 0x4f, 0x6d, 0x69, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2e, 0x0a,
	0x11, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0f, 0x63, 0x61,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x32, 0x0a,
	0x10, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x22, 0x32, 0x0a, 0x17, 0x50, 0x75, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3c, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x22, 0x8e, 0x02, 0x0a, 0x17, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x41, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x41,
	0x64, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f,
	0x6f, 0x6d, 0x69, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x4f, 0x6d, 0x69, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x2e, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x0f, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x32, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x5f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x22, 0x33, 0x0a, 0x18, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x10, 0x50, 0x75, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x50, 0x75, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe6,
	0x03, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x63, 0x0a, 0x14,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x69, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6d, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x72,
	0x73, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x6f, 0x0a, 0x10, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x28,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x4d, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x42, 0x0a, 0x1e, 0x72, 0x65, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x66, 0x5f, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x72, 0x65, 0x75,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x66, 0x41, 0x6c, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x22, 0x7d, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x73, 0x22, 0x89, 0x03, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0f,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x41, 0x64, 0x64,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x6f, 0x6d,
	0x69, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x63, 0x61, 0x6e, 0x4f, 0x6d, 0x69, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2e,
	0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0f, 0x63,
	0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x32,
	0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x5f, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x0f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x22, 0x86, 0x02, 0x0a, 0x15,
	0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6c,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x41,
	0x64, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f,
	0x6f, 0x6d, 0x69, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x4f, 0x6d, 0x69, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x2e, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x0f, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x32, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x5f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x22, 0x31, 0x0a, 0x16, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x22,
	0x36, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x25, 0x50, 0x75, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3c, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x28, 0x0a,
	0x26, 0x50, 0x75, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x18, 0x50, 0x75, 0x74, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x50, 0x75, 0x74, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x51, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x22, 0x63, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x22, 0x3c,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x4f, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6c,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x22, 0x52, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x73, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x34, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x55, 0x52, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x69, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x72, 0x69, 0x73, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x50, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x55, 0x52,
	0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x22, 0x53,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x77, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x35, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x19,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x58, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x66, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6c,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22,
	0x53, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x36, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x45, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x73, 0x22, 0x4d, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42,
	0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x42, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x4c, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x42, 0x79, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x38, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x22, 0x60, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x0e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22,
	0x39, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x22, 0x64, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x22, 0x34, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x37, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x22, 0x5c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6c,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x37, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x4d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x22, 0x60, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x42, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x51, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x39, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x73,
	0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x22, 0x3f, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x51,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x73, 0x22, 0x42, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x42, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x21, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x22, 0x56, 0x0a,
	0x22, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x22, 0x44, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x24, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x22, 0x7a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x7c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x09, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x7b, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12,
	0x3b, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x80, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32,
	0xb9, 0x21, 0x0a, 0x14, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x6c,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50,
	0x75, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x2e, 0x6d,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x50,
	0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x08, 0x50, 0x75, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x50, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x50, 0x75, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x50, 0x75,
	0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x6c,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x09, 0x50, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x50, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50,
	0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x50, 0x75, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01,
	0x0a, 0x1e, 0x50, 0x75, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x32, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50,
	0x75, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e,
	0x64, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x50,
	0x75, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x12, 0x25, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50,
	0x75, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x61, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x29, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x25, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x27, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x6c,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x6d, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x21, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x24, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6c,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x2e, 0x6d, 0x6c,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x79, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x42,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x2e, 0x6d,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x42, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x42, 0x79, 0x55, 0x52, 0x49, 0x12, 0x25, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x42, 0x79, 0x55, 0x52, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x55, 0x52, 0x49, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x73, 0x12, 0x2b, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x73, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x44, 0x73, 0x12, 0x2a, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x73, 0x42, 0x79, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x29, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x42, 0x79, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x30, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x42,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x29, 0x2e,
	0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x2a, 0x2e, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
}

var (
	file_ml_metadata_proto_metadata_store_service_proto_rawDescOnce sync.Once
	file_ml_metadata_proto_metadata_store_service_proto_rawDescData = file_ml_metadata_proto_metadata_store_service_proto_rawDesc
)

func file_ml_metadata_proto_metadata_store_service_proto_rawDescGZIP() []byte {
	file_ml_metadata_proto_metadata_store_service_proto_rawDescOnce.Do(func() {
		file_ml_metadata_proto_metadata_store_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_ml_metadata_proto_metadata_store_service_proto_rawDescData)
	})
	return file_ml_metadata_proto_metadata_store_service_proto_rawDescData
}

var file_ml_metadata_proto_metadata_store_service_proto_msgTypes = make([]protoimpl.MessageInfo, 90)
var file_ml_metadata_proto_metadata_store_service_proto_goTypes = []interface{}{
	(*ArtifactAndType)(nil),                        // 0: ml_metadata.ArtifactAndType
	(*ArtifactStructMap)(nil),                      // 1: ml_metadata.ArtifactStructMap
	(*ArtifactStructList)(nil),                     // 2: ml_metadata.ArtifactStructList
	(*ArtifactStruct)(nil),                         // 3: ml_metadata.ArtifactStruct
	(*PutArtifactsRequest)(nil),                    // 4: ml_metadata.PutArtifactsRequest
	(*PutArtifactsResponse)(nil),                   // 5: ml_metadata.PutArtifactsResponse
	(*PutArtifactTypeRequest)(nil),                 // 6: ml_metadata.PutArtifactTypeRequest
	(*PutArtifactTypeResponse)(nil),                // 7: ml_metadata.PutArtifactTypeResponse
	(*PutExecutionsRequest)(nil),                   // 8: ml_metadata.PutExecutionsRequest
	(*PutExecutionsResponse)(nil),                  // 9: ml_metadata.PutExecutionsResponse
	(*PutExecutionTypeRequest)(nil),                // 10: ml_metadata.PutExecutionTypeRequest
	(*PutExecutionTypeResponse)(nil),               // 11: ml_metadata.PutExecutionTypeResponse
	(*PutEventsRequest)(nil),                       // 12: ml_metadata.PutEventsRequest
	(*PutEventsResponse)(nil),                      // 13: ml_metadata.PutEventsResponse
	(*PutExecutionRequest)(nil),                    // 14: ml_metadata.PutExecutionRequest
	(*PutExecutionResponse)(nil),                   // 15: ml_metadata.PutExecutionResponse
	(*PutTypesRequest)(nil),                        // 16: ml_metadata.PutTypesRequest
	(*PutTypesResponse)(nil),                       // 17: ml_metadata.PutTypesResponse
	(*PutContextTypeRequest)(nil),                  // 18: ml_metadata.PutContextTypeRequest
	(*PutContextTypeResponse)(nil),                 // 19: ml_metadata.PutContextTypeResponse
	(*PutContextsRequest)(nil),                     // 20: ml_metadata.PutContextsRequest
	(*PutContextsResponse)(nil),                    // 21: ml_metadata.PutContextsResponse
	(*PutAttributionsAndAssociationsRequest)(nil),  // 22: ml_metadata.PutAttributionsAndAssociationsRequest
	(*PutAttributionsAndAssociationsResponse)(nil), // 23: ml_metadata.PutAttributionsAndAssociationsResponse
	(*PutParentContextsRequest)(nil),               // 24: ml_metadata.PutParentContextsRequest
	(*PutParentContextsResponse)(nil),              // 25: ml_metadata.PutParentContextsResponse
	(*GetArtifactsByTypeRequest)(nil),              // 26: ml_metadata.GetArtifactsByTypeRequest
	(*GetArtifactsByTypeResponse)(nil),             // 27: ml_metadata.GetArtifactsByTypeResponse
	(*GetArtifactByTypeAndNameRequest)(nil),        // 28: ml_metadata.GetArtifactByTypeAndNameRequest
	(*GetArtifactByTypeAndNameResponse)(nil),       // 29: ml_metadata.GetArtifactByTypeAndNameResponse
	(*GetArtifactsByIDRequest)(nil),                // 30: ml_metadata.GetArtifactsByIDRequest
	(*GetArtifactsByIDResponse)(nil),               // 31: ml_metadata.GetArtifactsByIDResponse
	(*GetArtifactsRequest)(nil),                    // 32: ml_metadata.GetArtifactsRequest
	(*GetArtifactsResponse)(nil),                   // 33: ml_metadata.GetArtifactsResponse
	(*GetArtifactsByURIRequest)(nil),               // 34: ml_metadata.GetArtifactsByURIRequest
	(*GetArtifactsByURIResponse)(nil),              // 35: ml_metadata.GetArtifactsByURIResponse
	(*GetExecutionsRequest)(nil),                   // 36: ml_metadata.GetExecutionsRequest
	(*GetExecutionsResponse)(nil),                  // 37: ml_metadata.GetExecutionsResponse
	(*GetArtifactTypeRequest)(nil),                 // 38: ml_metadata.GetArtifactTypeRequest
	(*GetArtifactTypeResponse)(nil),                // 39: ml_metadata.GetArtifactTypeResponse
	(*GetArtifactTypesRequest)(nil),                // 40: ml_metadata.GetArtifactTypesRequest
	(*GetArtifactTypesResponse)(nil),               // 41: ml_metadata.GetArtifactTypesResponse
	(*GetExecutionTypesRequest)(nil),               // 42: ml_metadata.GetExecutionTypesRequest
	(*GetExecutionTypesResponse)(nil),              // 43: ml_metadata.GetExecutionTypesResponse
	(*GetContextTypesRequest)(nil),                 // 44: ml_metadata.GetContextTypesRequest
	(*GetContextTypesResponse)(nil),                // 45: ml_metadata.GetContextTypesResponse
	(*GetExecutionsByTypeRequest)(nil),             // 46: ml_metadata.GetExecutionsByTypeRequest
	(*GetExecutionsByTypeResponse)(nil),            // 47: ml_metadata.GetExecutionsByTypeResponse
	(*GetExecutionByTypeAndNameRequest)(nil),       // 48: ml_metadata.GetExecutionByTypeAndNameRequest
	(*GetExecutionByTypeAndNameResponse)(nil),      // 49: ml_metadata.GetExecutionByTypeAndNameResponse
	(*GetExecutionsByIDRequest)(nil),               // 50: ml_metadata.GetExecutionsByIDRequest
	(*GetExecutionsByIDResponse)(nil),              // 51: ml_metadata.GetExecutionsByIDResponse
	(*GetExecutionTypeRequest)(nil),                // 52: ml_metadata.GetExecutionTypeRequest
	(*GetExecutionTypeResponse)(nil),               // 53: ml_metadata.GetExecutionTypeResponse
	(*GetEventsByExecutionIDsRequest)(nil),         // 54: ml_metadata.GetEventsByExecutionIDsRequest
	(*GetEventsByExecutionIDsResponse)(nil),        // 55: ml_metadata.GetEventsByExecutionIDsResponse
	(*GetEventsByArtifactIDsRequest)(nil),          // 56: ml_metadata.GetEventsByArtifactIDsRequest
	(*GetEventsByArtifactIDsResponse)(nil),         // 57: ml_metadata.GetEventsByArtifactIDsResponse
	(*GetArtifactTypesByIDRequest)(nil),            // 58: ml_metadata.GetArtifactTypesByIDRequest
	(*GetArtifactTypesByIDResponse)(nil),           // 59: ml_metadata.GetArtifactTypesByIDResponse
	(*GetExecutionTypesByIDRequest)(nil),           // 60: ml_metadata.GetExecutionTypesByIDRequest
	(*GetExecutionTypesByIDResponse)(nil),          // 61: ml_metadata.GetExecutionTypesByIDResponse
	(*GetContextTypeRequest)(nil),                  // 62: ml_metadata.GetContextTypeRequest
	(*GetContextTypeResponse)(nil),                 // 63: ml_metadata.GetContextTypeResponse
	(*GetContextTypesByIDRequest)(nil),             // 64: ml_metadata.GetContextTypesByIDRequest
	(*GetContextTypesByIDResponse)(nil),            // 65: ml_metadata.GetContextTypesByIDResponse
	(*GetContextsRequest)(nil),                     // 66: ml_metadata.GetContextsRequest
	(*GetContextsResponse)(nil),                    // 67: ml_metadata.GetContextsResponse
	(*GetContextsByTypeRequest)(nil),               // 68: ml_metadata.GetContextsByTypeRequest
	(*GetContextsByTypeResponse)(nil),              // 69: ml_metadata.GetContextsByTypeResponse
	(*GetContextByTypeAndNameRequest)(nil),         // 70: ml_metadata.GetContextByTypeAndNameRequest
	(*GetContextByTypeAndNameResponse)(nil),        // 71: ml_metadata.GetContextByTypeAndNameResponse
	(*GetContextsByIDRequest)(nil),                 // 72: ml_metadata.GetContextsByIDRequest
	(*GetContextsByIDResponse)(nil),                // 73: ml_metadata.GetContextsByIDResponse
	(*GetContextsByArtifactRequest)(nil),           // 74: ml_metadata.GetContextsByArtifactRequest
	(*GetContextsByArtifactResponse)(nil),          // 75: ml_metadata.GetContextsByArtifactResponse
	(*GetContextsByExecutionRequest)(nil),          // 76: ml_metadata.GetContextsByExecutionRequest
	(*GetContextsByExecutionResponse)(nil),         // 77: ml_metadata.GetContextsByExecutionResponse
	(*GetParentContextsByContextRequest)(nil),      // 78: ml_metadata.GetParentContextsByContextRequest
	(*GetParentContextsByContextResponse)(nil),     // 79: ml_metadata.GetParentContextsByContextResponse
	(*GetChildrenContextsByContextRequest)(nil),    // 80: ml_metadata.GetChildrenContextsByContextRequest
	(*GetChildrenContextsByContextResponse)(nil),   // 81: ml_metadata.GetChildrenContextsByContextResponse
	(*GetArtifactsByContextRequest)(nil),           // 82: ml_metadata.GetArtifactsByContextRequest
	(*GetArtifactsByContextResponse)(nil),          // 83: ml_metadata.GetArtifactsByContextResponse
	(*GetExecutionsByContextRequest)(nil),          // 84: ml_metadata.GetExecutionsByContextRequest
	(*GetExecutionsByContextResponse)(nil),         // 85: ml_metadata.GetExecutionsByContextResponse
	nil,                                            // 86: ml_metadata.ArtifactStructMap.PropertiesEntry
	(*PutArtifactsRequest_Options)(nil),            // 87: ml_metadata.PutArtifactsRequest.Options
	(*PutExecutionRequest_ArtifactAndEvent)(nil),   // 88: ml_metadata.PutExecutionRequest.ArtifactAndEvent
	(*PutExecutionRequest_Options)(nil),            // 89: ml_metadata.PutExecutionRequest.Options
	(*Artifact)(nil),                               // 90: ml_metadata.Artifact
	(*ArtifactType)(nil),                           // 91: ml_metadata.ArtifactType
	(*Execution)(nil),                              // 92: ml_metadata.Execution
	(*ExecutionType)(nil),                          // 93: ml_metadata.ExecutionType
	(*Event)(nil),                                  // 94: ml_metadata.Event
	(*Context)(nil),                                // 95: ml_metadata.Context
	(*ContextType)(nil),                            // 96: ml_metadata.ContextType
	(*Attribution)(nil),                            // 97: ml_metadata.Attribution
	(*Association)(nil),                            // 98: ml_metadata.Association
	(*ParentContext)(nil),                          // 99: ml_metadata.ParentContext
	(*ListOperationOptions)(nil),                   // 100: ml_metadata.ListOperationOptions
}
var file_ml_metadata_proto_metadata_store_service_proto_depIdxs = []int32{
	90,  // 0: ml_metadata.ArtifactAndType.artifact:type_name -> ml_metadata.Artifact
	91,  // 1: ml_metadata.ArtifactAndType.type:type_name -> ml_metadata.ArtifactType
	86,  // 2: ml_metadata.ArtifactStructMap.properties:type_name -> ml_metadata.ArtifactStructMap.PropertiesEntry
	3,   // 3: ml_metadata.ArtifactStructList.elements:type_name -> ml_metadata.ArtifactStruct
	0,   // 4: ml_metadata.ArtifactStruct.artifact:type_name -> ml_metadata.ArtifactAndType
	1,   // 5: ml_metadata.ArtifactStruct.map:type_name -> ml_metadata.ArtifactStructMap
	2,   // 6: ml_metadata.ArtifactStruct.list:type_name -> ml_metadata.ArtifactStructList
	90,  // 7: ml_metadata.PutArtifactsRequest.artifacts:type_name -> ml_metadata.Artifact
	87,  // 8: ml_metadata.PutArtifactsRequest.options:type_name -> ml_metadata.PutArtifactsRequest.Options
	91,  // 9: ml_metadata.PutArtifactTypeRequest.artifact_type:type_name -> ml_metadata.ArtifactType
	92,  // 10: ml_metadata.PutExecutionsRequest.executions:type_name -> ml_metadata.Execution
	93,  // 11: ml_metadata.PutExecutionTypeRequest.execution_type:type_name -> ml_metadata.ExecutionType
	94,  // 12: ml_metadata.PutEventsRequest.events:type_name -> ml_metadata.Event
	92,  // 13: ml_metadata.PutExecutionRequest.execution:type_name -> ml_metadata.Execution
	88,  // 14: ml_metadata.PutExecutionRequest.artifact_event_pairs:type_name -> ml_metadata.PutExecutionRequest.ArtifactAndEvent
	95,  // 15: ml_metadata.PutExecutionRequest.contexts:type_name -> ml_metadata.Context
	89,  // 16: ml_metadata.PutExecutionRequest.options:type_name -> ml_metadata.PutExecutionRequest.Options
	91,  // 17: ml_metadata.PutTypesRequest.artifact_types:type_name -> ml_metadata.ArtifactType
	93,  // 18: ml_metadata.PutTypesRequest.execution_types:type_name -> ml_metadata.ExecutionType
	96,  // 19: ml_metadata.PutTypesRequest.context_types:type_name -> ml_metadata.ContextType
	96,  // 20: ml_metadata.PutContextTypeRequest.context_type:type_name -> ml_metadata.ContextType
	95,  // 21: ml_metadata.PutContextsRequest.contexts:type_name -> ml_metadata.Context
	97,  // 22: ml_metadata.PutAttributionsAndAssociationsRequest.attributions:type_name -> ml_metadata.Attribution
	98,  // 23: ml_metadata.PutAttributionsAndAssociationsRequest.associations:type_name -> ml_metadata.Association
	99,  // 24: ml_metadata.PutParentContextsRequest.parent_contexts:type_name -> ml_metadata.ParentContext
	90,  // 25: ml_metadata.GetArtifactsByTypeResponse.artifacts:type_name -> ml_metadata.Artifact
	90,  // 26: ml_metadata.GetArtifactByTypeAndNameResponse.artifact:type_name -> ml_metadata.Artifact
	90,  // 27: ml_metadata.GetArtifactsByIDResponse.artifacts:type_name -> ml_metadata.Artifact
	100, // 28: ml_metadata.GetArtifactsRequest.options:type_name -> ml_metadata.ListOperationOptions
	90,  // 29: ml_metadata.GetArtifactsResponse.artifacts:type_name -> ml_metadata.Artifact
	90,  // 30: ml_metadata.GetArtifactsByURIResponse.artifacts:type_name -> ml_metadata.Artifact
	100, // 31: ml_metadata.GetExecutionsRequest.options:type_name -> ml_metadata.ListOperationOptions
	92,  // 32: ml_metadata.GetExecutionsResponse.executions:type_name -> ml_metadata.Execution
	91,  // 33: ml_metadata.GetArtifactTypeResponse.artifact_type:type_name -> ml_metadata.ArtifactType
	91,  // 34: ml_metadata.GetArtifactTypesResponse.artifact_types:type_name -> ml_metadata.ArtifactType
	93,  // 35: ml_metadata.GetExecutionTypesResponse.execution_types:type_name -> ml_metadata.ExecutionType
	96,  // 36: ml_metadata.GetContextTypesResponse.context_types:type_name -> ml_metadata.ContextType
	92,  // 37: ml_metadata.GetExecutionsByTypeResponse.executions:type_name -> ml_metadata.Execution
	92,  // 38: ml_metadata.GetExecutionByTypeAndNameResponse.execution:type_name -> ml_metadata.Execution
	92,  // 39: ml_metadata.GetExecutionsByIDResponse.executions:type_name -> ml_metadata.Execution
	93,  // 40: ml_metadata.GetExecutionTypeResponse.execution_type:type_name -> ml_metadata.ExecutionType
	94,  // 41: ml_metadata.GetEventsByExecutionIDsResponse.events:type_name -> ml_metadata.Event
	94,  // 42: ml_metadata.GetEventsByArtifactIDsResponse.events:type_name -> ml_metadata.Event
	91,  // 43: ml_metadata.GetArtifactTypesByIDResponse.artifact_types:type_name -> ml_metadata.ArtifactType
	93,  // 44: ml_metadata.GetExecutionTypesByIDResponse.execution_types:type_name -> ml_metadata.ExecutionType
	96,  // 45: ml_metadata.GetContextTypeResponse.context_type:type_name -> ml_metadata.ContextType
	96,  // 46: ml_metadata.GetContextTypesByIDResponse.context_types:type_name -> ml_metadata.ContextType
	100, // 47: ml_metadata.GetContextsRequest.options:type_name -> ml_metadata.ListOperationOptions
	95,  // 48: ml_metadata.GetContextsResponse.contexts:type_name -> ml_metadata.Context
	95,  // 49: ml_metadata.GetContextsByTypeResponse.contexts:type_name -> ml_metadata.Context
	95,  // 50: ml_metadata.GetContextByTypeAndNameResponse.context:type_name -> ml_metadata.Context
	95,  // 51: ml_metadata.GetContextsByIDResponse.contexts:type_name -> ml_metadata.Context
	95,  // 52: ml_metadata.GetContextsByArtifactResponse.contexts:type_name -> ml_metadata.Context
	95,  // 53: ml_metadata.GetContextsByExecutionResponse.contexts:type_name -> ml_metadata.Context
	95,  // 54: ml_metadata.GetParentContextsByContextResponse.contexts:type_name -> ml_metadata.Context
	95,  // 55: ml_metadata.GetChildrenContextsByContextResponse.contexts:type_name -> ml_metadata.Context
	100, // 56: ml_metadata.GetArtifactsByContextRequest.options:type_name -> ml_metadata.ListOperationOptions
	90,  // 57: ml_metadata.GetArtifactsByContextResponse.artifacts:type_name -> ml_metadata.Artifact
	100, // 58: ml_metadata.GetExecutionsByContextRequest.options:type_name -> ml_metadata.ListOperationOptions
	92,  // 59: ml_metadata.GetExecutionsByContextResponse.executions:type_name -> ml_metadata.Execution
	3,   // 60: ml_metadata.ArtifactStructMap.PropertiesEntry.value:type_name -> ml_metadata.ArtifactStruct
	90,  // 61: ml_metadata.PutExecutionRequest.ArtifactAndEvent.artifact:type_name -> ml_metadata.Artifact
	94,  // 62: ml_metadata.PutExecutionRequest.ArtifactAndEvent.event:type_name -> ml_metadata.Event
	6,   // 63: ml_metadata.MetadataStoreService.PutArtifactType:input_type -> ml_metadata.PutArtifactTypeRequest
	10,  // 64: ml_metadata.MetadataStoreService.PutExecutionType:input_type -> ml_metadata.PutExecutionTypeRequest
	18,  // 65: ml_metadata.MetadataStoreService.PutContextType:input_type -> ml_metadata.PutContextTypeRequest
	16,  // 66: ml_metadata.MetadataStoreService.PutTypes:input_type -> ml_metadata.PutTypesRequest
	4,   // 67: ml_metadata.MetadataStoreService.PutArtifacts:input_type -> ml_metadata.PutArtifactsRequest
	8,   // 68: ml_metadata.MetadataStoreService.PutExecutions:input_type -> ml_metadata.PutExecutionsRequest
	12,  // 69: ml_metadata.MetadataStoreService.PutEvents:input_type -> ml_metadata.PutEventsRequest
	14,  // 70: ml_metadata.MetadataStoreService.PutExecution:input_type -> ml_metadata.PutExecutionRequest
	20,  // 71: ml_metadata.MetadataStoreService.PutContexts:input_type -> ml_metadata.PutContextsRequest
	22,  // 72: ml_metadata.MetadataStoreService.PutAttributionsAndAssociations:input_type -> ml_metadata.PutAttributionsAndAssociationsRequest
	24,  // 73: ml_metadata.MetadataStoreService.PutParentContexts:input_type -> ml_metadata.PutParentContextsRequest
	38,  // 74: ml_metadata.MetadataStoreService.GetArtifactType:input_type -> ml_metadata.GetArtifactTypeRequest
	58,  // 75: ml_metadata.MetadataStoreService.GetArtifactTypesByID:input_type -> ml_metadata.GetArtifactTypesByIDRequest
	40,  // 76: ml_metadata.MetadataStoreService.GetArtifactTypes:input_type -> ml_metadata.GetArtifactTypesRequest
	52,  // 77: ml_metadata.MetadataStoreService.GetExecutionType:input_type -> ml_metadata.GetExecutionTypeRequest
	60,  // 78: ml_metadata.MetadataStoreService.GetExecutionTypesByID:input_type -> ml_metadata.GetExecutionTypesByIDRequest
	42,  // 79: ml_metadata.MetadataStoreService.GetExecutionTypes:input_type -> ml_metadata.GetExecutionTypesRequest
	62,  // 80: ml_metadata.MetadataStoreService.GetContextType:input_type -> ml_metadata.GetContextTypeRequest
	64,  // 81: ml_metadata.MetadataStoreService.GetContextTypesByID:input_type -> ml_metadata.GetContextTypesByIDRequest
	44,  // 82: ml_metadata.MetadataStoreService.GetContextTypes:input_type -> ml_metadata.GetContextTypesRequest
	32,  // 83: ml_metadata.MetadataStoreService.GetArtifacts:input_type -> ml_metadata.GetArtifactsRequest
	36,  // 84: ml_metadata.MetadataStoreService.GetExecutions:input_type -> ml_metadata.GetExecutionsRequest
	66,  // 85: ml_metadata.MetadataStoreService.GetContexts:input_type -> ml_metadata.GetContextsRequest
	30,  // 86: ml_metadata.MetadataStoreService.GetArtifactsByID:input_type -> ml_metadata.GetArtifactsByIDRequest
	50,  // 87: ml_metadata.MetadataStoreService.GetExecutionsByID:input_type -> ml_metadata.GetExecutionsByIDRequest
	72,  // 88: ml_metadata.MetadataStoreService.GetContextsByID:input_type -> ml_metadata.GetContextsByIDRequest
	26,  // 89: ml_metadata.MetadataStoreService.GetArtifactsByType:input_type -> ml_metadata.GetArtifactsByTypeRequest
	46,  // 90: ml_metadata.MetadataStoreService.GetExecutionsByType:input_type -> ml_metadata.GetExecutionsByTypeRequest
	68,  // 91: ml_metadata.MetadataStoreService.GetContextsByType:input_type -> ml_metadata.GetContextsByTypeRequest
	28,  // 92: ml_metadata.MetadataStoreService.GetArtifactByTypeAndName:input_type -> ml_metadata.GetArtifactByTypeAndNameRequest
	48,  // 93: ml_metadata.MetadataStoreService.GetExecutionByTypeAndName:input_type -> ml_metadata.GetExecutionByTypeAndNameRequest
	70,  // 94: ml_metadata.MetadataStoreService.GetContextByTypeAndName:input_type -> ml_metadata.GetContextByTypeAndNameRequest
	34,  // 95: ml_metadata.MetadataStoreService.GetArtifactsByURI:input_type -> ml_metadata.GetArtifactsByURIRequest
	54,  // 96: ml_metadata.MetadataStoreService.GetEventsByExecutionIDs:input_type -> ml_metadata.GetEventsByExecutionIDsRequest
	56,  // 97: ml_metadata.MetadataStoreService.GetEventsByArtifactIDs:input_type -> ml_metadata.GetEventsByArtifactIDsRequest
	74,  // 98: ml_metadata.MetadataStoreService.GetContextsByArtifact:input_type -> ml_metadata.GetContextsByArtifactRequest
	76,  // 99: ml_metadata.MetadataStoreService.GetContextsByExecution:input_type -> ml_metadata.GetContextsByExecutionRequest
	78,  // 100: ml_metadata.MetadataStoreService.GetParentContextsByContext:input_type -> ml_metadata.GetParentContextsByContextRequest
	80,  // 101: ml_metadata.MetadataStoreService.GetChildrenContextsByContext:input_type -> ml_metadata.GetChildrenContextsByContextRequest
	82,  // 102: ml_metadata.MetadataStoreService.GetArtifactsByContext:input_type -> ml_metadata.GetArtifactsByContextRequest
	84,  // 103: ml_metadata.MetadataStoreService.GetExecutionsByContext:input_type -> ml_metadata.GetExecutionsByContextRequest
	7,   // 104: ml_metadata.MetadataStoreService.PutArtifactType:output_type -> ml_metadata.PutArtifactTypeResponse
	11,  // 105: ml_metadata.MetadataStoreService.PutExecutionType:output_type -> ml_metadata.PutExecutionTypeResponse
	19,  // 106: ml_metadata.MetadataStoreService.PutContextType:output_type -> ml_metadata.PutContextTypeResponse
	17,  // 107: ml_metadata.MetadataStoreService.PutTypes:output_type -> ml_metadata.PutTypesResponse
	5,   // 108: ml_metadata.MetadataStoreService.PutArtifacts:output_type -> ml_metadata.PutArtifactsResponse
	9,   // 109: ml_metadata.MetadataStoreService.PutExecutions:output_type -> ml_metadata.PutExecutionsResponse
	13,  // 110: ml_metadata.MetadataStoreService.PutEvents:output_type -> ml_metadata.PutEventsResponse
	15,  // 111: ml_metadata.MetadataStoreService.PutExecution:output_type -> ml_metadata.PutExecutionResponse
	21,  // 112: ml_metadata.MetadataStoreService.PutContexts:output_type -> ml_metadata.PutContextsResponse
	23,  // 113: ml_metadata.MetadataStoreService.PutAttributionsAndAssociations:output_type -> ml_metadata.PutAttributionsAndAssociationsResponse
	25,  // 114: ml_metadata.MetadataStoreService.PutParentContexts:output_type -> ml_metadata.PutParentContextsResponse
	39,  // 115: ml_metadata.MetadataStoreService.GetArtifactType:output_type -> ml_metadata.GetArtifactTypeResponse
	59,  // 116: ml_metadata.MetadataStoreService.GetArtifactTypesByID:output_type -> ml_metadata.GetArtifactTypesByIDResponse
	41,  // 117: ml_metadata.MetadataStoreService.GetArtifactTypes:output_type -> ml_metadata.GetArtifactTypesResponse
	53,  // 118: ml_metadata.MetadataStoreService.GetExecutionType:output_type -> ml_metadata.GetExecutionTypeResponse
	61,  // 119: ml_metadata.MetadataStoreService.GetExecutionTypesByID:output_type -> ml_metadata.GetExecutionTypesByIDResponse
	43,  // 120: ml_metadata.MetadataStoreService.GetExecutionTypes:output_type -> ml_metadata.GetExecutionTypesResponse
	63,  // 121: ml_metadata.MetadataStoreService.GetContextType:output_type -> ml_metadata.GetContextTypeResponse
	65,  // 122: ml_metadata.MetadataStoreService.GetContextTypesByID:output_type -> ml_metadata.GetContextTypesByIDResponse
	45,  // 123: ml_metadata.MetadataStoreService.GetContextTypes:output_type -> ml_metadata.GetContextTypesResponse
	33,  // 124: ml_metadata.MetadataStoreService.GetArtifacts:output_type -> ml_metadata.GetArtifactsResponse
	37,  // 125: ml_metadata.MetadataStoreService.GetExecutions:output_type -> ml_metadata.GetExecutionsResponse
	67,  // 126: ml_metadata.MetadataStoreService.GetContexts:output_type -> ml_metadata.GetContextsResponse
	31,  // 127: ml_metadata.MetadataStoreService.GetArtifactsByID:output_type -> ml_metadata.GetArtifactsByIDResponse
	51,  // 128: ml_metadata.MetadataStoreService.GetExecutionsByID:output_type -> ml_metadata.GetExecutionsByIDResponse
	73,  // 129: ml_metadata.MetadataStoreService.GetContextsByID:output_type -> ml_metadata.GetContextsByIDResponse
	27,  // 130: ml_metadata.MetadataStoreService.GetArtifactsByType:output_type -> ml_metadata.GetArtifactsByTypeResponse
	47,  // 131: ml_metadata.MetadataStoreService.GetExecutionsByType:output_type -> ml_metadata.GetExecutionsByTypeResponse
	69,  // 132: ml_metadata.MetadataStoreService.GetContextsByType:output_type -> ml_metadata.GetContextsByTypeResponse
	29,  // 133: ml_metadata.MetadataStoreService.GetArtifactByTypeAndName:output_type -> ml_metadata.GetArtifactByTypeAndNameResponse
	49,  // 134: ml_metadata.MetadataStoreService.GetExecutionByTypeAndName:output_type -> ml_metadata.GetExecutionByTypeAndNameResponse
	71,  // 135: ml_metadata.MetadataStoreService.GetContextByTypeAndName:output_type -> ml_metadata.GetContextByTypeAndNameResponse
	35,  // 136: ml_metadata.MetadataStoreService.GetArtifactsByURI:output_type -> ml_metadata.GetArtifactsByURIResponse
	55,  // 137: ml_metadata.MetadataStoreService.GetEventsByExecutionIDs:output_type -> ml_metadata.GetEventsByExecutionIDsResponse
	57,  // 138: ml_metadata.MetadataStoreService.GetEventsByArtifactIDs:output_type -> ml_metadata.GetEventsByArtifactIDsResponse
	75,  // 139: ml_metadata.MetadataStoreService.GetContextsByArtifact:output_type -> ml_metadata.GetContextsByArtifactResponse
	77,  // 140: ml_metadata.MetadataStoreService.GetContextsByExecution:output_type -> ml_metadata.GetContextsByExecutionResponse
	79,  // 141: ml_metadata.MetadataStoreService.GetParentContextsByContext:output_type -> ml_metadata.GetParentContextsByContextResponse
	81,  // 142: ml_metadata.MetadataStoreService.GetChildrenContextsByContext:output_type -> ml_metadata.GetChildrenContextsByContextResponse
	83,  // 143: ml_metadata.MetadataStoreService.GetArtifactsByContext:output_type -> ml_metadata.GetArtifactsByContextResponse
	85,  // 144: ml_metadata.MetadataStoreService.GetExecutionsByContext:output_type -> ml_metadata.GetExecutionsByContextResponse
	104, // [104:145] is the sub-list for method output_type
	63,  // [63:104] is the sub-list for method input_type
	63,  // [63:63] is the sub-list for extension type_name
	63,  // [63:63] is the sub-list for extension extendee
	0,   // [0:63] is the sub-list for field type_name
}

func init() { file_ml_metadata_proto_metadata_store_service_proto_init() }
func file_ml_metadata_proto_metadata_store_service_proto_init() {
	if File_ml_metadata_proto_metadata_store_service_proto != nil {
		return
	}
	file_ml_metadata_proto_metadata_store_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactAndType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactStructMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactStructList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutArtifactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutArtifactsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutArtifactTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutArtifactTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutExecutionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutExecutionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutExecutionTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutExecutionTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutContextTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutContextTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutContextsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutContextsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAttributionsAndAssociationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAttributionsAndAssociationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutParentContextsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutParentContextsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactsByTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactsByTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactByTypeAndNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactByTypeAndNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactsByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactsByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactsByURIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactsByURIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionsByTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionsByTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionByTypeAndNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionByTypeAndNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionsByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionsByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsByExecutionIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsByExecutionIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsByArtifactIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsByArtifactIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactTypesByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactTypesByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionTypesByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionTypesByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextTypesByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextTypesByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextsByTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextsByTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextByTypeAndNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextByTypeAndNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextsByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextsByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextsByArtifactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextsByArtifactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextsByExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextsByExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParentContextsByContextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParentContextsByContextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChildrenContextsByContextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChildrenContextsByContextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactsByContextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtifactsByContextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionsByContextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionsByContextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutArtifactsRequest_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutExecutionRequest_ArtifactAndEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_metadata_proto_metadata_store_service_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutExecutionRequest_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ml_metadata_proto_metadata_store_service_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ArtifactStruct_Artifact)(nil),
		(*ArtifactStruct_Map)(nil),
		(*ArtifactStruct_List)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ml_metadata_proto_metadata_store_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   90,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ml_metadata_proto_metadata_store_service_proto_goTypes,
		DependencyIndexes: file_ml_metadata_proto_metadata_store_service_proto_depIdxs,
		MessageInfos:      file_ml_metadata_proto_metadata_store_service_proto_msgTypes,
	}.Build()
	File_ml_metadata_proto_metadata_store_service_proto = out.File
	file_ml_metadata_proto_metadata_store_service_proto_rawDesc = nil
	file_ml_metadata_proto_metadata_store_service_proto_goTypes = nil
	file_ml_metadata_proto_metadata_store_service_proto_depIdxs = nil
}
