# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Train a model with Cloud ML Engine
description: |
  Submits a Cloud Machine Learning training job.
inputs:
  - name: project_id
    description: 'Required. The ID of the parent project of the job.'
    type: GCPProjectID
  - name: python_module
    description: 'The Python module name to run after installing the packages.'
    default: ''
    type: String
  - name: package_uris
    description: >-
      The Google Cloud Storage location of the packages with the training program
      and any additional dependencies. The maximum number of package URIs is 100.
    default: ''
    type: List
  - name: region
    description: 'The Google Compute Engine region to run the training job in.'
    default: ''
    type: GCPRegion
  - name: args
    description: 'Command line arguments to pass to the program.'
    default: ''
    type: List
  - name: job_dir
    description: >-
      A Google Cloud Storage path in which to store training outputs and other
      data needed for training. This path is passed to your TensorFlow program
      as the `--job-dir` command-line argument. The benefit of specifying this
      field is that Cloud ML validates the path for use in training.
    default: ''
    type: GCSPath
  - name: python_version
    description: >-
      The version of Python used in training. If not set, the default
      version is `2.7`. Python `3.5` is available when runtimeVersion is set to `1.4`
      and above.
    default: ''
    type: String
  - name: runtime_version
    description: >-
      The Cloud ML Engine runtime version to use for training. If not set,
      Cloud ML Engine uses the default stable version, 1.0.
    default: ''
    type: String
  - name: master_image_uri
    description: >-
      The Docker image to run on the master replica. This image must be in
      Container Registry.
    default: ''
    type: GCRPath
  - name: worker_image_uri
    description: >-
      The Docker image to run on the worker replica. This image must be in
      Container Registry.
    default: ''
    type: GCRPath
  - name: training_input
    description: 'Input parameters to create a training job.'
    default: ''
    type: Dict
  - name: job_id_prefix
    description: 'The prefix of the generated job id.'
    default: ''
    type: String
  - name: wait_interval
    description: 'Optional wait interval between calls to get job status. Defaults to 30.'
    default: '30'
    type: Integer
outputs:
  - name: job_id
    description: 'The ID of the created job.'
    type: String
  - name: job_dir
    description: 'The output directory of the job'
    type: GCSPath
implementation:
  container:
    image: gcr.io/ml-pipeline/ml-pipeline-gcp:3b949b37aa2cefd3180398d59116f43ce965a2a6
    args: [
      kfp_component.google.ml_engine, train,
      --project_id, {inputValue: project_id},
      --python_module, {inputValue: python_module},
      --package_uris, {inputValue: package_uris},
      --region, {inputValue: region},
      --args, {inputValue: args},
      --job_dir, {inputValue: job_dir},
      --python_version, {inputValue: python_version},
      --runtime_version, {inputValue: runtime_version},
      --master_image_uri, {inputValue: master_image_uri},
      --worker_image_uri, {inputValue: worker_image_uri},
      --training_input, {inputValue: training_input},
      --job_id_prefix, {inputValue: job_id_prefix},
      --wait_interval, {inputValue: wait_interval}
    ]
    env:
      KFP_POD_NAME: "{{pod.name}}"
    fileOutputs:
      job_id: /tmp/kfp/output/ml_engine/job_id.txt
      job_dir: /tmp/kfp/output/ml_engine/job_dir.txt
