# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import json
import argparse
import os
from time import gmtime, strftime
import time
import subprocess
import logging

logging.getLogger().setLevel(logging.INFO)

def parse_arguments():
  """Parse command line arguments."""
  parser = argparse.ArgumentParser()
  parser.add_argument('--model',
                      type = str,
                      default = 'flowers_model',
                      help = 'What to name your ml-engine model')
  parser.add_argument('--version',
                      type = str,
                      default = 'resnet',
                      help = 'What to name the version of the model')
  parser.add_argument('--model_dir',
                      type = str,
                      required=True,
                      help = 'The model directory generated by the train component.')
  parser.add_argument('--project_id',
                      type = str,
                      required = True,
                      default = '',
                      help = 'Pass in your project id.')
  parser.add_argument('--region',
                      type = str,
                      default = 'us-central1',
                      help = 'Region to use.')
  parser.add_argument('--TFVERSION',
                      type = str,
                      default = '1.8',
                      help = 'Version of TensorFlow to use.')
  args = parser.parse_args()
  return args

if __name__== "__main__":
    args = parse_arguments()

    model_export_dir = os.path.join(args.model_dir, 'export')

    logging.info('Writing latest model directory name: ' + model_export_dir)
    subprocess.call('gsutil ls ' + model_export_dir + ' | tail -1 > model.txt', shell=True)

    with open("./model.txt", "r") as model_path_file:
      model_location = model_path_file.read()[:-1]

    logging.info('Deploying ' + args.model + '  ' + args.version + ' from ' + model_location + ' ... this will take a few minutes')
    subprocess.call('gcloud ml-engine versions delete ' + args.version + ' --model=' + args.model + ' --quiet', shell=True)
    subprocess.call('gcloud ml-engine models create ' + args.model + ' --regions ' + args.region, shell=True)
    subprocess.check_call('gcloud ml-engine versions create ' + args.version + ' --model ' + args.model +
                          ' --origin ' + str(model_location) + ' --runtime-version=' + args.TFVERSION, shell=True)