name: SageMaker - Training Job
description: Train Machine Learning and Deep Learning Models using SageMaker
inputs:
- name: spot_instance
  type: Bool
  description: Use managed spot training.
  default: "False"
- {name: max_wait_time, type: Integer, description: The maximum time in seconds you
    are willing to wait for a managed spot training job to complete., default: '86400'}
- {name: max_run_time, type: Integer, description: The maximum run time in seconds
    for the training job., default: '86400'}
- {name: checkpoint_config, type: JsonObject, description: Dictionary of information
    about the output location for managed spot training checkpoint data., default: '{}'}
- {name: region, type: String, description: The region for the SageMaker resource.}
- {name: endpoint_url, type: String, description: The URL to use when communicating
    with the SageMaker service., default: ''}
- {name: assume_role, type: String, description: The ARN of an IAM role to assume
    when connecting to SageMaker., default: ''}
- {name: tags, type: JsonObject, description: 'An array of key-value pairs, to categorize
    AWS resources.', default: '{}'}
- {name: job_name, type: String, description: The name of the training job., default: ''}
- {name: role, type: String, description: The Amazon Resource Name (ARN) that Amazon
    SageMaker assumes to perform tasks on your behalf.}
- {name: image, type: String, description: The registry path of the Docker image that
    contains the training algorithm., default: ''}
- {name: algorithm_name, type: String, description: The name of the resource algorithm
    to use for the training job. Do not specify a value for this if using training
    image., default: ''}
- {name: metric_definitions, type: JsonObject, description: The dictionary of name-regex
    pairs specify the metrics that the algorithm emits., default: '{}'}
- {name: training_input_mode, type: String, description: The input mode that the algorithm
    supports. File or Pipe., default: File}
- {name: hyperparameters, type: JsonObject, description: Dictionary of hyperparameters
    for the the algorithm., default: '{}'}
- {name: channels, type: JsonArray, description: A list of dicts specifying the input
    channels. Must have at least one.}
- {name: instance_type, type: String, description: The ML compute instance type.,
  default: ml.m4.xlarge}
- {name: instance_count, type: Integer, description: The number of ML compute instances
    to use in the training job., default: '1'}
- {name: volume_size, type: Integer, description: The size of the ML storage volume
    that you want to provision., default: '30'}
- {name: resource_encryption_key, type: String, description: The AWS KMS key that
    Amazon SageMaker uses to encrypt data on the storage volume attached to the ML
    compute instance(s)., default: ''}
- {name: model_artifact_path, type: String, description: Identifies the S3 path where
    you want Amazon SageMaker to store the model artifacts.}
- {name: output_encryption_key, type: String, description: The AWS KMS key that Amazon
    SageMaker uses to encrypt the model artifacts., default: ''}
- {name: vpc_security_group_ids, type: String, description: 'The VPC security group
    IDs, in the form sg-xxxxxxxx.', default: ''}
- {name: vpc_subnets, type: String, description: The ID of the subnets in the VPC
    to which you want to connect your hpo job., default: ''}
- name: network_isolation
  type: Bool
  description: Isolates the training container.
  default: "True"
- name: traffic_encryption
  type: Bool
  description: Encrypts all communications between ML compute instances in distributed
    training.
  default: "False"
- {name: debug_hook_config, type: JsonObject, description: 'Configuration information
    for the debug hook parameters, collection configuration, and storage paths.',
  default: '{}'}
- {name: debug_rule_config, type: JsonArray, description: Configuration information
    for debugging rules., default: '[]'}
outputs:
- {name: model_artifact_url, description: The model artifacts URL.}
- {name: job_name, description: The training job name.}
- {name: training_image, description: The registry path of the Docker image that contains
    the training algorithm.}
implementation:
  container:
    image: amazon/aws-sagemaker-kfp-components:1.1.1
    command: [python3]
    args:
    - train/src/sagemaker_training_component.py
    - --spot_instance
    - {inputValue: spot_instance}
    - --max_wait_time
    - {inputValue: max_wait_time}
    - --max_run_time
    - {inputValue: max_run_time}
    - --checkpoint_config
    - {inputValue: checkpoint_config}
    - --region
    - {inputValue: region}
    - --endpoint_url
    - {inputValue: endpoint_url}
    - --assume_role
    - {inputValue: assume_role}
    - --tags
    - {inputValue: tags}
    - --job_name
    - {inputValue: job_name}
    - --role
    - {inputValue: role}
    - --image
    - {inputValue: image}
    - --algorithm_name
    - {inputValue: algorithm_name}
    - --metric_definitions
    - {inputValue: metric_definitions}
    - --training_input_mode
    - {inputValue: training_input_mode}
    - --hyperparameters
    - {inputValue: hyperparameters}
    - --channels
    - {inputValue: channels}
    - --instance_type
    - {inputValue: instance_type}
    - --instance_count
    - {inputValue: instance_count}
    - --volume_size
    - {inputValue: volume_size}
    - --resource_encryption_key
    - {inputValue: resource_encryption_key}
    - --model_artifact_path
    - {inputValue: model_artifact_path}
    - --output_encryption_key
    - {inputValue: output_encryption_key}
    - --vpc_security_group_ids
    - {inputValue: vpc_security_group_ids}
    - --vpc_subnets
    - {inputValue: vpc_subnets}
    - --network_isolation
    - {inputValue: network_isolation}
    - --traffic_encryption
    - {inputValue: traffic_encryption}
    - --debug_hook_config
    - {inputValue: debug_hook_config}
    - --debug_rule_config
    - {inputValue: debug_rule_config}
    - --model_artifact_url_output_path
    - {outputPath: model_artifact_url}
    - --job_name_output_path
    - {outputPath: job_name}
    - --training_image_output_path
    - {outputPath: training_image}
