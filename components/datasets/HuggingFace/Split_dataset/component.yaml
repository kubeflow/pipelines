name: Split dataset huggingface
metadata:
  annotations: 
    author: Alexey Volkov <alexey.volkov@ark-kun.com>
    canonical_location: 'https://raw.githubusercontent.com/Ark-kun/pipeline_components/master/components/datasets/HuggingFace/Split_dataset/component.yaml'
inputs:
- {name: dataset_dict, type: HuggingFaceDatasetDict}
- {name: split_name, type: String, optional: true}
outputs:
- {name: dataset_split, type: HuggingFaceDataset}
- {name: dataset, type: HuggingFaceArrowDataset}
- {name: dataset_info, type: JsonObject}
- {name: dataset_state, type: JsonObject}
implementation:
  container:
    image: python:3.9
    command:
    - sh
    - -c
    - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
      'datasets==1.6.2' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install
      --quiet --no-warn-script-location 'datasets==1.6.2' --user) && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp)
      printf "%s" "$0" > "$program_path"
      python3 -u "$program_path" "$@"
    - |
      def _make_parent_dirs_and_return_path(file_path: str):
          import os
          os.makedirs(os.path.dirname(file_path), exist_ok=True)
          return file_path

      def split_dataset_huggingface(
          dataset_dict_path,
          dataset_split_path,
          dataset_path,
          # dataset_indices_path: OutputPath('HuggingFaceArrowDataset'),
          dataset_info_path,
          dataset_state_path,
          split_name = None,
      ):
          import os
          import shutil
          from datasets import config as datasets_config

          print(f'DatasetDict contents: {os.listdir(dataset_dict_path)}')
          shutil.copytree(os.path.join(dataset_dict_path, split_name), dataset_split_path)
          print(f'Dataset contents: {os.listdir(os.path.join(dataset_dict_path, split_name))}')
          shutil.copy(os.path.join(dataset_dict_path, split_name, datasets_config.DATASET_ARROW_FILENAME), dataset_path)
          # shutil.copy(os.path.join(dataset_dict_path, split_name, datasets_config.DATASET_INDICES_FILENAME), dataset_indices_path)
          shutil.copy(os.path.join(dataset_dict_path, split_name, datasets_config.DATASET_INFO_FILENAME), dataset_info_path)
          shutil.copy(os.path.join(dataset_dict_path, split_name, datasets_config.DATASET_STATE_JSON_FILENAME), dataset_state_path)

      import argparse
      _parser = argparse.ArgumentParser(prog='Split dataset huggingface', description='')
      _parser.add_argument("--dataset-dict", dest="dataset_dict_path", type=str, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--split-name", dest="split_name", type=str, required=False, default=argparse.SUPPRESS)
      _parser.add_argument("--dataset-split", dest="dataset_split_path", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--dataset", dest="dataset_path", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--dataset-info", dest="dataset_info_path", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--dataset-state", dest="dataset_state_path", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
      _parsed_args = vars(_parser.parse_args())

      _outputs = split_dataset_huggingface(**_parsed_args)
    args:
    - --dataset-dict
    - {inputPath: dataset_dict}
    - if:
        cond: {isPresent: split_name}
        then:
        - --split-name
        - {inputValue: split_name}
    - --dataset-split
    - {outputPath: dataset_split}
    - --dataset
    - {outputPath: dataset}
    - --dataset-info
    - {outputPath: dataset_info}
    - --dataset-state
    - {outputPath: dataset_state}
