// Copyright 2021 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/kubeflow/pipelines/backend/api/go_client";
package api;

import "backend/api/error.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";

message Task {
  // Output. Unique run ID. Generated by API server.
  string id = 1;

  // Required input field. The Namespace to which this pipeline task belongs.
  string namespace = 2;

  // Required input field. The PipelineName to which this pipeline task belongs.
  string pipelineName = 3;

  // Required input field.The ID of the PipelineRun that the PipelineTask belongs to.
  string runId = 4;

  // Required input field. The ID of the MLMD execution associated with the PipelineTask.
  string mlmdExecutionID = 5;

  // Required input field. The time this task is created.
  google.protobuf.Timestamp created_at = 6;

  // Optional input field. The time this task is ended.
  google.protobuf.Timestamp ended_at = 7;

  // Required input field.
  string fingerPrint = 8;
}

service TaskService {
  // Creates a new task.
  rpc CreateTask(CreateTaskRequest) returns (Task) {
    option (google.api.http) = {
      post: "/apis/v1beta1/tasks"
      body: "task"
    };
  }
}

message CreateTaskRequest {
  Task task = 1;
}