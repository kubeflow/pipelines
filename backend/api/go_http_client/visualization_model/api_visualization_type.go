// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package visualization_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// APIVisualizationType Type of visualization to be generated.
// This is required when creating the pipeline through CreateVisualization
// API.
// swagger:model apiVisualizationType
type APIVisualizationType string

const (

	// APIVisualizationTypeROCCURVE captures enum value "ROC_CURVE"
	APIVisualizationTypeROCCURVE APIVisualizationType = "ROC_CURVE"

	// APIVisualizationTypeTFDV captures enum value "TFDV"
	APIVisualizationTypeTFDV APIVisualizationType = "TFDV"

	// APIVisualizationTypeTFMA captures enum value "TFMA"
	APIVisualizationTypeTFMA APIVisualizationType = "TFMA"

	// APIVisualizationTypeTABLE captures enum value "TABLE"
	APIVisualizationTypeTABLE APIVisualizationType = "TABLE"

	// APIVisualizationTypeCUSTOM captures enum value "CUSTOM"
	APIVisualizationTypeCUSTOM APIVisualizationType = "CUSTOM"
)

// for schema
var apiVisualizationTypeEnum []interface{}

func init() {
	var res []APIVisualizationType
	if err := json.Unmarshal([]byte(`["ROC_CURVE","TFDV","TFMA","TABLE","CUSTOM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiVisualizationTypeEnum = append(apiVisualizationTypeEnum, v)
	}
}

func (m APIVisualizationType) validateAPIVisualizationTypeEnum(path, location string, value APIVisualizationType) error {
	if err := validate.Enum(path, location, value, apiVisualizationTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this api visualization type
func (m APIVisualizationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAPIVisualizationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
