// Code generated by go-swagger; DO NOT EDIT.

package pipeline_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	pipeline_model "github.com/kubeflow/pipelines/backend/api/go_http_client/pipeline_model"
)

// ListPipelineVersionsReader is a Reader for the ListPipelineVersions structure.
type ListPipelineVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPipelineVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListPipelineVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListPipelineVersionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListPipelineVersionsOK creates a ListPipelineVersionsOK with default headers values
func NewListPipelineVersionsOK() *ListPipelineVersionsOK {
	return &ListPipelineVersionsOK{}
}

/*ListPipelineVersionsOK handles this case with default header values.

A successful response.
*/
type ListPipelineVersionsOK struct {
	Payload *pipeline_model.APIListPipelineVersionsResponse
}

func (o *ListPipelineVersionsOK) Error() string {
	return fmt.Sprintf("[GET /apis/v1beta1/pipeline_versions][%d] listPipelineVersionsOK  %+v", 200, o.Payload)
}

func (o *ListPipelineVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pipeline_model.APIListPipelineVersionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPipelineVersionsDefault creates a ListPipelineVersionsDefault with default headers values
func NewListPipelineVersionsDefault(code int) *ListPipelineVersionsDefault {
	return &ListPipelineVersionsDefault{
		_statusCode: code,
	}
}

/*ListPipelineVersionsDefault handles this case with default header values.

ListPipelineVersionsDefault list pipeline versions default
*/
type ListPipelineVersionsDefault struct {
	_statusCode int

	Payload *pipeline_model.APIStatus
}

// Code gets the status code for the list pipeline versions default response
func (o *ListPipelineVersionsDefault) Code() int {
	return o._statusCode
}

func (o *ListPipelineVersionsDefault) Error() string {
	return fmt.Sprintf("[GET /apis/v1beta1/pipeline_versions][%d] ListPipelineVersions default  %+v", o._statusCode, o.Payload)
}

func (o *ListPipelineVersionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pipeline_model.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
