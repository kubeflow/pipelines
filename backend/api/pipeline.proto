syntax = "proto3";

package api;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "parameter.proto";

service PipelineService {
  rpc CreatePipeline(CreatePipelineRequest) returns (Pipeline) {
    option (google.api.http) = {
      post: "/apis/v1alpha1/pipelines"
      body: "pipeline"
    };
  }

  rpc GetPipeline(GetPipelineRequest) returns (Pipeline) {
    option (google.api.http) = {
      get: "/apis/v1alpha1/pipelines/{id}"
    };
  }

  rpc ListPipelines(ListPipelinesRequest) returns (ListPipelinesResponse) {
    option (google.api.http) = {
      get: "/apis/v1alpha1/pipelines"
    };
  }

  rpc EnablePipeline(EnablePipelineRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/apis/v1alpha1/pipelines/{id}/enable"
    };
  }

  rpc DisablePipeline(DisablePipelineRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/apis/v1alpha1/pipelines/{id}/disable"
    };
  }

  rpc DeletePipeline(DeletePipelineRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/apis/v1alpha1/pipelines/{id}"
    };
  }
}

message CreatePipelineRequest{
  Pipeline pipeline = 1;
}

message GetPipelineRequest{
  uint32 id = 1;
}

message ListPipelinesRequest{
  string page_token = 1;
  int32 page_size = 2;
}

message ListPipelinesResponse{
  repeated Pipeline pipelines = 1;
  string next_page_token = 2;
}

message DeletePipelineRequest{
  uint32 id = 1;
}

message EnablePipelineRequest {
  uint32 id = 1;
}

message DisablePipelineRequest {
  uint32 id = 1;
}

message Pipeline{
  uint32 id = 1;
  google.protobuf.Timestamp created_at =2;
  string name = 3;
  string description = 4;
  uint32 package_id = 5;
  string schedule = 6;
  bool enabled = 7;
  google.protobuf.Timestamp enabled_at =8;
  repeated Parameter parameters = 9;
}