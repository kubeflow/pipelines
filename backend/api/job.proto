// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package api;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "parameter.proto";
import "run.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  responses: {
    key: "default";
    value: {
      schema: {
        json_schema: {
          ref: ".api.Status";
        }
      }
    }
  }
};

service JobService {
  rpc CreateJob(CreateJobRequest) returns (Job) {
    option (google.api.http) = {
      post: "/apis/v1alpha2/jobs"
      body: "job"
    };
  }

  rpc GetJob(GetJobRequest) returns (Job) {
    option (google.api.http) = {
      get: "/apis/v1alpha2/jobs/{id}"
    };
  }

  rpc ListJobs(ListJobsRequest) returns (ListJobsResponse) {
    option (google.api.http) = {
      get: "/apis/v1alpha2/jobs"
    };
  }

  rpc EnableJob(EnableJobRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/apis/v1alpha2/jobs/{id}/enable"
    };
  }

  rpc DisableJob(DisableJobRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/apis/v1alpha2/jobs/{id}/disable"
    };
  }

  rpc DeleteJob(DeleteJobRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/apis/v1alpha2/jobs/{id}"
    };
  }

  rpc ListJobRuns(ListJobRunsRequest) returns (ListJobRunsResponse) {
    option (google.api.http) = {
      get: "/apis/v1alpha2/jobs/{job_id}/runs"
    };
  }
}

message CreateJobRequest{
  Job job = 1;
}

message GetJobRequest{
  string id = 1;
}

message ListJobsRequest{
  string page_token = 1;
  int32 page_size = 2;
  // Can be format of "field_name", "field_name asc" or "field_name des"
  // Ascending by default.
  string sort_by = 3;
}

message ListJobsResponse {
  repeated Job jobs = 1;
  string next_page_token = 2;
}

message ListJobRunsRequest{
  string job_id = 1;
  string page_token = 2;
  int32 page_size = 3;
  // Can be format of "field_name", "field_name asc" or "field_name des"
  // Ascending by default.
  string sort_by = 4;
}

message ListJobRunsResponse {
  repeated Run runs = 1;
  string next_page_token = 2;
}

message DeleteJobRequest{
  string id = 1;
}

message EnableJobRequest {
  string id = 1;
}

message DisableJobRequest {
  string id = 1;
}

message CronSchedule {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
  string cron = 3;
}

message PeriodicSchedule {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
  int64 interval_second = 3;
}

message Trigger{
  oneof trigger{
    CronSchedule cron_schedule = 1;
    PeriodicSchedule periodic_schedule = 2;
  }
}

message Job{
  string id = 1;
  string name = 2;
  string description = 3;
  string pipeline_id = 4;
  bool enabled = 5;
  // The status is surfacing the resource condition. A resource can potentially
  // have multiple conditions, although in most cases, it should be in one
  // state.
  // https://github.com/eBay/Kubernetes/blob/master/docs/devel/api-conventions.md
  // In case of a single state, the status ends with a colon:
  // STATUS_1:
  // In case of multiple states, the statuses are separated by a colon.
  // STATUS_1:STATUS_2:
  string status = 6;
  int64 max_concurrency = 7;
  repeated Parameter parameters = 8;
  Trigger trigger = 9;
  google.protobuf.Timestamp created_at =10;
  google.protobuf.Timestamp updated_at =11;

  // In case any error happens retrieving a job field, only job ID
  // and the error message is returned. Client has the flexibility of choosing
  // how to handle error. This is especially useful during listing call.
  string error = 12;
}
