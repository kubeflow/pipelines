// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipeline.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreatePipelineRequest struct {
	Pipeline             *Pipeline `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreatePipelineRequest) Reset()         { *m = CreatePipelineRequest{} }
func (m *CreatePipelineRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePipelineRequest) ProtoMessage()    {}
func (*CreatePipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_dcf1e889d7b833a5, []int{0}
}
func (m *CreatePipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePipelineRequest.Unmarshal(m, b)
}
func (m *CreatePipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePipelineRequest.Marshal(b, m, deterministic)
}
func (dst *CreatePipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePipelineRequest.Merge(dst, src)
}
func (m *CreatePipelineRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePipelineRequest.Size(m)
}
func (m *CreatePipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePipelineRequest proto.InternalMessageInfo

func (m *CreatePipelineRequest) GetPipeline() *Pipeline {
	if m != nil {
		return m.Pipeline
	}
	return nil
}

type GetPipelineRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPipelineRequest) Reset()         { *m = GetPipelineRequest{} }
func (m *GetPipelineRequest) String() string { return proto.CompactTextString(m) }
func (*GetPipelineRequest) ProtoMessage()    {}
func (*GetPipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_dcf1e889d7b833a5, []int{1}
}
func (m *GetPipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPipelineRequest.Unmarshal(m, b)
}
func (m *GetPipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPipelineRequest.Marshal(b, m, deterministic)
}
func (dst *GetPipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPipelineRequest.Merge(dst, src)
}
func (m *GetPipelineRequest) XXX_Size() int {
	return xxx_messageInfo_GetPipelineRequest.Size(m)
}
func (m *GetPipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPipelineRequest proto.InternalMessageInfo

func (m *GetPipelineRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListPipelinesRequest struct {
	PageToken            string   `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy               string   `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPipelinesRequest) Reset()         { *m = ListPipelinesRequest{} }
func (m *ListPipelinesRequest) String() string { return proto.CompactTextString(m) }
func (*ListPipelinesRequest) ProtoMessage()    {}
func (*ListPipelinesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_dcf1e889d7b833a5, []int{2}
}
func (m *ListPipelinesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelinesRequest.Unmarshal(m, b)
}
func (m *ListPipelinesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelinesRequest.Marshal(b, m, deterministic)
}
func (dst *ListPipelinesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelinesRequest.Merge(dst, src)
}
func (m *ListPipelinesRequest) XXX_Size() int {
	return xxx_messageInfo_ListPipelinesRequest.Size(m)
}
func (m *ListPipelinesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelinesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelinesRequest proto.InternalMessageInfo

func (m *ListPipelinesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListPipelinesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListPipelinesRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

type ListPipelinesResponse struct {
	Pipelines            []*Pipeline `protobuf:"bytes,1,rep,name=pipelines,proto3" json:"pipelines,omitempty"`
	NextPageToken        string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListPipelinesResponse) Reset()         { *m = ListPipelinesResponse{} }
func (m *ListPipelinesResponse) String() string { return proto.CompactTextString(m) }
func (*ListPipelinesResponse) ProtoMessage()    {}
func (*ListPipelinesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_dcf1e889d7b833a5, []int{3}
}
func (m *ListPipelinesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelinesResponse.Unmarshal(m, b)
}
func (m *ListPipelinesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelinesResponse.Marshal(b, m, deterministic)
}
func (dst *ListPipelinesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelinesResponse.Merge(dst, src)
}
func (m *ListPipelinesResponse) XXX_Size() int {
	return xxx_messageInfo_ListPipelinesResponse.Size(m)
}
func (m *ListPipelinesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelinesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelinesResponse proto.InternalMessageInfo

func (m *ListPipelinesResponse) GetPipelines() []*Pipeline {
	if m != nil {
		return m.Pipelines
	}
	return nil
}

func (m *ListPipelinesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type DeletePipelineRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePipelineRequest) Reset()         { *m = DeletePipelineRequest{} }
func (m *DeletePipelineRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePipelineRequest) ProtoMessage()    {}
func (*DeletePipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_dcf1e889d7b833a5, []int{4}
}
func (m *DeletePipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePipelineRequest.Unmarshal(m, b)
}
func (m *DeletePipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePipelineRequest.Marshal(b, m, deterministic)
}
func (dst *DeletePipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePipelineRequest.Merge(dst, src)
}
func (m *DeletePipelineRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePipelineRequest.Size(m)
}
func (m *DeletePipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePipelineRequest proto.InternalMessageInfo

func (m *DeletePipelineRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type EnablePipelineRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnablePipelineRequest) Reset()         { *m = EnablePipelineRequest{} }
func (m *EnablePipelineRequest) String() string { return proto.CompactTextString(m) }
func (*EnablePipelineRequest) ProtoMessage()    {}
func (*EnablePipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_dcf1e889d7b833a5, []int{5}
}
func (m *EnablePipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnablePipelineRequest.Unmarshal(m, b)
}
func (m *EnablePipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnablePipelineRequest.Marshal(b, m, deterministic)
}
func (dst *EnablePipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnablePipelineRequest.Merge(dst, src)
}
func (m *EnablePipelineRequest) XXX_Size() int {
	return xxx_messageInfo_EnablePipelineRequest.Size(m)
}
func (m *EnablePipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnablePipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnablePipelineRequest proto.InternalMessageInfo

func (m *EnablePipelineRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DisablePipelineRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisablePipelineRequest) Reset()         { *m = DisablePipelineRequest{} }
func (m *DisablePipelineRequest) String() string { return proto.CompactTextString(m) }
func (*DisablePipelineRequest) ProtoMessage()    {}
func (*DisablePipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_dcf1e889d7b833a5, []int{6}
}
func (m *DisablePipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisablePipelineRequest.Unmarshal(m, b)
}
func (m *DisablePipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisablePipelineRequest.Marshal(b, m, deterministic)
}
func (dst *DisablePipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisablePipelineRequest.Merge(dst, src)
}
func (m *DisablePipelineRequest) XXX_Size() int {
	return xxx_messageInfo_DisablePipelineRequest.Size(m)
}
func (m *DisablePipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisablePipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisablePipelineRequest proto.InternalMessageInfo

func (m *DisablePipelineRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CronSchedule struct {
	StartTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Cron                 string               `protobuf:"bytes,3,opt,name=cron,proto3" json:"cron,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CronSchedule) Reset()         { *m = CronSchedule{} }
func (m *CronSchedule) String() string { return proto.CompactTextString(m) }
func (*CronSchedule) ProtoMessage()    {}
func (*CronSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_dcf1e889d7b833a5, []int{7}
}
func (m *CronSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CronSchedule.Unmarshal(m, b)
}
func (m *CronSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CronSchedule.Marshal(b, m, deterministic)
}
func (dst *CronSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CronSchedule.Merge(dst, src)
}
func (m *CronSchedule) XXX_Size() int {
	return xxx_messageInfo_CronSchedule.Size(m)
}
func (m *CronSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_CronSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_CronSchedule proto.InternalMessageInfo

func (m *CronSchedule) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *CronSchedule) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *CronSchedule) GetCron() string {
	if m != nil {
		return m.Cron
	}
	return ""
}

type PeriodicSchedule struct {
	StartTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	IntervalSecond       int64                `protobuf:"varint,3,opt,name=interval_second,json=intervalSecond,proto3" json:"interval_second,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PeriodicSchedule) Reset()         { *m = PeriodicSchedule{} }
func (m *PeriodicSchedule) String() string { return proto.CompactTextString(m) }
func (*PeriodicSchedule) ProtoMessage()    {}
func (*PeriodicSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_dcf1e889d7b833a5, []int{8}
}
func (m *PeriodicSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeriodicSchedule.Unmarshal(m, b)
}
func (m *PeriodicSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeriodicSchedule.Marshal(b, m, deterministic)
}
func (dst *PeriodicSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeriodicSchedule.Merge(dst, src)
}
func (m *PeriodicSchedule) XXX_Size() int {
	return xxx_messageInfo_PeriodicSchedule.Size(m)
}
func (m *PeriodicSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_PeriodicSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_PeriodicSchedule proto.InternalMessageInfo

func (m *PeriodicSchedule) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *PeriodicSchedule) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *PeriodicSchedule) GetIntervalSecond() int64 {
	if m != nil {
		return m.IntervalSecond
	}
	return 0
}

type Trigger struct {
	// Types that are valid to be assigned to Trigger:
	//	*Trigger_CronSchedule
	//	*Trigger_PeriodicSchedule
	Trigger              isTrigger_Trigger `protobuf_oneof:"trigger"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Trigger) Reset()         { *m = Trigger{} }
func (m *Trigger) String() string { return proto.CompactTextString(m) }
func (*Trigger) ProtoMessage()    {}
func (*Trigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_dcf1e889d7b833a5, []int{9}
}
func (m *Trigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger.Unmarshal(m, b)
}
func (m *Trigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger.Marshal(b, m, deterministic)
}
func (dst *Trigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger.Merge(dst, src)
}
func (m *Trigger) XXX_Size() int {
	return xxx_messageInfo_Trigger.Size(m)
}
func (m *Trigger) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger proto.InternalMessageInfo

type isTrigger_Trigger interface {
	isTrigger_Trigger()
}

type Trigger_CronSchedule struct {
	CronSchedule *CronSchedule `protobuf:"bytes,1,opt,name=cron_schedule,json=cronSchedule,proto3,oneof"`
}
type Trigger_PeriodicSchedule struct {
	PeriodicSchedule *PeriodicSchedule `protobuf:"bytes,2,opt,name=periodic_schedule,json=periodicSchedule,proto3,oneof"`
}

func (*Trigger_CronSchedule) isTrigger_Trigger()     {}
func (*Trigger_PeriodicSchedule) isTrigger_Trigger() {}

func (m *Trigger) GetTrigger() isTrigger_Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *Trigger) GetCronSchedule() *CronSchedule {
	if x, ok := m.GetTrigger().(*Trigger_CronSchedule); ok {
		return x.CronSchedule
	}
	return nil
}

func (m *Trigger) GetPeriodicSchedule() *PeriodicSchedule {
	if x, ok := m.GetTrigger().(*Trigger_PeriodicSchedule); ok {
		return x.PeriodicSchedule
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Trigger) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Trigger_OneofMarshaler, _Trigger_OneofUnmarshaler, _Trigger_OneofSizer, []interface{}{
		(*Trigger_CronSchedule)(nil),
		(*Trigger_PeriodicSchedule)(nil),
	}
}

func _Trigger_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Trigger)
	// trigger
	switch x := m.Trigger.(type) {
	case *Trigger_CronSchedule:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CronSchedule); err != nil {
			return err
		}
	case *Trigger_PeriodicSchedule:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PeriodicSchedule); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Trigger.Trigger has unexpected type %T", x)
	}
	return nil
}

func _Trigger_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Trigger)
	switch tag {
	case 1: // trigger.cron_schedule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CronSchedule)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_CronSchedule{msg}
		return true, err
	case 2: // trigger.periodic_schedule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PeriodicSchedule)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_PeriodicSchedule{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Trigger_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Trigger)
	// trigger
	switch x := m.Trigger.(type) {
	case *Trigger_CronSchedule:
		s := proto.Size(x.CronSchedule)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_PeriodicSchedule:
		s := proto.Size(x.PeriodicSchedule)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Pipeline struct {
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PackageId   uint32 `protobuf:"varint,4,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	Enabled     bool   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The status is surfacing the resource condition. A resource can potentially
	// have multiple conditions, although in most cases, it should be in one
	// state.
	// https://github.com/eBay/Kubernetes/blob/master/docs/devel/api-conventions.md
	// In case of a single state, the status ends with a colon:
	// STATUS_1:
	// In case of multiple states, the statuses are separated by a colon.
	// STATUS_1:STATUS_2:
	Status               string               `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	MaxConcurrency       int64                `protobuf:"varint,7,opt,name=max_concurrency,json=maxConcurrency,proto3" json:"max_concurrency,omitempty"`
	Parameters           []*Parameter         `protobuf:"bytes,8,rep,name=parameters,proto3" json:"parameters,omitempty"`
	Trigger              *Trigger             `protobuf:"bytes,9,opt,name=trigger,proto3" json:"trigger,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Pipeline) Reset()         { *m = Pipeline{} }
func (m *Pipeline) String() string { return proto.CompactTextString(m) }
func (*Pipeline) ProtoMessage()    {}
func (*Pipeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_dcf1e889d7b833a5, []int{10}
}
func (m *Pipeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pipeline.Unmarshal(m, b)
}
func (m *Pipeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pipeline.Marshal(b, m, deterministic)
}
func (dst *Pipeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pipeline.Merge(dst, src)
}
func (m *Pipeline) XXX_Size() int {
	return xxx_messageInfo_Pipeline.Size(m)
}
func (m *Pipeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Pipeline.DiscardUnknown(m)
}

var xxx_messageInfo_Pipeline proto.InternalMessageInfo

func (m *Pipeline) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Pipeline) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Pipeline) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Pipeline) GetPackageId() uint32 {
	if m != nil {
		return m.PackageId
	}
	return 0
}

func (m *Pipeline) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Pipeline) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Pipeline) GetMaxConcurrency() int64 {
	if m != nil {
		return m.MaxConcurrency
	}
	return 0
}

func (m *Pipeline) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Pipeline) GetTrigger() *Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *Pipeline) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Pipeline) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*CreatePipelineRequest)(nil), "api.CreatePipelineRequest")
	proto.RegisterType((*GetPipelineRequest)(nil), "api.GetPipelineRequest")
	proto.RegisterType((*ListPipelinesRequest)(nil), "api.ListPipelinesRequest")
	proto.RegisterType((*ListPipelinesResponse)(nil), "api.ListPipelinesResponse")
	proto.RegisterType((*DeletePipelineRequest)(nil), "api.DeletePipelineRequest")
	proto.RegisterType((*EnablePipelineRequest)(nil), "api.EnablePipelineRequest")
	proto.RegisterType((*DisablePipelineRequest)(nil), "api.DisablePipelineRequest")
	proto.RegisterType((*CronSchedule)(nil), "api.CronSchedule")
	proto.RegisterType((*PeriodicSchedule)(nil), "api.PeriodicSchedule")
	proto.RegisterType((*Trigger)(nil), "api.Trigger")
	proto.RegisterType((*Pipeline)(nil), "api.Pipeline")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PipelineServiceClient is the client API for PipelineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PipelineServiceClient interface {
	CreatePipeline(ctx context.Context, in *CreatePipelineRequest, opts ...grpc.CallOption) (*Pipeline, error)
	GetPipeline(ctx context.Context, in *GetPipelineRequest, opts ...grpc.CallOption) (*Pipeline, error)
	ListPipelines(ctx context.Context, in *ListPipelinesRequest, opts ...grpc.CallOption) (*ListPipelinesResponse, error)
	EnablePipeline(ctx context.Context, in *EnablePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DisablePipeline(ctx context.Context, in *DisablePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeletePipeline(ctx context.Context, in *DeletePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type pipelineServiceClient struct {
	cc *grpc.ClientConn
}

func NewPipelineServiceClient(cc *grpc.ClientConn) PipelineServiceClient {
	return &pipelineServiceClient{cc}
}

func (c *pipelineServiceClient) CreatePipeline(ctx context.Context, in *CreatePipelineRequest, opts ...grpc.CallOption) (*Pipeline, error) {
	out := new(Pipeline)
	err := c.cc.Invoke(ctx, "/api.PipelineService/CreatePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) GetPipeline(ctx context.Context, in *GetPipelineRequest, opts ...grpc.CallOption) (*Pipeline, error) {
	out := new(Pipeline)
	err := c.cc.Invoke(ctx, "/api.PipelineService/GetPipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) ListPipelines(ctx context.Context, in *ListPipelinesRequest, opts ...grpc.CallOption) (*ListPipelinesResponse, error) {
	out := new(ListPipelinesResponse)
	err := c.cc.Invoke(ctx, "/api.PipelineService/ListPipelines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) EnablePipeline(ctx context.Context, in *EnablePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.PipelineService/EnablePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) DisablePipeline(ctx context.Context, in *DisablePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.PipelineService/DisablePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) DeletePipeline(ctx context.Context, in *DeletePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.PipelineService/DeletePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PipelineServiceServer is the server API for PipelineService service.
type PipelineServiceServer interface {
	CreatePipeline(context.Context, *CreatePipelineRequest) (*Pipeline, error)
	GetPipeline(context.Context, *GetPipelineRequest) (*Pipeline, error)
	ListPipelines(context.Context, *ListPipelinesRequest) (*ListPipelinesResponse, error)
	EnablePipeline(context.Context, *EnablePipelineRequest) (*empty.Empty, error)
	DisablePipeline(context.Context, *DisablePipelineRequest) (*empty.Empty, error)
	DeletePipeline(context.Context, *DeletePipelineRequest) (*empty.Empty, error)
}

func RegisterPipelineServiceServer(s *grpc.Server, srv PipelineServiceServer) {
	s.RegisterService(&_PipelineService_serviceDesc, srv)
}

func _PipelineService_CreatePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).CreatePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/CreatePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).CreatePipeline(ctx, req.(*CreatePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_GetPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).GetPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/GetPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).GetPipeline(ctx, req.(*GetPipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_ListPipelines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPipelinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).ListPipelines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/ListPipelines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).ListPipelines(ctx, req.(*ListPipelinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_EnablePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnablePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).EnablePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/EnablePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).EnablePipeline(ctx, req.(*EnablePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_DisablePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisablePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).DisablePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/DisablePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).DisablePipeline(ctx, req.(*DisablePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_DeletePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).DeletePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/DeletePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).DeletePipeline(ctx, req.(*DeletePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PipelineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PipelineService",
	HandlerType: (*PipelineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePipeline",
			Handler:    _PipelineService_CreatePipeline_Handler,
		},
		{
			MethodName: "GetPipeline",
			Handler:    _PipelineService_GetPipeline_Handler,
		},
		{
			MethodName: "ListPipelines",
			Handler:    _PipelineService_ListPipelines_Handler,
		},
		{
			MethodName: "EnablePipeline",
			Handler:    _PipelineService_EnablePipeline_Handler,
		},
		{
			MethodName: "DisablePipeline",
			Handler:    _PipelineService_DisablePipeline_Handler,
		},
		{
			MethodName: "DeletePipeline",
			Handler:    _PipelineService_DeletePipeline_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pipeline.proto",
}

func init() { proto.RegisterFile("pipeline.proto", fileDescriptor_pipeline_dcf1e889d7b833a5) }

var fileDescriptor_pipeline_dcf1e889d7b833a5 = []byte{
	// 889 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0x5e, 0xdb, 0x9b, 0xd8, 0x2e, 0xc7, 0xf6, 0xa6, 0x85, 0xb3, 0xc3, 0x64, 0x97, 0x35, 0xa3,
	0x6c, 0x62, 0x96, 0x8d, 0x2d, 0x82, 0x90, 0x80, 0x5b, 0x7e, 0x56, 0x2c, 0x12, 0x87, 0x68, 0x9c,
	0x23, 0xd2, 0xa8, 0x33, 0x53, 0xeb, 0xb4, 0x32, 0xee, 0x19, 0xba, 0x7b, 0x42, 0xb2, 0x88, 0x0b,
	0x8f, 0x00, 0x1c, 0x10, 0xef, 0xc0, 0xd3, 0xf0, 0x0a, 0x3c, 0x08, 0xea, 0x9e, 0x1e, 0xc7, 0x1e,
	0x3b, 0x09, 0x37, 0x4e, 0x76, 0x57, 0x57, 0xf5, 0x57, 0xf5, 0x55, 0xd5, 0x37, 0xd0, 0x49, 0x59,
	0x8a, 0x31, 0xe3, 0x38, 0x4c, 0x45, 0xa2, 0x12, 0x52, 0xa3, 0x29, 0x73, 0x5b, 0x28, 0x44, 0x22,
	0x72, 0x8b, 0xfb, 0x6c, 0x92, 0x24, 0x93, 0x18, 0x47, 0x34, 0x65, 0x23, 0xca, 0x79, 0xa2, 0xa8,
	0x62, 0x09, 0x97, 0xf6, 0xf6, 0x85, 0xbd, 0x35, 0xa7, 0xf3, 0xec, 0xdd, 0x48, 0xb1, 0x29, 0x4a,
	0x45, 0xa7, 0xa9, 0x75, 0xd8, 0x2e, 0x3b, 0xe0, 0x34, 0x55, 0x37, 0xf6, 0xb2, 0x9b, 0x52, 0x41,
	0xa7, 0xa8, 0xb0, 0x00, 0x7b, 0x6d, 0x7e, 0xc2, 0xfd, 0x09, 0xf2, 0x7d, 0xf9, 0x23, 0x9d, 0x4c,
	0x50, 0x8c, 0x92, 0xd4, 0x00, 0x2e, 0x83, 0x7b, 0x47, 0xd0, 0x3b, 0x16, 0x48, 0x15, 0x9e, 0xda,
	0x22, 0x7c, 0xfc, 0x21, 0x43, 0xa9, 0xc8, 0x27, 0xd0, 0x28, 0xea, 0x72, 0x2a, 0xfd, 0xca, 0xa0,
	0x75, 0xd0, 0x1e, 0xd2, 0x94, 0x0d, 0x67, 0x7e, 0xb3, 0x6b, 0x6f, 0x07, 0xc8, 0x37, 0xa8, 0xca,
	0x0f, 0x74, 0xa0, 0xca, 0x22, 0x13, 0xda, 0xf4, 0xab, 0x2c, 0xf2, 0x2e, 0xe1, 0x83, 0xef, 0x98,
	0x9c, 0xb9, 0xc9, 0xc2, 0xef, 0x39, 0x40, 0x4a, 0x27, 0x18, 0xa8, 0xe4, 0x12, 0xb9, 0xf5, 0x6f,
	0x6a, 0xcb, 0x99, 0x36, 0x90, 0x6d, 0x30, 0x87, 0x40, 0xb2, 0xf7, 0xe8, 0x54, 0xfb, 0x95, 0xc1,
	0x9a, 0xdf, 0xd0, 0x86, 0x31, 0x7b, 0x8f, 0xe4, 0x29, 0xd4, 0x65, 0x22, 0x54, 0x70, 0x7e, 0xe3,
	0xd4, 0x4c, 0xe0, 0xba, 0x3e, 0x1e, 0xdd, 0x78, 0x31, 0xf4, 0x4a, 0x60, 0x32, 0x4d, 0xb8, 0x44,
	0xf2, 0x29, 0x34, 0x8b, 0xbc, 0xa5, 0x53, 0xe9, 0xd7, 0x96, 0xeb, 0xba, 0xbd, 0x27, 0xbb, 0xd0,
	0xe5, 0x78, 0xad, 0x82, 0xb9, 0xfc, 0xaa, 0x06, 0xa6, 0xad, 0xcd, 0xa7, 0x45, 0x8e, 0xde, 0x1e,
	0xf4, 0x4e, 0x30, 0xc6, 0x65, 0x12, 0xcb, 0x1c, 0xec, 0x41, 0xef, 0x0d, 0xa7, 0xe7, 0xf1, 0x83,
	0x8e, 0x03, 0xd8, 0x3a, 0x61, 0xf2, 0xbf, 0x78, 0xfe, 0x5e, 0x81, 0x8d, 0x63, 0x91, 0xf0, 0x71,
	0x78, 0x81, 0x51, 0x16, 0x23, 0xf9, 0x0a, 0x40, 0x2a, 0x2a, 0x54, 0xa0, 0xc7, 0xc8, 0xb6, 0xce,
	0x1d, 0xe6, 0x23, 0x34, 0x2c, 0x46, 0x68, 0x78, 0x56, 0xcc, 0x98, 0xdf, 0x34, 0xde, 0xfa, 0x4c,
	0xbe, 0x80, 0x06, 0xf2, 0x28, 0x0f, 0xac, 0x3e, 0x18, 0x58, 0x47, 0x1e, 0x99, 0x30, 0x02, 0x8f,
	0x43, 0x91, 0x70, 0xdb, 0x02, 0xf3, 0xdf, 0xfb, 0xab, 0x02, 0x4f, 0x4e, 0x51, 0xb0, 0x24, 0x62,
	0xe1, 0xff, 0x98, 0xda, 0x1e, 0x74, 0x19, 0x57, 0x28, 0xae, 0x68, 0x1c, 0x48, 0x0c, 0x13, 0x1e,
	0x99, 0x2c, 0x6b, 0x7e, 0xa7, 0x30, 0x8f, 0x8d, 0x55, 0xd3, 0x58, 0x3f, 0x13, 0x4c, 0x6f, 0x0b,
	0xf9, 0x12, 0xda, 0xba, 0x86, 0x40, 0xda, 0xbc, 0x6d, 0xa6, 0x9b, 0x66, 0x4e, 0xe6, 0xb9, 0x7e,
	0xfb, 0xc8, 0xdf, 0x08, 0xe7, 0xb9, 0x3f, 0x81, 0xcd, 0xd4, 0x16, 0x7d, 0x1b, 0x9d, 0xa7, 0xdb,
	0xcb, 0xa7, 0xac, 0x44, 0xc9, 0xdb, 0x47, 0xfe, 0x93, 0xb4, 0x64, 0x3b, 0x6a, 0x42, 0x5d, 0xe5,
	0xa9, 0x78, 0x7f, 0xd4, 0xa0, 0x51, 0x4c, 0x40, 0xb9, 0xf5, 0x9a, 0x77, 0x4e, 0x2d, 0x1f, 0x4d,
	0xdf, 0xfc, 0x27, 0x7d, 0x68, 0x45, 0x28, 0x43, 0xc1, 0xcc, 0xc6, 0xdb, 0x96, 0xcc, 0x9b, 0xf2,
	0x7d, 0x0b, 0x2f, 0xf5, 0x48, 0xb3, 0xc8, 0x79, 0xdc, 0xaf, 0x0c, 0xda, 0x7a, 0xdf, 0x8c, 0xe5,
	0xdb, 0x88, 0x38, 0x50, 0x47, 0x33, 0xa2, 0x91, 0xb3, 0xd6, 0xaf, 0x0c, 0x1a, 0x7e, 0x71, 0x24,
	0x5b, 0xb0, 0x2e, 0x15, 0x55, 0x99, 0x74, 0xd6, 0xed, 0xae, 0x99, 0x93, 0xe6, 0x78, 0x4a, 0xaf,
	0x83, 0x30, 0xe1, 0x61, 0x26, 0x04, 0xf2, 0xf0, 0xc6, 0xa9, 0xe7, 0x1c, 0x4f, 0xe9, 0xf5, 0xf1,
	0xad, 0x95, 0x0c, 0x35, 0xb2, 0x15, 0x2b, 0xe9, 0x34, 0xcc, 0xf2, 0x75, 0x72, 0x5a, 0x0a, 0xb3,
	0x3f, 0xe7, 0x41, 0x76, 0x67, 0x3c, 0x38, 0x4d, 0xc3, 0xe1, 0x86, 0x71, 0xb6, 0x6d, 0xf2, 0x8b,
	0x4b, 0x3d, 0x56, 0xa1, 0xd1, 0xb0, 0x28, 0xa0, 0xca, 0x81, 0x87, 0xc7, 0xca, 0x7a, 0x1f, 0x2a,
	0x1d, 0x9a, 0xa5, 0x51, 0x11, 0xda, 0x7a, 0x38, 0xd4, 0x7a, 0x1f, 0xaa, 0x83, 0x3f, 0xd7, 0xa0,
	0x5b, 0xb4, 0x66, 0x8c, 0xe2, 0x8a, 0x85, 0x48, 0x26, 0xd0, 0x59, 0x54, 0x53, 0xe2, 0xda, 0xa1,
	0x59, 0x21, 0xb1, 0xee, 0xa2, 0xf0, 0x78, 0xaf, 0x7e, 0xf9, 0xfb, 0x9f, 0xdf, 0xaa, 0x3b, 0x9e,
	0xa3, 0xbf, 0x13, 0x72, 0x74, 0xf5, 0x19, 0x8d, 0xd3, 0x0b, 0x7a, 0x30, 0x9a, 0xe9, 0xd1, 0xd7,
	0x33, 0xc9, 0x25, 0xdf, 0x43, 0x6b, 0x4e, 0x72, 0xc9, 0x53, 0xf3, 0xd2, 0xb2, 0x08, 0x97, 0x21,
	0x5e, 0x1a, 0x88, 0x17, 0xe4, 0xf9, 0x5d, 0x10, 0xa3, 0x9f, 0x58, 0xf4, 0x33, 0xb9, 0x80, 0xf6,
	0x82, 0x7a, 0x92, 0x0f, 0xcd, 0x33, 0xab, 0xe4, 0xdb, 0x75, 0x57, 0x5d, 0xe5, 0x62, 0xeb, 0xf5,
	0x0d, 0x9c, 0x4b, 0xee, 0xac, 0x88, 0x08, 0xe8, 0x2c, 0x0a, 0xa2, 0x25, 0x6c, 0xa5, 0x4a, 0xba,
	0x5b, 0x4b, 0x9d, 0x79, 0xa3, 0xbf, 0x84, 0xde, 0x6b, 0x83, 0xb3, 0xeb, 0xed, 0xdc, 0x5b, 0xd6,
	0x28, 0x1f, 0x64, 0x92, 0x41, 0xb7, 0xa4, 0xad, 0x64, 0xdb, 0x80, 0xae, 0x56, 0xdc, 0x3b, 0x51,
	0xf7, 0x0d, 0xea, 0x9e, 0xf7, 0xf2, 0x7e, 0xd4, 0x28, 0x7f, 0x95, 0x5c, 0x42, 0x67, 0xf1, 0x23,
	0x61, 0x4b, 0x5d, 0xf9, 0xe5, 0xb8, 0x13, 0xd4, 0x76, 0xf0, 0xd5, 0xfd, 0x1d, 0x3c, 0xfa, 0xf8,
	0xd7, 0xc3, 0x8f, 0xfc, 0x67, 0x50, 0x8f, 0xf0, 0x1d, 0xcd, 0x62, 0x45, 0x36, 0x49, 0x17, 0xda,
	0x6e, 0xcb, 0x00, 0x8e, 0xcd, 0xda, 0x9e, 0xaf, 0x9b, 0x97, 0x3f, 0xff, 0x37, 0x00, 0x00, 0xff,
	0xff, 0x15, 0x2c, 0xc6, 0x9e, 0xbf, 0x08, 0x00, 0x00,
}
