// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipeline.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreatePipelineRequest struct {
	Pipeline             *Pipeline `protobuf:"bytes,1,opt,name=pipeline" json:"pipeline,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreatePipelineRequest) Reset()         { *m = CreatePipelineRequest{} }
func (m *CreatePipelineRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePipelineRequest) ProtoMessage()    {}
func (*CreatePipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_73fbefe76efc41ce, []int{0}
}
func (m *CreatePipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePipelineRequest.Unmarshal(m, b)
}
func (m *CreatePipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePipelineRequest.Marshal(b, m, deterministic)
}
func (dst *CreatePipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePipelineRequest.Merge(dst, src)
}
func (m *CreatePipelineRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePipelineRequest.Size(m)
}
func (m *CreatePipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePipelineRequest proto.InternalMessageInfo

func (m *CreatePipelineRequest) GetPipeline() *Pipeline {
	if m != nil {
		return m.Pipeline
	}
	return nil
}

type GetPipelineRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPipelineRequest) Reset()         { *m = GetPipelineRequest{} }
func (m *GetPipelineRequest) String() string { return proto.CompactTextString(m) }
func (*GetPipelineRequest) ProtoMessage()    {}
func (*GetPipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_73fbefe76efc41ce, []int{1}
}
func (m *GetPipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPipelineRequest.Unmarshal(m, b)
}
func (m *GetPipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPipelineRequest.Marshal(b, m, deterministic)
}
func (dst *GetPipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPipelineRequest.Merge(dst, src)
}
func (m *GetPipelineRequest) XXX_Size() int {
	return xxx_messageInfo_GetPipelineRequest.Size(m)
}
func (m *GetPipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPipelineRequest proto.InternalMessageInfo

func (m *GetPipelineRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListPipelinesRequest struct {
	PageToken            string   `protobuf:"bytes,1,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPipelinesRequest) Reset()         { *m = ListPipelinesRequest{} }
func (m *ListPipelinesRequest) String() string { return proto.CompactTextString(m) }
func (*ListPipelinesRequest) ProtoMessage()    {}
func (*ListPipelinesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_73fbefe76efc41ce, []int{2}
}
func (m *ListPipelinesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelinesRequest.Unmarshal(m, b)
}
func (m *ListPipelinesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelinesRequest.Marshal(b, m, deterministic)
}
func (dst *ListPipelinesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelinesRequest.Merge(dst, src)
}
func (m *ListPipelinesRequest) XXX_Size() int {
	return xxx_messageInfo_ListPipelinesRequest.Size(m)
}
func (m *ListPipelinesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelinesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelinesRequest proto.InternalMessageInfo

func (m *ListPipelinesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListPipelinesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListPipelinesResponse struct {
	Pipelines            []*Pipeline `protobuf:"bytes,1,rep,name=pipelines" json:"pipelines,omitempty"`
	NextPageToken        string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListPipelinesResponse) Reset()         { *m = ListPipelinesResponse{} }
func (m *ListPipelinesResponse) String() string { return proto.CompactTextString(m) }
func (*ListPipelinesResponse) ProtoMessage()    {}
func (*ListPipelinesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_73fbefe76efc41ce, []int{3}
}
func (m *ListPipelinesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelinesResponse.Unmarshal(m, b)
}
func (m *ListPipelinesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelinesResponse.Marshal(b, m, deterministic)
}
func (dst *ListPipelinesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelinesResponse.Merge(dst, src)
}
func (m *ListPipelinesResponse) XXX_Size() int {
	return xxx_messageInfo_ListPipelinesResponse.Size(m)
}
func (m *ListPipelinesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelinesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelinesResponse proto.InternalMessageInfo

func (m *ListPipelinesResponse) GetPipelines() []*Pipeline {
	if m != nil {
		return m.Pipelines
	}
	return nil
}

func (m *ListPipelinesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type DeletePipelineRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePipelineRequest) Reset()         { *m = DeletePipelineRequest{} }
func (m *DeletePipelineRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePipelineRequest) ProtoMessage()    {}
func (*DeletePipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_73fbefe76efc41ce, []int{4}
}
func (m *DeletePipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePipelineRequest.Unmarshal(m, b)
}
func (m *DeletePipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePipelineRequest.Marshal(b, m, deterministic)
}
func (dst *DeletePipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePipelineRequest.Merge(dst, src)
}
func (m *DeletePipelineRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePipelineRequest.Size(m)
}
func (m *DeletePipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePipelineRequest proto.InternalMessageInfo

func (m *DeletePipelineRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type EnablePipelineRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnablePipelineRequest) Reset()         { *m = EnablePipelineRequest{} }
func (m *EnablePipelineRequest) String() string { return proto.CompactTextString(m) }
func (*EnablePipelineRequest) ProtoMessage()    {}
func (*EnablePipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_73fbefe76efc41ce, []int{5}
}
func (m *EnablePipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnablePipelineRequest.Unmarshal(m, b)
}
func (m *EnablePipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnablePipelineRequest.Marshal(b, m, deterministic)
}
func (dst *EnablePipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnablePipelineRequest.Merge(dst, src)
}
func (m *EnablePipelineRequest) XXX_Size() int {
	return xxx_messageInfo_EnablePipelineRequest.Size(m)
}
func (m *EnablePipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnablePipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnablePipelineRequest proto.InternalMessageInfo

func (m *EnablePipelineRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DisablePipelineRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisablePipelineRequest) Reset()         { *m = DisablePipelineRequest{} }
func (m *DisablePipelineRequest) String() string { return proto.CompactTextString(m) }
func (*DisablePipelineRequest) ProtoMessage()    {}
func (*DisablePipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_73fbefe76efc41ce, []int{6}
}
func (m *DisablePipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisablePipelineRequest.Unmarshal(m, b)
}
func (m *DisablePipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisablePipelineRequest.Marshal(b, m, deterministic)
}
func (dst *DisablePipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisablePipelineRequest.Merge(dst, src)
}
func (m *DisablePipelineRequest) XXX_Size() int {
	return xxx_messageInfo_DisablePipelineRequest.Size(m)
}
func (m *DisablePipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisablePipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisablePipelineRequest proto.InternalMessageInfo

func (m *DisablePipelineRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Pipeline struct {
	Id                   uint32               `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Name                 string               `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	PackageId            uint32               `protobuf:"varint,5,opt,name=package_id,json=packageId" json:"package_id,omitempty"`
	Schedule             string               `protobuf:"bytes,6,opt,name=schedule" json:"schedule,omitempty"`
	Enabled              bool                 `protobuf:"varint,7,opt,name=enabled" json:"enabled,omitempty"`
	EnabledAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=enabled_at,json=enabledAt" json:"enabled_at,omitempty"`
	Parameters           []*Parameter         `protobuf:"bytes,9,rep,name=parameters" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Pipeline) Reset()         { *m = Pipeline{} }
func (m *Pipeline) String() string { return proto.CompactTextString(m) }
func (*Pipeline) ProtoMessage()    {}
func (*Pipeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_73fbefe76efc41ce, []int{7}
}
func (m *Pipeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pipeline.Unmarshal(m, b)
}
func (m *Pipeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pipeline.Marshal(b, m, deterministic)
}
func (dst *Pipeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pipeline.Merge(dst, src)
}
func (m *Pipeline) XXX_Size() int {
	return xxx_messageInfo_Pipeline.Size(m)
}
func (m *Pipeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Pipeline.DiscardUnknown(m)
}

var xxx_messageInfo_Pipeline proto.InternalMessageInfo

func (m *Pipeline) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Pipeline) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Pipeline) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Pipeline) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Pipeline) GetPackageId() uint32 {
	if m != nil {
		return m.PackageId
	}
	return 0
}

func (m *Pipeline) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

func (m *Pipeline) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Pipeline) GetEnabledAt() *timestamp.Timestamp {
	if m != nil {
		return m.EnabledAt
	}
	return nil
}

func (m *Pipeline) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func init() {
	proto.RegisterType((*CreatePipelineRequest)(nil), "api.CreatePipelineRequest")
	proto.RegisterType((*GetPipelineRequest)(nil), "api.GetPipelineRequest")
	proto.RegisterType((*ListPipelinesRequest)(nil), "api.ListPipelinesRequest")
	proto.RegisterType((*ListPipelinesResponse)(nil), "api.ListPipelinesResponse")
	proto.RegisterType((*DeletePipelineRequest)(nil), "api.DeletePipelineRequest")
	proto.RegisterType((*EnablePipelineRequest)(nil), "api.EnablePipelineRequest")
	proto.RegisterType((*DisablePipelineRequest)(nil), "api.DisablePipelineRequest")
	proto.RegisterType((*Pipeline)(nil), "api.Pipeline")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PipelineService service

type PipelineServiceClient interface {
	CreatePipeline(ctx context.Context, in *CreatePipelineRequest, opts ...grpc.CallOption) (*Pipeline, error)
	GetPipeline(ctx context.Context, in *GetPipelineRequest, opts ...grpc.CallOption) (*Pipeline, error)
	ListPipelines(ctx context.Context, in *ListPipelinesRequest, opts ...grpc.CallOption) (*ListPipelinesResponse, error)
	EnablePipeline(ctx context.Context, in *EnablePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DisablePipeline(ctx context.Context, in *DisablePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeletePipeline(ctx context.Context, in *DeletePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type pipelineServiceClient struct {
	cc *grpc.ClientConn
}

func NewPipelineServiceClient(cc *grpc.ClientConn) PipelineServiceClient {
	return &pipelineServiceClient{cc}
}

func (c *pipelineServiceClient) CreatePipeline(ctx context.Context, in *CreatePipelineRequest, opts ...grpc.CallOption) (*Pipeline, error) {
	out := new(Pipeline)
	err := grpc.Invoke(ctx, "/api.PipelineService/CreatePipeline", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) GetPipeline(ctx context.Context, in *GetPipelineRequest, opts ...grpc.CallOption) (*Pipeline, error) {
	out := new(Pipeline)
	err := grpc.Invoke(ctx, "/api.PipelineService/GetPipeline", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) ListPipelines(ctx context.Context, in *ListPipelinesRequest, opts ...grpc.CallOption) (*ListPipelinesResponse, error) {
	out := new(ListPipelinesResponse)
	err := grpc.Invoke(ctx, "/api.PipelineService/ListPipelines", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) EnablePipeline(ctx context.Context, in *EnablePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/api.PipelineService/EnablePipeline", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) DisablePipeline(ctx context.Context, in *DisablePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/api.PipelineService/DisablePipeline", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) DeletePipeline(ctx context.Context, in *DeletePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/api.PipelineService/DeletePipeline", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PipelineService service

type PipelineServiceServer interface {
	CreatePipeline(context.Context, *CreatePipelineRequest) (*Pipeline, error)
	GetPipeline(context.Context, *GetPipelineRequest) (*Pipeline, error)
	ListPipelines(context.Context, *ListPipelinesRequest) (*ListPipelinesResponse, error)
	EnablePipeline(context.Context, *EnablePipelineRequest) (*empty.Empty, error)
	DisablePipeline(context.Context, *DisablePipelineRequest) (*empty.Empty, error)
	DeletePipeline(context.Context, *DeletePipelineRequest) (*empty.Empty, error)
}

func RegisterPipelineServiceServer(s *grpc.Server, srv PipelineServiceServer) {
	s.RegisterService(&_PipelineService_serviceDesc, srv)
}

func _PipelineService_CreatePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).CreatePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/CreatePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).CreatePipeline(ctx, req.(*CreatePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_GetPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).GetPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/GetPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).GetPipeline(ctx, req.(*GetPipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_ListPipelines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPipelinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).ListPipelines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/ListPipelines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).ListPipelines(ctx, req.(*ListPipelinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_EnablePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnablePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).EnablePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/EnablePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).EnablePipeline(ctx, req.(*EnablePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_DisablePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisablePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).DisablePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/DisablePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).DisablePipeline(ctx, req.(*DisablePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_DeletePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).DeletePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/DeletePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).DeletePipeline(ctx, req.(*DeletePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PipelineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PipelineService",
	HandlerType: (*PipelineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePipeline",
			Handler:    _PipelineService_CreatePipeline_Handler,
		},
		{
			MethodName: "GetPipeline",
			Handler:    _PipelineService_GetPipeline_Handler,
		},
		{
			MethodName: "ListPipelines",
			Handler:    _PipelineService_ListPipelines_Handler,
		},
		{
			MethodName: "EnablePipeline",
			Handler:    _PipelineService_EnablePipeline_Handler,
		},
		{
			MethodName: "DisablePipeline",
			Handler:    _PipelineService_DisablePipeline_Handler,
		},
		{
			MethodName: "DeletePipeline",
			Handler:    _PipelineService_DeletePipeline_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pipeline.proto",
}

func init() { proto.RegisterFile("pipeline.proto", fileDescriptor_pipeline_73fbefe76efc41ce) }

var fileDescriptor_pipeline_73fbefe76efc41ce = []byte{
	// 629 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x56, 0xd2, 0xbf, 0x64, 0xa2, 0x24, 0xd2, 0x88, 0x14, 0xe3, 0x52, 0x35, 0xb2, 0xfa, 0x13,
	0x0a, 0xd8, 0x6a, 0x39, 0xc1, 0xad, 0xd0, 0x0a, 0x21, 0x71, 0xa8, 0xdc, 0x1e, 0x91, 0xa2, 0x6d,
	0x3c, 0xa4, 0xab, 0x3a, 0xf6, 0xe2, 0xdd, 0x54, 0x50, 0xc4, 0x85, 0x57, 0xe0, 0xc6, 0x2b, 0x71,
	0xe4, 0x15, 0x78, 0x10, 0xe4, 0xf5, 0x3a, 0x24, 0x8e, 0x93, 0x72, 0xf3, 0xce, 0x7c, 0x3b, 0xdf,
	0x37, 0x3b, 0xf3, 0x19, 0x5a, 0x82, 0x0b, 0x0a, 0x79, 0x44, 0xae, 0x48, 0x62, 0x15, 0xe3, 0x0a,
	0x13, 0xdc, 0x7e, 0x3c, 0x8c, 0xe3, 0x61, 0x48, 0x1e, 0x13, 0xdc, 0x63, 0x51, 0x14, 0x2b, 0xa6,
	0x78, 0x1c, 0xc9, 0x0c, 0x62, 0xef, 0x98, 0xac, 0x3e, 0x5d, 0x8d, 0x3f, 0x7a, 0x8a, 0x8f, 0x48,
	0x2a, 0x36, 0x12, 0x06, 0xb0, 0x55, 0x04, 0xd0, 0x48, 0xa8, 0x2f, 0x26, 0xd9, 0x16, 0x2c, 0x61,
	0x23, 0x52, 0x94, 0x64, 0x01, 0xe7, 0x35, 0x74, 0xde, 0x24, 0xc4, 0x14, 0x9d, 0x1b, 0x25, 0x3e,
	0x7d, 0x1a, 0x93, 0x54, 0xf8, 0x04, 0x6a, 0xb9, 0x38, 0xab, 0xd2, 0xad, 0xf4, 0x1a, 0xc7, 0x4d,
	0x97, 0x09, 0xee, 0x4e, 0x70, 0x93, 0xb4, 0xb3, 0x0b, 0xf8, 0x96, 0x54, 0xb1, 0x40, 0x0b, 0xaa,
	0x3c, 0xd0, 0x57, 0x9b, 0x7e, 0x95, 0x07, 0x8e, 0x0f, 0x0f, 0xde, 0x73, 0x39, 0x81, 0xc9, 0x1c,
	0xb7, 0x0d, 0x20, 0xd8, 0x90, 0xfa, 0x2a, 0xbe, 0xa1, 0x48, 0xe3, 0xeb, 0x7e, 0x3d, 0x8d, 0x5c,
	0xa6, 0x01, 0xdc, 0x02, 0x7d, 0xe8, 0x4b, 0x7e, 0x47, 0x56, 0xb5, 0x5b, 0xe9, 0xad, 0xf9, 0xb5,
	0x34, 0x70, 0xc1, 0xef, 0xc8, 0x09, 0xa1, 0x53, 0xa8, 0x29, 0x45, 0x1c, 0x49, 0xc2, 0xa7, 0x50,
	0xcf, 0xe5, 0x49, 0xab, 0xd2, 0x5d, 0x99, 0x97, 0xff, 0x2f, 0x8f, 0xfb, 0xd0, 0x8e, 0xe8, 0xb3,
	0xea, 0x4f, 0xc9, 0xa8, 0x6a, 0x19, 0xcd, 0x34, 0x7c, 0x9e, 0x4b, 0x71, 0x0e, 0xa0, 0x73, 0x4a,
	0x21, 0xcd, 0xbf, 0x55, 0xb1, 0xd5, 0x03, 0xe8, 0x9c, 0x45, 0xec, 0x2a, 0xbc, 0x17, 0xd8, 0x83,
	0xcd, 0x53, 0x2e, 0xff, 0x07, 0xf9, 0xab, 0x0a, 0xb5, 0x1c, 0x53, 0x4c, 0xe2, 0x4b, 0x80, 0x81,
	0x1e, 0x62, 0xd0, 0x67, 0x4a, 0x6b, 0x6f, 0x1c, 0xdb, 0x6e, 0xb6, 0x07, 0x6e, 0xbe, 0x07, 0xee,
	0x65, 0xbe, 0x28, 0x7e, 0xdd, 0xa0, 0x4f, 0x14, 0x22, 0xac, 0x46, 0x6c, 0x44, 0xd6, 0x8a, 0x6e,
	0x58, 0x7f, 0x63, 0x17, 0x1a, 0x01, 0xc9, 0x41, 0xc2, 0x45, 0xba, 0x78, 0xd6, 0xaa, 0x4e, 0x4d,
	0x87, 0xb2, 0x99, 0x0d, 0x6e, 0xd2, 0xf7, 0xe2, 0x81, 0xb5, 0xa6, 0x85, 0xd4, 0x4d, 0xe4, 0x5d,
	0x80, 0x36, 0xd4, 0xe4, 0xe0, 0x9a, 0x82, 0x71, 0x48, 0xd6, 0xba, 0xbe, 0x3d, 0x39, 0xa3, 0x05,
	0x1b, 0xa4, 0xdf, 0x26, 0xb0, 0x36, 0xba, 0x95, 0x5e, 0xcd, 0xcf, 0x8f, 0x69, 0x17, 0xe6, 0x33,
	0xed, 0xa2, 0x76, 0x7f, 0x17, 0x06, 0x7d, 0xa2, 0xd0, 0x4d, 0xf5, 0x98, 0xc5, 0x96, 0x56, 0x5d,
	0xcf, 0xbb, 0x95, 0xcd, 0x3b, 0x0f, 0xfb, 0x53, 0x88, 0xe3, 0x9f, 0x6b, 0xd0, 0xce, 0x5f, 0xf3,
	0x82, 0x92, 0x5b, 0x3e, 0x20, 0x1c, 0x42, 0x6b, 0xd6, 0x09, 0x68, 0xeb, 0x0a, 0xa5, 0xf6, 0xb0,
	0x67, 0xb7, 0xc9, 0x39, 0xfc, 0xfe, 0xfb, 0xcf, 0x8f, 0xea, 0xae, 0x63, 0xa5, 0xae, 0x95, 0xde,
	0xed, 0x11, 0x0b, 0xc5, 0x35, 0x3b, 0xf2, 0x26, 0x4b, 0xf6, 0x6a, 0x62, 0x17, 0xfc, 0x00, 0x8d,
	0x29, 0xbb, 0xe0, 0x43, 0x5d, 0x69, 0xde, 0x40, 0x45, 0x8a, 0x3d, 0x4d, 0xb1, 0x83, 0xdb, 0x8b,
	0x28, 0xbc, 0xaf, 0x3c, 0xf8, 0x86, 0xd7, 0xd0, 0x9c, 0xb1, 0x04, 0x3e, 0xd2, 0x65, 0xca, 0xac,
	0x67, 0xdb, 0x65, 0xa9, 0xcc, 0x41, 0x4e, 0x57, 0xd3, 0xd9, 0xb8, 0xb0, 0x23, 0x4c, 0xa0, 0x35,
	0xbb, 0xe5, 0xe6, 0xc1, 0x4a, 0x57, 0xdf, 0xde, 0x9c, 0x9b, 0xe4, 0x59, 0xfa, 0x5f, 0x72, 0x9e,
	0x69, 0x9e, 0x7d, 0x67, 0x77, 0x69, 0x5b, 0x5e, 0x36, 0x6b, 0x1c, 0x43, 0xbb, 0x60, 0x18, 0xdc,
	0xd2, 0xa4, 0xe5, 0x36, 0x5a, 0xc8, 0xfa, 0x5c, 0xb3, 0x1e, 0x38, 0x7b, 0xcb, 0x59, 0x83, 0xac,
	0x2a, 0xde, 0x40, 0x6b, 0xd6, 0xf9, 0xa6, 0xd5, 0xd2, 0xdf, 0xc1, 0x42, 0x52, 0x33, 0xc1, 0xc3,
	0xe5, 0x13, 0xbc, 0x5a, 0xd7, 0xd7, 0x5e, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x3f, 0x32,
	0xf8, 0x1d, 0x06, 0x00, 0x00,
}
