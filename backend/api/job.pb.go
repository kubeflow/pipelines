// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: job.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateJobRequest struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateJobRequest) Reset()         { *m = CreateJobRequest{} }
func (m *CreateJobRequest) String() string { return proto.CompactTextString(m) }
func (*CreateJobRequest) ProtoMessage()    {}
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{0}
}
func (m *CreateJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateJobRequest.Unmarshal(m, b)
}
func (m *CreateJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateJobRequest.Marshal(b, m, deterministic)
}
func (dst *CreateJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateJobRequest.Merge(dst, src)
}
func (m *CreateJobRequest) XXX_Size() int {
	return xxx_messageInfo_CreateJobRequest.Size(m)
}
func (m *CreateJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateJobRequest proto.InternalMessageInfo

func (m *CreateJobRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type GetJobRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobRequest) Reset()         { *m = GetJobRequest{} }
func (m *GetJobRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobRequest) ProtoMessage()    {}
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{1}
}
func (m *GetJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobRequest.Unmarshal(m, b)
}
func (m *GetJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobRequest.Marshal(b, m, deterministic)
}
func (dst *GetJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobRequest.Merge(dst, src)
}
func (m *GetJobRequest) XXX_Size() int {
	return xxx_messageInfo_GetJobRequest.Size(m)
}
func (m *GetJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobRequest proto.InternalMessageInfo

func (m *GetJobRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListJobsRequest struct {
	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Can be format of "field_name", "field_name asc" or "field_name des"
	// Ascending by default.
	SortBy               string   `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListJobsRequest) Reset()         { *m = ListJobsRequest{} }
func (m *ListJobsRequest) String() string { return proto.CompactTextString(m) }
func (*ListJobsRequest) ProtoMessage()    {}
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{2}
}
func (m *ListJobsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobsRequest.Unmarshal(m, b)
}
func (m *ListJobsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobsRequest.Marshal(b, m, deterministic)
}
func (dst *ListJobsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobsRequest.Merge(dst, src)
}
func (m *ListJobsRequest) XXX_Size() int {
	return xxx_messageInfo_ListJobsRequest.Size(m)
}
func (m *ListJobsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobsRequest proto.InternalMessageInfo

func (m *ListJobsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListJobsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListJobsRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

type ListJobsResponse struct {
	Jobs                 []*Job   `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListJobsResponse) Reset()         { *m = ListJobsResponse{} }
func (m *ListJobsResponse) String() string { return proto.CompactTextString(m) }
func (*ListJobsResponse) ProtoMessage()    {}
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{3}
}
func (m *ListJobsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobsResponse.Unmarshal(m, b)
}
func (m *ListJobsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobsResponse.Marshal(b, m, deterministic)
}
func (dst *ListJobsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobsResponse.Merge(dst, src)
}
func (m *ListJobsResponse) XXX_Size() int {
	return xxx_messageInfo_ListJobsResponse.Size(m)
}
func (m *ListJobsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobsResponse proto.InternalMessageInfo

func (m *ListJobsResponse) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *ListJobsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type ListJobRunsRequest struct {
	JobId     string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize  int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Can be format of "field_name", "field_name asc" or "field_name des"
	// Ascending by default.
	SortBy               string   `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListJobRunsRequest) Reset()         { *m = ListJobRunsRequest{} }
func (m *ListJobRunsRequest) String() string { return proto.CompactTextString(m) }
func (*ListJobRunsRequest) ProtoMessage()    {}
func (*ListJobRunsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{4}
}
func (m *ListJobRunsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobRunsRequest.Unmarshal(m, b)
}
func (m *ListJobRunsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobRunsRequest.Marshal(b, m, deterministic)
}
func (dst *ListJobRunsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobRunsRequest.Merge(dst, src)
}
func (m *ListJobRunsRequest) XXX_Size() int {
	return xxx_messageInfo_ListJobRunsRequest.Size(m)
}
func (m *ListJobRunsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobRunsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobRunsRequest proto.InternalMessageInfo

func (m *ListJobRunsRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *ListJobRunsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListJobRunsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListJobRunsRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

type ListJobRunsResponse struct {
	Runs                 []*Run   `protobuf:"bytes,1,rep,name=runs,proto3" json:"runs,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListJobRunsResponse) Reset()         { *m = ListJobRunsResponse{} }
func (m *ListJobRunsResponse) String() string { return proto.CompactTextString(m) }
func (*ListJobRunsResponse) ProtoMessage()    {}
func (*ListJobRunsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{5}
}
func (m *ListJobRunsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobRunsResponse.Unmarshal(m, b)
}
func (m *ListJobRunsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobRunsResponse.Marshal(b, m, deterministic)
}
func (dst *ListJobRunsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobRunsResponse.Merge(dst, src)
}
func (m *ListJobRunsResponse) XXX_Size() int {
	return xxx_messageInfo_ListJobRunsResponse.Size(m)
}
func (m *ListJobRunsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobRunsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobRunsResponse proto.InternalMessageInfo

func (m *ListJobRunsResponse) GetRuns() []*Run {
	if m != nil {
		return m.Runs
	}
	return nil
}

func (m *ListJobRunsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type DeleteJobRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteJobRequest) Reset()         { *m = DeleteJobRequest{} }
func (m *DeleteJobRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteJobRequest) ProtoMessage()    {}
func (*DeleteJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{6}
}
func (m *DeleteJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteJobRequest.Unmarshal(m, b)
}
func (m *DeleteJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteJobRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteJobRequest.Merge(dst, src)
}
func (m *DeleteJobRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteJobRequest.Size(m)
}
func (m *DeleteJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteJobRequest proto.InternalMessageInfo

func (m *DeleteJobRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type EnableJobRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableJobRequest) Reset()         { *m = EnableJobRequest{} }
func (m *EnableJobRequest) String() string { return proto.CompactTextString(m) }
func (*EnableJobRequest) ProtoMessage()    {}
func (*EnableJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{7}
}
func (m *EnableJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableJobRequest.Unmarshal(m, b)
}
func (m *EnableJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableJobRequest.Marshal(b, m, deterministic)
}
func (dst *EnableJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableJobRequest.Merge(dst, src)
}
func (m *EnableJobRequest) XXX_Size() int {
	return xxx_messageInfo_EnableJobRequest.Size(m)
}
func (m *EnableJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnableJobRequest proto.InternalMessageInfo

func (m *EnableJobRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DisableJobRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableJobRequest) Reset()         { *m = DisableJobRequest{} }
func (m *DisableJobRequest) String() string { return proto.CompactTextString(m) }
func (*DisableJobRequest) ProtoMessage()    {}
func (*DisableJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{8}
}
func (m *DisableJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableJobRequest.Unmarshal(m, b)
}
func (m *DisableJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableJobRequest.Marshal(b, m, deterministic)
}
func (dst *DisableJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableJobRequest.Merge(dst, src)
}
func (m *DisableJobRequest) XXX_Size() int {
	return xxx_messageInfo_DisableJobRequest.Size(m)
}
func (m *DisableJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisableJobRequest proto.InternalMessageInfo

func (m *DisableJobRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CronSchedule struct {
	StartTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Cron                 string               `protobuf:"bytes,3,opt,name=cron,proto3" json:"cron,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CronSchedule) Reset()         { *m = CronSchedule{} }
func (m *CronSchedule) String() string { return proto.CompactTextString(m) }
func (*CronSchedule) ProtoMessage()    {}
func (*CronSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{9}
}
func (m *CronSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CronSchedule.Unmarshal(m, b)
}
func (m *CronSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CronSchedule.Marshal(b, m, deterministic)
}
func (dst *CronSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CronSchedule.Merge(dst, src)
}
func (m *CronSchedule) XXX_Size() int {
	return xxx_messageInfo_CronSchedule.Size(m)
}
func (m *CronSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_CronSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_CronSchedule proto.InternalMessageInfo

func (m *CronSchedule) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *CronSchedule) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *CronSchedule) GetCron() string {
	if m != nil {
		return m.Cron
	}
	return ""
}

type PeriodicSchedule struct {
	StartTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	IntervalSecond       int64                `protobuf:"varint,3,opt,name=interval_second,json=intervalSecond,proto3" json:"interval_second,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PeriodicSchedule) Reset()         { *m = PeriodicSchedule{} }
func (m *PeriodicSchedule) String() string { return proto.CompactTextString(m) }
func (*PeriodicSchedule) ProtoMessage()    {}
func (*PeriodicSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{10}
}
func (m *PeriodicSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeriodicSchedule.Unmarshal(m, b)
}
func (m *PeriodicSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeriodicSchedule.Marshal(b, m, deterministic)
}
func (dst *PeriodicSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeriodicSchedule.Merge(dst, src)
}
func (m *PeriodicSchedule) XXX_Size() int {
	return xxx_messageInfo_PeriodicSchedule.Size(m)
}
func (m *PeriodicSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_PeriodicSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_PeriodicSchedule proto.InternalMessageInfo

func (m *PeriodicSchedule) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *PeriodicSchedule) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *PeriodicSchedule) GetIntervalSecond() int64 {
	if m != nil {
		return m.IntervalSecond
	}
	return 0
}

type Trigger struct {
	// Types that are valid to be assigned to Trigger:
	//	*Trigger_CronSchedule
	//	*Trigger_PeriodicSchedule
	Trigger              isTrigger_Trigger `protobuf_oneof:"trigger"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Trigger) Reset()         { *m = Trigger{} }
func (m *Trigger) String() string { return proto.CompactTextString(m) }
func (*Trigger) ProtoMessage()    {}
func (*Trigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{11}
}
func (m *Trigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger.Unmarshal(m, b)
}
func (m *Trigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger.Marshal(b, m, deterministic)
}
func (dst *Trigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger.Merge(dst, src)
}
func (m *Trigger) XXX_Size() int {
	return xxx_messageInfo_Trigger.Size(m)
}
func (m *Trigger) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger proto.InternalMessageInfo

type isTrigger_Trigger interface {
	isTrigger_Trigger()
}

type Trigger_CronSchedule struct {
	CronSchedule *CronSchedule `protobuf:"bytes,1,opt,name=cron_schedule,json=cronSchedule,proto3,oneof"`
}
type Trigger_PeriodicSchedule struct {
	PeriodicSchedule *PeriodicSchedule `protobuf:"bytes,2,opt,name=periodic_schedule,json=periodicSchedule,proto3,oneof"`
}

func (*Trigger_CronSchedule) isTrigger_Trigger()     {}
func (*Trigger_PeriodicSchedule) isTrigger_Trigger() {}

func (m *Trigger) GetTrigger() isTrigger_Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *Trigger) GetCronSchedule() *CronSchedule {
	if x, ok := m.GetTrigger().(*Trigger_CronSchedule); ok {
		return x.CronSchedule
	}
	return nil
}

func (m *Trigger) GetPeriodicSchedule() *PeriodicSchedule {
	if x, ok := m.GetTrigger().(*Trigger_PeriodicSchedule); ok {
		return x.PeriodicSchedule
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Trigger) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Trigger_OneofMarshaler, _Trigger_OneofUnmarshaler, _Trigger_OneofSizer, []interface{}{
		(*Trigger_CronSchedule)(nil),
		(*Trigger_PeriodicSchedule)(nil),
	}
}

func _Trigger_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Trigger)
	// trigger
	switch x := m.Trigger.(type) {
	case *Trigger_CronSchedule:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CronSchedule); err != nil {
			return err
		}
	case *Trigger_PeriodicSchedule:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PeriodicSchedule); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Trigger.Trigger has unexpected type %T", x)
	}
	return nil
}

func _Trigger_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Trigger)
	switch tag {
	case 1: // trigger.cron_schedule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CronSchedule)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_CronSchedule{msg}
		return true, err
	case 2: // trigger.periodic_schedule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PeriodicSchedule)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_PeriodicSchedule{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Trigger_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Trigger)
	// trigger
	switch x := m.Trigger.(type) {
	case *Trigger_CronSchedule:
		s := proto.Size(x.CronSchedule)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_PeriodicSchedule:
		s := proto.Size(x.PeriodicSchedule)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Job struct {
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PipelineId  string `protobuf:"bytes,4,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	Enabled     bool   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The status is surfacing the resource condition. A resource can potentially
	// have multiple conditions, although in most cases, it should be in one
	// state.
	// https://github.com/eBay/Kubernetes/blob/master/docs/devel/api-conventions.md
	// In case of a single state, the status ends with a colon:
	// STATUS_1:
	// In case of multiple states, the statuses are separated by a colon.
	// STATUS_1:STATUS_2:
	Status         string               `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	MaxConcurrency int64                `protobuf:"varint,7,opt,name=max_concurrency,json=maxConcurrency,proto3" json:"max_concurrency,omitempty"`
	Parameters     []*Parameter         `protobuf:"bytes,8,rep,name=parameters,proto3" json:"parameters,omitempty"`
	Trigger        *Trigger             `protobuf:"bytes,9,opt,name=trigger,proto3" json:"trigger,omitempty"`
	CreatedAt      *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// In case any error happens retrieving a job field, only job ID
	// and the error message is returned. Client has the flexibility of choosing
	// how to handle error. This is especially useful during listing call.
	Error                string   `protobuf:"bytes,12,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_1795560547f33958, []int{12}
}
func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (dst *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(dst, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Job) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Job) GetPipelineId() string {
	if m != nil {
		return m.PipelineId
	}
	return ""
}

func (m *Job) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Job) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Job) GetMaxConcurrency() int64 {
	if m != nil {
		return m.MaxConcurrency
	}
	return 0
}

func (m *Job) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Job) GetTrigger() *Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *Job) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Job) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Job) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateJobRequest)(nil), "api.CreateJobRequest")
	proto.RegisterType((*GetJobRequest)(nil), "api.GetJobRequest")
	proto.RegisterType((*ListJobsRequest)(nil), "api.ListJobsRequest")
	proto.RegisterType((*ListJobsResponse)(nil), "api.ListJobsResponse")
	proto.RegisterType((*ListJobRunsRequest)(nil), "api.ListJobRunsRequest")
	proto.RegisterType((*ListJobRunsResponse)(nil), "api.ListJobRunsResponse")
	proto.RegisterType((*DeleteJobRequest)(nil), "api.DeleteJobRequest")
	proto.RegisterType((*EnableJobRequest)(nil), "api.EnableJobRequest")
	proto.RegisterType((*DisableJobRequest)(nil), "api.DisableJobRequest")
	proto.RegisterType((*CronSchedule)(nil), "api.CronSchedule")
	proto.RegisterType((*PeriodicSchedule)(nil), "api.PeriodicSchedule")
	proto.RegisterType((*Trigger)(nil), "api.Trigger")
	proto.RegisterType((*Job)(nil), "api.Job")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	CreateJob(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*Job, error)
	GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*Job, error)
	ListJobs(ctx context.Context, in *ListJobsRequest, opts ...grpc.CallOption) (*ListJobsResponse, error)
	EnableJob(ctx context.Context, in *EnableJobRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DisableJob(ctx context.Context, in *DisableJobRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteJob(ctx context.Context, in *DeleteJobRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ListJobRuns(ctx context.Context, in *ListJobRunsRequest, opts ...grpc.CallOption) (*ListJobRunsResponse, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) CreateJob(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/api.JobService/CreateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/api.JobService/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) ListJobs(ctx context.Context, in *ListJobsRequest, opts ...grpc.CallOption) (*ListJobsResponse, error) {
	out := new(ListJobsResponse)
	err := c.cc.Invoke(ctx, "/api.JobService/ListJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) EnableJob(ctx context.Context, in *EnableJobRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.JobService/EnableJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) DisableJob(ctx context.Context, in *DisableJobRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.JobService/DisableJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) DeleteJob(ctx context.Context, in *DeleteJobRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.JobService/DeleteJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) ListJobRuns(ctx context.Context, in *ListJobRunsRequest, opts ...grpc.CallOption) (*ListJobRunsResponse, error) {
	out := new(ListJobRunsResponse)
	err := c.cc.Invoke(ctx, "/api.JobService/ListJobRuns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	CreateJob(context.Context, *CreateJobRequest) (*Job, error)
	GetJob(context.Context, *GetJobRequest) (*Job, error)
	ListJobs(context.Context, *ListJobsRequest) (*ListJobsResponse, error)
	EnableJob(context.Context, *EnableJobRequest) (*empty.Empty, error)
	DisableJob(context.Context, *DisableJobRequest) (*empty.Empty, error)
	DeleteJob(context.Context, *DeleteJobRequest) (*empty.Empty, error)
	ListJobRuns(context.Context, *ListJobRunsRequest) (*ListJobRunsResponse, error)
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_CreateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).CreateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.JobService/CreateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).CreateJob(ctx, req.(*CreateJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.JobService/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).GetJob(ctx, req.(*GetJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_ListJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).ListJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.JobService/ListJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).ListJobs(ctx, req.(*ListJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_EnableJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).EnableJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.JobService/EnableJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).EnableJob(ctx, req.(*EnableJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_DisableJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).DisableJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.JobService/DisableJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).DisableJob(ctx, req.(*DisableJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_DeleteJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).DeleteJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.JobService/DeleteJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).DeleteJob(ctx, req.(*DeleteJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_ListJobRuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListJobRunsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).ListJobRuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.JobService/ListJobRuns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).ListJobRuns(ctx, req.(*ListJobRunsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateJob",
			Handler:    _JobService_CreateJob_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _JobService_GetJob_Handler,
		},
		{
			MethodName: "ListJobs",
			Handler:    _JobService_ListJobs_Handler,
		},
		{
			MethodName: "EnableJob",
			Handler:    _JobService_EnableJob_Handler,
		},
		{
			MethodName: "DisableJob",
			Handler:    _JobService_DisableJob_Handler,
		},
		{
			MethodName: "DeleteJob",
			Handler:    _JobService_DeleteJob_Handler,
		},
		{
			MethodName: "ListJobRuns",
			Handler:    _JobService_ListJobRuns_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "job.proto",
}

func init() { proto.RegisterFile("job.proto", fileDescriptor_job_1795560547f33958) }

var fileDescriptor_job_1795560547f33958 = []byte{
	// 978 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0xdd, 0x6e, 0xdb, 0xb6,
	0x17, 0xaf, 0xed, 0xc4, 0xb6, 0x8e, 0xf3, 0xe1, 0xb0, 0x4d, 0x2a, 0x28, 0xf9, 0xff, 0xe3, 0xa8,
	0x40, 0x9b, 0x0d, 0xab, 0x8d, 0x65, 0x18, 0xb0, 0xed, 0x2e, 0x1f, 0xc5, 0xd2, 0x60, 0x18, 0x0a,
	0x39, 0x17, 0x03, 0x36, 0x40, 0xa0, 0x24, 0xc6, 0xa5, 0x6b, 0x93, 0x1a, 0x49, 0x65, 0x49, 0x87,
	0x02, 0xc3, 0x1e, 0x61, 0xeb, 0x5b, 0x0c, 0x7b, 0x9a, 0xbd, 0xc2, 0x1e, 0x64, 0x20, 0x45, 0xf9,
	0x43, 0x8e, 0x9b, 0xdd, 0xed, 0x4a, 0xe2, 0x8f, 0xe7, 0xf0, 0x7c, 0xff, 0x0e, 0x38, 0x43, 0x1e,
	0x75, 0x53, 0xc1, 0x15, 0x47, 0x35, 0x9c, 0x52, 0xaf, 0x45, 0x84, 0xe0, 0x22, 0x47, 0xbc, 0xbd,
	0x01, 0xe7, 0x83, 0x11, 0xe9, 0xe1, 0x94, 0xf6, 0x30, 0x63, 0x5c, 0x61, 0x45, 0x39, 0x93, 0xf6,
	0x76, 0xdf, 0xde, 0x9a, 0x53, 0x94, 0x5d, 0xf5, 0x14, 0x1d, 0x13, 0xa9, 0xf0, 0x38, 0xb5, 0x02,
	0xbb, 0x65, 0x01, 0x32, 0x4e, 0xd5, 0xad, 0xbd, 0xdc, 0x4c, 0xb1, 0xc0, 0x63, 0xa2, 0x48, 0x61,
	0xcc, 0x11, 0x19, 0xb3, 0xbf, 0x9f, 0x98, 0x4f, 0xfc, 0x7c, 0x40, 0xd8, 0x73, 0xf9, 0x13, 0x1e,
	0x0c, 0x88, 0xe8, 0xf1, 0xd4, 0xd8, 0x5e, 0xf4, 0xc3, 0xef, 0x42, 0xfb, 0x54, 0x10, 0xac, 0xc8,
	0x05, 0x8f, 0x02, 0xf2, 0x63, 0x46, 0xa4, 0x42, 0x1e, 0xd4, 0x86, 0x3c, 0x72, 0x2b, 0x9d, 0xca,
	0x61, 0xeb, 0xa8, 0xd9, 0xc5, 0x29, 0xed, 0xea, 0x5b, 0x0d, 0xfa, 0xfb, 0xb0, 0xfe, 0x35, 0x51,
	0x33, 0xc2, 0x1b, 0x50, 0xa5, 0x89, 0x91, 0x75, 0x82, 0x2a, 0x4d, 0xfc, 0x2b, 0xd8, 0xfc, 0x86,
	0x4a, 0x2d, 0x21, 0x0b, 0x91, 0xff, 0x01, 0xa4, 0x78, 0x40, 0x42, 0xc5, 0xdf, 0x10, 0x66, 0x45,
	0x1d, 0x8d, 0x5c, 0x6a, 0x00, 0xed, 0x82, 0x39, 0x84, 0x92, 0xbe, 0x25, 0x6e, 0xb5, 0x53, 0x39,
	0x5c, 0x0d, 0x9a, 0x1a, 0xe8, 0xd3, 0xb7, 0x04, 0x3d, 0x86, 0x86, 0xe4, 0x42, 0x85, 0xd1, 0xad,
	0x5b, 0x33, 0x8a, 0x75, 0x7d, 0x3c, 0xb9, 0xf5, 0xbf, 0x83, 0xf6, 0xd4, 0x8e, 0x4c, 0x39, 0x93,
	0x04, 0xed, 0xc1, 0xca, 0x90, 0x47, 0xd2, 0xad, 0x74, 0x6a, 0x73, 0x9e, 0x1b, 0x14, 0x3d, 0x85,
	0x4d, 0x46, 0x6e, 0x54, 0x38, 0xe3, 0x4b, 0xd5, 0x3c, 0xb9, 0xae, 0xe1, 0x57, 0x85, 0x3f, 0xfe,
	0x2f, 0x15, 0x40, 0xf6, 0xe9, 0x20, 0x63, 0x93, 0x28, 0xb6, 0xa1, 0x3e, 0xe4, 0x51, 0x38, 0x09,
	0x76, 0x75, 0xc8, 0xa3, 0x97, 0x49, 0x29, 0xb8, 0xea, 0x07, 0x83, 0xab, 0x2d, 0x0f, 0x6e, 0x65,
	0x2e, 0xb8, 0xef, 0xe1, 0xe1, 0x9c, 0x07, 0xd3, 0xf8, 0x44, 0xc6, 0xe6, 0xe3, 0x0b, 0x32, 0x16,
	0x18, 0xf4, 0x5f, 0xc7, 0xe7, 0x43, 0xfb, 0x8c, 0x8c, 0xc8, 0x5c, 0xc9, 0xcb, 0x55, 0xf4, 0xa1,
	0xfd, 0x82, 0xe1, 0x68, 0xf4, 0x21, 0x99, 0x27, 0xb0, 0x75, 0x46, 0xe5, 0x3d, 0x42, 0xef, 0x2b,
	0xb0, 0x76, 0x2a, 0x38, 0xeb, 0xc7, 0xaf, 0x49, 0x92, 0x8d, 0x08, 0xfa, 0x12, 0x40, 0x2a, 0x2c,
	0x54, 0xa8, 0x1b, 0xde, 0xf6, 0x98, 0xd7, 0xcd, 0x9b, 0xbd, 0x5b, 0x34, 0x7b, 0xf7, 0xb2, 0x98,
	0x86, 0xc0, 0x31, 0xd2, 0xfa, 0x8c, 0x3e, 0x87, 0x26, 0x61, 0x49, 0xae, 0x58, 0xbd, 0x57, 0xb1,
	0x41, 0x58, 0x62, 0xd4, 0x10, 0xac, 0xc4, 0x82, 0x33, 0xdb, 0x3f, 0xe6, 0xdf, 0xff, 0xb3, 0x02,
	0xed, 0x57, 0x44, 0x50, 0x9e, 0xd0, 0xf8, 0x3f, 0x74, 0xed, 0x19, 0x6c, 0x52, 0xa6, 0x88, 0xb8,
	0xc6, 0xa3, 0x50, 0x92, 0x98, 0xb3, 0xc4, 0x78, 0x59, 0x0b, 0x36, 0x0a, 0xb8, 0x6f, 0x50, 0x9d,
	0xc6, 0xc6, 0xa5, 0xa0, 0x7a, 0x98, 0xd1, 0x17, 0xb0, 0xae, 0x63, 0x08, 0xa5, 0xf5, 0xdb, 0x7a,
	0xba, 0x65, 0xda, 0x61, 0x36, 0xd7, 0xe7, 0x0f, 0x82, 0xb5, 0x78, 0x36, 0xf7, 0x67, 0xb0, 0x95,
	0xda, 0xa0, 0xa7, 0xda, 0xb9, 0xbb, 0xdb, 0x46, 0xbb, 0x9c, 0x92, 0xf3, 0x07, 0x41, 0x3b, 0x2d,
	0x61, 0x27, 0x0e, 0x34, 0x54, 0xee, 0x8a, 0xff, 0x47, 0x0d, 0x6a, 0x17, 0x3c, 0x2a, 0x57, 0x5d,
	0xa7, 0x9c, 0x61, 0x9b, 0x0a, 0x27, 0x30, 0xff, 0xa8, 0x03, 0xad, 0x84, 0xc8, 0x58, 0x50, 0xc3,
	0x45, 0xb6, 0x1a, 0xb3, 0x10, 0xda, 0x87, 0x56, 0x4a, 0x53, 0x32, 0xa2, 0x8c, 0xe8, 0x31, 0xcb,
	0x47, 0x02, 0x0a, 0xe8, 0x65, 0x82, 0x5c, 0x68, 0x10, 0xd3, 0x95, 0x89, 0xbb, 0xda, 0xa9, 0x1c,
	0x36, 0x83, 0xe2, 0x88, 0x76, 0xa0, 0x2e, 0x15, 0x56, 0x99, 0x74, 0xeb, 0x76, 0x90, 0xcc, 0x49,
	0x27, 0x78, 0x8c, 0x6f, 0xc2, 0x98, 0xb3, 0x38, 0x13, 0x82, 0xb0, 0xf8, 0xd6, 0x6d, 0xe4, 0x09,
	0x1e, 0xe3, 0x9b, 0xd3, 0x29, 0x8a, 0xba, 0x7a, 0x8c, 0x2d, 0xa7, 0x4a, 0xb7, 0x69, 0x06, 0x6c,
	0x23, 0xcf, 0x49, 0x01, 0x07, 0x33, 0x12, 0xe8, 0xe9, 0x24, 0x09, 0xae, 0x63, 0x12, 0xb8, 0x66,
	0x84, 0x6d, 0x8d, 0x82, 0xe2, 0x52, 0xf7, 0x54, 0x6c, 0xf8, 0x35, 0x09, 0xb1, 0x72, 0xe1, 0xfe,
	0x9e, 0xb2, 0xd2, 0xc7, 0x4a, 0xab, 0x66, 0x69, 0x52, 0xa8, 0xb6, 0xee, 0x57, 0xb5, 0xd2, 0xc7,
	0x0a, 0x3d, 0x82, 0x55, 0xb3, 0x8a, 0xdc, 0xb5, 0x9c, 0xaa, 0xcc, 0xe1, 0xe8, 0xfd, 0x2a, 0xc0,
	0x05, 0x8f, 0xfa, 0x44, 0x5c, 0xd3, 0x98, 0xa0, 0x6f, 0xc1, 0x99, 0x50, 0x3f, 0xda, 0xb6, 0xdd,
	0x33, 0xbf, 0x0a, 0xbc, 0x09, 0x87, 0xfa, 0x9d, 0x5f, 0xff, 0xfa, 0xfb, 0xf7, 0xaa, 0xe7, 0x3f,
	0xd4, 0x0b, 0x4d, 0xf6, 0xae, 0x3f, 0xc5, 0xa3, 0xf4, 0x35, 0x3e, 0xea, 0x69, 0x6a, 0xfd, 0x4a,
	0xaf, 0x06, 0x74, 0x0e, 0xf5, 0x7c, 0x35, 0x20, 0x64, 0xb4, 0xe6, 0xf6, 0xc4, 0xe2, 0x4b, 0xc8,
	0xbd, 0xe3, 0xa5, 0xde, 0xcf, 0x34, 0x79, 0x87, 0x2e, 0xa1, 0x59, 0x70, 0x3b, 0x7a, 0x64, 0xf4,
	0x4a, 0x2b, 0xc5, 0xdb, 0x2e, 0xa1, 0x39, 0x41, 0xfa, 0xbb, 0xe6, 0xe9, 0x6d, 0x74, 0x97, 0x93,
	0x28, 0x06, 0x67, 0xc2, 0x69, 0x36, 0xde, 0x32, 0xc7, 0x79, 0x3b, 0x0b, 0xf9, 0x7d, 0xa1, 0xd7,
	0xae, 0xff, 0xcc, 0x3c, 0x7c, 0xe0, 0xef, 0x2f, 0xf3, 0xb9, 0x97, 0x77, 0x22, 0xba, 0x02, 0x98,
	0x92, 0x22, 0xda, 0x31, 0x56, 0x16, 0x58, 0x72, 0xa9, 0x99, 0x43, 0x63, 0xc6, 0xf7, 0x3b, 0x4b,
	0xcd, 0x24, 0xf9, 0x5b, 0xe8, 0x07, 0x70, 0x26, 0x24, 0x6e, 0x83, 0x29, 0x93, 0xfa, 0x52, 0x2b,
	0xb6, 0x00, 0x1f, 0x2f, 0x2f, 0xc0, 0x1b, 0x68, 0xcd, 0xec, 0x1f, 0xf4, 0x78, 0x36, 0xdb, 0x33,
	0x3b, 0xd1, 0x73, 0x17, 0x2f, 0x6c, 0x25, 0x3e, 0x32, 0x36, 0x9e, 0xa0, 0x83, 0x3b, 0x6d, 0xe4,
	0x8b, 0xf4, 0x5d, 0x4f, 0xef, 0xad, 0x93, 0x83, 0xdf, 0x8e, 0xff, 0x1f, 0xec, 0x41, 0x23, 0x21,
	0x57, 0x38, 0x1b, 0x29, 0xb4, 0x85, 0x36, 0x61, 0xdd, 0x6b, 0x99, 0xa7, 0xfb, 0x66, 0x8c, 0xa3,
	0xba, 0x89, 0xe0, 0xb3, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x7d, 0xdb, 0x84, 0x71, 0x09,
	0x00, 0x00,
}
