// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipeline_v1alpha2.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreatePipelineRequestV2 struct {
	Pipeline             *PipelineV2 `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreatePipelineRequestV2) Reset()         { *m = CreatePipelineRequestV2{} }
func (m *CreatePipelineRequestV2) String() string { return proto.CompactTextString(m) }
func (*CreatePipelineRequestV2) ProtoMessage()    {}
func (*CreatePipelineRequestV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_v1alpha2_1d559c98207072de, []int{0}
}
func (m *CreatePipelineRequestV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePipelineRequestV2.Unmarshal(m, b)
}
func (m *CreatePipelineRequestV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePipelineRequestV2.Marshal(b, m, deterministic)
}
func (dst *CreatePipelineRequestV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePipelineRequestV2.Merge(dst, src)
}
func (m *CreatePipelineRequestV2) XXX_Size() int {
	return xxx_messageInfo_CreatePipelineRequestV2.Size(m)
}
func (m *CreatePipelineRequestV2) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePipelineRequestV2.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePipelineRequestV2 proto.InternalMessageInfo

func (m *CreatePipelineRequestV2) GetPipeline() *PipelineV2 {
	if m != nil {
		return m.Pipeline
	}
	return nil
}

type GetPipelineRequestV2 struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPipelineRequestV2) Reset()         { *m = GetPipelineRequestV2{} }
func (m *GetPipelineRequestV2) String() string { return proto.CompactTextString(m) }
func (*GetPipelineRequestV2) ProtoMessage()    {}
func (*GetPipelineRequestV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_v1alpha2_1d559c98207072de, []int{1}
}
func (m *GetPipelineRequestV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPipelineRequestV2.Unmarshal(m, b)
}
func (m *GetPipelineRequestV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPipelineRequestV2.Marshal(b, m, deterministic)
}
func (dst *GetPipelineRequestV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPipelineRequestV2.Merge(dst, src)
}
func (m *GetPipelineRequestV2) XXX_Size() int {
	return xxx_messageInfo_GetPipelineRequestV2.Size(m)
}
func (m *GetPipelineRequestV2) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPipelineRequestV2.DiscardUnknown(m)
}

var xxx_messageInfo_GetPipelineRequestV2 proto.InternalMessageInfo

func (m *GetPipelineRequestV2) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListPipelinesRequestV2 struct {
	PageToken            string   `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy               string   `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPipelinesRequestV2) Reset()         { *m = ListPipelinesRequestV2{} }
func (m *ListPipelinesRequestV2) String() string { return proto.CompactTextString(m) }
func (*ListPipelinesRequestV2) ProtoMessage()    {}
func (*ListPipelinesRequestV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_v1alpha2_1d559c98207072de, []int{2}
}
func (m *ListPipelinesRequestV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelinesRequestV2.Unmarshal(m, b)
}
func (m *ListPipelinesRequestV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelinesRequestV2.Marshal(b, m, deterministic)
}
func (dst *ListPipelinesRequestV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelinesRequestV2.Merge(dst, src)
}
func (m *ListPipelinesRequestV2) XXX_Size() int {
	return xxx_messageInfo_ListPipelinesRequestV2.Size(m)
}
func (m *ListPipelinesRequestV2) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelinesRequestV2.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelinesRequestV2 proto.InternalMessageInfo

func (m *ListPipelinesRequestV2) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListPipelinesRequestV2) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListPipelinesRequestV2) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

type ListPipelinesResponseV2 struct {
	Pipelines            []*PipelineV2 `protobuf:"bytes,1,rep,name=pipelines,proto3" json:"pipelines,omitempty"`
	NextPageToken        string        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListPipelinesResponseV2) Reset()         { *m = ListPipelinesResponseV2{} }
func (m *ListPipelinesResponseV2) String() string { return proto.CompactTextString(m) }
func (*ListPipelinesResponseV2) ProtoMessage()    {}
func (*ListPipelinesResponseV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_v1alpha2_1d559c98207072de, []int{3}
}
func (m *ListPipelinesResponseV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelinesResponseV2.Unmarshal(m, b)
}
func (m *ListPipelinesResponseV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelinesResponseV2.Marshal(b, m, deterministic)
}
func (dst *ListPipelinesResponseV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelinesResponseV2.Merge(dst, src)
}
func (m *ListPipelinesResponseV2) XXX_Size() int {
	return xxx_messageInfo_ListPipelinesResponseV2.Size(m)
}
func (m *ListPipelinesResponseV2) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelinesResponseV2.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelinesResponseV2 proto.InternalMessageInfo

func (m *ListPipelinesResponseV2) GetPipelines() []*PipelineV2 {
	if m != nil {
		return m.Pipelines
	}
	return nil
}

func (m *ListPipelinesResponseV2) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type DeletePipelineRequestV2 struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePipelineRequestV2) Reset()         { *m = DeletePipelineRequestV2{} }
func (m *DeletePipelineRequestV2) String() string { return proto.CompactTextString(m) }
func (*DeletePipelineRequestV2) ProtoMessage()    {}
func (*DeletePipelineRequestV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_v1alpha2_1d559c98207072de, []int{4}
}
func (m *DeletePipelineRequestV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePipelineRequestV2.Unmarshal(m, b)
}
func (m *DeletePipelineRequestV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePipelineRequestV2.Marshal(b, m, deterministic)
}
func (dst *DeletePipelineRequestV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePipelineRequestV2.Merge(dst, src)
}
func (m *DeletePipelineRequestV2) XXX_Size() int {
	return xxx_messageInfo_DeletePipelineRequestV2.Size(m)
}
func (m *DeletePipelineRequestV2) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePipelineRequestV2.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePipelineRequestV2 proto.InternalMessageInfo

func (m *DeletePipelineRequestV2) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type EnablePipelineRequestV2 struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnablePipelineRequestV2) Reset()         { *m = EnablePipelineRequestV2{} }
func (m *EnablePipelineRequestV2) String() string { return proto.CompactTextString(m) }
func (*EnablePipelineRequestV2) ProtoMessage()    {}
func (*EnablePipelineRequestV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_v1alpha2_1d559c98207072de, []int{5}
}
func (m *EnablePipelineRequestV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnablePipelineRequestV2.Unmarshal(m, b)
}
func (m *EnablePipelineRequestV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnablePipelineRequestV2.Marshal(b, m, deterministic)
}
func (dst *EnablePipelineRequestV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnablePipelineRequestV2.Merge(dst, src)
}
func (m *EnablePipelineRequestV2) XXX_Size() int {
	return xxx_messageInfo_EnablePipelineRequestV2.Size(m)
}
func (m *EnablePipelineRequestV2) XXX_DiscardUnknown() {
	xxx_messageInfo_EnablePipelineRequestV2.DiscardUnknown(m)
}

var xxx_messageInfo_EnablePipelineRequestV2 proto.InternalMessageInfo

func (m *EnablePipelineRequestV2) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DisablePipelineRequestV2 struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisablePipelineRequestV2) Reset()         { *m = DisablePipelineRequestV2{} }
func (m *DisablePipelineRequestV2) String() string { return proto.CompactTextString(m) }
func (*DisablePipelineRequestV2) ProtoMessage()    {}
func (*DisablePipelineRequestV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_v1alpha2_1d559c98207072de, []int{6}
}
func (m *DisablePipelineRequestV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisablePipelineRequestV2.Unmarshal(m, b)
}
func (m *DisablePipelineRequestV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisablePipelineRequestV2.Marshal(b, m, deterministic)
}
func (dst *DisablePipelineRequestV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisablePipelineRequestV2.Merge(dst, src)
}
func (m *DisablePipelineRequestV2) XXX_Size() int {
	return xxx_messageInfo_DisablePipelineRequestV2.Size(m)
}
func (m *DisablePipelineRequestV2) XXX_DiscardUnknown() {
	xxx_messageInfo_DisablePipelineRequestV2.DiscardUnknown(m)
}

var xxx_messageInfo_DisablePipelineRequestV2 proto.InternalMessageInfo

func (m *DisablePipelineRequestV2) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CronSchedule struct {
	StartTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Cron                 string               `protobuf:"bytes,3,opt,name=cron,proto3" json:"cron,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CronSchedule) Reset()         { *m = CronSchedule{} }
func (m *CronSchedule) String() string { return proto.CompactTextString(m) }
func (*CronSchedule) ProtoMessage()    {}
func (*CronSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_v1alpha2_1d559c98207072de, []int{7}
}
func (m *CronSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CronSchedule.Unmarshal(m, b)
}
func (m *CronSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CronSchedule.Marshal(b, m, deterministic)
}
func (dst *CronSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CronSchedule.Merge(dst, src)
}
func (m *CronSchedule) XXX_Size() int {
	return xxx_messageInfo_CronSchedule.Size(m)
}
func (m *CronSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_CronSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_CronSchedule proto.InternalMessageInfo

func (m *CronSchedule) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *CronSchedule) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *CronSchedule) GetCron() string {
	if m != nil {
		return m.Cron
	}
	return ""
}

type PeriodicSchedule struct {
	StartTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	IntervalSecond       int64                `protobuf:"varint,3,opt,name=interval_second,json=intervalSecond,proto3" json:"interval_second,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PeriodicSchedule) Reset()         { *m = PeriodicSchedule{} }
func (m *PeriodicSchedule) String() string { return proto.CompactTextString(m) }
func (*PeriodicSchedule) ProtoMessage()    {}
func (*PeriodicSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_v1alpha2_1d559c98207072de, []int{8}
}
func (m *PeriodicSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeriodicSchedule.Unmarshal(m, b)
}
func (m *PeriodicSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeriodicSchedule.Marshal(b, m, deterministic)
}
func (dst *PeriodicSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeriodicSchedule.Merge(dst, src)
}
func (m *PeriodicSchedule) XXX_Size() int {
	return xxx_messageInfo_PeriodicSchedule.Size(m)
}
func (m *PeriodicSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_PeriodicSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_PeriodicSchedule proto.InternalMessageInfo

func (m *PeriodicSchedule) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *PeriodicSchedule) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *PeriodicSchedule) GetIntervalSecond() int64 {
	if m != nil {
		return m.IntervalSecond
	}
	return 0
}

type Trigger struct {
	// Types that are valid to be assigned to Trigger:
	//	*Trigger_CronSchedule
	//	*Trigger_PeriodicSchedule
	Trigger              isTrigger_Trigger `protobuf_oneof:"trigger"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Trigger) Reset()         { *m = Trigger{} }
func (m *Trigger) String() string { return proto.CompactTextString(m) }
func (*Trigger) ProtoMessage()    {}
func (*Trigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_v1alpha2_1d559c98207072de, []int{9}
}
func (m *Trigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger.Unmarshal(m, b)
}
func (m *Trigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger.Marshal(b, m, deterministic)
}
func (dst *Trigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger.Merge(dst, src)
}
func (m *Trigger) XXX_Size() int {
	return xxx_messageInfo_Trigger.Size(m)
}
func (m *Trigger) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger proto.InternalMessageInfo

type isTrigger_Trigger interface {
	isTrigger_Trigger()
}

type Trigger_CronSchedule struct {
	CronSchedule *CronSchedule `protobuf:"bytes,1,opt,name=cron_schedule,json=cronSchedule,proto3,oneof"`
}
type Trigger_PeriodicSchedule struct {
	PeriodicSchedule *PeriodicSchedule `protobuf:"bytes,2,opt,name=periodic_schedule,json=periodicSchedule,proto3,oneof"`
}

func (*Trigger_CronSchedule) isTrigger_Trigger()     {}
func (*Trigger_PeriodicSchedule) isTrigger_Trigger() {}

func (m *Trigger) GetTrigger() isTrigger_Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *Trigger) GetCronSchedule() *CronSchedule {
	if x, ok := m.GetTrigger().(*Trigger_CronSchedule); ok {
		return x.CronSchedule
	}
	return nil
}

func (m *Trigger) GetPeriodicSchedule() *PeriodicSchedule {
	if x, ok := m.GetTrigger().(*Trigger_PeriodicSchedule); ok {
		return x.PeriodicSchedule
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Trigger) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Trigger_OneofMarshaler, _Trigger_OneofUnmarshaler, _Trigger_OneofSizer, []interface{}{
		(*Trigger_CronSchedule)(nil),
		(*Trigger_PeriodicSchedule)(nil),
	}
}

func _Trigger_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Trigger)
	// trigger
	switch x := m.Trigger.(type) {
	case *Trigger_CronSchedule:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CronSchedule); err != nil {
			return err
		}
	case *Trigger_PeriodicSchedule:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PeriodicSchedule); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Trigger.Trigger has unexpected type %T", x)
	}
	return nil
}

func _Trigger_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Trigger)
	switch tag {
	case 1: // trigger.cron_schedule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CronSchedule)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_CronSchedule{msg}
		return true, err
	case 2: // trigger.periodic_schedule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PeriodicSchedule)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_PeriodicSchedule{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Trigger_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Trigger)
	// trigger
	switch x := m.Trigger.(type) {
	case *Trigger_CronSchedule:
		s := proto.Size(x.CronSchedule)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_PeriodicSchedule:
		s := proto.Size(x.PeriodicSchedule)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PipelineV2 struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PackageId            uint32               `protobuf:"varint,4,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	Enabled              bool                 `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Status               string               `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	MaxConcurrency       int64                `protobuf:"varint,7,opt,name=max_concurrency,json=maxConcurrency,proto3" json:"max_concurrency,omitempty"`
	Parameters           []*Parameter         `protobuf:"bytes,8,rep,name=parameters,proto3" json:"parameters,omitempty"`
	Trigger              *Trigger             `protobuf:"bytes,9,opt,name=trigger,proto3" json:"trigger,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PipelineV2) Reset()         { *m = PipelineV2{} }
func (m *PipelineV2) String() string { return proto.CompactTextString(m) }
func (*PipelineV2) ProtoMessage()    {}
func (*PipelineV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_v1alpha2_1d559c98207072de, []int{10}
}
func (m *PipelineV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipelineV2.Unmarshal(m, b)
}
func (m *PipelineV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipelineV2.Marshal(b, m, deterministic)
}
func (dst *PipelineV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipelineV2.Merge(dst, src)
}
func (m *PipelineV2) XXX_Size() int {
	return xxx_messageInfo_PipelineV2.Size(m)
}
func (m *PipelineV2) XXX_DiscardUnknown() {
	xxx_messageInfo_PipelineV2.DiscardUnknown(m)
}

var xxx_messageInfo_PipelineV2 proto.InternalMessageInfo

func (m *PipelineV2) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PipelineV2) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PipelineV2) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PipelineV2) GetPackageId() uint32 {
	if m != nil {
		return m.PackageId
	}
	return 0
}

func (m *PipelineV2) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *PipelineV2) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *PipelineV2) GetMaxConcurrency() int64 {
	if m != nil {
		return m.MaxConcurrency
	}
	return 0
}

func (m *PipelineV2) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *PipelineV2) GetTrigger() *Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *PipelineV2) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PipelineV2) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*CreatePipelineRequestV2)(nil), "api.CreatePipelineRequestV2")
	proto.RegisterType((*GetPipelineRequestV2)(nil), "api.GetPipelineRequestV2")
	proto.RegisterType((*ListPipelinesRequestV2)(nil), "api.ListPipelinesRequestV2")
	proto.RegisterType((*ListPipelinesResponseV2)(nil), "api.ListPipelinesResponseV2")
	proto.RegisterType((*DeletePipelineRequestV2)(nil), "api.DeletePipelineRequestV2")
	proto.RegisterType((*EnablePipelineRequestV2)(nil), "api.EnablePipelineRequestV2")
	proto.RegisterType((*DisablePipelineRequestV2)(nil), "api.DisablePipelineRequestV2")
	proto.RegisterType((*CronSchedule)(nil), "api.CronSchedule")
	proto.RegisterType((*PeriodicSchedule)(nil), "api.PeriodicSchedule")
	proto.RegisterType((*Trigger)(nil), "api.Trigger")
	proto.RegisterType((*PipelineV2)(nil), "api.PipelineV2")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PipelineServiceV2Client is the client API for PipelineServiceV2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PipelineServiceV2Client interface {
	CreatePipeline(ctx context.Context, in *CreatePipelineRequestV2, opts ...grpc.CallOption) (*PipelineV2, error)
	GetPipeline(ctx context.Context, in *GetPipelineRequestV2, opts ...grpc.CallOption) (*PipelineV2, error)
	ListPipelines(ctx context.Context, in *ListPipelinesRequestV2, opts ...grpc.CallOption) (*ListPipelinesResponseV2, error)
	EnablePipeline(ctx context.Context, in *EnablePipelineRequestV2, opts ...grpc.CallOption) (*empty.Empty, error)
	DisablePipeline(ctx context.Context, in *DisablePipelineRequestV2, opts ...grpc.CallOption) (*empty.Empty, error)
	DeletePipeline(ctx context.Context, in *DeletePipelineRequestV2, opts ...grpc.CallOption) (*empty.Empty, error)
}

type pipelineServiceV2Client struct {
	cc *grpc.ClientConn
}

func NewPipelineServiceV2Client(cc *grpc.ClientConn) PipelineServiceV2Client {
	return &pipelineServiceV2Client{cc}
}

func (c *pipelineServiceV2Client) CreatePipeline(ctx context.Context, in *CreatePipelineRequestV2, opts ...grpc.CallOption) (*PipelineV2, error) {
	out := new(PipelineV2)
	err := c.cc.Invoke(ctx, "/api.PipelineServiceV2/CreatePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceV2Client) GetPipeline(ctx context.Context, in *GetPipelineRequestV2, opts ...grpc.CallOption) (*PipelineV2, error) {
	out := new(PipelineV2)
	err := c.cc.Invoke(ctx, "/api.PipelineServiceV2/GetPipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceV2Client) ListPipelines(ctx context.Context, in *ListPipelinesRequestV2, opts ...grpc.CallOption) (*ListPipelinesResponseV2, error) {
	out := new(ListPipelinesResponseV2)
	err := c.cc.Invoke(ctx, "/api.PipelineServiceV2/ListPipelines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceV2Client) EnablePipeline(ctx context.Context, in *EnablePipelineRequestV2, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.PipelineServiceV2/EnablePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceV2Client) DisablePipeline(ctx context.Context, in *DisablePipelineRequestV2, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.PipelineServiceV2/DisablePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceV2Client) DeletePipeline(ctx context.Context, in *DeletePipelineRequestV2, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.PipelineServiceV2/DeletePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PipelineServiceV2Server is the server API for PipelineServiceV2 service.
type PipelineServiceV2Server interface {
	CreatePipeline(context.Context, *CreatePipelineRequestV2) (*PipelineV2, error)
	GetPipeline(context.Context, *GetPipelineRequestV2) (*PipelineV2, error)
	ListPipelines(context.Context, *ListPipelinesRequestV2) (*ListPipelinesResponseV2, error)
	EnablePipeline(context.Context, *EnablePipelineRequestV2) (*empty.Empty, error)
	DisablePipeline(context.Context, *DisablePipelineRequestV2) (*empty.Empty, error)
	DeletePipeline(context.Context, *DeletePipelineRequestV2) (*empty.Empty, error)
}

func RegisterPipelineServiceV2Server(s *grpc.Server, srv PipelineServiceV2Server) {
	s.RegisterService(&_PipelineServiceV2_serviceDesc, srv)
}

func _PipelineServiceV2_CreatePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePipelineRequestV2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceV2Server).CreatePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineServiceV2/CreatePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceV2Server).CreatePipeline(ctx, req.(*CreatePipelineRequestV2))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineServiceV2_GetPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPipelineRequestV2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceV2Server).GetPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineServiceV2/GetPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceV2Server).GetPipeline(ctx, req.(*GetPipelineRequestV2))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineServiceV2_ListPipelines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPipelinesRequestV2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceV2Server).ListPipelines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineServiceV2/ListPipelines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceV2Server).ListPipelines(ctx, req.(*ListPipelinesRequestV2))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineServiceV2_EnablePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnablePipelineRequestV2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceV2Server).EnablePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineServiceV2/EnablePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceV2Server).EnablePipeline(ctx, req.(*EnablePipelineRequestV2))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineServiceV2_DisablePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisablePipelineRequestV2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceV2Server).DisablePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineServiceV2/DisablePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceV2Server).DisablePipeline(ctx, req.(*DisablePipelineRequestV2))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineServiceV2_DeletePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePipelineRequestV2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceV2Server).DeletePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineServiceV2/DeletePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceV2Server).DeletePipeline(ctx, req.(*DeletePipelineRequestV2))
	}
	return interceptor(ctx, in, info, handler)
}

var _PipelineServiceV2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PipelineServiceV2",
	HandlerType: (*PipelineServiceV2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePipeline",
			Handler:    _PipelineServiceV2_CreatePipeline_Handler,
		},
		{
			MethodName: "GetPipeline",
			Handler:    _PipelineServiceV2_GetPipeline_Handler,
		},
		{
			MethodName: "ListPipelines",
			Handler:    _PipelineServiceV2_ListPipelines_Handler,
		},
		{
			MethodName: "EnablePipeline",
			Handler:    _PipelineServiceV2_EnablePipeline_Handler,
		},
		{
			MethodName: "DisablePipeline",
			Handler:    _PipelineServiceV2_DisablePipeline_Handler,
		},
		{
			MethodName: "DeletePipeline",
			Handler:    _PipelineServiceV2_DeletePipeline_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pipeline_v1alpha2.proto",
}

func init() {
	proto.RegisterFile("pipeline_v1alpha2.proto", fileDescriptor_pipeline_v1alpha2_1d559c98207072de)
}

var fileDescriptor_pipeline_v1alpha2_1d559c98207072de = []byte{
	// 852 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0xd1, 0x72, 0x1b, 0x35,
	0x14, 0xed, 0xda, 0x4d, 0x6c, 0xdf, 0x24, 0x76, 0xa3, 0x81, 0x78, 0x71, 0x92, 0xa9, 0x67, 0xa7,
	0x4d, 0xd3, 0x40, 0xed, 0xc1, 0x0c, 0x33, 0xc0, 0x5b, 0x9b, 0x14, 0xca, 0x0c, 0x0f, 0x99, 0x4d,
	0x26, 0xaf, 0x8b, 0xb2, 0x7b, 0x71, 0x35, 0xd9, 0xd5, 0x0a, 0x49, 0x0e, 0x49, 0x19, 0x5e, 0xf8,
	0x05, 0x78, 0xe2, 0x1f, 0xe0, 0x67, 0xf8, 0x05, 0x3e, 0x84, 0x91, 0x56, 0x6b, 0x3b, 0x1b, 0x3b,
	0xe9, 0x5b, 0xdf, 0x56, 0x77, 0xcf, 0xd5, 0xbd, 0x3a, 0xf7, 0xe8, 0x08, 0xba, 0x82, 0x09, 0x4c,
	0x19, 0xc7, 0xe8, 0xf2, 0x73, 0x9a, 0x8a, 0xb7, 0x74, 0x34, 0x10, 0x32, 0xd7, 0x39, 0xa9, 0x53,
	0xc1, 0x7a, 0x3b, 0xe3, 0x3c, 0x1f, 0xa7, 0x38, 0xa4, 0x82, 0x0d, 0x29, 0xe7, 0xb9, 0xa6, 0x9a,
	0xe5, 0x5c, 0x15, 0x90, 0xde, 0x63, 0xf7, 0xd7, 0xae, 0xce, 0x27, 0x3f, 0x0d, 0x35, 0xcb, 0x50,
	0x69, 0x9a, 0x09, 0x07, 0xd8, 0xae, 0x02, 0x30, 0x13, 0xfa, 0xda, 0xfd, 0xec, 0x08, 0x2a, 0x69,
	0x86, 0x1a, 0x65, 0x11, 0x08, 0xbe, 0x85, 0xee, 0xa1, 0x44, 0xaa, 0xf1, 0xd8, 0xb5, 0x14, 0xe2,
	0xcf, 0x13, 0x54, 0xfa, 0x6c, 0x44, 0x3e, 0x85, 0x66, 0xd9, 0xa7, 0xef, 0xf5, 0xbd, 0xfd, 0xb5,
	0x51, 0x67, 0x40, 0x05, 0x1b, 0x94, 0xc8, 0xb3, 0x51, 0x38, 0x05, 0x04, 0x7b, 0xf0, 0xd1, 0x77,
	0xa8, 0x6f, 0x6f, 0xd2, 0x86, 0x1a, 0x4b, 0x6c, 0x7a, 0x2b, 0xac, 0xb1, 0x24, 0xc8, 0x60, 0xeb,
	0x07, 0xa6, 0xa6, 0x40, 0x35, 0x43, 0xee, 0x02, 0x08, 0x3a, 0xc6, 0x48, 0xe7, 0x17, 0xc8, 0x5d,
	0x46, 0xcb, 0x44, 0x4e, 0x4d, 0x80, 0x6c, 0x83, 0x5d, 0x44, 0x8a, 0xbd, 0x43, 0xbf, 0xd6, 0xf7,
	0xf6, 0x57, 0xc2, 0xa6, 0x09, 0x9c, 0xb0, 0x77, 0x48, 0xba, 0xd0, 0x50, 0xb9, 0xd4, 0xd1, 0xf9,
	0xb5, 0x5f, 0xb7, 0x89, 0xab, 0x66, 0xf9, 0xea, 0x3a, 0x10, 0xd0, 0xad, 0x94, 0x53, 0x22, 0xe7,
	0x0a, 0xcf, 0x46, 0xe4, 0x05, 0xb4, 0xca, 0xee, 0x95, 0xef, 0xf5, 0xeb, 0x8b, 0xce, 0x37, 0x43,
	0x90, 0x3d, 0xe8, 0x70, 0xbc, 0xd2, 0xd1, 0x5c, 0x8f, 0x35, 0x5b, 0x6a, 0xc3, 0x84, 0x8f, 0xcb,
	0x3e, 0x83, 0xe7, 0xd0, 0x3d, 0xc2, 0x14, 0x17, 0x11, 0x5a, 0xe5, 0xe2, 0x39, 0x74, 0x5f, 0x73,
	0x7a, 0x9e, 0xbe, 0x07, 0xf4, 0x00, 0xfc, 0x23, 0xa6, 0xde, 0x0f, 0xfb, 0xa7, 0x07, 0xeb, 0x87,
	0x32, 0xe7, 0x27, 0xf1, 0x5b, 0x4c, 0x26, 0x29, 0x92, 0xaf, 0x01, 0x94, 0xa6, 0x52, 0x47, 0x46,
	0x2a, 0x6e, 0x94, 0xbd, 0x41, 0x21, 0x93, 0x41, 0x29, 0x93, 0xc1, 0x69, 0xa9, 0xa3, 0xb0, 0x65,
	0xd1, 0x66, 0x4d, 0xbe, 0x84, 0x26, 0xf2, 0xa4, 0x48, 0xac, 0xdd, 0x9b, 0xd8, 0x40, 0x9e, 0xd8,
	0x34, 0x02, 0x0f, 0x63, 0x99, 0x73, 0x37, 0x0c, 0xfb, 0x1d, 0xfc, 0xed, 0xc1, 0xa3, 0x63, 0x94,
	0x2c, 0x4f, 0x58, 0xfc, 0x01, 0x5b, 0x7b, 0x06, 0x1d, 0xc6, 0x35, 0xca, 0x4b, 0x9a, 0x46, 0x0a,
	0xe3, 0x9c, 0x27, 0xb6, 0xcb, 0x7a, 0xd8, 0x2e, 0xc3, 0x27, 0x36, 0x6a, 0x68, 0x6c, 0x9c, 0x4a,
	0x36, 0x1e, 0xa3, 0x24, 0x5f, 0xc1, 0x86, 0x39, 0x43, 0xa4, 0x5c, 0xdf, 0xae, 0xd3, 0x4d, 0xab,
	0x97, 0x79, 0xae, 0xdf, 0x3c, 0x08, 0xd7, 0xe3, 0x79, 0xee, 0x8f, 0x60, 0x53, 0xb8, 0x43, 0xcf,
	0xb2, 0x8b, 0x76, 0x3f, 0x2e, 0xd4, 0x56, 0xa1, 0xe4, 0xcd, 0x83, 0xf0, 0x91, 0xa8, 0xc4, 0x5e,
	0xb5, 0xa0, 0xa1, 0x8b, 0x56, 0x82, 0xbf, 0xea, 0x00, 0x33, 0x85, 0x56, 0x87, 0x6f, 0x98, 0xe7,
	0xd4, 0x31, 0xd2, 0x0a, 0xed, 0x37, 0xe9, 0xc3, 0x5a, 0x82, 0x2a, 0x96, 0x4c, 0x18, 0x23, 0x71,
	0x43, 0x99, 0x0f, 0x15, 0x77, 0x2f, 0xbe, 0x30, 0xd2, 0x66, 0x89, 0xff, 0xb0, 0xef, 0xed, 0x6f,
	0x98, 0xbb, 0x67, 0x23, 0xdf, 0x27, 0xc4, 0x87, 0x06, 0x5a, 0xa1, 0x26, 0xfe, 0x4a, 0xdf, 0xdb,
	0x6f, 0x86, 0xe5, 0x92, 0x6c, 0xc1, 0xaa, 0xd2, 0x54, 0x4f, 0x94, 0xbf, 0xea, 0xee, 0x9d, 0x5d,
	0x19, 0x96, 0x33, 0x7a, 0x15, 0xc5, 0x39, 0x8f, 0x27, 0x52, 0x22, 0x8f, 0xaf, 0xfd, 0x46, 0xc1,
	0x72, 0x46, 0xaf, 0x0e, 0x67, 0x51, 0x32, 0x30, 0x95, 0x9d, 0x25, 0x29, 0xbf, 0x69, 0xaf, 0x61,
	0xbb, 0x20, 0xa6, 0x0c, 0x87, 0x73, 0x08, 0xb2, 0x37, 0x65, 0xc2, 0x6f, 0x59, 0x16, 0xd7, 0x2d,
	0xd8, 0x0d, 0x2a, 0x2c, 0x7f, 0x1a, 0x61, 0xc5, 0xd6, 0xd7, 0x92, 0x88, 0x6a, 0x1f, 0xee, 0x17,
	0x96, 0x43, 0xbf, 0xd4, 0x26, 0x75, 0x22, 0x92, 0x32, 0x75, 0xed, 0xfe, 0x54, 0x87, 0x7e, 0xa9,
	0x47, 0xff, 0xac, 0xc0, 0x66, 0x39, 0x9c, 0x13, 0x94, 0x97, 0x2c, 0x36, 0x33, 0xba, 0x80, 0xf6,
	0x4d, 0x8f, 0x25, 0x3b, 0x4e, 0x38, 0x0b, 0x8d, 0xb7, 0x57, 0xb5, 0xa1, 0xe0, 0xe0, 0xf7, 0x7f,
	0xff, 0xfb, 0xa3, 0xf6, 0x24, 0xf0, 0xcd, 0x9b, 0xa0, 0x86, 0xe5, 0xa3, 0x31, 0x9c, 0xba, 0xd3,
	0x37, 0x53, 0x23, 0x26, 0x3f, 0xc2, 0xda, 0x9c, 0x11, 0x93, 0x4f, 0xec, 0x5e, 0x8b, 0xac, 0xf9,
	0x76, 0x99, 0xa7, 0xb6, 0xcc, 0x63, 0xb2, 0xbb, 0xac, 0xcc, 0xf0, 0x57, 0x96, 0xfc, 0x46, 0x52,
	0xd8, 0xb8, 0xe1, 0xa9, 0x64, 0xdb, 0x6e, 0xb4, 0xd8, 0xd6, 0x7b, 0x3b, 0x8b, 0x7e, 0x96, 0x26,
	0x1c, 0xf4, 0x6d, 0xc9, 0x1e, 0x59, 0x7a, 0x32, 0xa2, 0xa1, 0x7d, 0xd3, 0x24, 0x1d, 0x79, 0x4b,
	0x9c, 0xb3, 0xb7, 0x75, 0x6b, 0x52, 0xaf, 0xcd, 0xfb, 0x17, 0x7c, 0x66, 0x2b, 0xed, 0x05, 0x4f,
	0xee, 0x3c, 0xdc, 0xb0, 0x10, 0x36, 0xf9, 0x05, 0x3a, 0x15, 0xbf, 0x25, 0xbb, 0xb6, 0xec, 0x32,
	0x17, 0x5e, 0x5a, 0xf7, 0x85, 0xad, 0xfb, 0x2c, 0x78, 0x7a, 0x77, 0xdd, 0xa4, 0xd8, 0x97, 0x64,
	0xd0, 0xbe, 0xf9, 0x7c, 0xb8, 0xe3, 0x2e, 0x79, 0x53, 0x96, 0x96, 0x75, 0xb3, 0x3c, 0xb8, 0x7b,
	0x96, 0xe7, 0xab, 0x36, 0xed, 0x8b, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x97, 0x44, 0x7b, 0x23,
	0x92, 0x08, 0x00, 0x00,
}
