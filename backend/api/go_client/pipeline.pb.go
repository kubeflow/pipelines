// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipeline.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetPipelineRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPipelineRequest) Reset()         { *m = GetPipelineRequest{} }
func (m *GetPipelineRequest) String() string { return proto.CompactTextString(m) }
func (*GetPipelineRequest) ProtoMessage()    {}
func (*GetPipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_ba411728b46e00b6, []int{0}
}
func (m *GetPipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPipelineRequest.Unmarshal(m, b)
}
func (m *GetPipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPipelineRequest.Marshal(b, m, deterministic)
}
func (dst *GetPipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPipelineRequest.Merge(dst, src)
}
func (m *GetPipelineRequest) XXX_Size() int {
	return xxx_messageInfo_GetPipelineRequest.Size(m)
}
func (m *GetPipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPipelineRequest proto.InternalMessageInfo

func (m *GetPipelineRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListPipelinesRequest struct {
	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Can be format of "field_name", "field_name asc" or "field_name des"
	// Ascending by default.
	SortBy               string   `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPipelinesRequest) Reset()         { *m = ListPipelinesRequest{} }
func (m *ListPipelinesRequest) String() string { return proto.CompactTextString(m) }
func (*ListPipelinesRequest) ProtoMessage()    {}
func (*ListPipelinesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_ba411728b46e00b6, []int{1}
}
func (m *ListPipelinesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelinesRequest.Unmarshal(m, b)
}
func (m *ListPipelinesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelinesRequest.Marshal(b, m, deterministic)
}
func (dst *ListPipelinesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelinesRequest.Merge(dst, src)
}
func (m *ListPipelinesRequest) XXX_Size() int {
	return xxx_messageInfo_ListPipelinesRequest.Size(m)
}
func (m *ListPipelinesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelinesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelinesRequest proto.InternalMessageInfo

func (m *ListPipelinesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListPipelinesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListPipelinesRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

type ListPipelinesResponse struct {
	Pipelines            []*Pipeline `protobuf:"bytes,1,rep,name=pipelines,proto3" json:"pipelines,omitempty"`
	NextPageToken        string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListPipelinesResponse) Reset()         { *m = ListPipelinesResponse{} }
func (m *ListPipelinesResponse) String() string { return proto.CompactTextString(m) }
func (*ListPipelinesResponse) ProtoMessage()    {}
func (*ListPipelinesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_ba411728b46e00b6, []int{2}
}
func (m *ListPipelinesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipelinesResponse.Unmarshal(m, b)
}
func (m *ListPipelinesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipelinesResponse.Marshal(b, m, deterministic)
}
func (dst *ListPipelinesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipelinesResponse.Merge(dst, src)
}
func (m *ListPipelinesResponse) XXX_Size() int {
	return xxx_messageInfo_ListPipelinesResponse.Size(m)
}
func (m *ListPipelinesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipelinesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipelinesResponse proto.InternalMessageInfo

func (m *ListPipelinesResponse) GetPipelines() []*Pipeline {
	if m != nil {
		return m.Pipelines
	}
	return nil
}

func (m *ListPipelinesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type DeletePipelineRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePipelineRequest) Reset()         { *m = DeletePipelineRequest{} }
func (m *DeletePipelineRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePipelineRequest) ProtoMessage()    {}
func (*DeletePipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_ba411728b46e00b6, []int{3}
}
func (m *DeletePipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePipelineRequest.Unmarshal(m, b)
}
func (m *DeletePipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePipelineRequest.Marshal(b, m, deterministic)
}
func (dst *DeletePipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePipelineRequest.Merge(dst, src)
}
func (m *DeletePipelineRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePipelineRequest.Size(m)
}
func (m *DeletePipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePipelineRequest proto.InternalMessageInfo

func (m *DeletePipelineRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetTemplateRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTemplateRequest) Reset()         { *m = GetTemplateRequest{} }
func (m *GetTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*GetTemplateRequest) ProtoMessage()    {}
func (*GetTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_ba411728b46e00b6, []int{4}
}
func (m *GetTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTemplateRequest.Unmarshal(m, b)
}
func (m *GetTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTemplateRequest.Marshal(b, m, deterministic)
}
func (dst *GetTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTemplateRequest.Merge(dst, src)
}
func (m *GetTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_GetTemplateRequest.Size(m)
}
func (m *GetTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTemplateRequest proto.InternalMessageInfo

func (m *GetTemplateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetTemplateResponse struct {
	Template             string   `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTemplateResponse) Reset()         { *m = GetTemplateResponse{} }
func (m *GetTemplateResponse) String() string { return proto.CompactTextString(m) }
func (*GetTemplateResponse) ProtoMessage()    {}
func (*GetTemplateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_ba411728b46e00b6, []int{5}
}
func (m *GetTemplateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTemplateResponse.Unmarshal(m, b)
}
func (m *GetTemplateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTemplateResponse.Marshal(b, m, deterministic)
}
func (dst *GetTemplateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTemplateResponse.Merge(dst, src)
}
func (m *GetTemplateResponse) XXX_Size() int {
	return xxx_messageInfo_GetTemplateResponse.Size(m)
}
func (m *GetTemplateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTemplateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTemplateResponse proto.InternalMessageInfo

func (m *GetTemplateResponse) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

type Pipeline struct {
	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Name        string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Parameters  []*Parameter         `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// In case any error happens retrieving a pipeline field, only pipeline ID
	// and the error message is returned. Client has the flexibility of choosing
	// how to handle error. This is especially useful during listing call.
	Error                string   `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pipeline) Reset()         { *m = Pipeline{} }
func (m *Pipeline) String() string { return proto.CompactTextString(m) }
func (*Pipeline) ProtoMessage()    {}
func (*Pipeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_ba411728b46e00b6, []int{6}
}
func (m *Pipeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pipeline.Unmarshal(m, b)
}
func (m *Pipeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pipeline.Marshal(b, m, deterministic)
}
func (dst *Pipeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pipeline.Merge(dst, src)
}
func (m *Pipeline) XXX_Size() int {
	return xxx_messageInfo_Pipeline.Size(m)
}
func (m *Pipeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Pipeline.DiscardUnknown(m)
}

var xxx_messageInfo_Pipeline proto.InternalMessageInfo

func (m *Pipeline) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Pipeline) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Pipeline) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Pipeline) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Pipeline) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Pipeline) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*GetPipelineRequest)(nil), "api.GetPipelineRequest")
	proto.RegisterType((*ListPipelinesRequest)(nil), "api.ListPipelinesRequest")
	proto.RegisterType((*ListPipelinesResponse)(nil), "api.ListPipelinesResponse")
	proto.RegisterType((*DeletePipelineRequest)(nil), "api.DeletePipelineRequest")
	proto.RegisterType((*GetTemplateRequest)(nil), "api.GetTemplateRequest")
	proto.RegisterType((*GetTemplateResponse)(nil), "api.GetTemplateResponse")
	proto.RegisterType((*Pipeline)(nil), "api.Pipeline")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PipelineServiceClient is the client API for PipelineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PipelineServiceClient interface {
	GetPipeline(ctx context.Context, in *GetPipelineRequest, opts ...grpc.CallOption) (*Pipeline, error)
	ListPipelines(ctx context.Context, in *ListPipelinesRequest, opts ...grpc.CallOption) (*ListPipelinesResponse, error)
	DeletePipeline(ctx context.Context, in *DeletePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetTemplate(ctx context.Context, in *GetTemplateRequest, opts ...grpc.CallOption) (*GetTemplateResponse, error)
}

type pipelineServiceClient struct {
	cc *grpc.ClientConn
}

func NewPipelineServiceClient(cc *grpc.ClientConn) PipelineServiceClient {
	return &pipelineServiceClient{cc}
}

func (c *pipelineServiceClient) GetPipeline(ctx context.Context, in *GetPipelineRequest, opts ...grpc.CallOption) (*Pipeline, error) {
	out := new(Pipeline)
	err := c.cc.Invoke(ctx, "/api.PipelineService/GetPipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) ListPipelines(ctx context.Context, in *ListPipelinesRequest, opts ...grpc.CallOption) (*ListPipelinesResponse, error) {
	out := new(ListPipelinesResponse)
	err := c.cc.Invoke(ctx, "/api.PipelineService/ListPipelines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) DeletePipeline(ctx context.Context, in *DeletePipelineRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.PipelineService/DeletePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelineServiceClient) GetTemplate(ctx context.Context, in *GetTemplateRequest, opts ...grpc.CallOption) (*GetTemplateResponse, error) {
	out := new(GetTemplateResponse)
	err := c.cc.Invoke(ctx, "/api.PipelineService/GetTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PipelineServiceServer is the server API for PipelineService service.
type PipelineServiceServer interface {
	GetPipeline(context.Context, *GetPipelineRequest) (*Pipeline, error)
	ListPipelines(context.Context, *ListPipelinesRequest) (*ListPipelinesResponse, error)
	DeletePipeline(context.Context, *DeletePipelineRequest) (*empty.Empty, error)
	GetTemplate(context.Context, *GetTemplateRequest) (*GetTemplateResponse, error)
}

func RegisterPipelineServiceServer(s *grpc.Server, srv PipelineServiceServer) {
	s.RegisterService(&_PipelineService_serviceDesc, srv)
}

func _PipelineService_GetPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).GetPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/GetPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).GetPipeline(ctx, req.(*GetPipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_ListPipelines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPipelinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).ListPipelines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/ListPipelines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).ListPipelines(ctx, req.(*ListPipelinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_DeletePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).DeletePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/DeletePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).DeletePipeline(ctx, req.(*DeletePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PipelineService_GetTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelineServiceServer).GetTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PipelineService/GetTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelineServiceServer).GetTemplate(ctx, req.(*GetTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PipelineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PipelineService",
	HandlerType: (*PipelineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPipeline",
			Handler:    _PipelineService_GetPipeline_Handler,
		},
		{
			MethodName: "ListPipelines",
			Handler:    _PipelineService_ListPipelines_Handler,
		},
		{
			MethodName: "DeletePipeline",
			Handler:    _PipelineService_DeletePipeline_Handler,
		},
		{
			MethodName: "GetTemplate",
			Handler:    _PipelineService_GetTemplate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pipeline.proto",
}

func init() { proto.RegisterFile("pipeline.proto", fileDescriptor_pipeline_ba411728b46e00b6) }

var fileDescriptor_pipeline_ba411728b46e00b6 = []byte{
	// 620 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xdd, 0x4e, 0x13, 0x51,
	0x10, 0xb6, 0x5b, 0x28, 0xed, 0xd4, 0xb6, 0x71, 0x00, 0x59, 0x17, 0x08, 0xcd, 0x46, 0x05, 0x7f,
	0xd8, 0x0d, 0xf5, 0xca, 0x4b, 0x88, 0xc6, 0x1b, 0x4d, 0x48, 0xe1, 0xca, 0x98, 0x34, 0xa7, 0xed,
	0x50, 0x4e, 0xd8, 0xee, 0x1e, 0xce, 0x39, 0x45, 0xc1, 0x78, 0xe3, 0x23, 0xe8, 0xd3, 0xf8, 0x18,
	0xc6, 0x57, 0xf0, 0x41, 0xcc, 0x9e, 0x3d, 0x5b, 0xfa, 0x03, 0x72, 0xd5, 0xce, 0xcc, 0xd7, 0xf9,
	0x66, 0xbe, 0xf9, 0x4e, 0xa1, 0x2e, 0xb8, 0xa0, 0x88, 0xc7, 0x14, 0x08, 0x99, 0xe8, 0x04, 0x8b,
	0x4c, 0x70, 0x6f, 0x63, 0x90, 0x24, 0x83, 0x88, 0x42, 0x26, 0x78, 0xc8, 0xe2, 0x38, 0xd1, 0x4c,
	0xf3, 0x24, 0x56, 0x19, 0xc4, 0xdb, 0xb2, 0x55, 0x13, 0x75, 0x47, 0x27, 0xa1, 0xe6, 0x43, 0x52,
	0x9a, 0x0d, 0x85, 0x05, 0xac, 0xcf, 0x02, 0x68, 0x28, 0xf4, 0xa5, 0x2d, 0x36, 0x04, 0x93, 0x6c,
	0x48, 0x9a, 0xa4, 0x4d, 0xbc, 0x34, 0x1f, 0xbd, 0xdd, 0x01, 0xc5, 0xbb, 0xea, 0x33, 0x1b, 0x0c,
	0x48, 0x86, 0x89, 0x30, 0x84, 0xf3, 0xe4, 0xfe, 0x63, 0xc0, 0x77, 0xa4, 0x0f, 0xed, 0xd0, 0x6d,
	0x3a, 0x1f, 0x91, 0xd2, 0x58, 0x07, 0x87, 0xf7, 0xdd, 0x42, 0xb3, 0xb0, 0x53, 0x69, 0x3b, 0xbc,
	0xef, 0x9f, 0xc1, 0xca, 0x7b, 0xae, 0xc6, 0x30, 0x95, 0xe3, 0x36, 0x01, 0x04, 0x1b, 0x50, 0x47,
	0x27, 0x67, 0x14, 0x5b, 0x7c, 0x25, 0xcd, 0x1c, 0xa7, 0x09, 0x5c, 0x07, 0x13, 0x74, 0x14, 0xbf,
	0x22, 0xd7, 0x69, 0x16, 0x76, 0x16, 0xdb, 0xe5, 0x34, 0x71, 0xc4, 0xaf, 0x08, 0xd7, 0x60, 0x49,
	0x25, 0x52, 0x77, 0xba, 0x97, 0x6e, 0xd1, 0xfc, 0xb0, 0x94, 0x86, 0x07, 0x97, 0x7e, 0x04, 0xab,
	0x33, 0x64, 0x4a, 0x24, 0xb1, 0x22, 0x7c, 0x01, 0x95, 0x5c, 0x5d, 0xe5, 0x16, 0x9a, 0xc5, 0x9d,
	0x6a, 0xab, 0x16, 0x30, 0xc1, 0x83, 0xf1, 0xf8, 0xd7, 0x75, 0x7c, 0x0a, 0x8d, 0x98, 0xbe, 0xe8,
	0xce, 0xc4, 0x7c, 0x8e, 0xa1, 0xa9, 0xa5, 0xe9, 0xc3, 0x7c, 0x46, 0x7f, 0x1b, 0x56, 0xdf, 0x50,
	0x44, 0x9a, 0xee, 0xd2, 0x20, 0x53, 0xea, 0x98, 0x86, 0x22, 0x62, 0xfa, 0x56, 0xd4, 0x1e, 0x2c,
	0x4f, 0xa1, 0xec, 0xe8, 0x1e, 0x94, 0xb5, 0xcd, 0x59, 0xf0, 0x38, 0xf6, 0x7f, 0x17, 0xa0, 0x9c,
	0x93, 0xcf, 0xf6, 0xc3, 0xd7, 0x00, 0x3d, 0x49, 0x4c, 0x53, 0xbf, 0xc3, 0xb4, 0xd9, 0xa0, 0xda,
	0xf2, 0x82, 0xcc, 0x10, 0x41, 0x6e, 0x88, 0xe0, 0x38, 0x77, 0x4c, 0xbb, 0x62, 0xd1, 0xfb, 0x1a,
	0x11, 0x16, 0x62, 0x36, 0x24, 0xab, 0xae, 0xf9, 0x8e, 0x4d, 0xa8, 0xf6, 0x49, 0xf5, 0x24, 0x37,
	0x86, 0x70, 0x17, 0x4c, 0x69, 0x32, 0x85, 0x41, 0x7a, 0x52, 0xeb, 0x28, 0xe5, 0x2e, 0x1a, 0x95,
	0xeb, 0x99, 0xca, 0x79, 0xba, 0x3d, 0x81, 0xc0, 0x15, 0x58, 0x24, 0x29, 0x13, 0xe9, 0x96, 0x4c,
	0xaf, 0x2c, 0x68, 0xfd, 0x2a, 0x42, 0x23, 0xdf, 0xe9, 0x88, 0xe4, 0x05, 0xef, 0x11, 0x7e, 0x82,
	0xea, 0x84, 0xd5, 0x70, 0xcd, 0x34, 0x9d, 0x37, 0x9f, 0x37, 0x7d, 0x53, 0xff, 0xc9, 0xf7, 0x3f,
	0x7f, 0x7f, 0x3a, 0x5b, 0xb8, 0x99, 0x3e, 0x1f, 0x15, 0x5e, 0xec, 0xb1, 0x48, 0x9c, 0xb2, 0x56,
	0x38, 0x3e, 0x75, 0xf8, 0x95, 0xf7, 0xbf, 0xe1, 0x29, 0xd4, 0xa6, 0x5c, 0x83, 0x8f, 0x4c, 0x9b,
	0x9b, 0x6c, 0xeb, 0x79, 0x37, 0x95, 0xb2, 0x4b, 0xf9, 0x4d, 0x43, 0xe7, 0xa1, 0x7b, 0x1b, 0x1d,
	0x9e, 0x41, 0x7d, 0xda, 0x31, 0x98, 0xf5, 0xbb, 0xd1, 0x46, 0xde, 0xc3, 0xb9, 0x63, 0xbd, 0x4d,
	0x5f, 0x6f, 0xbe, 0xd6, 0xf3, 0x3b, 0xd6, 0x3a, 0x37, 0xa2, 0xe5, 0x7e, 0xba, 0x16, 0x6d, 0xc6,
	0x87, 0x9e, 0x3b, 0x5f, 0xb0, 0x0b, 0x85, 0x86, 0xe8, 0x19, 0x6e, 0xff, 0x97, 0x28, 0xcc, 0xed,
	0xa8, 0x0e, 0x0e, 0x7f, 0xec, 0x7f, 0x68, 0x6f, 0xc0, 0x52, 0x9f, 0x4e, 0xd8, 0x28, 0xd2, 0xf8,
	0x00, 0x1b, 0x50, 0xf3, 0xaa, 0x86, 0xe0, 0x48, 0x33, 0x3d, 0x52, 0x1f, 0xb7, 0x60, 0x13, 0x4a,
	0x07, 0xc4, 0x24, 0x49, 0x5c, 0x2e, 0x3b, 0x5e, 0x6d, 0x7f, 0xa4, 0x4f, 0x13, 0xc9, 0xaf, 0xcc,
	0x7f, 0x4b, 0xd3, 0xe9, 0xde, 0x07, 0x18, 0x03, 0xee, 0x75, 0x4b, 0x66, 0xf7, 0x57, 0xff, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xb7, 0x34, 0x82, 0xe2, 0x1d, 0x05, 0x00, 0x00,
}
