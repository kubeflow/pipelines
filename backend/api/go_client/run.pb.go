// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backend/api/run.proto

package go_client

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Run_StorageState int32

const (
	Run_STORAGESTATE_AVAILABLE Run_StorageState = 0
	Run_STORAGESTATE_ARCHIVED  Run_StorageState = 1
)

var Run_StorageState_name = map[int32]string{
	0: "STORAGESTATE_AVAILABLE",
	1: "STORAGESTATE_ARCHIVED",
}
var Run_StorageState_value = map[string]int32{
	"STORAGESTATE_AVAILABLE": 0,
	"STORAGESTATE_ARCHIVED":  1,
}

func (x Run_StorageState) String() string {
	return proto.EnumName(Run_StorageState_name, int32(x))
}
func (Run_StorageState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{7, 0}
}

type RunMetric_Format int32

const (
	RunMetric_UNSPECIFIED RunMetric_Format = 0
	RunMetric_RAW         RunMetric_Format = 1
	RunMetric_PERCENTAGE  RunMetric_Format = 2
)

var RunMetric_Format_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "RAW",
	2: "PERCENTAGE",
}
var RunMetric_Format_value = map[string]int32{
	"UNSPECIFIED": 0,
	"RAW":         1,
	"PERCENTAGE":  2,
}

func (x RunMetric_Format) String() string {
	return proto.EnumName(RunMetric_Format_name, int32(x))
}
func (RunMetric_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{10, 0}
}

type ReportRunMetricsResponse_ReportRunMetricResult_Status int32

const (
	ReportRunMetricsResponse_ReportRunMetricResult_UNSPECIFIED         ReportRunMetricsResponse_ReportRunMetricResult_Status = 0
	ReportRunMetricsResponse_ReportRunMetricResult_OK                  ReportRunMetricsResponse_ReportRunMetricResult_Status = 1
	ReportRunMetricsResponse_ReportRunMetricResult_INVALID_ARGUMENT    ReportRunMetricsResponse_ReportRunMetricResult_Status = 2
	ReportRunMetricsResponse_ReportRunMetricResult_DUPLICATE_REPORTING ReportRunMetricsResponse_ReportRunMetricResult_Status = 3
	ReportRunMetricsResponse_ReportRunMetricResult_INTERNAL_ERROR      ReportRunMetricsResponse_ReportRunMetricResult_Status = 4
)

var ReportRunMetricsResponse_ReportRunMetricResult_Status_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "OK",
	2: "INVALID_ARGUMENT",
	3: "DUPLICATE_REPORTING",
	4: "INTERNAL_ERROR",
}
var ReportRunMetricsResponse_ReportRunMetricResult_Status_value = map[string]int32{
	"UNSPECIFIED":         0,
	"OK":                  1,
	"INVALID_ARGUMENT":    2,
	"DUPLICATE_REPORTING": 3,
	"INTERNAL_ERROR":      4,
}

func (x ReportRunMetricsResponse_ReportRunMetricResult_Status) String() string {
	return proto.EnumName(ReportRunMetricsResponse_ReportRunMetricResult_Status_name, int32(x))
}
func (ReportRunMetricsResponse_ReportRunMetricResult_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{12, 0, 0}
}

type CreateRunRequest struct {
	Run                  *Run     `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRunRequest) Reset()         { *m = CreateRunRequest{} }
func (m *CreateRunRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRunRequest) ProtoMessage()    {}
func (*CreateRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{0}
}
func (m *CreateRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRunRequest.Unmarshal(m, b)
}
func (m *CreateRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRunRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRunRequest.Merge(dst, src)
}
func (m *CreateRunRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRunRequest.Size(m)
}
func (m *CreateRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRunRequest proto.InternalMessageInfo

func (m *CreateRunRequest) GetRun() *Run {
	if m != nil {
		return m.Run
	}
	return nil
}

type GetRunRequest struct {
	RunId                string   `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRunRequest) Reset()         { *m = GetRunRequest{} }
func (m *GetRunRequest) String() string { return proto.CompactTextString(m) }
func (*GetRunRequest) ProtoMessage()    {}
func (*GetRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{1}
}
func (m *GetRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRunRequest.Unmarshal(m, b)
}
func (m *GetRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRunRequest.Marshal(b, m, deterministic)
}
func (dst *GetRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRunRequest.Merge(dst, src)
}
func (m *GetRunRequest) XXX_Size() int {
	return xxx_messageInfo_GetRunRequest.Size(m)
}
func (m *GetRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRunRequest proto.InternalMessageInfo

func (m *GetRunRequest) GetRunId() string {
	if m != nil {
		return m.RunId
	}
	return ""
}

type ListRunsRequest struct {
	PageToken            string       `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32        `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy               string       `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	ResourceReferenceKey *ResourceKey `protobuf:"bytes,4,opt,name=resource_reference_key,json=resourceReferenceKey,proto3" json:"resource_reference_key,omitempty"`
	Filter               string       `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListRunsRequest) Reset()         { *m = ListRunsRequest{} }
func (m *ListRunsRequest) String() string { return proto.CompactTextString(m) }
func (*ListRunsRequest) ProtoMessage()    {}
func (*ListRunsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{2}
}
func (m *ListRunsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRunsRequest.Unmarshal(m, b)
}
func (m *ListRunsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRunsRequest.Marshal(b, m, deterministic)
}
func (dst *ListRunsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRunsRequest.Merge(dst, src)
}
func (m *ListRunsRequest) XXX_Size() int {
	return xxx_messageInfo_ListRunsRequest.Size(m)
}
func (m *ListRunsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRunsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRunsRequest proto.InternalMessageInfo

func (m *ListRunsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListRunsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListRunsRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *ListRunsRequest) GetResourceReferenceKey() *ResourceKey {
	if m != nil {
		return m.ResourceReferenceKey
	}
	return nil
}

func (m *ListRunsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

type ListRunsResponse struct {
	Runs                 []*Run   `protobuf:"bytes,1,rep,name=runs,proto3" json:"runs,omitempty"`
	TotalSize            int32    `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRunsResponse) Reset()         { *m = ListRunsResponse{} }
func (m *ListRunsResponse) String() string { return proto.CompactTextString(m) }
func (*ListRunsResponse) ProtoMessage()    {}
func (*ListRunsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{3}
}
func (m *ListRunsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRunsResponse.Unmarshal(m, b)
}
func (m *ListRunsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRunsResponse.Marshal(b, m, deterministic)
}
func (dst *ListRunsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRunsResponse.Merge(dst, src)
}
func (m *ListRunsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRunsResponse.Size(m)
}
func (m *ListRunsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRunsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRunsResponse proto.InternalMessageInfo

func (m *ListRunsResponse) GetRuns() []*Run {
	if m != nil {
		return m.Runs
	}
	return nil
}

func (m *ListRunsResponse) GetTotalSize() int32 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *ListRunsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type ArchiveRunRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveRunRequest) Reset()         { *m = ArchiveRunRequest{} }
func (m *ArchiveRunRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveRunRequest) ProtoMessage()    {}
func (*ArchiveRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{4}
}
func (m *ArchiveRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveRunRequest.Unmarshal(m, b)
}
func (m *ArchiveRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveRunRequest.Marshal(b, m, deterministic)
}
func (dst *ArchiveRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveRunRequest.Merge(dst, src)
}
func (m *ArchiveRunRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveRunRequest.Size(m)
}
func (m *ArchiveRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveRunRequest proto.InternalMessageInfo

func (m *ArchiveRunRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UnarchiveRunRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnarchiveRunRequest) Reset()         { *m = UnarchiveRunRequest{} }
func (m *UnarchiveRunRequest) String() string { return proto.CompactTextString(m) }
func (*UnarchiveRunRequest) ProtoMessage()    {}
func (*UnarchiveRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{5}
}
func (m *UnarchiveRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnarchiveRunRequest.Unmarshal(m, b)
}
func (m *UnarchiveRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnarchiveRunRequest.Marshal(b, m, deterministic)
}
func (dst *UnarchiveRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnarchiveRunRequest.Merge(dst, src)
}
func (m *UnarchiveRunRequest) XXX_Size() int {
	return xxx_messageInfo_UnarchiveRunRequest.Size(m)
}
func (m *UnarchiveRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnarchiveRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnarchiveRunRequest proto.InternalMessageInfo

func (m *UnarchiveRunRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteRunRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRunRequest) Reset()         { *m = DeleteRunRequest{} }
func (m *DeleteRunRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRunRequest) ProtoMessage()    {}
func (*DeleteRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{6}
}
func (m *DeleteRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRunRequest.Unmarshal(m, b)
}
func (m *DeleteRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRunRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRunRequest.Merge(dst, src)
}
func (m *DeleteRunRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRunRequest.Size(m)
}
func (m *DeleteRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRunRequest proto.InternalMessageInfo

func (m *DeleteRunRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Run struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StorageState         Run_StorageState     `protobuf:"varint,10,opt,name=storage_state,json=storageState,proto3,enum=api.Run_StorageState" json:"storage_state,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PipelineSpec         *PipelineSpec        `protobuf:"bytes,4,opt,name=pipeline_spec,json=pipelineSpec,proto3" json:"pipeline_spec,omitempty"`
	ResourceReferences   []*ResourceReference `protobuf:"bytes,5,rep,name=resource_references,json=resourceReferences,proto3" json:"resource_references,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ScheduledAt          *timestamp.Timestamp `protobuf:"bytes,7,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	Status               string               `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Error                string               `protobuf:"bytes,12,opt,name=error,proto3" json:"error,omitempty"`
	Metrics              []*RunMetric         `protobuf:"bytes,9,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Run) Reset()         { *m = Run{} }
func (m *Run) String() string { return proto.CompactTextString(m) }
func (*Run) ProtoMessage()    {}
func (*Run) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{7}
}
func (m *Run) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Run.Unmarshal(m, b)
}
func (m *Run) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Run.Marshal(b, m, deterministic)
}
func (dst *Run) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Run.Merge(dst, src)
}
func (m *Run) XXX_Size() int {
	return xxx_messageInfo_Run.Size(m)
}
func (m *Run) XXX_DiscardUnknown() {
	xxx_messageInfo_Run.DiscardUnknown(m)
}

var xxx_messageInfo_Run proto.InternalMessageInfo

func (m *Run) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Run) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Run) GetStorageState() Run_StorageState {
	if m != nil {
		return m.StorageState
	}
	return Run_STORAGESTATE_AVAILABLE
}

func (m *Run) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Run) GetPipelineSpec() *PipelineSpec {
	if m != nil {
		return m.PipelineSpec
	}
	return nil
}

func (m *Run) GetResourceReferences() []*ResourceReference {
	if m != nil {
		return m.ResourceReferences
	}
	return nil
}

func (m *Run) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Run) GetScheduledAt() *timestamp.Timestamp {
	if m != nil {
		return m.ScheduledAt
	}
	return nil
}

func (m *Run) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Run) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Run) GetMetrics() []*RunMetric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type PipelineRuntime struct {
	PipelineManifest     string   `protobuf:"bytes,10,opt,name=pipeline_manifest,json=pipelineManifest,proto3" json:"pipeline_manifest,omitempty"`
	WorkflowManifest     string   `protobuf:"bytes,11,opt,name=workflow_manifest,json=workflowManifest,proto3" json:"workflow_manifest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipelineRuntime) Reset()         { *m = PipelineRuntime{} }
func (m *PipelineRuntime) String() string { return proto.CompactTextString(m) }
func (*PipelineRuntime) ProtoMessage()    {}
func (*PipelineRuntime) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{8}
}
func (m *PipelineRuntime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipelineRuntime.Unmarshal(m, b)
}
func (m *PipelineRuntime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipelineRuntime.Marshal(b, m, deterministic)
}
func (dst *PipelineRuntime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipelineRuntime.Merge(dst, src)
}
func (m *PipelineRuntime) XXX_Size() int {
	return xxx_messageInfo_PipelineRuntime.Size(m)
}
func (m *PipelineRuntime) XXX_DiscardUnknown() {
	xxx_messageInfo_PipelineRuntime.DiscardUnknown(m)
}

var xxx_messageInfo_PipelineRuntime proto.InternalMessageInfo

func (m *PipelineRuntime) GetPipelineManifest() string {
	if m != nil {
		return m.PipelineManifest
	}
	return ""
}

func (m *PipelineRuntime) GetWorkflowManifest() string {
	if m != nil {
		return m.WorkflowManifest
	}
	return ""
}

type RunDetail struct {
	Run                  *Run             `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty"`
	PipelineRuntime      *PipelineRuntime `protobuf:"bytes,2,opt,name=pipeline_runtime,json=pipelineRuntime,proto3" json:"pipeline_runtime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RunDetail) Reset()         { *m = RunDetail{} }
func (m *RunDetail) String() string { return proto.CompactTextString(m) }
func (*RunDetail) ProtoMessage()    {}
func (*RunDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{9}
}
func (m *RunDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunDetail.Unmarshal(m, b)
}
func (m *RunDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunDetail.Marshal(b, m, deterministic)
}
func (dst *RunDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunDetail.Merge(dst, src)
}
func (m *RunDetail) XXX_Size() int {
	return xxx_messageInfo_RunDetail.Size(m)
}
func (m *RunDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_RunDetail.DiscardUnknown(m)
}

var xxx_messageInfo_RunDetail proto.InternalMessageInfo

func (m *RunDetail) GetRun() *Run {
	if m != nil {
		return m.Run
	}
	return nil
}

func (m *RunDetail) GetPipelineRuntime() *PipelineRuntime {
	if m != nil {
		return m.PipelineRuntime
	}
	return nil
}

type RunMetric struct {
	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*RunMetric_NumberValue
	Value                isRunMetric_Value `protobuf_oneof:"value"`
	Format               RunMetric_Format  `protobuf:"varint,4,opt,name=format,proto3,enum=api.RunMetric_Format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RunMetric) Reset()         { *m = RunMetric{} }
func (m *RunMetric) String() string { return proto.CompactTextString(m) }
func (*RunMetric) ProtoMessage()    {}
func (*RunMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{10}
}
func (m *RunMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunMetric.Unmarshal(m, b)
}
func (m *RunMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunMetric.Marshal(b, m, deterministic)
}
func (dst *RunMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunMetric.Merge(dst, src)
}
func (m *RunMetric) XXX_Size() int {
	return xxx_messageInfo_RunMetric.Size(m)
}
func (m *RunMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_RunMetric.DiscardUnknown(m)
}

var xxx_messageInfo_RunMetric proto.InternalMessageInfo

func (m *RunMetric) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RunMetric) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type isRunMetric_Value interface {
	isRunMetric_Value()
}

type RunMetric_NumberValue struct {
	NumberValue float64 `protobuf:"fixed64,3,opt,name=number_value,json=numberValue,proto3,oneof"`
}

func (*RunMetric_NumberValue) isRunMetric_Value() {}

func (m *RunMetric) GetValue() isRunMetric_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RunMetric) GetNumberValue() float64 {
	if x, ok := m.GetValue().(*RunMetric_NumberValue); ok {
		return x.NumberValue
	}
	return 0
}

func (m *RunMetric) GetFormat() RunMetric_Format {
	if m != nil {
		return m.Format
	}
	return RunMetric_UNSPECIFIED
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RunMetric) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RunMetric_OneofMarshaler, _RunMetric_OneofUnmarshaler, _RunMetric_OneofSizer, []interface{}{
		(*RunMetric_NumberValue)(nil),
	}
}

func _RunMetric_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RunMetric)
	// value
	switch x := m.Value.(type) {
	case *RunMetric_NumberValue:
		b.EncodeVarint(3<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.NumberValue))
	case nil:
	default:
		return fmt.Errorf("RunMetric.Value has unexpected type %T", x)
	}
	return nil
}

func _RunMetric_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RunMetric)
	switch tag {
	case 3: // value.number_value
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Value = &RunMetric_NumberValue{math.Float64frombits(x)}
		return true, err
	default:
		return false, nil
	}
}

func _RunMetric_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RunMetric)
	// value
	switch x := m.Value.(type) {
	case *RunMetric_NumberValue:
		n += 1 // tag and wire
		n += 8
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ReportRunMetricsRequest struct {
	RunId                string       `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Metrics              []*RunMetric `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReportRunMetricsRequest) Reset()         { *m = ReportRunMetricsRequest{} }
func (m *ReportRunMetricsRequest) String() string { return proto.CompactTextString(m) }
func (*ReportRunMetricsRequest) ProtoMessage()    {}
func (*ReportRunMetricsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{11}
}
func (m *ReportRunMetricsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportRunMetricsRequest.Unmarshal(m, b)
}
func (m *ReportRunMetricsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportRunMetricsRequest.Marshal(b, m, deterministic)
}
func (dst *ReportRunMetricsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportRunMetricsRequest.Merge(dst, src)
}
func (m *ReportRunMetricsRequest) XXX_Size() int {
	return xxx_messageInfo_ReportRunMetricsRequest.Size(m)
}
func (m *ReportRunMetricsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportRunMetricsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportRunMetricsRequest proto.InternalMessageInfo

func (m *ReportRunMetricsRequest) GetRunId() string {
	if m != nil {
		return m.RunId
	}
	return ""
}

func (m *ReportRunMetricsRequest) GetMetrics() []*RunMetric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type ReportRunMetricsResponse struct {
	Results              []*ReportRunMetricsResponse_ReportRunMetricResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *ReportRunMetricsResponse) Reset()         { *m = ReportRunMetricsResponse{} }
func (m *ReportRunMetricsResponse) String() string { return proto.CompactTextString(m) }
func (*ReportRunMetricsResponse) ProtoMessage()    {}
func (*ReportRunMetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{12}
}
func (m *ReportRunMetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportRunMetricsResponse.Unmarshal(m, b)
}
func (m *ReportRunMetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportRunMetricsResponse.Marshal(b, m, deterministic)
}
func (dst *ReportRunMetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportRunMetricsResponse.Merge(dst, src)
}
func (m *ReportRunMetricsResponse) XXX_Size() int {
	return xxx_messageInfo_ReportRunMetricsResponse.Size(m)
}
func (m *ReportRunMetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportRunMetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportRunMetricsResponse proto.InternalMessageInfo

func (m *ReportRunMetricsResponse) GetResults() []*ReportRunMetricsResponse_ReportRunMetricResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type ReportRunMetricsResponse_ReportRunMetricResult struct {
	MetricName           string                                                `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	MetricNodeId         string                                                `protobuf:"bytes,2,opt,name=metric_node_id,json=metricNodeId,proto3" json:"metric_node_id,omitempty"`
	Status               ReportRunMetricsResponse_ReportRunMetricResult_Status `protobuf:"varint,3,opt,name=status,proto3,enum=api.ReportRunMetricsResponse_ReportRunMetricResult_Status" json:"status,omitempty"`
	Message              string                                                `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *ReportRunMetricsResponse_ReportRunMetricResult) Reset() {
	*m = ReportRunMetricsResponse_ReportRunMetricResult{}
}
func (m *ReportRunMetricsResponse_ReportRunMetricResult) String() string {
	return proto.CompactTextString(m)
}
func (*ReportRunMetricsResponse_ReportRunMetricResult) ProtoMessage() {}
func (*ReportRunMetricsResponse_ReportRunMetricResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{12, 0}
}
func (m *ReportRunMetricsResponse_ReportRunMetricResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportRunMetricsResponse_ReportRunMetricResult.Unmarshal(m, b)
}
func (m *ReportRunMetricsResponse_ReportRunMetricResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportRunMetricsResponse_ReportRunMetricResult.Marshal(b, m, deterministic)
}
func (dst *ReportRunMetricsResponse_ReportRunMetricResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportRunMetricsResponse_ReportRunMetricResult.Merge(dst, src)
}
func (m *ReportRunMetricsResponse_ReportRunMetricResult) XXX_Size() int {
	return xxx_messageInfo_ReportRunMetricsResponse_ReportRunMetricResult.Size(m)
}
func (m *ReportRunMetricsResponse_ReportRunMetricResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportRunMetricsResponse_ReportRunMetricResult.DiscardUnknown(m)
}

var xxx_messageInfo_ReportRunMetricsResponse_ReportRunMetricResult proto.InternalMessageInfo

func (m *ReportRunMetricsResponse_ReportRunMetricResult) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *ReportRunMetricsResponse_ReportRunMetricResult) GetMetricNodeId() string {
	if m != nil {
		return m.MetricNodeId
	}
	return ""
}

func (m *ReportRunMetricsResponse_ReportRunMetricResult) GetStatus() ReportRunMetricsResponse_ReportRunMetricResult_Status {
	if m != nil {
		return m.Status
	}
	return ReportRunMetricsResponse_ReportRunMetricResult_UNSPECIFIED
}

func (m *ReportRunMetricsResponse_ReportRunMetricResult) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadArtifactRequest struct {
	RunId                string   `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	NodeId               string   `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ArtifactName         string   `protobuf:"bytes,3,opt,name=artifact_name,json=artifactName,proto3" json:"artifact_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadArtifactRequest) Reset()         { *m = ReadArtifactRequest{} }
func (m *ReadArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*ReadArtifactRequest) ProtoMessage()    {}
func (*ReadArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{13}
}
func (m *ReadArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadArtifactRequest.Unmarshal(m, b)
}
func (m *ReadArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadArtifactRequest.Marshal(b, m, deterministic)
}
func (dst *ReadArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadArtifactRequest.Merge(dst, src)
}
func (m *ReadArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_ReadArtifactRequest.Size(m)
}
func (m *ReadArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadArtifactRequest proto.InternalMessageInfo

func (m *ReadArtifactRequest) GetRunId() string {
	if m != nil {
		return m.RunId
	}
	return ""
}

func (m *ReadArtifactRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ReadArtifactRequest) GetArtifactName() string {
	if m != nil {
		return m.ArtifactName
	}
	return ""
}

type ReadArtifactResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadArtifactResponse) Reset()         { *m = ReadArtifactResponse{} }
func (m *ReadArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*ReadArtifactResponse) ProtoMessage()    {}
func (*ReadArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_run_49d294eb7256008c, []int{14}
}
func (m *ReadArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadArtifactResponse.Unmarshal(m, b)
}
func (m *ReadArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadArtifactResponse.Marshal(b, m, deterministic)
}
func (dst *ReadArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadArtifactResponse.Merge(dst, src)
}
func (m *ReadArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_ReadArtifactResponse.Size(m)
}
func (m *ReadArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadArtifactResponse proto.InternalMessageInfo

func (m *ReadArtifactResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRunRequest)(nil), "api.CreateRunRequest")
	proto.RegisterType((*GetRunRequest)(nil), "api.GetRunRequest")
	proto.RegisterType((*ListRunsRequest)(nil), "api.ListRunsRequest")
	proto.RegisterType((*ListRunsResponse)(nil), "api.ListRunsResponse")
	proto.RegisterType((*ArchiveRunRequest)(nil), "api.ArchiveRunRequest")
	proto.RegisterType((*UnarchiveRunRequest)(nil), "api.UnarchiveRunRequest")
	proto.RegisterType((*DeleteRunRequest)(nil), "api.DeleteRunRequest")
	proto.RegisterType((*Run)(nil), "api.Run")
	proto.RegisterType((*PipelineRuntime)(nil), "api.PipelineRuntime")
	proto.RegisterType((*RunDetail)(nil), "api.RunDetail")
	proto.RegisterType((*RunMetric)(nil), "api.RunMetric")
	proto.RegisterType((*ReportRunMetricsRequest)(nil), "api.ReportRunMetricsRequest")
	proto.RegisterType((*ReportRunMetricsResponse)(nil), "api.ReportRunMetricsResponse")
	proto.RegisterType((*ReportRunMetricsResponse_ReportRunMetricResult)(nil), "api.ReportRunMetricsResponse.ReportRunMetricResult")
	proto.RegisterType((*ReadArtifactRequest)(nil), "api.ReadArtifactRequest")
	proto.RegisterType((*ReadArtifactResponse)(nil), "api.ReadArtifactResponse")
	proto.RegisterEnum("api.Run_StorageState", Run_StorageState_name, Run_StorageState_value)
	proto.RegisterEnum("api.RunMetric_Format", RunMetric_Format_name, RunMetric_Format_value)
	proto.RegisterEnum("api.ReportRunMetricsResponse_ReportRunMetricResult_Status", ReportRunMetricsResponse_ReportRunMetricResult_Status_name, ReportRunMetricsResponse_ReportRunMetricResult_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RunServiceClient is the client API for RunService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RunServiceClient interface {
	CreateRun(ctx context.Context, in *CreateRunRequest, opts ...grpc.CallOption) (*RunDetail, error)
	GetRun(ctx context.Context, in *GetRunRequest, opts ...grpc.CallOption) (*RunDetail, error)
	ListRuns(ctx context.Context, in *ListRunsRequest, opts ...grpc.CallOption) (*ListRunsResponse, error)
	ArchiveRun(ctx context.Context, in *ArchiveRunRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UnarchiveRun(ctx context.Context, in *UnarchiveRunRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteRun(ctx context.Context, in *DeleteRunRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReportRunMetrics(ctx context.Context, in *ReportRunMetricsRequest, opts ...grpc.CallOption) (*ReportRunMetricsResponse, error)
	ReadArtifact(ctx context.Context, in *ReadArtifactRequest, opts ...grpc.CallOption) (*ReadArtifactResponse, error)
}

type runServiceClient struct {
	cc *grpc.ClientConn
}

func NewRunServiceClient(cc *grpc.ClientConn) RunServiceClient {
	return &runServiceClient{cc}
}

func (c *runServiceClient) CreateRun(ctx context.Context, in *CreateRunRequest, opts ...grpc.CallOption) (*RunDetail, error) {
	out := new(RunDetail)
	err := c.cc.Invoke(ctx, "/api.RunService/CreateRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runServiceClient) GetRun(ctx context.Context, in *GetRunRequest, opts ...grpc.CallOption) (*RunDetail, error) {
	out := new(RunDetail)
	err := c.cc.Invoke(ctx, "/api.RunService/GetRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runServiceClient) ListRuns(ctx context.Context, in *ListRunsRequest, opts ...grpc.CallOption) (*ListRunsResponse, error) {
	out := new(ListRunsResponse)
	err := c.cc.Invoke(ctx, "/api.RunService/ListRuns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runServiceClient) ArchiveRun(ctx context.Context, in *ArchiveRunRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.RunService/ArchiveRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runServiceClient) UnarchiveRun(ctx context.Context, in *UnarchiveRunRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.RunService/UnarchiveRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runServiceClient) DeleteRun(ctx context.Context, in *DeleteRunRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.RunService/DeleteRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runServiceClient) ReportRunMetrics(ctx context.Context, in *ReportRunMetricsRequest, opts ...grpc.CallOption) (*ReportRunMetricsResponse, error) {
	out := new(ReportRunMetricsResponse)
	err := c.cc.Invoke(ctx, "/api.RunService/ReportRunMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runServiceClient) ReadArtifact(ctx context.Context, in *ReadArtifactRequest, opts ...grpc.CallOption) (*ReadArtifactResponse, error) {
	out := new(ReadArtifactResponse)
	err := c.cc.Invoke(ctx, "/api.RunService/ReadArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RunServiceServer is the server API for RunService service.
type RunServiceServer interface {
	CreateRun(context.Context, *CreateRunRequest) (*RunDetail, error)
	GetRun(context.Context, *GetRunRequest) (*RunDetail, error)
	ListRuns(context.Context, *ListRunsRequest) (*ListRunsResponse, error)
	ArchiveRun(context.Context, *ArchiveRunRequest) (*empty.Empty, error)
	UnarchiveRun(context.Context, *UnarchiveRunRequest) (*empty.Empty, error)
	DeleteRun(context.Context, *DeleteRunRequest) (*empty.Empty, error)
	ReportRunMetrics(context.Context, *ReportRunMetricsRequest) (*ReportRunMetricsResponse, error)
	ReadArtifact(context.Context, *ReadArtifactRequest) (*ReadArtifactResponse, error)
}

func RegisterRunServiceServer(s *grpc.Server, srv RunServiceServer) {
	s.RegisterService(&_RunService_serviceDesc, srv)
}

func _RunService_CreateRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunServiceServer).CreateRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RunService/CreateRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunServiceServer).CreateRun(ctx, req.(*CreateRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunService_GetRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunServiceServer).GetRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RunService/GetRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunServiceServer).GetRun(ctx, req.(*GetRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunService_ListRuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRunsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunServiceServer).ListRuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RunService/ListRuns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunServiceServer).ListRuns(ctx, req.(*ListRunsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunService_ArchiveRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunServiceServer).ArchiveRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RunService/ArchiveRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunServiceServer).ArchiveRun(ctx, req.(*ArchiveRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunService_UnarchiveRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnarchiveRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunServiceServer).UnarchiveRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RunService/UnarchiveRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunServiceServer).UnarchiveRun(ctx, req.(*UnarchiveRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunService_DeleteRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunServiceServer).DeleteRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RunService/DeleteRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunServiceServer).DeleteRun(ctx, req.(*DeleteRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunService_ReportRunMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportRunMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunServiceServer).ReportRunMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RunService/ReportRunMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunServiceServer).ReportRunMetrics(ctx, req.(*ReportRunMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunService_ReadArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunServiceServer).ReadArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RunService/ReadArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunServiceServer).ReadArtifact(ctx, req.(*ReadArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RunService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.RunService",
	HandlerType: (*RunServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRun",
			Handler:    _RunService_CreateRun_Handler,
		},
		{
			MethodName: "GetRun",
			Handler:    _RunService_GetRun_Handler,
		},
		{
			MethodName: "ListRuns",
			Handler:    _RunService_ListRuns_Handler,
		},
		{
			MethodName: "ArchiveRun",
			Handler:    _RunService_ArchiveRun_Handler,
		},
		{
			MethodName: "UnarchiveRun",
			Handler:    _RunService_UnarchiveRun_Handler,
		},
		{
			MethodName: "DeleteRun",
			Handler:    _RunService_DeleteRun_Handler,
		},
		{
			MethodName: "ReportRunMetrics",
			Handler:    _RunService_ReportRunMetrics_Handler,
		},
		{
			MethodName: "ReadArtifact",
			Handler:    _RunService_ReadArtifact_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend/api/run.proto",
}

func init() { proto.RegisterFile("backend/api/run.proto", fileDescriptor_run_49d294eb7256008c) }

var fileDescriptor_run_49d294eb7256008c = []byte{
	// 1450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0x5f, 0x4f, 0x23, 0x47,
	0x12, 0xc7, 0x36, 0xd8, 0xb8, 0x6c, 0x60, 0x68, 0xfe, 0xcd, 0x7a, 0x41, 0xb0, 0xc3, 0xde, 0x1e,
	0xbb, 0x77, 0x6b, 0x6b, 0xd9, 0xd3, 0x49, 0x87, 0x74, 0x3a, 0x0d, 0x30, 0xcb, 0xfa, 0x16, 0x0c,
	0x69, 0x1b, 0x22, 0x6d, 0x1e, 0x46, 0x8d, 0xa7, 0x0d, 0x13, 0xec, 0x99, 0x49, 0x77, 0x0f, 0x84,
	0x5d, 0xed, 0x4b, 0xa4, 0x7c, 0x81, 0xe4, 0x21, 0x6f, 0x91, 0xf2, 0x15, 0xf2, 0x21, 0x22, 0xe5,
	0x39, 0xaf, 0x79, 0xcc, 0x07, 0x89, 0xa6, 0x7b, 0xc6, 0x3b, 0xb6, 0xc1, 0x2b, 0xe5, 0x09, 0x77,
	0xd5, 0xaf, 0xab, 0xaa, 0xab, 0xea, 0x57, 0x53, 0xc0, 0xd2, 0x39, 0x69, 0x5f, 0x51, 0xcf, 0xa9,
	0x91, 0xc0, 0xad, 0xb1, 0xd0, 0xab, 0x06, 0xcc, 0x17, 0x3e, 0xca, 0x91, 0xc0, 0xad, 0xac, 0xa4,
	0x75, 0x94, 0x31, 0x9f, 0x29, 0x6d, 0xe5, 0xe1, 0x85, 0xef, 0x5f, 0x74, 0x69, 0x4d, 0x9e, 0xce,
	0xc3, 0x4e, 0x8d, 0xf6, 0x02, 0x71, 0x1b, 0x2b, 0x57, 0x63, 0x65, 0x74, 0x89, 0x78, 0x9e, 0x2f,
	0x88, 0x70, 0x7d, 0x8f, 0xc7, 0xda, 0xf5, 0xe1, 0xab, 0xc2, 0xed, 0x51, 0x2e, 0x48, 0x2f, 0x48,
	0x00, 0x69, 0xa7, 0x81, 0x1b, 0xd0, 0xae, 0xeb, 0x51, 0x9b, 0x07, 0xb4, 0x1d, 0x03, 0x1e, 0x0f,
	0x44, 0x4c, 0xb9, 0x1f, 0xb2, 0x36, 0xb5, 0x19, 0xed, 0x50, 0x46, 0xbd, 0x36, 0x8d, 0x51, 0xff,
	0x94, 0x7f, 0xda, 0xcf, 0x2f, 0xa8, 0xf7, 0x9c, 0xdf, 0x90, 0x8b, 0x0b, 0xca, 0x6a, 0x7e, 0x20,
	0x23, 0x19, 0x8d, 0xca, 0xa8, 0x82, 0xb6, 0xc7, 0x28, 0x11, 0x14, 0x87, 0x1e, 0xa6, 0x5f, 0x85,
	0x94, 0x0b, 0x54, 0x81, 0x1c, 0x0b, 0x3d, 0x3d, 0xb3, 0x91, 0xd9, 0x2a, 0x6d, 0x4f, 0x57, 0x49,
	0xe0, 0x56, 0x23, 0x6d, 0x24, 0x34, 0x9e, 0xc0, 0xcc, 0x01, 0x15, 0x29, 0xf0, 0x12, 0xe4, 0x59,
	0xe8, 0xd9, 0xae, 0x23, 0xf1, 0x45, 0x3c, 0xc5, 0x42, 0xaf, 0xee, 0x18, 0xbf, 0x64, 0x60, 0xee,
	0xd0, 0xe5, 0x11, 0x92, 0x27, 0xd0, 0x35, 0x80, 0x80, 0x5c, 0x50, 0x5b, 0xf8, 0x57, 0xd4, 0x8b,
	0xe1, 0xc5, 0x48, 0xd2, 0x8a, 0x04, 0xe8, 0x21, 0xc8, 0x83, 0xcd, 0xdd, 0x77, 0x54, 0xcf, 0x6e,
	0x64, 0xb6, 0xa6, 0xf0, 0x74, 0x24, 0x68, 0xba, 0xef, 0x28, 0x5a, 0x81, 0x02, 0xf7, 0x99, 0xb0,
	0xcf, 0x6f, 0xf5, 0x9c, 0xbc, 0x98, 0x8f, 0x8e, 0xbb, 0xb7, 0xe8, 0x15, 0x2c, 0x8f, 0xa6, 0xc2,
	0xbe, 0xa2, 0xb7, 0xfa, 0xa4, 0x8c, 0x5f, 0x53, 0xf1, 0xc7, 0x90, 0x37, 0xf4, 0x16, 0x2f, 0x26,
	0x78, 0x9c, 0xc0, 0xdf, 0xd0, 0x5b, 0xb4, 0x0c, 0xf9, 0x8e, 0xdb, 0x15, 0x94, 0xe9, 0x53, 0xca,
	0xbe, 0x3a, 0x19, 0x37, 0xa0, 0x7d, 0x7c, 0x07, 0x0f, 0x7c, 0x8f, 0x53, 0xb4, 0x0a, 0x93, 0x2c,
	0xf4, 0xb8, 0x9e, 0xd9, 0xc8, 0x0d, 0x64, 0x48, 0x4a, 0xa3, 0x67, 0x0a, 0x5f, 0x90, 0xae, 0x7a,
	0x48, 0x4e, 0x3e, 0xa4, 0x28, 0x25, 0xf2, 0x25, 0x4f, 0x60, 0xce, 0xa3, 0x5f, 0x0b, 0x3b, 0x95,
	0x8a, 0xac, 0xf4, 0x38, 0x13, 0x89, 0x4f, 0x92, 0x74, 0x18, 0x9b, 0x30, 0x6f, 0xb2, 0xf6, 0xa5,
	0x7b, 0x9d, 0x2e, 0xcd, 0x2c, 0x64, 0xfb, 0x99, 0xce, 0xba, 0x8e, 0xf1, 0x37, 0x58, 0x38, 0xf5,
	0xc8, 0x27, 0x61, 0x06, 0x68, 0xfb, 0xb4, 0x4b, 0xc5, 0x38, 0xcc, 0x4f, 0x93, 0x90, 0xc3, 0xa1,
	0x37, 0x2c, 0x47, 0x08, 0x26, 0x3d, 0xd2, 0xa3, 0x71, 0x90, 0xf2, 0x37, 0xda, 0x81, 0x19, 0x2e,
	0x7c, 0x26, 0xab, 0x25, 0x88, 0xa0, 0x3a, 0x6c, 0x64, 0xb6, 0x66, 0xb7, 0x97, 0x92, 0x4c, 0x54,
	0x9b, 0x4a, 0xdb, 0x8c, 0x94, 0xb8, 0xcc, 0x53, 0x27, 0xb4, 0x01, 0x25, 0x87, 0xf2, 0x36, 0x73,
	0x65, 0x4f, 0xc6, 0xd5, 0x4c, 0x8b, 0xd0, 0xbf, 0x61, 0x66, 0xa0, 0xfd, 0xe3, 0x4a, 0xce, 0x4b,
	0xeb, 0x27, 0xb1, 0xa6, 0x19, 0xd0, 0x36, 0x2e, 0x07, 0xa9, 0x13, 0x3a, 0x80, 0x85, 0xd1, 0x56,
	0xe0, 0xfa, 0x94, 0xac, 0xd2, 0xf2, 0x40, 0x1f, 0xf4, 0x4b, 0x8f, 0xd1, 0x48, 0x37, 0x70, 0xf4,
	0x1f, 0x80, 0xb6, 0x24, 0x85, 0x63, 0x13, 0xa1, 0xe7, 0xa5, 0xf7, 0x4a, 0x55, 0xf1, 0xb7, 0x9a,
	0xf0, 0xb7, 0xda, 0x4a, 0xf8, 0x8b, 0x8b, 0x31, 0xda, 0x14, 0xe8, 0xbf, 0x50, 0xe6, 0xed, 0x4b,
	0xea, 0x84, 0x5d, 0x75, 0xb9, 0xf0, 0xc9, 0xcb, 0xa5, 0x3e, 0xde, 0x14, 0x51, 0x17, 0x46, 0x09,
	0x0d, 0xb9, 0x3e, 0x1d, 0x77, 0xb9, 0x3c, 0xa1, 0x45, 0x98, 0x92, 0x63, 0x48, 0x2f, 0x2b, 0x92,
	0xc9, 0x03, 0xda, 0x82, 0x42, 0x8f, 0x0a, 0xe6, 0xb6, 0xb9, 0x5e, 0x94, 0x8f, 0x9c, 0x4d, 0x0a,
	0x70, 0x24, 0xc5, 0x38, 0x51, 0x1b, 0x16, 0x94, 0xd3, 0x25, 0x41, 0x15, 0x58, 0x6e, 0xb6, 0x8e,
	0xb1, 0x79, 0x60, 0x35, 0x5b, 0x66, 0xcb, 0xb2, 0xcd, 0x33, 0xb3, 0x7e, 0x68, 0xee, 0x1e, 0x5a,
	0xda, 0x04, 0x7a, 0x00, 0x4b, 0x83, 0x3a, 0xbc, 0xf7, 0xba, 0x7e, 0x66, 0xed, 0x6b, 0x19, 0xe3,
	0x0a, 0xe6, 0x92, 0xfc, 0xe3, 0xd0, 0x8b, 0x06, 0x18, 0xfa, 0x07, 0xcc, 0xf7, 0x8b, 0xd5, 0x23,
	0x9e, 0xdb, 0xa1, 0x5c, 0xc8, 0x76, 0x28, 0x62, 0x2d, 0x51, 0x1c, 0xc5, 0xf2, 0x08, 0x7c, 0xe3,
	0xb3, 0xab, 0x4e, 0xd7, 0xbf, 0xf9, 0x08, 0x2e, 0x29, 0x70, 0xa2, 0x48, 0xc0, 0xc6, 0x25, 0x14,
	0x71, 0xe8, 0xed, 0x53, 0x41, 0xdc, 0xee, 0xb8, 0x99, 0x84, 0xfe, 0x07, 0x7d, 0x4f, 0x36, 0x53,
	0x61, 0xc9, 0x6e, 0x2d, 0x6d, 0x2f, 0x0e, 0xb4, 0x4c, 0x1c, 0x32, 0x9e, 0x0b, 0x06, 0x05, 0xc6,
	0xaf, 0x19, 0xe9, 0x4a, 0x25, 0xad, 0xdf, 0xf0, 0x99, 0x54, 0xc3, 0xaf, 0x40, 0xc1, 0xf3, 0x1d,
	0x1a, 0x8d, 0x39, 0xc5, 0x83, 0x7c, 0x74, 0xac, 0x3b, 0x68, 0x13, 0xca, 0x5e, 0xd8, 0x3b, 0xa7,
	0xcc, 0xbe, 0x26, 0xdd, 0x50, 0xd1, 0x3d, 0xf3, 0x7a, 0x02, 0x97, 0x94, 0xf4, 0x2c, 0x12, 0xa2,
	0xe7, 0x90, 0xef, 0xf8, 0xac, 0x47, 0x84, 0xec, 0xe4, 0x14, 0x4f, 0x94, 0xc7, 0xea, 0x2b, 0xa9,
	0xc4, 0x31, 0xc8, 0xd8, 0x86, 0xbc, 0x92, 0xa0, 0x39, 0x28, 0x9d, 0x36, 0x9a, 0x27, 0xd6, 0x5e,
	0xfd, 0x55, 0xdd, 0xda, 0xd7, 0x26, 0x50, 0x01, 0x72, 0xd8, 0xfc, 0x5c, 0xcb, 0xa0, 0x59, 0x80,
	0x13, 0x0b, 0xef, 0x59, 0x8d, 0x96, 0x79, 0x60, 0x69, 0xd9, 0xdd, 0x02, 0x4c, 0xc9, 0x00, 0x8c,
	0xb7, 0xb0, 0x82, 0x69, 0xe0, 0x33, 0xd1, 0x37, 0xcf, 0xc7, 0x8f, 0xea, 0x74, 0x17, 0x65, 0xc7,
	0x77, 0xd1, 0x8f, 0x39, 0xd0, 0x47, 0x8d, 0xc7, 0x43, 0xf1, 0x08, 0x0a, 0x8c, 0xf2, 0xb0, 0x2b,
	0x92, 0xb9, 0xf8, 0x32, 0x66, 0xdc, 0xdd, 0xf8, 0x61, 0x05, 0x96, 0x77, 0x71, 0x62, 0xa3, 0xf2,
	0x73, 0x16, 0x96, 0xee, 0x84, 0xa0, 0x75, 0x28, 0xa9, 0x80, 0xec, 0x54, 0x99, 0x40, 0x89, 0x1a,
	0x51, 0xb1, 0x1e, 0xc3, 0x6c, 0x02, 0x18, 0xa8, 0x59, 0x39, 0xc6, 0xa8, 0xca, 0xe1, 0x3e, 0xd5,
	0x72, 0xb2, 0x28, 0x3b, 0x7f, 0x21, 0xdc, 0x6a, 0x53, 0x5a, 0xe8, 0xd3, 0x54, 0x8f, 0x52, 0xc9,
	0x39, 0xb9, 0xa0, 0xb2, 0xd2, 0x45, 0x9c, 0x1c, 0x0d, 0x07, 0xf2, 0x0a, 0x3b, 0x5a, 0xd3, 0x3c,
	0x64, 0x8f, 0xdf, 0x68, 0x19, 0xb4, 0x08, 0x5a, 0xbd, 0x71, 0x66, 0x1e, 0xd6, 0xf7, 0x6d, 0x13,
	0x1f, 0x9c, 0x1e, 0x59, 0x8d, 0x96, 0x96, 0x45, 0x2b, 0xb0, 0xb0, 0x7f, 0x7a, 0x72, 0x58, 0xdf,
	0x8b, 0xa8, 0x88, 0xad, 0x93, 0x63, 0xdc, 0xaa, 0x37, 0x0e, 0xb4, 0x1c, 0x42, 0x30, 0x5b, 0x6f,
	0xb4, 0x2c, 0xdc, 0x30, 0x0f, 0x6d, 0x0b, 0xe3, 0x63, 0xac, 0x4d, 0x1a, 0x5f, 0xc2, 0x02, 0xa6,
	0xc4, 0x31, 0x99, 0x70, 0x3b, 0xa4, 0x2d, 0x3e, 0x51, 0xf8, 0x31, 0x4d, 0x3d, 0x43, 0x62, 0x13,
	0x2a, 0xc7, 0x6a, 0x48, 0x97, 0x13, 0x61, 0x94, 0x65, 0xe3, 0x19, 0x2c, 0x0e, 0xfa, 0x8a, 0xfb,
	0x00, 0xc1, 0xa4, 0x43, 0x04, 0x91, 0xae, 0xca, 0x58, 0xfe, 0xde, 0xfe, 0x3d, 0x0f, 0x80, 0x43,
	0xaf, 0x49, 0xd9, 0xb5, 0xdb, 0xa6, 0xa8, 0x09, 0xc5, 0xfe, 0xd2, 0x81, 0x14, 0x19, 0x86, 0x97,
	0x90, 0x4a, 0xbf, 0x09, 0xd5, 0x00, 0x30, 0xd6, 0xbf, 0xf9, 0xed, 0x8f, 0xef, 0xb3, 0x0f, 0x0c,
	0x14, 0x6d, 0x3f, 0xbc, 0x76, 0xfd, 0xe2, 0x9c, 0x0a, 0xf2, 0x22, 0x5a, 0xdc, 0xf8, 0x8e, 0x9c,
	0x02, 0x9f, 0x41, 0x5e, 0x6d, 0x26, 0x08, 0xc9, 0xab, 0x03, 0x6b, 0xca, 0x88, 0xb9, 0x4d, 0x69,
	0x6e, 0x0d, 0x3d, 0x1c, 0x35, 0x57, 0x7b, 0xaf, 0x92, 0xf5, 0x01, 0x35, 0x61, 0x3a, 0xf9, 0xf6,
	0x23, 0x35, 0x4a, 0x86, 0x56, 0x9a, 0xca, 0xd2, 0x90, 0x54, 0xe5, 0xc0, 0xa8, 0x48, 0xeb, 0x8b,
	0xe8, 0x8e, 0x60, 0x11, 0x05, 0xf8, 0xf8, 0x5d, 0x47, 0xea, 0xb3, 0x34, 0xf2, 0xa1, 0xaf, 0x2c,
	0x8f, 0x7c, 0x31, 0xac, 0x68, 0xd3, 0x34, 0xfe, 0x2e, 0x2d, 0x3f, 0x32, 0xd6, 0xef, 0x8a, 0xdb,
	0x75, 0x3e, 0xec, 0xc4, 0xcb, 0x00, 0xba, 0x82, 0x72, 0x7a, 0x33, 0x40, 0xba, 0x74, 0x74, 0xc7,
	0xb2, 0x70, 0xaf, 0xab, 0xa7, 0xd2, 0xd5, 0xa6, 0xf1, 0xe8, 0x3e, 0x57, 0x61, 0x62, 0x0c, 0x7d,
	0x01, 0xc5, 0xfe, 0x7e, 0x11, 0x17, 0x74, 0x78, 0xdf, 0xb8, 0xd7, 0x4d, 0x5c, 0xd8, 0x67, 0x2b,
	0xf7, 0xb8, 0x41, 0xdf, 0x66, 0x40, 0x1b, 0xa6, 0x25, 0x5a, 0xbd, 0x87, 0xad, 0xca, 0xd7, 0xda,
	0x58, 0x2e, 0x1b, 0xff, 0x92, 0x2e, 0xab, 0xc6, 0xd3, 0x31, 0xc5, 0xdf, 0x61, 0xf2, 0x76, 0x7c,
	0x75, 0x27, 0xf3, 0x0c, 0xfd, 0x90, 0x81, 0x72, 0xba, 0xe3, 0xe3, 0x94, 0xde, 0x41, 0xb8, 0xca,
	0x83, 0x3b, 0x34, 0xb1, 0x6f, 0x2c, 0x7d, 0x1f, 0xa2, 0xff, 0x8f, 0xf1, 0x5d, 0x8b, 0x78, 0xc8,
	0x6b, 0xef, 0x63, 0x76, 0x7e, 0xa8, 0x25, 0xc4, 0xe3, 0xb5, 0xf7, 0x03, 0xc4, 0x8c, 0xa2, 0x24,
	0xce, 0xee, 0xc9, 0x77, 0xe6, 0x11, 0x5e, 0x85, 0x82, 0x43, 0x3b, 0x24, 0x9a, 0x90, 0xf3, 0x68,
	0x0e, 0x66, 0x2a, 0x25, 0x19, 0x84, 0x9a, 0x3a, 0x6f, 0xd7, 0x61, 0x0d, 0xf2, 0xbb, 0x94, 0x30,
	0xca, 0xd0, 0xc2, 0x74, 0xb6, 0x32, 0x43, 0x42, 0x71, 0xe9, 0x33, 0xf7, 0x9d, 0xfc, 0x6f, 0x60,
	0x23, 0x7b, 0x5e, 0x06, 0xe8, 0x03, 0x26, 0xce, 0xf3, 0xb2, 0x48, 0x2f, 0xff, 0x0c, 0x00, 0x00,
	0xff, 0xff, 0x18, 0xf0, 0x15, 0x1d, 0x25, 0x0d, 0x00, 0x00,
}
