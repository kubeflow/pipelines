// Copyright 2018 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: backend/api/v1beta1/run.proto

package go_client

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Run_StorageState int32

const (
	Run_STORAGESTATE_AVAILABLE Run_StorageState = 0
	Run_STORAGESTATE_ARCHIVED  Run_StorageState = 1
)

// Enum value maps for Run_StorageState.
var (
	Run_StorageState_name = map[int32]string{
		0: "STORAGESTATE_AVAILABLE",
		1: "STORAGESTATE_ARCHIVED",
	}
	Run_StorageState_value = map[string]int32{
		"STORAGESTATE_AVAILABLE": 0,
		"STORAGESTATE_ARCHIVED":  1,
	}
)

func (x Run_StorageState) Enum() *Run_StorageState {
	p := new(Run_StorageState)
	*p = x
	return p
}

func (x Run_StorageState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Run_StorageState) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_api_v1beta1_run_proto_enumTypes[0].Descriptor()
}

func (Run_StorageState) Type() protoreflect.EnumType {
	return &file_backend_api_v1beta1_run_proto_enumTypes[0]
}

func (x Run_StorageState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Run_StorageState.Descriptor instead.
func (Run_StorageState) EnumDescriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{9, 0}
}

type RunMetric_Format int32

const (
	// Default value if not present.
	RunMetric_UNSPECIFIED RunMetric_Format = 0
	// Display value as its raw format.
	RunMetric_RAW RunMetric_Format = 1
	// Display value in percentage format.
	RunMetric_PERCENTAGE RunMetric_Format = 2
)

// Enum value maps for RunMetric_Format.
var (
	RunMetric_Format_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "RAW",
		2: "PERCENTAGE",
	}
	RunMetric_Format_value = map[string]int32{
		"UNSPECIFIED": 0,
		"RAW":         1,
		"PERCENTAGE":  2,
	}
)

func (x RunMetric_Format) Enum() *RunMetric_Format {
	p := new(RunMetric_Format)
	*p = x
	return p
}

func (x RunMetric_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunMetric_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_api_v1beta1_run_proto_enumTypes[1].Descriptor()
}

func (RunMetric_Format) Type() protoreflect.EnumType {
	return &file_backend_api_v1beta1_run_proto_enumTypes[1]
}

func (x RunMetric_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunMetric_Format.Descriptor instead.
func (RunMetric_Format) EnumDescriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{12, 0}
}

type ReportRunMetricsResponse_ReportRunMetricResult_Status int32

const (
	// Default value if not present.
	ReportRunMetricsResponse_ReportRunMetricResult_UNSPECIFIED ReportRunMetricsResponse_ReportRunMetricResult_Status = 0
	// Indicates successful reporting.
	ReportRunMetricsResponse_ReportRunMetricResult_OK ReportRunMetricsResponse_ReportRunMetricResult_Status = 1
	// Indicates that the payload of the metric is invalid.
	ReportRunMetricsResponse_ReportRunMetricResult_INVALID_ARGUMENT ReportRunMetricsResponse_ReportRunMetricResult_Status = 2
	// Indicates that the metric has been reported before.
	ReportRunMetricsResponse_ReportRunMetricResult_DUPLICATE_REPORTING ReportRunMetricsResponse_ReportRunMetricResult_Status = 3
	// Indicates that something went wrong in the server.
	ReportRunMetricsResponse_ReportRunMetricResult_INTERNAL_ERROR ReportRunMetricsResponse_ReportRunMetricResult_Status = 4
)

// Enum value maps for ReportRunMetricsResponse_ReportRunMetricResult_Status.
var (
	ReportRunMetricsResponse_ReportRunMetricResult_Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "OK",
		2: "INVALID_ARGUMENT",
		3: "DUPLICATE_REPORTING",
		4: "INTERNAL_ERROR",
	}
	ReportRunMetricsResponse_ReportRunMetricResult_Status_value = map[string]int32{
		"UNSPECIFIED":         0,
		"OK":                  1,
		"INVALID_ARGUMENT":    2,
		"DUPLICATE_REPORTING": 3,
		"INTERNAL_ERROR":      4,
	}
)

func (x ReportRunMetricsResponse_ReportRunMetricResult_Status) Enum() *ReportRunMetricsResponse_ReportRunMetricResult_Status {
	p := new(ReportRunMetricsResponse_ReportRunMetricResult_Status)
	*p = x
	return p
}

func (x ReportRunMetricsResponse_ReportRunMetricResult_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportRunMetricsResponse_ReportRunMetricResult_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_api_v1beta1_run_proto_enumTypes[2].Descriptor()
}

func (ReportRunMetricsResponse_ReportRunMetricResult_Status) Type() protoreflect.EnumType {
	return &file_backend_api_v1beta1_run_proto_enumTypes[2]
}

func (x ReportRunMetricsResponse_ReportRunMetricResult_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportRunMetricsResponse_ReportRunMetricResult_Status.Descriptor instead.
func (ReportRunMetricsResponse_ReportRunMetricResult_Status) EnumDescriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{14, 0, 0}
}

type CreateRunRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Run           *Run                   `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRunRequest) Reset() {
	*x = CreateRunRequest{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRunRequest) ProtoMessage() {}

func (x *CreateRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRunRequest.ProtoReflect.Descriptor instead.
func (*CreateRunRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRunRequest) GetRun() *Run {
	if x != nil {
		return x.Run
	}
	return nil
}

type GetRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the run to be retrieved.
	RunId         string `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRunRequest) Reset() {
	*x = GetRunRequest{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunRequest) ProtoMessage() {}

func (x *GetRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunRequest.ProtoReflect.Descriptor instead.
func (*GetRunRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{1}
}

func (x *GetRunRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type ListRunsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A page token to request the next page of results. The token is acquried
	// from the nextPageToken field of the response from the previous
	// ListRuns call or can be omitted when fetching the first page.
	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The number of runs to be listed per page. If there are more runs than this
	// number, the response message will contain a nextPageToken field you can use
	// to fetch the next page.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Can be format of "field_name", "field_name asc" or "field_name desc"
	// (Example, "name asc" or "id desc"). Ascending by default.
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	// What resource reference to filter on.
	// E.g. If listing run for an experiment, the query string would be
	// resource_reference_key.type=EXPERIMENT&resource_reference_key.id=123
	ResourceReferenceKey *ResourceKey `protobuf:"bytes,4,opt,name=resource_reference_key,json=resourceReferenceKey,proto3" json:"resource_reference_key,omitempty"`
	// A url-encoded, JSON-serialized Filter protocol buffer (see
	// [filter.proto](https://github.com/kubeflow/pipelines/blob/master/backend/api/v1beta1/filter.proto)).
	Filter        string `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRunsRequest) Reset() {
	*x = ListRunsRequest{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRunsRequest) ProtoMessage() {}

func (x *ListRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRunsRequest.ProtoReflect.Descriptor instead.
func (*ListRunsRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{2}
}

func (x *ListRunsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRunsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRunsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListRunsRequest) GetResourceReferenceKey() *ResourceKey {
	if x != nil {
		return x.ResourceReferenceKey
	}
	return nil
}

func (x *ListRunsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type TerminateRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the run to be terminated.
	RunId         string `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateRunRequest) Reset() {
	*x = TerminateRunRequest{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateRunRequest) ProtoMessage() {}

func (x *TerminateRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateRunRequest.ProtoReflect.Descriptor instead.
func (*TerminateRunRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{3}
}

func (x *TerminateRunRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type RetryRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the run to be retried.
	RunId         string `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryRunRequest) Reset() {
	*x = RetryRunRequest{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryRunRequest) ProtoMessage() {}

func (x *RetryRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryRunRequest.ProtoReflect.Descriptor instead.
func (*RetryRunRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{4}
}

func (x *RetryRunRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type ListRunsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Runs  []*Run                 `protobuf:"bytes,1,rep,name=runs,proto3" json:"runs,omitempty"`
	// The total number of runs for the given query.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The token to list the next page of runs.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRunsResponse) Reset() {
	*x = ListRunsResponse{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRunsResponse) ProtoMessage() {}

func (x *ListRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRunsResponse.ProtoReflect.Descriptor instead.
func (*ListRunsResponse) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{5}
}

func (x *ListRunsResponse) GetRuns() []*Run {
	if x != nil {
		return x.Runs
	}
	return nil
}

func (x *ListRunsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListRunsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ArchiveRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the run to be archived.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveRunRequest) Reset() {
	*x = ArchiveRunRequest{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveRunRequest) ProtoMessage() {}

func (x *ArchiveRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveRunRequest.ProtoReflect.Descriptor instead.
func (*ArchiveRunRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{6}
}

func (x *ArchiveRunRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnarchiveRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the run to be restored.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnarchiveRunRequest) Reset() {
	*x = UnarchiveRunRequest{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnarchiveRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnarchiveRunRequest) ProtoMessage() {}

func (x *UnarchiveRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnarchiveRunRequest.ProtoReflect.Descriptor instead.
func (*UnarchiveRunRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{7}
}

func (x *UnarchiveRunRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the run to be deleted.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRunRequest) Reset() {
	*x = DeleteRunRequest{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRunRequest) ProtoMessage() {}

func (x *DeleteRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRunRequest.ProtoReflect.Descriptor instead.
func (*DeleteRunRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRunRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Run struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output. Unique run ID. Generated by API server.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required input field. Name provided by user,
	// or auto generated if run is created by scheduled job. Not unique.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Output. Specify whether this run is in archived or available mode.
	StorageState Run_StorageState `protobuf:"varint,10,opt,name=storage_state,json=storageState,proto3,enum=api.Run_StorageState" json:"storage_state,omitempty"`
	// Optional input field. Describing the purpose of the run
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Required input field.
	// Describing what the pipeline manifest and parameters to use for the run.
	PipelineSpec *PipelineSpec `protobuf:"bytes,4,opt,name=pipeline_spec,json=pipelineSpec,proto3" json:"pipeline_spec,omitempty"`
	// Optional input field. Specify which resource this run belongs to.
	// When creating a run from a particular pipeline version, the pipeline
	// version can be specified here.
	ResourceReferences []*ResourceReference `protobuf:"bytes,5,rep,name=resource_references,json=resourceReferences,proto3" json:"resource_references,omitempty"`
	// Optional input field. Specify which Kubernetes service account this run uses.
	ServiceAccount string `protobuf:"bytes,14,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	// Output. The time that the run created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Output. When this run is scheduled to run. This could be different from
	// created_at. For example, if a run is from a backfilling job that was
	// supposed to run 2 month ago, the scheduled_at is 2 month ago,
	// v.s. created_at is the current time.
	ScheduledAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	// Output. The time this run is finished.
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Output. The status of the run.
	// One of [Pending, Running, Succeeded, Skipped, Failed, Error]
	Status string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	// In case any error happens retrieving a run field, only run ID
	// and the error message is returned. Client has the flexibility of choosing
	// how to handle error. This is especially useful during listing call.
	Error string `protobuf:"bytes,12,opt,name=error,proto3" json:"error,omitempty"`
	// Output. The metrics of the run. The metrics are reported by ReportMetrics
	// API.
	Metrics       []*RunMetric `protobuf:"bytes,9,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Run) Reset() {
	*x = Run{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{9}
}

func (x *Run) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Run) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Run) GetStorageState() Run_StorageState {
	if x != nil {
		return x.StorageState
	}
	return Run_STORAGESTATE_AVAILABLE
}

func (x *Run) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Run) GetPipelineSpec() *PipelineSpec {
	if x != nil {
		return x.PipelineSpec
	}
	return nil
}

func (x *Run) GetResourceReferences() []*ResourceReference {
	if x != nil {
		return x.ResourceReferences
	}
	return nil
}

func (x *Run) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *Run) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Run) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *Run) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *Run) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Run) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Run) GetMetrics() []*RunMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type PipelineRuntime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output. The runtime JSON manifest of the pipeline, including the status
	// of pipeline steps and fields need for UI visualization etc.
	PipelineManifest string `protobuf:"bytes,10,opt,name=pipeline_manifest,json=pipelineManifest,proto3" json:"pipeline_manifest,omitempty"`
	// Output. The runtime JSON manifest of the argo workflow.
	// This is deprecated after pipeline_runtime_manifest is in use.
	WorkflowManifest string `protobuf:"bytes,11,opt,name=workflow_manifest,json=workflowManifest,proto3" json:"workflow_manifest,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PipelineRuntime) Reset() {
	*x = PipelineRuntime{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineRuntime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineRuntime) ProtoMessage() {}

func (x *PipelineRuntime) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineRuntime.ProtoReflect.Descriptor instead.
func (*PipelineRuntime) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{10}
}

func (x *PipelineRuntime) GetPipelineManifest() string {
	if x != nil {
		return x.PipelineManifest
	}
	return ""
}

func (x *PipelineRuntime) GetWorkflowManifest() string {
	if x != nil {
		return x.WorkflowManifest
	}
	return ""
}

type RunDetail struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Run             *Run                   `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty"`
	PipelineRuntime *PipelineRuntime       `protobuf:"bytes,2,opt,name=pipeline_runtime,json=pipelineRuntime,proto3" json:"pipeline_runtime,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RunDetail) Reset() {
	*x = RunDetail{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunDetail) ProtoMessage() {}

func (x *RunDetail) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunDetail.ProtoReflect.Descriptor instead.
func (*RunDetail) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{11}
}

func (x *RunDetail) GetRun() *Run {
	if x != nil {
		return x.Run
	}
	return nil
}

func (x *RunDetail) GetPipelineRuntime() *PipelineRuntime {
	if x != nil {
		return x.PipelineRuntime
	}
	return nil
}

type RunMetric struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The user defined name of the metric. It must between 1 and 63
	// characters long and must conform to the following regular expression:
	// `[a-z]([-a-z0-9]*[a-z0-9])?`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The runtime node ID which reports the metric. The node ID can be
	// found in the RunDetail.workflow.Status. Metric with same (node_id, name)
	// are considerd as duplicate. Only the first reporting will be recorded. Max
	// length is 128.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*RunMetric_NumberValue
	Value isRunMetric_Value `protobuf_oneof:"value"`
	// The display format of metric.
	Format        RunMetric_Format `protobuf:"varint,4,opt,name=format,proto3,enum=api.RunMetric_Format" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunMetric) Reset() {
	*x = RunMetric{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunMetric) ProtoMessage() {}

func (x *RunMetric) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunMetric.ProtoReflect.Descriptor instead.
func (*RunMetric) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{12}
}

func (x *RunMetric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunMetric) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RunMetric) GetValue() isRunMetric_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *RunMetric) GetNumberValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*RunMetric_NumberValue); ok {
			return x.NumberValue
		}
	}
	return 0
}

func (x *RunMetric) GetFormat() RunMetric_Format {
	if x != nil {
		return x.Format
	}
	return RunMetric_UNSPECIFIED
}

type isRunMetric_Value interface {
	isRunMetric_Value()
}

type RunMetric_NumberValue struct {
	// The number value of the metric.
	NumberValue float64 `protobuf:"fixed64,3,opt,name=number_value,json=numberValue,proto3,oneof"`
}

func (*RunMetric_NumberValue) isRunMetric_Value() {}

type ReportRunMetricsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The parent run ID of the metric.
	RunId string `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	// List of metrics to report.
	Metrics       []*RunMetric `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportRunMetricsRequest) Reset() {
	*x = ReportRunMetricsRequest{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportRunMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRunMetricsRequest) ProtoMessage() {}

func (x *ReportRunMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRunMetricsRequest.ProtoReflect.Descriptor instead.
func (*ReportRunMetricsRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{13}
}

func (x *ReportRunMetricsRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *ReportRunMetricsRequest) GetMetrics() []*RunMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type ReportRunMetricsResponse struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Results       []*ReportRunMetricsResponse_ReportRunMetricResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportRunMetricsResponse) Reset() {
	*x = ReportRunMetricsResponse{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportRunMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRunMetricsResponse) ProtoMessage() {}

func (x *ReportRunMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRunMetricsResponse.ProtoReflect.Descriptor instead.
func (*ReportRunMetricsResponse) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{14}
}

func (x *ReportRunMetricsResponse) GetResults() []*ReportRunMetricsResponse_ReportRunMetricResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type ReadArtifactRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the run.
	RunId string `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	// The ID of the running node.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// The name of the artifact.
	ArtifactName  string `protobuf:"bytes,3,opt,name=artifact_name,json=artifactName,proto3" json:"artifact_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadArtifactRequest) Reset() {
	*x = ReadArtifactRequest{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadArtifactRequest) ProtoMessage() {}

func (x *ReadArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadArtifactRequest.ProtoReflect.Descriptor instead.
func (*ReadArtifactRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{15}
}

func (x *ReadArtifactRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *ReadArtifactRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ReadArtifactRequest) GetArtifactName() string {
	if x != nil {
		return x.ArtifactName
	}
	return ""
}

type ReadArtifactResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The bytes of the artifact content.
	Data          []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadArtifactResponse) Reset() {
	*x = ReadArtifactResponse{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadArtifactResponse) ProtoMessage() {}

func (x *ReadArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadArtifactResponse.ProtoReflect.Descriptor instead.
func (*ReadArtifactResponse) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{16}
}

func (x *ReadArtifactResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReportRunMetricsResponse_ReportRunMetricResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output. The name of the metric.
	MetricName string `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	// Output. The ID of the node which reports the metric.
	MetricNodeId string `protobuf:"bytes,2,opt,name=metric_node_id,json=metricNodeId,proto3" json:"metric_node_id,omitempty"`
	// Output. The status of the metric reporting.
	Status ReportRunMetricsResponse_ReportRunMetricResult_Status `protobuf:"varint,3,opt,name=status,proto3,enum=api.ReportRunMetricsResponse_ReportRunMetricResult_Status" json:"status,omitempty"`
	// Output. The detailed message of the error of the reporting.
	Message       string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportRunMetricsResponse_ReportRunMetricResult) Reset() {
	*x = ReportRunMetricsResponse_ReportRunMetricResult{}
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportRunMetricsResponse_ReportRunMetricResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRunMetricsResponse_ReportRunMetricResult) ProtoMessage() {}

func (x *ReportRunMetricsResponse_ReportRunMetricResult) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_run_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRunMetricsResponse_ReportRunMetricResult.ProtoReflect.Descriptor instead.
func (*ReportRunMetricsResponse_ReportRunMetricResult) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_run_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ReportRunMetricsResponse_ReportRunMetricResult) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *ReportRunMetricsResponse_ReportRunMetricResult) GetMetricNodeId() string {
	if x != nil {
		return x.MetricNodeId
	}
	return ""
}

func (x *ReportRunMetricsResponse_ReportRunMetricResult) GetStatus() ReportRunMetricsResponse_ReportRunMetricResult_Status {
	if x != nil {
		return x.Status
	}
	return ReportRunMetricsResponse_ReportRunMetricResult_UNSPECIFIED
}

func (x *ReportRunMetricsResponse_ReportRunMetricResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_backend_api_v1beta1_run_proto protoreflect.FileDescriptor

const file_backend_api_v1beta1_run_proto_rawDesc = "" +
	"\n" +
	"\x1dbackend/api/v1beta1/run.proto\x12\x03api\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a'backend/api/v1beta1/pipeline_spec.proto\x1a,backend/api/v1beta1/resource_reference.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\".\n" +
	"\x10CreateRunRequest\x12\x1a\n" +
	"\x03run\x18\x01 \x01(\v2\b.api.RunR\x03run\"&\n" +
	"\rGetRunRequest\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\"\xc6\x01\n" +
	"\x0fListRunsRequest\x12\x1d\n" +
	"\n" +
	"page_token\x18\x01 \x01(\tR\tpageToken\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\x03 \x01(\tR\x06sortBy\x12F\n" +
	"\x16resource_reference_key\x18\x04 \x01(\v2\x10.api.ResourceKeyR\x14resourceReferenceKey\x12\x16\n" +
	"\x06filter\x18\x05 \x01(\tR\x06filter\",\n" +
	"\x13TerminateRunRequest\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\"(\n" +
	"\x0fRetryRunRequest\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\"w\n" +
	"\x10ListRunsResponse\x12\x1c\n" +
	"\x04runs\x18\x01 \x03(\v2\b.api.RunR\x04runs\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"#\n" +
	"\x11ArchiveRunRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"%\n" +
	"\x13UnarchiveRunRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\"\n" +
	"\x10DeleteRunRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x87\x05\n" +
	"\x03Run\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12:\n" +
	"\rstorage_state\x18\n" +
	" \x01(\x0e2\x15.api.Run.StorageStateR\fstorageState\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x126\n" +
	"\rpipeline_spec\x18\x04 \x01(\v2\x11.api.PipelineSpecR\fpipelineSpec\x12G\n" +
	"\x13resource_references\x18\x05 \x03(\v2\x16.api.ResourceReferenceR\x12resourceReferences\x12'\n" +
	"\x0fservice_account\x18\x0e \x01(\tR\x0eserviceAccount\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12=\n" +
	"\fscheduled_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x12;\n" +
	"\vfinished_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"finishedAt\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\f \x01(\tR\x05error\x12(\n" +
	"\ametrics\x18\t \x03(\v2\x0e.api.RunMetricR\ametrics\"E\n" +
	"\fStorageState\x12\x1a\n" +
	"\x16STORAGESTATE_AVAILABLE\x10\x00\x12\x19\n" +
	"\x15STORAGESTATE_ARCHIVED\x10\x01\"k\n" +
	"\x0fPipelineRuntime\x12+\n" +
	"\x11pipeline_manifest\x18\n" +
	" \x01(\tR\x10pipelineManifest\x12+\n" +
	"\x11workflow_manifest\x18\v \x01(\tR\x10workflowManifest\"h\n" +
	"\tRunDetail\x12\x1a\n" +
	"\x03run\x18\x01 \x01(\v2\b.api.RunR\x03run\x12?\n" +
	"\x10pipeline_runtime\x18\x02 \x01(\v2\x14.api.PipelineRuntimeR\x0fpipelineRuntime\"\xc9\x01\n" +
	"\tRunMetric\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12#\n" +
	"\fnumber_value\x18\x03 \x01(\x01H\x00R\vnumberValue\x12-\n" +
	"\x06format\x18\x04 \x01(\x0e2\x15.api.RunMetric.FormatR\x06format\"2\n" +
	"\x06Format\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\a\n" +
	"\x03RAW\x10\x01\x12\x0e\n" +
	"\n" +
	"PERCENTAGE\x10\x02B\a\n" +
	"\x05value\"Z\n" +
	"\x17ReportRunMetricsRequest\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12(\n" +
	"\ametrics\x18\x02 \x03(\v2\x0e.api.RunMetricR\ametrics\"\x9e\x03\n" +
	"\x18ReportRunMetricsResponse\x12M\n" +
	"\aresults\x18\x01 \x03(\v23.api.ReportRunMetricsResponse.ReportRunMetricResultR\aresults\x1a\xb2\x02\n" +
	"\x15ReportRunMetricResult\x12\x1f\n" +
	"\vmetric_name\x18\x01 \x01(\tR\n" +
	"metricName\x12$\n" +
	"\x0emetric_node_id\x18\x02 \x01(\tR\fmetricNodeId\x12R\n" +
	"\x06status\x18\x03 \x01(\x0e2:.api.ReportRunMetricsResponse.ReportRunMetricResult.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"d\n" +
	"\x06Status\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x06\n" +
	"\x02OK\x10\x01\x12\x14\n" +
	"\x10INVALID_ARGUMENT\x10\x02\x12\x17\n" +
	"\x13DUPLICATE_REPORTING\x10\x03\x12\x12\n" +
	"\x0eINTERNAL_ERROR\x10\x04\"j\n" +
	"\x13ReadArtifactRequest\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12#\n" +
	"\rartifact_name\x18\x03 \x01(\tR\fartifactName\"*\n" +
	"\x14ReadArtifactResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data2\xc6\b\n" +
	"\n" +
	"RunService\x12U\n" +
	"\vCreateRunV1\x12\x15.api.CreateRunRequest\x1a\x0e.api.RunDetail\"\x1f\x82\xd3\xe4\x93\x02\x19:\x03run\"\x12/apis/v1beta1/runs\x12S\n" +
	"\bGetRunV1\x12\x12.api.GetRunRequest\x1a\x0e.api.RunDetail\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/apis/v1beta1/runs/{run_id}\x12U\n" +
	"\n" +
	"ListRunsV1\x12\x14.api.ListRunsRequest\x1a\x15.api.ListRunsResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/apis/v1beta1/runs\x12g\n" +
	"\fArchiveRunV1\x12\x16.api.ArchiveRunRequest\x1a\x16.google.protobuf.Empty\"'\x82\xd3\xe4\x93\x02!\"\x1f/apis/v1beta1/runs/{id}:archive\x12m\n" +
	"\x0eUnarchiveRunV1\x12\x18.api.UnarchiveRunRequest\x1a\x16.google.protobuf.Empty\")\x82\xd3\xe4\x93\x02#\"!/apis/v1beta1/runs/{id}:unarchive\x12]\n" +
	"\vDeleteRunV1\x12\x15.api.DeleteRunRequest\x1a\x16.google.protobuf.Empty\"\x1f\x82\xd3\xe4\x93\x02\x19*\x17/apis/v1beta1/runs/{id}\x12\x87\x01\n" +
	"\x12ReportRunMetricsV1\x12\x1c.api.ReportRunMetricsRequest\x1a\x1d.api.ReportRunMetricsResponse\"4\x82\xd3\xe4\x93\x02.:\x01*\")/apis/v1beta1/runs/{run_id}:reportMetrics\x12\x99\x01\n" +
	"\x0eReadArtifactV1\x12\x18.api.ReadArtifactRequest\x1a\x19.api.ReadArtifactResponse\"R\x82\xd3\xe4\x93\x02L\x12J/apis/v1beta1/runs/{run_id}/nodes/{node_id}/artifacts/{artifact_name}:read\x12q\n" +
	"\x0eTerminateRunV1\x12\x18.api.TerminateRunRequest\x1a\x16.google.protobuf.Empty\"-\x82\xd3\xe4\x93\x02'\"%/apis/v1beta1/runs/{run_id}/terminate\x12e\n" +
	"\n" +
	"RetryRunV1\x12\x14.api.RetryRunRequest\x1a\x16.google.protobuf.Empty\")\x82\xd3\xe4\x93\x02#\"!/apis/v1beta1/runs/{run_id}/retryB\x91\x01\x92AQ*\x02\x01\x02R\x1c\n" +
	"\adefault\x12\x11\x12\x0f\n" +
	"\r\x1a\v.api.StatusZ\x1f\n" +
	"\x1d\n" +
	"\x06Bearer\x12\x13\b\x02\x1a\rauthorization \x02b\f\n" +
	"\n" +
	"\n" +
	"\x06Bearer\x12\x00Z;github.com/kubeflow/pipelines/backend/api/v1beta1/go_clientb\x06proto3"

var (
	file_backend_api_v1beta1_run_proto_rawDescOnce sync.Once
	file_backend_api_v1beta1_run_proto_rawDescData []byte
)

func file_backend_api_v1beta1_run_proto_rawDescGZIP() []byte {
	file_backend_api_v1beta1_run_proto_rawDescOnce.Do(func() {
		file_backend_api_v1beta1_run_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backend_api_v1beta1_run_proto_rawDesc), len(file_backend_api_v1beta1_run_proto_rawDesc)))
	})
	return file_backend_api_v1beta1_run_proto_rawDescData
}

var file_backend_api_v1beta1_run_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_backend_api_v1beta1_run_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_backend_api_v1beta1_run_proto_goTypes = []any{
	(Run_StorageState)(0), // 0: api.Run.StorageState
	(RunMetric_Format)(0), // 1: api.RunMetric.Format
	(ReportRunMetricsResponse_ReportRunMetricResult_Status)(0), // 2: api.ReportRunMetricsResponse.ReportRunMetricResult.Status
	(*CreateRunRequest)(nil),                                   // 3: api.CreateRunRequest
	(*GetRunRequest)(nil),                                      // 4: api.GetRunRequest
	(*ListRunsRequest)(nil),                                    // 5: api.ListRunsRequest
	(*TerminateRunRequest)(nil),                                // 6: api.TerminateRunRequest
	(*RetryRunRequest)(nil),                                    // 7: api.RetryRunRequest
	(*ListRunsResponse)(nil),                                   // 8: api.ListRunsResponse
	(*ArchiveRunRequest)(nil),                                  // 9: api.ArchiveRunRequest
	(*UnarchiveRunRequest)(nil),                                // 10: api.UnarchiveRunRequest
	(*DeleteRunRequest)(nil),                                   // 11: api.DeleteRunRequest
	(*Run)(nil),                                                // 12: api.Run
	(*PipelineRuntime)(nil),                                    // 13: api.PipelineRuntime
	(*RunDetail)(nil),                                          // 14: api.RunDetail
	(*RunMetric)(nil),                                          // 15: api.RunMetric
	(*ReportRunMetricsRequest)(nil),                            // 16: api.ReportRunMetricsRequest
	(*ReportRunMetricsResponse)(nil),                           // 17: api.ReportRunMetricsResponse
	(*ReadArtifactRequest)(nil),                                // 18: api.ReadArtifactRequest
	(*ReadArtifactResponse)(nil),                               // 19: api.ReadArtifactResponse
	(*ReportRunMetricsResponse_ReportRunMetricResult)(nil),     // 20: api.ReportRunMetricsResponse.ReportRunMetricResult
	(*ResourceKey)(nil),                                        // 21: api.ResourceKey
	(*PipelineSpec)(nil),                                       // 22: api.PipelineSpec
	(*ResourceReference)(nil),                                  // 23: api.ResourceReference
	(*timestamppb.Timestamp)(nil),                              // 24: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                                      // 25: google.protobuf.Empty
}
var file_backend_api_v1beta1_run_proto_depIdxs = []int32{
	12, // 0: api.CreateRunRequest.run:type_name -> api.Run
	21, // 1: api.ListRunsRequest.resource_reference_key:type_name -> api.ResourceKey
	12, // 2: api.ListRunsResponse.runs:type_name -> api.Run
	0,  // 3: api.Run.storage_state:type_name -> api.Run.StorageState
	22, // 4: api.Run.pipeline_spec:type_name -> api.PipelineSpec
	23, // 5: api.Run.resource_references:type_name -> api.ResourceReference
	24, // 6: api.Run.created_at:type_name -> google.protobuf.Timestamp
	24, // 7: api.Run.scheduled_at:type_name -> google.protobuf.Timestamp
	24, // 8: api.Run.finished_at:type_name -> google.protobuf.Timestamp
	15, // 9: api.Run.metrics:type_name -> api.RunMetric
	12, // 10: api.RunDetail.run:type_name -> api.Run
	13, // 11: api.RunDetail.pipeline_runtime:type_name -> api.PipelineRuntime
	1,  // 12: api.RunMetric.format:type_name -> api.RunMetric.Format
	15, // 13: api.ReportRunMetricsRequest.metrics:type_name -> api.RunMetric
	20, // 14: api.ReportRunMetricsResponse.results:type_name -> api.ReportRunMetricsResponse.ReportRunMetricResult
	2,  // 15: api.ReportRunMetricsResponse.ReportRunMetricResult.status:type_name -> api.ReportRunMetricsResponse.ReportRunMetricResult.Status
	3,  // 16: api.RunService.CreateRunV1:input_type -> api.CreateRunRequest
	4,  // 17: api.RunService.GetRunV1:input_type -> api.GetRunRequest
	5,  // 18: api.RunService.ListRunsV1:input_type -> api.ListRunsRequest
	9,  // 19: api.RunService.ArchiveRunV1:input_type -> api.ArchiveRunRequest
	10, // 20: api.RunService.UnarchiveRunV1:input_type -> api.UnarchiveRunRequest
	11, // 21: api.RunService.DeleteRunV1:input_type -> api.DeleteRunRequest
	16, // 22: api.RunService.ReportRunMetricsV1:input_type -> api.ReportRunMetricsRequest
	18, // 23: api.RunService.ReadArtifactV1:input_type -> api.ReadArtifactRequest
	6,  // 24: api.RunService.TerminateRunV1:input_type -> api.TerminateRunRequest
	7,  // 25: api.RunService.RetryRunV1:input_type -> api.RetryRunRequest
	14, // 26: api.RunService.CreateRunV1:output_type -> api.RunDetail
	14, // 27: api.RunService.GetRunV1:output_type -> api.RunDetail
	8,  // 28: api.RunService.ListRunsV1:output_type -> api.ListRunsResponse
	25, // 29: api.RunService.ArchiveRunV1:output_type -> google.protobuf.Empty
	25, // 30: api.RunService.UnarchiveRunV1:output_type -> google.protobuf.Empty
	25, // 31: api.RunService.DeleteRunV1:output_type -> google.protobuf.Empty
	17, // 32: api.RunService.ReportRunMetricsV1:output_type -> api.ReportRunMetricsResponse
	19, // 33: api.RunService.ReadArtifactV1:output_type -> api.ReadArtifactResponse
	25, // 34: api.RunService.TerminateRunV1:output_type -> google.protobuf.Empty
	25, // 35: api.RunService.RetryRunV1:output_type -> google.protobuf.Empty
	26, // [26:36] is the sub-list for method output_type
	16, // [16:26] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_backend_api_v1beta1_run_proto_init() }
func file_backend_api_v1beta1_run_proto_init() {
	if File_backend_api_v1beta1_run_proto != nil {
		return
	}
	file_backend_api_v1beta1_pipeline_spec_proto_init()
	file_backend_api_v1beta1_resource_reference_proto_init()
	file_backend_api_v1beta1_run_proto_msgTypes[12].OneofWrappers = []any{
		(*RunMetric_NumberValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backend_api_v1beta1_run_proto_rawDesc), len(file_backend_api_v1beta1_run_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_api_v1beta1_run_proto_goTypes,
		DependencyIndexes: file_backend_api_v1beta1_run_proto_depIdxs,
		EnumInfos:         file_backend_api_v1beta1_run_proto_enumTypes,
		MessageInfos:      file_backend_api_v1beta1_run_proto_msgTypes,
	}.Build()
	File_backend_api_v1beta1_run_proto = out.File
	file_backend_api_v1beta1_run_proto_goTypes = nil
	file_backend_api_v1beta1_run_proto_depIdxs = nil
}
