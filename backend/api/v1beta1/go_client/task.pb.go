// Copyright 2021 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: backend/api/v1beta1/task.proto

package go_client

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output. Unique task ID. Generated by API server.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Optional input field. The Namespace to which this pipeline task belongs.
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Required input field. The PipelineName to which this pipeline task belongs.
	// Namespace will be encoded in the PipelineName.
	// "namespace/${namespace}/pipeline/${pipelineName}" for namespaced pipelines
	// "pipeline/${pipelineName}" for shared pipelines
	PipelineName string `protobuf:"bytes,3,opt,name=pipelineName,proto3" json:"pipelineName,omitempty"`
	// Required input field.The ID of the PipelineRun that the PipelineTask belongs to.
	RunId string `protobuf:"bytes,4,opt,name=runId,proto3" json:"runId,omitempty"`
	// Required input field. The ID of the MLMD execution associated with the PipelineTask.
	MlmdExecutionID string `protobuf:"bytes,5,opt,name=mlmdExecutionID,proto3" json:"mlmdExecutionID,omitempty"`
	// Required input field. The time this task is created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,proto3" json:"created_at,omitempty"`
	// Optional input field. The time this task is finished.
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=finished_at,proto3" json:"finished_at,omitempty"`
	// Required input field.
	Fingerprint   string `protobuf:"bytes,8,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_backend_api_v1beta1_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_task_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Task) GetPipelineName() string {
	if x != nil {
		return x.PipelineName
	}
	return ""
}

func (x *Task) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *Task) GetMlmdExecutionID() string {
	if x != nil {
		return x.MlmdExecutionID
	}
	return ""
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *Task) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

type CreateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	mi := &file_backend_api_v1beta1_task_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_task_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_task_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTaskRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type ListTasksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A page token to request the next page of results. The token is acquried
	// from the nextPageToken field of the response from the previous
	// ListExperiment call or can be omitted when fetching the first page.
	PageToken string `protobuf:"bytes,1,opt,name=page_token,proto3" json:"page_token,omitempty"`
	// The number of experiments to be listed per page. If there are more
	// experiments than this number, the response message will contain a
	// nextPageToken field you can use to fetch the next page.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,proto3" json:"page_size,omitempty"`
	// Can be format of "field_name", "field_name asc" or "field_name desc"
	// Ascending by default.
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,proto3" json:"sort_by,omitempty"`
	// What resource reference to filter on.
	// E.g. If listing tasks for an pipeline run, the query string would be
	// resource_reference_key.type="PIPELINE"&resource_reference_key.id=123
	ResourceReferenceKey *ResourceKey `protobuf:"bytes,4,opt,name=resource_reference_key,proto3" json:"resource_reference_key,omitempty"`
	// A url-encoded, JSON-serialized Filter protocol buffer (see
	// [filter.proto](https://github.com/kubeflow/pipelines/blob/master/backend/api/v1beta1/filter.proto)).
	Filter        string `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	mi := &file_backend_api_v1beta1_task_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_task_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_task_proto_rawDescGZIP(), []int{2}
}

func (x *ListTasksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListTasksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTasksRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListTasksRequest) GetResourceReferenceKey() *ResourceKey {
	if x != nil {
		return x.ResourceReferenceKey
	}
	return nil
}

func (x *ListTasksRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListTasksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of tasks returned.
	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	// The token to list the next page of experiments.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,proto3" json:"next_page_token,omitempty"`
	// The total number of experiments for the given query.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	mi := &file_backend_api_v1beta1_task_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_task_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_task_proto_rawDescGZIP(), []int{3}
}

func (x *ListTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ListTasksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListTasksResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

var File_backend_api_v1beta1_task_proto protoreflect.FileDescriptor

const file_backend_api_v1beta1_task_proto_rawDesc = "" +
	"\n" +
	"\x1ebackend/api/v1beta1/task.proto\x12\x03api\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a,backend/api/v1beta1/resource_reference.proto\"\xb4\x02\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\"\n" +
	"\fpipelineName\x18\x03 \x01(\tR\fpipelineName\x12\x14\n" +
	"\x05runId\x18\x04 \x01(\tR\x05runId\x12(\n" +
	"\x0fmlmdExecutionID\x18\x05 \x01(\tR\x0fmlmdExecutionID\x12:\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\x12<\n" +
	"\vfinished_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vfinished_at\x12 \n" +
	"\vfingerprint\x18\b \x01(\tR\vfingerprint\"2\n" +
	"\x11CreateTaskRequest\x12\x1d\n" +
	"\x04task\x18\x01 \x01(\v2\t.api.TaskR\x04task\"\xcc\x01\n" +
	"\x10ListTasksRequest\x12\x1e\n" +
	"\n" +
	"page_token\x18\x01 \x01(\tR\n" +
	"page_token\x12\x1c\n" +
	"\tpage_size\x18\x02 \x01(\x05R\tpage_size\x12\x18\n" +
	"\asort_by\x18\x03 \x01(\tR\asort_by\x12H\n" +
	"\x16resource_reference_key\x18\x04 \x01(\v2\x10.api.ResourceKeyR\x16resource_reference_key\x12\x16\n" +
	"\x06filter\x18\x05 \x01(\tR\x06filter\"~\n" +
	"\x11ListTasksResponse\x12\x1f\n" +
	"\x05tasks\x18\x01 \x03(\v2\t.api.TaskR\x05tasks\x12(\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\x0fnext_page_token\x12\x1e\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\n" +
	"total_size2\xc0\x01\n" +
	"\vTaskService\x12U\n" +
	"\fCreateTaskV1\x12\x16.api.CreateTaskRequest\x1a\t.api.Task\"\"\x82\xd3\xe4\x93\x02\x1c:\x04task\"\x14/apis/v1alpha1/tasks\x12Z\n" +
	"\vListTasksV1\x12\x15.api.ListTasksRequest\x1a\x16.api.ListTasksResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/apis/v1alpha1/tasksB=Z;github.com/kubeflow/pipelines/backend/api/v1beta1/go_clientb\x06proto3"

var (
	file_backend_api_v1beta1_task_proto_rawDescOnce sync.Once
	file_backend_api_v1beta1_task_proto_rawDescData []byte
)

func file_backend_api_v1beta1_task_proto_rawDescGZIP() []byte {
	file_backend_api_v1beta1_task_proto_rawDescOnce.Do(func() {
		file_backend_api_v1beta1_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backend_api_v1beta1_task_proto_rawDesc), len(file_backend_api_v1beta1_task_proto_rawDesc)))
	})
	return file_backend_api_v1beta1_task_proto_rawDescData
}

var file_backend_api_v1beta1_task_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_backend_api_v1beta1_task_proto_goTypes = []any{
	(*Task)(nil),                  // 0: api.Task
	(*CreateTaskRequest)(nil),     // 1: api.CreateTaskRequest
	(*ListTasksRequest)(nil),      // 2: api.ListTasksRequest
	(*ListTasksResponse)(nil),     // 3: api.ListTasksResponse
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*ResourceKey)(nil),           // 5: api.ResourceKey
}
var file_backend_api_v1beta1_task_proto_depIdxs = []int32{
	4, // 0: api.Task.created_at:type_name -> google.protobuf.Timestamp
	4, // 1: api.Task.finished_at:type_name -> google.protobuf.Timestamp
	0, // 2: api.CreateTaskRequest.task:type_name -> api.Task
	5, // 3: api.ListTasksRequest.resource_reference_key:type_name -> api.ResourceKey
	0, // 4: api.ListTasksResponse.tasks:type_name -> api.Task
	1, // 5: api.TaskService.CreateTaskV1:input_type -> api.CreateTaskRequest
	2, // 6: api.TaskService.ListTasksV1:input_type -> api.ListTasksRequest
	0, // 7: api.TaskService.CreateTaskV1:output_type -> api.Task
	3, // 8: api.TaskService.ListTasksV1:output_type -> api.ListTasksResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_backend_api_v1beta1_task_proto_init() }
func file_backend_api_v1beta1_task_proto_init() {
	if File_backend_api_v1beta1_task_proto != nil {
		return
	}
	file_backend_api_v1beta1_resource_reference_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backend_api_v1beta1_task_proto_rawDesc), len(file_backend_api_v1beta1_task_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_api_v1beta1_task_proto_goTypes,
		DependencyIndexes: file_backend_api_v1beta1_task_proto_depIdxs,
		MessageInfos:      file_backend_api_v1beta1_task_proto_msgTypes,
	}.Build()
	File_backend_api_v1beta1_task_proto = out.File
	file_backend_api_v1beta1_task_proto_goTypes = nil
	file_backend_api_v1beta1_task_proto_depIdxs = nil
}
