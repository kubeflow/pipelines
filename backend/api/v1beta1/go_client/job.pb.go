// Copyright 2018 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: backend/api/v1beta1/job.proto

package go_client

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Required input.
type Job_Mode int32

const (
	Job_UNKNOWN_MODE Job_Mode = 0
	Job_ENABLED      Job_Mode = 1
	// The job won't schedule any run if disabled.
	Job_DISABLED Job_Mode = 2
)

// Enum value maps for Job_Mode.
var (
	Job_Mode_name = map[int32]string{
		0: "UNKNOWN_MODE",
		1: "ENABLED",
		2: "DISABLED",
	}
	Job_Mode_value = map[string]int32{
		"UNKNOWN_MODE": 0,
		"ENABLED":      1,
		"DISABLED":     2,
	}
)

func (x Job_Mode) Enum() *Job_Mode {
	p := new(Job_Mode)
	*p = x
	return p
}

func (x Job_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Job_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_api_v1beta1_job_proto_enumTypes[0].Descriptor()
}

func (Job_Mode) Type() protoreflect.EnumType {
	return &file_backend_api_v1beta1_job_proto_enumTypes[0]
}

func (x Job_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Job_Mode.Descriptor instead.
func (Job_Mode) EnumDescriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{10, 0}
}

type CreateJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The job to be created
	Job           *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateJobRequest) Reset() {
	*x = CreateJobRequest{}
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobRequest) ProtoMessage() {}

func (x *CreateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobRequest.ProtoReflect.Descriptor instead.
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{0}
}

func (x *CreateJobRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type GetJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the job to be retrieved
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobRequest) Reset() {
	*x = GetJobRequest{}
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRequest) ProtoMessage() {}

func (x *GetJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRequest.ProtoReflect.Descriptor instead.
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{1}
}

func (x *GetJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListJobsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A page token to request the next page of results. The token is acquried
	// from the nextPageToken field of the response from the previous
	// ListJobs call or can be omitted when fetching the first page.
	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The number of jobs to be listed per page. If there are more jobs than this
	// number, the response message will contain a nextPageToken field you can use
	// to fetch the next page.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Can be format of "field_name", "field_name asc" or "field_name desc".
	// Ascending by default.
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	// What resource reference to filter on.
	// E.g. If listing job for an experiment, the query string would be
	// resource_reference_key.type=EXPERIMENT&resource_reference_key.id=123
	ResourceReferenceKey *ResourceKey `protobuf:"bytes,4,opt,name=resource_reference_key,json=resourceReferenceKey,proto3" json:"resource_reference_key,omitempty"`
	// A url-encoded, JSON-serialized Filter protocol buffer (see
	// [filter.proto](https://github.com/kubeflow/pipelines/blob/master/backend/api/v1beta1/filter.proto)).
	Filter        string `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsRequest) Reset() {
	*x = ListJobsRequest{}
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest) ProtoMessage() {}

func (x *ListJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsRequest.ProtoReflect.Descriptor instead.
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{2}
}

func (x *ListJobsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListJobsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListJobsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListJobsRequest) GetResourceReferenceKey() *ResourceKey {
	if x != nil {
		return x.ResourceReferenceKey
	}
	return nil
}

func (x *ListJobsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListJobsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of jobs returned.
	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	// The total number of jobs for the given query.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The token to list the next page of jobs.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsResponse) Reset() {
	*x = ListJobsResponse{}
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResponse) ProtoMessage() {}

func (x *ListJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsResponse.ProtoReflect.Descriptor instead.
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{3}
}

func (x *ListJobsResponse) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *ListJobsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListJobsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the job to be deleted
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteJobRequest) Reset() {
	*x = DeleteJobRequest{}
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobRequest) ProtoMessage() {}

func (x *DeleteJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobRequest.ProtoReflect.Descriptor instead.
func (*DeleteJobRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EnableJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the job to be enabled
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableJobRequest) Reset() {
	*x = EnableJobRequest{}
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableJobRequest) ProtoMessage() {}

func (x *EnableJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableJobRequest.ProtoReflect.Descriptor instead.
func (*EnableJobRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{5}
}

func (x *EnableJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DisableJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the job to be disabled
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableJobRequest) Reset() {
	*x = DisableJobRequest{}
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableJobRequest) ProtoMessage() {}

func (x *DisableJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableJobRequest.ProtoReflect.Descriptor instead.
func (*DisableJobRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{6}
}

func (x *DisableJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// CronSchedule allow scheduling the job with unix-like cron
type CronSchedule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The start time of the cron job
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// The end time of the cron job
	EndTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// The cron string. For details how to compose a cron, visit
	// ttps://en.wikipedia.org/wiki/Cron
	Cron          string `protobuf:"bytes,3,opt,name=cron,proto3" json:"cron,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CronSchedule) Reset() {
	*x = CronSchedule{}
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CronSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronSchedule) ProtoMessage() {}

func (x *CronSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronSchedule.ProtoReflect.Descriptor instead.
func (*CronSchedule) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{7}
}

func (x *CronSchedule) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CronSchedule) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CronSchedule) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

// PeriodicSchedule allow scheduling the job periodically with certain interval
type PeriodicSchedule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The start time of the periodic job
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// The end time of the periodic job
	EndTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// The time interval between the starting time of consecutive jobs
	IntervalSecond int64 `protobuf:"varint,3,opt,name=interval_second,json=intervalSecond,proto3" json:"interval_second,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PeriodicSchedule) Reset() {
	*x = PeriodicSchedule{}
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeriodicSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodicSchedule) ProtoMessage() {}

func (x *PeriodicSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodicSchedule.ProtoReflect.Descriptor instead.
func (*PeriodicSchedule) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{8}
}

func (x *PeriodicSchedule) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *PeriodicSchedule) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *PeriodicSchedule) GetIntervalSecond() int64 {
	if x != nil {
		return x.IntervalSecond
	}
	return 0
}

// Trigger defines what starts a pipeline run.
type Trigger struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Trigger:
	//
	//	*Trigger_CronSchedule
	//	*Trigger_PeriodicSchedule
	Trigger       isTrigger_Trigger `protobuf_oneof:"trigger"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trigger) Reset() {
	*x = Trigger{}
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trigger) ProtoMessage() {}

func (x *Trigger) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trigger.ProtoReflect.Descriptor instead.
func (*Trigger) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{9}
}

func (x *Trigger) GetTrigger() isTrigger_Trigger {
	if x != nil {
		return x.Trigger
	}
	return nil
}

func (x *Trigger) GetCronSchedule() *CronSchedule {
	if x != nil {
		if x, ok := x.Trigger.(*Trigger_CronSchedule); ok {
			return x.CronSchedule
		}
	}
	return nil
}

func (x *Trigger) GetPeriodicSchedule() *PeriodicSchedule {
	if x != nil {
		if x, ok := x.Trigger.(*Trigger_PeriodicSchedule); ok {
			return x.PeriodicSchedule
		}
	}
	return nil
}

type isTrigger_Trigger interface {
	isTrigger_Trigger()
}

type Trigger_CronSchedule struct {
	CronSchedule *CronSchedule `protobuf:"bytes,1,opt,name=cron_schedule,json=cronSchedule,proto3,oneof"`
}

type Trigger_PeriodicSchedule struct {
	PeriodicSchedule *PeriodicSchedule `protobuf:"bytes,2,opt,name=periodic_schedule,json=periodicSchedule,proto3,oneof"`
}

func (*Trigger_CronSchedule) isTrigger_Trigger() {}

func (*Trigger_PeriodicSchedule) isTrigger_Trigger() {}

type Job struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output. Unique run ID. Generated by API server.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required input field. Job name provided by user. Not unique.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional input field. Describing the purpose of the job
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional input field.
	// Describing what the pipeline manifest and parameters to use
	// for the scheduled job. If unset, fetch the pipline_spec at runtime.
	PipelineSpec *PipelineSpec `protobuf:"bytes,4,opt,name=pipeline_spec,json=pipelineSpec,proto3" json:"pipeline_spec,omitempty"`
	// Optional input field. Specify which resource this job belongs to.
	ResourceReferences []*ResourceReference `protobuf:"bytes,5,rep,name=resource_references,json=resourceReferences,proto3" json:"resource_references,omitempty"`
	// Optional input field. Specify which Kubernetes service account this job uses.
	ServiceAccount string `protobuf:"bytes,18,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	// Required input field.
	// Specify how many runs can be executed concurrently. Rage [1-10]
	MaxConcurrency int64 `protobuf:"varint,6,opt,name=max_concurrency,json=maxConcurrency,proto3" json:"max_concurrency,omitempty"`
	// Required input field.
	// Specify how a run is triggered. Support cron mode or periodic mode.
	Trigger *Trigger `protobuf:"bytes,7,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Mode    Job_Mode `protobuf:"varint,8,opt,name=mode,proto3,enum=api.Job_Mode" json:"mode,omitempty"`
	// Output. The time this job is created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Output. The last time this job is updated.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Output. The status of the job.
	// One of [Enable, Disable, Error]
	Status string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// In case any error happens retrieving a job field, only job ID
	// and the error message is returned. Client has the flexibility of choosing
	// how to handle error. This is especially useful during listing call.
	Error string `protobuf:"bytes,12,opt,name=error,proto3" json:"error,omitempty"`
	// Input. Whether the job is enabled or not.
	Enabled bool `protobuf:"varint,16,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Optional input field. Whether the job should catch up if behind schedule.
	// If true, the job will only schedule the latest interval if behind schedule.
	// If false, the job will catch up on each past interval.
	NoCatchup     bool `protobuf:"varint,17,opt,name=no_catchup,json=noCatchup,proto3" json:"no_catchup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_job_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_job_proto_rawDescGZIP(), []int{10}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Job) GetPipelineSpec() *PipelineSpec {
	if x != nil {
		return x.PipelineSpec
	}
	return nil
}

func (x *Job) GetResourceReferences() []*ResourceReference {
	if x != nil {
		return x.ResourceReferences
	}
	return nil
}

func (x *Job) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *Job) GetMaxConcurrency() int64 {
	if x != nil {
		return x.MaxConcurrency
	}
	return 0
}

func (x *Job) GetTrigger() *Trigger {
	if x != nil {
		return x.Trigger
	}
	return nil
}

func (x *Job) GetMode() Job_Mode {
	if x != nil {
		return x.Mode
	}
	return Job_UNKNOWN_MODE
}

func (x *Job) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Job) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Job) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Job) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Job) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Job) GetNoCatchup() bool {
	if x != nil {
		return x.NoCatchup
	}
	return false
}

var File_backend_api_v1beta1_job_proto protoreflect.FileDescriptor

const file_backend_api_v1beta1_job_proto_rawDesc = "" +
	"\n" +
	"\x1dbackend/api/v1beta1/job.proto\x12\x03api\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a'backend/api/v1beta1/pipeline_spec.proto\x1a,backend/api/v1beta1/resource_reference.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\".\n" +
	"\x10CreateJobRequest\x12\x1a\n" +
	"\x03job\x18\x01 \x01(\v2\b.api.JobR\x03job\"\x1f\n" +
	"\rGetJobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xc6\x01\n" +
	"\x0fListJobsRequest\x12\x1d\n" +
	"\n" +
	"page_token\x18\x01 \x01(\tR\tpageToken\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\x03 \x01(\tR\x06sortBy\x12F\n" +
	"\x16resource_reference_key\x18\x04 \x01(\v2\x10.api.ResourceKeyR\x14resourceReferenceKey\x12\x16\n" +
	"\x06filter\x18\x05 \x01(\tR\x06filter\"w\n" +
	"\x10ListJobsResponse\x12\x1c\n" +
	"\x04jobs\x18\x01 \x03(\v2\b.api.JobR\x04jobs\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\"\n" +
	"\x10DeleteJobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\"\n" +
	"\x10EnableJobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"#\n" +
	"\x11DisableJobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x94\x01\n" +
	"\fCronSchedule\x129\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x12\n" +
	"\x04cron\x18\x03 \x01(\tR\x04cron\"\xad\x01\n" +
	"\x10PeriodicSchedule\x129\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12'\n" +
	"\x0finterval_second\x18\x03 \x01(\x03R\x0eintervalSecond\"\x94\x01\n" +
	"\aTrigger\x128\n" +
	"\rcron_schedule\x18\x01 \x01(\v2\x11.api.CronScheduleH\x00R\fcronSchedule\x12D\n" +
	"\x11periodic_schedule\x18\x02 \x01(\v2\x15.api.PeriodicScheduleH\x00R\x10periodicScheduleB\t\n" +
	"\atrigger\"\xfb\x04\n" +
	"\x03Job\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x126\n" +
	"\rpipeline_spec\x18\x04 \x01(\v2\x11.api.PipelineSpecR\fpipelineSpec\x12G\n" +
	"\x13resource_references\x18\x05 \x03(\v2\x16.api.ResourceReferenceR\x12resourceReferences\x12'\n" +
	"\x0fservice_account\x18\x12 \x01(\tR\x0eserviceAccount\x12'\n" +
	"\x0fmax_concurrency\x18\x06 \x01(\x03R\x0emaxConcurrency\x12&\n" +
	"\atrigger\x18\a \x01(\v2\f.api.TriggerR\atrigger\x12!\n" +
	"\x04mode\x18\b \x01(\x0e2\r.api.Job.ModeR\x04mode\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x16\n" +
	"\x06status\x18\v \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\f \x01(\tR\x05error\x12\x18\n" +
	"\aenabled\x18\x10 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"no_catchup\x18\x11 \x01(\bR\tnoCatchup\"3\n" +
	"\x04Mode\x12\x10\n" +
	"\fUNKNOWN_MODE\x10\x00\x12\v\n" +
	"\aENABLED\x10\x01\x12\f\n" +
	"\bDISABLED\x10\x022\xa1\x04\n" +
	"\n" +
	"JobService\x12M\n" +
	"\tCreateJob\x12\x15.api.CreateJobRequest\x1a\b.api.Job\"\x1f\x82\xd3\xe4\x93\x02\x19:\x03job\"\x12/apis/v1beta1/jobs\x12G\n" +
	"\x06GetJob\x12\x12.api.GetJobRequest\x1a\b.api.Job\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/apis/v1beta1/jobs/{id}\x12S\n" +
	"\bListJobs\x12\x14.api.ListJobsRequest\x1a\x15.api.ListJobsResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/apis/v1beta1/jobs\x12b\n" +
	"\tEnableJob\x12\x15.api.EnableJobRequest\x1a\x16.google.protobuf.Empty\"&\x82\xd3\xe4\x93\x02 \"\x1e/apis/v1beta1/jobs/{id}/enable\x12e\n" +
	"\n" +
	"DisableJob\x12\x16.api.DisableJobRequest\x1a\x16.google.protobuf.Empty\"'\x82\xd3\xe4\x93\x02!\"\x1f/apis/v1beta1/jobs/{id}/disable\x12[\n" +
	"\tDeleteJob\x12\x15.api.DeleteJobRequest\x1a\x16.google.protobuf.Empty\"\x1f\x82\xd3\xe4\x93\x02\x19*\x17/apis/v1beta1/jobs/{id}B\x91\x01\x92AQ*\x02\x01\x02R\x1c\n" +
	"\adefault\x12\x11\x12\x0f\n" +
	"\r\x1a\v.api.StatusZ\x1f\n" +
	"\x1d\n" +
	"\x06Bearer\x12\x13\b\x02\x1a\rauthorization \x02b\f\n" +
	"\n" +
	"\n" +
	"\x06Bearer\x12\x00Z;github.com/kubeflow/pipelines/backend/api/v1beta1/go_clientb\x06proto3"

var (
	file_backend_api_v1beta1_job_proto_rawDescOnce sync.Once
	file_backend_api_v1beta1_job_proto_rawDescData []byte
)

func file_backend_api_v1beta1_job_proto_rawDescGZIP() []byte {
	file_backend_api_v1beta1_job_proto_rawDescOnce.Do(func() {
		file_backend_api_v1beta1_job_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backend_api_v1beta1_job_proto_rawDesc), len(file_backend_api_v1beta1_job_proto_rawDesc)))
	})
	return file_backend_api_v1beta1_job_proto_rawDescData
}

var file_backend_api_v1beta1_job_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_backend_api_v1beta1_job_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_backend_api_v1beta1_job_proto_goTypes = []any{
	(Job_Mode)(0),                 // 0: api.Job.Mode
	(*CreateJobRequest)(nil),      // 1: api.CreateJobRequest
	(*GetJobRequest)(nil),         // 2: api.GetJobRequest
	(*ListJobsRequest)(nil),       // 3: api.ListJobsRequest
	(*ListJobsResponse)(nil),      // 4: api.ListJobsResponse
	(*DeleteJobRequest)(nil),      // 5: api.DeleteJobRequest
	(*EnableJobRequest)(nil),      // 6: api.EnableJobRequest
	(*DisableJobRequest)(nil),     // 7: api.DisableJobRequest
	(*CronSchedule)(nil),          // 8: api.CronSchedule
	(*PeriodicSchedule)(nil),      // 9: api.PeriodicSchedule
	(*Trigger)(nil),               // 10: api.Trigger
	(*Job)(nil),                   // 11: api.Job
	(*ResourceKey)(nil),           // 12: api.ResourceKey
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
	(*PipelineSpec)(nil),          // 14: api.PipelineSpec
	(*ResourceReference)(nil),     // 15: api.ResourceReference
	(*emptypb.Empty)(nil),         // 16: google.protobuf.Empty
}
var file_backend_api_v1beta1_job_proto_depIdxs = []int32{
	11, // 0: api.CreateJobRequest.job:type_name -> api.Job
	12, // 1: api.ListJobsRequest.resource_reference_key:type_name -> api.ResourceKey
	11, // 2: api.ListJobsResponse.jobs:type_name -> api.Job
	13, // 3: api.CronSchedule.start_time:type_name -> google.protobuf.Timestamp
	13, // 4: api.CronSchedule.end_time:type_name -> google.protobuf.Timestamp
	13, // 5: api.PeriodicSchedule.start_time:type_name -> google.protobuf.Timestamp
	13, // 6: api.PeriodicSchedule.end_time:type_name -> google.protobuf.Timestamp
	8,  // 7: api.Trigger.cron_schedule:type_name -> api.CronSchedule
	9,  // 8: api.Trigger.periodic_schedule:type_name -> api.PeriodicSchedule
	14, // 9: api.Job.pipeline_spec:type_name -> api.PipelineSpec
	15, // 10: api.Job.resource_references:type_name -> api.ResourceReference
	10, // 11: api.Job.trigger:type_name -> api.Trigger
	0,  // 12: api.Job.mode:type_name -> api.Job.Mode
	13, // 13: api.Job.created_at:type_name -> google.protobuf.Timestamp
	13, // 14: api.Job.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 15: api.JobService.CreateJob:input_type -> api.CreateJobRequest
	2,  // 16: api.JobService.GetJob:input_type -> api.GetJobRequest
	3,  // 17: api.JobService.ListJobs:input_type -> api.ListJobsRequest
	6,  // 18: api.JobService.EnableJob:input_type -> api.EnableJobRequest
	7,  // 19: api.JobService.DisableJob:input_type -> api.DisableJobRequest
	5,  // 20: api.JobService.DeleteJob:input_type -> api.DeleteJobRequest
	11, // 21: api.JobService.CreateJob:output_type -> api.Job
	11, // 22: api.JobService.GetJob:output_type -> api.Job
	4,  // 23: api.JobService.ListJobs:output_type -> api.ListJobsResponse
	16, // 24: api.JobService.EnableJob:output_type -> google.protobuf.Empty
	16, // 25: api.JobService.DisableJob:output_type -> google.protobuf.Empty
	16, // 26: api.JobService.DeleteJob:output_type -> google.protobuf.Empty
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_backend_api_v1beta1_job_proto_init() }
func file_backend_api_v1beta1_job_proto_init() {
	if File_backend_api_v1beta1_job_proto != nil {
		return
	}
	file_backend_api_v1beta1_pipeline_spec_proto_init()
	file_backend_api_v1beta1_resource_reference_proto_init()
	file_backend_api_v1beta1_job_proto_msgTypes[9].OneofWrappers = []any{
		(*Trigger_CronSchedule)(nil),
		(*Trigger_PeriodicSchedule)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backend_api_v1beta1_job_proto_rawDesc), len(file_backend_api_v1beta1_job_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_api_v1beta1_job_proto_goTypes,
		DependencyIndexes: file_backend_api_v1beta1_job_proto_depIdxs,
		EnumInfos:         file_backend_api_v1beta1_job_proto_enumTypes,
		MessageInfos:      file_backend_api_v1beta1_job_proto_msgTypes,
	}.Build()
	File_backend_api_v1beta1_job_proto = out.File
	file_backend_api_v1beta1_job_proto_goTypes = nil
	file_backend_api_v1beta1_job_proto_depIdxs = nil
}
