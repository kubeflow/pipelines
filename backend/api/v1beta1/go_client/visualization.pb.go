// Copyright 2019 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: backend/api/v1beta1/visualization.proto

package go_client

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of visualization to be generated.
// This is required when creating the pipeline through CreateVisualization
// API.
type Visualization_Type int32

const (
	Visualization_ROC_CURVE Visualization_Type = 0
	Visualization_TFDV      Visualization_Type = 1
	Visualization_TFMA      Visualization_Type = 2
	Visualization_TABLE     Visualization_Type = 3
	Visualization_CUSTOM    Visualization_Type = 4
)

// Enum value maps for Visualization_Type.
var (
	Visualization_Type_name = map[int32]string{
		0: "ROC_CURVE",
		1: "TFDV",
		2: "TFMA",
		3: "TABLE",
		4: "CUSTOM",
	}
	Visualization_Type_value = map[string]int32{
		"ROC_CURVE": 0,
		"TFDV":      1,
		"TFMA":      2,
		"TABLE":     3,
		"CUSTOM":    4,
	}
)

func (x Visualization_Type) Enum() *Visualization_Type {
	p := new(Visualization_Type)
	*p = x
	return p
}

func (x Visualization_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Visualization_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_api_v1beta1_visualization_proto_enumTypes[0].Descriptor()
}

func (Visualization_Type) Type() protoreflect.EnumType {
	return &file_backend_api_v1beta1_visualization_proto_enumTypes[0]
}

func (x Visualization_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Visualization_Type.Descriptor instead.
func (Visualization_Type) EnumDescriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_visualization_proto_rawDescGZIP(), []int{1, 0}
}

// Create visualization by providing the type of visualization that is desired
// and input data paths. Input dat paths are assumed to be unique and are used
// for determining output path.
type CreateVisualizationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Visualization *Visualization         `protobuf:"bytes,1,opt,name=visualization,proto3" json:"visualization,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVisualizationRequest) Reset() {
	*x = CreateVisualizationRequest{}
	mi := &file_backend_api_v1beta1_visualization_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVisualizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVisualizationRequest) ProtoMessage() {}

func (x *CreateVisualizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_visualization_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVisualizationRequest.ProtoReflect.Descriptor instead.
func (*CreateVisualizationRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_visualization_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVisualizationRequest) GetVisualization() *Visualization {
	if x != nil {
		return x.Visualization
	}
	return nil
}

func (x *CreateVisualizationRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type Visualization struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  Visualization_Type     `protobuf:"varint,1,opt,name=type,proto3,enum=api.Visualization_Type" json:"type,omitempty"`
	// Path pattern of input data to be used during generation of visualizations.
	// This is required when creating the pipeline through CreateVisualization
	// API.
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// Variables to be used during generation of a visualization.
	// This should be provided as a JSON string.
	// This is required when creating the pipeline through CreateVisualization
	// API.
	Arguments string `protobuf:"bytes,3,opt,name=arguments,proto3" json:"arguments,omitempty"`
	// Output. Generated visualization html.
	Html string `protobuf:"bytes,4,opt,name=html,proto3" json:"html,omitempty"`
	// In case any error happens when generating visualizations, only
	// visualization ID and the error message are returned. Client has the
	// flexibility of choosing how to handle the error.
	Error         string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Visualization) Reset() {
	*x = Visualization{}
	mi := &file_backend_api_v1beta1_visualization_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Visualization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Visualization) ProtoMessage() {}

func (x *Visualization) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_visualization_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Visualization.ProtoReflect.Descriptor instead.
func (*Visualization) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_visualization_proto_rawDescGZIP(), []int{1}
}

func (x *Visualization) GetType() Visualization_Type {
	if x != nil {
		return x.Type
	}
	return Visualization_ROC_CURVE
}

func (x *Visualization) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Visualization) GetArguments() string {
	if x != nil {
		return x.Arguments
	}
	return ""
}

func (x *Visualization) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *Visualization) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_backend_api_v1beta1_visualization_proto protoreflect.FileDescriptor

const file_backend_api_v1beta1_visualization_proto_rawDesc = "" +
	"\n" +
	"'backend/api/v1beta1/visualization.proto\x12\x03api\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"t\n" +
	"\x1aCreateVisualizationRequest\x128\n" +
	"\rvisualization\x18\x01 \x01(\v2\x12.api.VisualizationR\rvisualization\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"\xde\x01\n" +
	"\rVisualization\x12+\n" +
	"\x04type\x18\x01 \x01(\x0e2\x17.api.Visualization.TypeR\x04type\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x1c\n" +
	"\targuments\x18\x03 \x01(\tR\targuments\x12\x12\n" +
	"\x04html\x18\x04 \x01(\tR\x04html\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\"@\n" +
	"\x04Type\x12\r\n" +
	"\tROC_CURVE\x10\x00\x12\b\n" +
	"\x04TFDV\x10\x01\x12\b\n" +
	"\x04TFMA\x10\x02\x12\t\n" +
	"\x05TABLE\x10\x03\x12\n" +
	"\n" +
	"\x06CUSTOM\x10\x042\xa6\x01\n" +
	"\x14VisualizationService\x12\x8d\x01\n" +
	"\x15CreateVisualizationV1\x12\x1f.api.CreateVisualizationRequest\x1a\x12.api.Visualization\"?\x82\xd3\xe4\x93\x029:\rvisualization\"(/apis/v1beta1/visualizations/{namespace}B\x91\x01\x92AQ*\x02\x01\x02R\x1c\n" +
	"\adefault\x12\x11\x12\x0f\n" +
	"\r\x1a\v.api.StatusZ\x1f\n" +
	"\x1d\n" +
	"\x06Bearer\x12\x13\b\x02\x1a\rauthorization \x02b\f\n" +
	"\n" +
	"\n" +
	"\x06Bearer\x12\x00Z;github.com/kubeflow/pipelines/backend/api/v1beta1/go_clientb\x06proto3"

var (
	file_backend_api_v1beta1_visualization_proto_rawDescOnce sync.Once
	file_backend_api_v1beta1_visualization_proto_rawDescData []byte
)

func file_backend_api_v1beta1_visualization_proto_rawDescGZIP() []byte {
	file_backend_api_v1beta1_visualization_proto_rawDescOnce.Do(func() {
		file_backend_api_v1beta1_visualization_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backend_api_v1beta1_visualization_proto_rawDesc), len(file_backend_api_v1beta1_visualization_proto_rawDesc)))
	})
	return file_backend_api_v1beta1_visualization_proto_rawDescData
}

var file_backend_api_v1beta1_visualization_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_backend_api_v1beta1_visualization_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_backend_api_v1beta1_visualization_proto_goTypes = []any{
	(Visualization_Type)(0),            // 0: api.Visualization.Type
	(*CreateVisualizationRequest)(nil), // 1: api.CreateVisualizationRequest
	(*Visualization)(nil),              // 2: api.Visualization
}
var file_backend_api_v1beta1_visualization_proto_depIdxs = []int32{
	2, // 0: api.CreateVisualizationRequest.visualization:type_name -> api.Visualization
	0, // 1: api.Visualization.type:type_name -> api.Visualization.Type
	1, // 2: api.VisualizationService.CreateVisualizationV1:input_type -> api.CreateVisualizationRequest
	2, // 3: api.VisualizationService.CreateVisualizationV1:output_type -> api.Visualization
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_backend_api_v1beta1_visualization_proto_init() }
func file_backend_api_v1beta1_visualization_proto_init() {
	if File_backend_api_v1beta1_visualization_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backend_api_v1beta1_visualization_proto_rawDesc), len(file_backend_api_v1beta1_visualization_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_api_v1beta1_visualization_proto_goTypes,
		DependencyIndexes: file_backend_api_v1beta1_visualization_proto_depIdxs,
		EnumInfos:         file_backend_api_v1beta1_visualization_proto_enumTypes,
		MessageInfos:      file_backend_api_v1beta1_visualization_proto_msgTypes,
	}.Build()
	File_backend_api_v1beta1_visualization_proto = out.File
	file_backend_api_v1beta1_visualization_proto_goTypes = nil
	file_backend_api_v1beta1_visualization_proto_depIdxs = nil
}
