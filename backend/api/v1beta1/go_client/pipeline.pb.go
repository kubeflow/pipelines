// Copyright 2018 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: backend/api/v1beta1/pipeline.proto

package go_client

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Url struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// URL of the pipeline definition or the pipeline version definition.
	PipelineUrl   string `protobuf:"bytes,1,opt,name=pipeline_url,json=pipelineUrl,proto3" json:"pipeline_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Url) Reset() {
	*x = Url{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Url) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Url) ProtoMessage() {}

func (x *Url) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Url.ProtoReflect.Descriptor instead.
func (*Url) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{0}
}

func (x *Url) GetPipelineUrl() string {
	if x != nil {
		return x.PipelineUrl
	}
	return ""
}

// Create pipeline by providing an URL pointing to the pipeline file,
// and optionally a pipeline name. If name is not provided, file name is used as
// pipeline name by default. Maximum size of 32MB is supported.
type CreatePipelineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pipeline      *Pipeline              `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePipelineRequest) Reset() {
	*x = CreatePipelineRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineRequest) ProtoMessage() {}

func (x *CreatePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineRequest.ProtoReflect.Descriptor instead.
func (*CreatePipelineRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePipelineRequest) GetPipeline() *Pipeline {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

type UpdatePipelineDefaultVersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the pipeline to be updated.
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// The ID of the default version.
	VersionId     string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePipelineDefaultVersionRequest) Reset() {
	*x = UpdatePipelineDefaultVersionRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePipelineDefaultVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePipelineDefaultVersionRequest) ProtoMessage() {}

func (x *UpdatePipelineDefaultVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePipelineDefaultVersionRequest.ProtoReflect.Descriptor instead.
func (*UpdatePipelineDefaultVersionRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePipelineDefaultVersionRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *UpdatePipelineDefaultVersionRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type GetPipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the pipeline to be retrieved.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPipelineRequest) Reset() {
	*x = GetPipelineRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineRequest) ProtoMessage() {}

func (x *GetPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{3}
}

func (x *GetPipelineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListPipelinesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A page token to request the next page of results. The token is acquried
	// from the nextPageToken field of the response from the previous
	// ListPipelines call.
	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The number of pipelines to be listed per page. If there are more pipelines
	// than this number, the response message will contain a valid value in the
	// nextPageToken field.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Can be format of "field_name", "field_name asc" or "field_name desc"
	// Ascending by default.
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	// A url-encoded, JSON-serialized Filter protocol buffer (see
	// [filter.proto](https://github.com/kubeflow/pipelines/blob/master/backend/api/v1beta1/filter.proto)).
	Filter string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	// What resource reference to filter on.
	// For Pipeline, the only valid resource type is Namespace. An sample query string could be
	// resource_reference_key.type=NAMESPACE&resource_reference_key.id=ns1
	ResourceReferenceKey *ResourceKey `protobuf:"bytes,5,opt,name=resource_reference_key,json=resourceReferenceKey,proto3" json:"resource_reference_key,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListPipelinesRequest) Reset() {
	*x = ListPipelinesRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelinesRequest) ProtoMessage() {}

func (x *ListPipelinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelinesRequest.ProtoReflect.Descriptor instead.
func (*ListPipelinesRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{4}
}

func (x *ListPipelinesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListPipelinesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPipelinesRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListPipelinesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListPipelinesRequest) GetResourceReferenceKey() *ResourceKey {
	if x != nil {
		return x.ResourceReferenceKey
	}
	return nil
}

type ListPipelinesResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Pipelines []*Pipeline            `protobuf:"bytes,1,rep,name=pipelines,proto3" json:"pipelines,omitempty"`
	// The total number of pipelines for the given query.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The token to list the next page of pipelines.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPipelinesResponse) Reset() {
	*x = ListPipelinesResponse{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelinesResponse) ProtoMessage() {}

func (x *ListPipelinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelinesResponse.ProtoReflect.Descriptor instead.
func (*ListPipelinesResponse) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{5}
}

func (x *ListPipelinesResponse) GetPipelines() []*Pipeline {
	if x != nil {
		return x.Pipelines
	}
	return nil
}

func (x *ListPipelinesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListPipelinesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetPipelineByNameRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Name of the pipeline to be retrieved.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The Namespace the pipeline belongs to.
	// In the case of shared pipelines and KFPipeline standalone installation,
	// the pipeline name is the only needed field for unique resource lookup (namespace is not required).
	// In those case, please provide hyphen (dash character, "-").
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPipelineByNameRequest) Reset() {
	*x = GetPipelineByNameRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPipelineByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineByNameRequest) ProtoMessage() {}

func (x *GetPipelineByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineByNameRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineByNameRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{6}
}

func (x *GetPipelineByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPipelineByNameRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type DeletePipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the pipeline to be deleted.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePipelineRequest) Reset() {
	*x = DeletePipelineRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePipelineRequest) ProtoMessage() {}

func (x *DeletePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePipelineRequest.ProtoReflect.Descriptor instead.
func (*DeletePipelineRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePipelineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the pipeline whose template is to be retrieved.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemplateRequest) Reset() {
	*x = GetTemplateRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateRequest) ProtoMessage() {}

func (x *GetTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{8}
}

func (x *GetTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTemplateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The template of the pipeline specified in a GetTemplate request, or of a
	// pipeline version specified in a GetPipelinesVersionTemplate request.
	Template      string `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemplateResponse) Reset() {
	*x = GetTemplateResponse{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateResponse) ProtoMessage() {}

func (x *GetTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetTemplateResponse) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{9}
}

func (x *GetTemplateResponse) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

type GetPipelineVersionTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the pipeline version whose template is to be retrieved.
	VersionId     string `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPipelineVersionTemplateRequest) Reset() {
	*x = GetPipelineVersionTemplateRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPipelineVersionTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineVersionTemplateRequest) ProtoMessage() {}

func (x *GetPipelineVersionTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineVersionTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineVersionTemplateRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{10}
}

func (x *GetPipelineVersionTemplateRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type CreatePipelineVersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ResourceReference inside PipelineVersion specifies the pipeline that this
	// version belongs to.
	Version       *PipelineVersion `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePipelineVersionRequest) Reset() {
	*x = CreatePipelineVersionRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePipelineVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineVersionRequest) ProtoMessage() {}

func (x *CreatePipelineVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineVersionRequest.ProtoReflect.Descriptor instead.
func (*CreatePipelineVersionRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePipelineVersionRequest) GetVersion() *PipelineVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

type GetPipelineVersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the pipeline version to be retrieved.
	VersionId     string `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPipelineVersionRequest) Reset() {
	*x = GetPipelineVersionRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPipelineVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineVersionRequest) ProtoMessage() {}

func (x *GetPipelineVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineVersionRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineVersionRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{12}
}

func (x *GetPipelineVersionRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type ListPipelineVersionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ResourceKey specifies the pipeline whose versions are to be listed.
	ResourceKey *ResourceKey `protobuf:"bytes,1,opt,name=resource_key,json=resourceKey,proto3" json:"resource_key,omitempty"`
	// The number of pipeline versions to be listed per page. If there are more
	// pipeline versions than this number, the response message will contain a
	// nextPageToken field you can use to fetch the next page.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token to request the next page of results. The token is acquried
	// from the nextPageToken field of the response from the previous
	// ListPipelineVersions call or can be omitted when fetching the first page.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Can be format of "field_name", "field_name asc" or "field_name desc"
	// Ascending by default.
	SortBy string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	// A base-64 encoded, JSON-serialized Filter protocol buffer (see
	// filter.proto).
	Filter        string `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPipelineVersionsRequest) Reset() {
	*x = ListPipelineVersionsRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelineVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelineVersionsRequest) ProtoMessage() {}

func (x *ListPipelineVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelineVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListPipelineVersionsRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{13}
}

func (x *ListPipelineVersionsRequest) GetResourceKey() *ResourceKey {
	if x != nil {
		return x.ResourceKey
	}
	return nil
}

func (x *ListPipelineVersionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPipelineVersionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListPipelineVersionsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListPipelineVersionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListPipelineVersionsResponse struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Versions []*PipelineVersion     `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	// The token to list the next page of pipeline versions.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of pipeline versions for the given query.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPipelineVersionsResponse) Reset() {
	*x = ListPipelineVersionsResponse{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelineVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelineVersionsResponse) ProtoMessage() {}

func (x *ListPipelineVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelineVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListPipelineVersionsResponse) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{14}
}

func (x *ListPipelineVersionsResponse) GetVersions() []*PipelineVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *ListPipelineVersionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListPipelineVersionsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type DeletePipelineVersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the pipeline version to be deleted.
	VersionId     string `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePipelineVersionRequest) Reset() {
	*x = DeletePipelineVersionRequest{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePipelineVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePipelineVersionRequest) ProtoMessage() {}

func (x *DeletePipelineVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePipelineVersionRequest.ProtoReflect.Descriptor instead.
func (*DeletePipelineVersionRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{15}
}

func (x *DeletePipelineVersionRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type Pipeline struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output. Unique pipeline ID. Generated by API server.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Output. The time this pipeline is created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Optional input field. Pipeline name provided by user. If not specified,
	// file name is used as pipeline name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Optional input field. Describing the purpose of the job.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Output. The input parameters for this pipeline.
	// TODO(jingzhang36): replace this parameters field with the parameters field
	// inside PipelineVersion when all usage of the former has been changed to use
	// the latter.
	Parameters []*Parameter `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// Input. Required. The URL to the source of the pipeline.
	// This is required when creating the pipeine through CreatePipeline API.
	Url *Url `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	// In case any error happens retrieving a pipeline field, only pipeline ID
	// and the error message is returned. Client has the flexibility of choosing
	// how to handle error. This is especially useful during listing call.
	Error string `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	// Output only. The default version of the pipeline. As of now, the latest
	// version is used as default. (In the future, if desired by customers, we
	// can allow them to set default version.)
	DefaultVersion *PipelineVersion `protobuf:"bytes,8,opt,name=default_version,json=defaultVersion,proto3" json:"default_version,omitempty"`
	// Input field. Specify which resource this pipeline belongs to.
	// For Pipeline, the only valid resource reference is a single Namespace.
	ResourceReferences []*ResourceReference `protobuf:"bytes,9,rep,name=resource_references,json=resourceReferences,proto3" json:"resource_references,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{16}
}

func (x *Pipeline) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pipeline) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Pipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pipeline) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Pipeline) GetParameters() []*Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Pipeline) GetUrl() *Url {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *Pipeline) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Pipeline) GetDefaultVersion() *PipelineVersion {
	if x != nil {
		return x.DefaultVersion
	}
	return nil
}

func (x *Pipeline) GetResourceReferences() []*ResourceReference {
	if x != nil {
		return x.ResourceReferences
	}
	return nil
}

type PipelineVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output. Unique version ID. Generated by API server.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Optional input field. Version name provided by user.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Output. The time this pipeline version is created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Output. The input parameters for this pipeline.
	Parameters []*Parameter `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// Input. Optional. The URL to the code source of the pipeline version.
	// The code is usually the Python definition of the pipeline and potentially
	// the related component definitions. This allows users to trace back to how
	// the pipeline YAML was created.
	CodeSourceUrl string `protobuf:"bytes,5,opt,name=code_source_url,json=codeSourceUrl,proto3" json:"code_source_url,omitempty"`
	// Input. Required. The URL to the source of the pipeline version.
	// This is required when creating the pipeine version through
	// CreatePipelineVersion API.
	PackageUrl *Url `protobuf:"bytes,6,opt,name=package_url,json=packageUrl,proto3" json:"package_url,omitempty"`
	// Input field. Specify which resource this pipeline version belongs to.
	// For Experiment, the only valid resource reference is a single Namespace.
	ResourceReferences []*ResourceReference `protobuf:"bytes,7,rep,name=resource_references,json=resourceReferences,proto3" json:"resource_references,omitempty"`
	// Input. Optional. Description for the pipeline version.
	Description   string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipelineVersion) Reset() {
	*x = PipelineVersion{}
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineVersion) ProtoMessage() {}

func (x *PipelineVersion) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v1beta1_pipeline_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineVersion.ProtoReflect.Descriptor instead.
func (*PipelineVersion) Descriptor() ([]byte, []int) {
	return file_backend_api_v1beta1_pipeline_proto_rawDescGZIP(), []int{17}
}

func (x *PipelineVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PipelineVersion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineVersion) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PipelineVersion) GetParameters() []*Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *PipelineVersion) GetCodeSourceUrl() string {
	if x != nil {
		return x.CodeSourceUrl
	}
	return ""
}

func (x *PipelineVersion) GetPackageUrl() *Url {
	if x != nil {
		return x.PackageUrl
	}
	return nil
}

func (x *PipelineVersion) GetResourceReferences() []*ResourceReference {
	if x != nil {
		return x.ResourceReferences
	}
	return nil
}

func (x *PipelineVersion) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_backend_api_v1beta1_pipeline_proto protoreflect.FileDescriptor

const file_backend_api_v1beta1_pipeline_proto_rawDesc = "" +
	"\n" +
	"\"backend/api/v1beta1/pipeline.proto\x12\x03api\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a#backend/api/v1beta1/parameter.proto\x1a,backend/api/v1beta1/resource_reference.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"(\n" +
	"\x03Url\x12!\n" +
	"\fpipeline_url\x18\x01 \x01(\tR\vpipelineUrl\"B\n" +
	"\x15CreatePipelineRequest\x12)\n" +
	"\bpipeline\x18\x01 \x01(\v2\r.api.PipelineR\bpipeline\"e\n" +
	"#UpdatePipelineDefaultVersionRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12\x1d\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tR\tversionId\"$\n" +
	"\x12GetPipelineRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xcb\x01\n" +
	"\x14ListPipelinesRequest\x12\x1d\n" +
	"\n" +
	"page_token\x18\x01 \x01(\tR\tpageToken\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\x03 \x01(\tR\x06sortBy\x12\x16\n" +
	"\x06filter\x18\x04 \x01(\tR\x06filter\x12F\n" +
	"\x16resource_reference_key\x18\x05 \x01(\v2\x10.api.ResourceKeyR\x14resourceReferenceKey\"\x8b\x01\n" +
	"\x15ListPipelinesResponse\x12+\n" +
	"\tpipelines\x18\x01 \x03(\v2\r.api.PipelineR\tpipelines\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"L\n" +
	"\x18GetPipelineByNameRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"'\n" +
	"\x15DeletePipelineRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"$\n" +
	"\x12GetTemplateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"1\n" +
	"\x13GetTemplateResponse\x12\x1a\n" +
	"\btemplate\x18\x01 \x01(\tR\btemplate\"B\n" +
	"!GetPipelineVersionTemplateRequest\x12\x1d\n" +
	"\n" +
	"version_id\x18\x01 \x01(\tR\tversionId\"N\n" +
	"\x1cCreatePipelineVersionRequest\x12.\n" +
	"\aversion\x18\x01 \x01(\v2\x14.api.PipelineVersionR\aversion\":\n" +
	"\x19GetPipelineVersionRequest\x12\x1d\n" +
	"\n" +
	"version_id\x18\x01 \x01(\tR\tversionId\"\xbf\x01\n" +
	"\x1bListPipelineVersionsRequest\x123\n" +
	"\fresource_key\x18\x01 \x01(\v2\x10.api.ResourceKeyR\vresourceKey\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12\x17\n" +
	"\asort_by\x18\x04 \x01(\tR\x06sortBy\x12\x16\n" +
	"\x06filter\x18\x05 \x01(\tR\x06filter\"\x97\x01\n" +
	"\x1cListPipelineVersionsResponse\x120\n" +
	"\bversions\x18\x01 \x03(\v2\x14.api.PipelineVersionR\bversions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"=\n" +
	"\x1cDeletePipelineVersionRequest\x12\x1d\n" +
	"\n" +
	"version_id\x18\x01 \x01(\tR\tversionId\"\xf5\x02\n" +
	"\bPipeline\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12.\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v2\x0e.api.ParameterR\n" +
	"parameters\x12\x1a\n" +
	"\x03url\x18\a \x01(\v2\b.api.UrlR\x03url\x12\x14\n" +
	"\x05error\x18\x06 \x01(\tR\x05error\x12=\n" +
	"\x0fdefault_version\x18\b \x01(\v2\x14.api.PipelineVersionR\x0edefaultVersion\x12G\n" +
	"\x13resource_references\x18\t \x03(\v2\x16.api.ResourceReferenceR\x12resourceReferences\"\xde\x02\n" +
	"\x0fPipelineVersion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12.\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2\x0e.api.ParameterR\n" +
	"parameters\x12&\n" +
	"\x0fcode_source_url\x18\x05 \x01(\tR\rcodeSourceUrl\x12)\n" +
	"\vpackage_url\x18\x06 \x01(\v2\b.api.UrlR\n" +
	"packageUrl\x12G\n" +
	"\x13resource_references\x18\a \x03(\v2\x16.api.ResourceReferenceR\x12resourceReferences\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription2\x9e\f\n" +
	"\x0fPipelineService\x12h\n" +
	"\x10CreatePipelineV1\x12\x1a.api.CreatePipelineRequest\x1a\r.api.Pipeline\")\x82\xd3\xe4\x93\x02#:\bpipeline\"\x17/apis/v1beta1/pipelines\x12]\n" +
	"\rGetPipelineV1\x12\x17.api.GetPipelineRequest\x1a\r.api.Pipeline\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/apis/v1beta1/pipelines/{id}\x12\x82\x01\n" +
	"\x13GetPipelineByNameV1\x12\x1d.api.GetPipelineByNameRequest\x1a\r.api.Pipeline\"=\x82\xd3\xe4\x93\x027\x125/apis/v1beta1/namespaces/{namespace}/pipelines/{name}\x12i\n" +
	"\x0fListPipelinesV1\x12\x19.api.ListPipelinesRequest\x1a\x1a.api.ListPipelinesResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/apis/v1beta1/pipelines\x12l\n" +
	"\x10DeletePipelineV1\x12\x1a.api.DeletePipelineRequest\x1a\x16.google.protobuf.Empty\"$\x82\xd3\xe4\x93\x02\x1e*\x1c/apis/v1beta1/pipelines/{id}\x12p\n" +
	"\vGetTemplate\x12\x17.api.GetTemplateRequest\x1a\x18.api.GetTemplateResponse\".\x82\xd3\xe4\x93\x02(\x12&/apis/v1beta1/pipelines/{id}/templates\x12\x84\x01\n" +
	"\x17CreatePipelineVersionV1\x12!.api.CreatePipelineVersionRequest\x1a\x14.api.PipelineVersion\"0\x82\xd3\xe4\x93\x02*:\aversion\"\x1f/apis/v1beta1/pipeline_versions\x12\x82\x01\n" +
	"\x14GetPipelineVersionV1\x12\x1e.api.GetPipelineVersionRequest\x1a\x14.api.PipelineVersion\"4\x82\xd3\xe4\x93\x02.\x12,/apis/v1beta1/pipeline_versions/{version_id}\x12\x86\x01\n" +
	"\x16ListPipelineVersionsV1\x12 .api.ListPipelineVersionsRequest\x1a!.api.ListPipelineVersionsResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/apis/v1beta1/pipeline_versions\x12\x8a\x01\n" +
	"\x17DeletePipelineVersionV1\x12!.api.DeletePipelineVersionRequest\x1a\x16.google.protobuf.Empty\"4\x82\xd3\xe4\x93\x02.*,/apis/v1beta1/pipeline_versions/{version_id}\x12\x9e\x01\n" +
	"\x1aGetPipelineVersionTemplate\x12&.api.GetPipelineVersionTemplateRequest\x1a\x18.api.GetTemplateResponse\">\x82\xd3\xe4\x93\x028\x126/apis/v1beta1/pipeline_versions/{version_id}/templates\x12\xae\x01\n" +
	"\x1eUpdatePipelineDefaultVersionV1\x12(.api.UpdatePipelineDefaultVersionRequest\x1a\x16.google.protobuf.Empty\"J\x82\xd3\xe4\x93\x02D\"B/apis/v1beta1/pipelines/{pipeline_id}/default_version/{version_id}B\x91\x01\x92AQ*\x02\x01\x02R\x1c\n" +
	"\adefault\x12\x11\x12\x0f\n" +
	"\r\x1a\v.api.StatusZ\x1f\n" +
	"\x1d\n" +
	"\x06Bearer\x12\x13\b\x02\x1a\rauthorization \x02b\f\n" +
	"\n" +
	"\n" +
	"\x06Bearer\x12\x00Z;github.com/kubeflow/pipelines/backend/api/v1beta1/go_clientb\x06proto3"

var (
	file_backend_api_v1beta1_pipeline_proto_rawDescOnce sync.Once
	file_backend_api_v1beta1_pipeline_proto_rawDescData []byte
)

func file_backend_api_v1beta1_pipeline_proto_rawDescGZIP() []byte {
	file_backend_api_v1beta1_pipeline_proto_rawDescOnce.Do(func() {
		file_backend_api_v1beta1_pipeline_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backend_api_v1beta1_pipeline_proto_rawDesc), len(file_backend_api_v1beta1_pipeline_proto_rawDesc)))
	})
	return file_backend_api_v1beta1_pipeline_proto_rawDescData
}

var file_backend_api_v1beta1_pipeline_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_backend_api_v1beta1_pipeline_proto_goTypes = []any{
	(*Url)(nil),                                 // 0: api.Url
	(*CreatePipelineRequest)(nil),               // 1: api.CreatePipelineRequest
	(*UpdatePipelineDefaultVersionRequest)(nil), // 2: api.UpdatePipelineDefaultVersionRequest
	(*GetPipelineRequest)(nil),                  // 3: api.GetPipelineRequest
	(*ListPipelinesRequest)(nil),                // 4: api.ListPipelinesRequest
	(*ListPipelinesResponse)(nil),               // 5: api.ListPipelinesResponse
	(*GetPipelineByNameRequest)(nil),            // 6: api.GetPipelineByNameRequest
	(*DeletePipelineRequest)(nil),               // 7: api.DeletePipelineRequest
	(*GetTemplateRequest)(nil),                  // 8: api.GetTemplateRequest
	(*GetTemplateResponse)(nil),                 // 9: api.GetTemplateResponse
	(*GetPipelineVersionTemplateRequest)(nil),   // 10: api.GetPipelineVersionTemplateRequest
	(*CreatePipelineVersionRequest)(nil),        // 11: api.CreatePipelineVersionRequest
	(*GetPipelineVersionRequest)(nil),           // 12: api.GetPipelineVersionRequest
	(*ListPipelineVersionsRequest)(nil),         // 13: api.ListPipelineVersionsRequest
	(*ListPipelineVersionsResponse)(nil),        // 14: api.ListPipelineVersionsResponse
	(*DeletePipelineVersionRequest)(nil),        // 15: api.DeletePipelineVersionRequest
	(*Pipeline)(nil),                            // 16: api.Pipeline
	(*PipelineVersion)(nil),                     // 17: api.PipelineVersion
	(*ResourceKey)(nil),                         // 18: api.ResourceKey
	(*timestamppb.Timestamp)(nil),               // 19: google.protobuf.Timestamp
	(*Parameter)(nil),                           // 20: api.Parameter
	(*ResourceReference)(nil),                   // 21: api.ResourceReference
	(*emptypb.Empty)(nil),                       // 22: google.protobuf.Empty
}
var file_backend_api_v1beta1_pipeline_proto_depIdxs = []int32{
	16, // 0: api.CreatePipelineRequest.pipeline:type_name -> api.Pipeline
	18, // 1: api.ListPipelinesRequest.resource_reference_key:type_name -> api.ResourceKey
	16, // 2: api.ListPipelinesResponse.pipelines:type_name -> api.Pipeline
	17, // 3: api.CreatePipelineVersionRequest.version:type_name -> api.PipelineVersion
	18, // 4: api.ListPipelineVersionsRequest.resource_key:type_name -> api.ResourceKey
	17, // 5: api.ListPipelineVersionsResponse.versions:type_name -> api.PipelineVersion
	19, // 6: api.Pipeline.created_at:type_name -> google.protobuf.Timestamp
	20, // 7: api.Pipeline.parameters:type_name -> api.Parameter
	0,  // 8: api.Pipeline.url:type_name -> api.Url
	17, // 9: api.Pipeline.default_version:type_name -> api.PipelineVersion
	21, // 10: api.Pipeline.resource_references:type_name -> api.ResourceReference
	19, // 11: api.PipelineVersion.created_at:type_name -> google.protobuf.Timestamp
	20, // 12: api.PipelineVersion.parameters:type_name -> api.Parameter
	0,  // 13: api.PipelineVersion.package_url:type_name -> api.Url
	21, // 14: api.PipelineVersion.resource_references:type_name -> api.ResourceReference
	1,  // 15: api.PipelineService.CreatePipelineV1:input_type -> api.CreatePipelineRequest
	3,  // 16: api.PipelineService.GetPipelineV1:input_type -> api.GetPipelineRequest
	6,  // 17: api.PipelineService.GetPipelineByNameV1:input_type -> api.GetPipelineByNameRequest
	4,  // 18: api.PipelineService.ListPipelinesV1:input_type -> api.ListPipelinesRequest
	7,  // 19: api.PipelineService.DeletePipelineV1:input_type -> api.DeletePipelineRequest
	8,  // 20: api.PipelineService.GetTemplate:input_type -> api.GetTemplateRequest
	11, // 21: api.PipelineService.CreatePipelineVersionV1:input_type -> api.CreatePipelineVersionRequest
	12, // 22: api.PipelineService.GetPipelineVersionV1:input_type -> api.GetPipelineVersionRequest
	13, // 23: api.PipelineService.ListPipelineVersionsV1:input_type -> api.ListPipelineVersionsRequest
	15, // 24: api.PipelineService.DeletePipelineVersionV1:input_type -> api.DeletePipelineVersionRequest
	10, // 25: api.PipelineService.GetPipelineVersionTemplate:input_type -> api.GetPipelineVersionTemplateRequest
	2,  // 26: api.PipelineService.UpdatePipelineDefaultVersionV1:input_type -> api.UpdatePipelineDefaultVersionRequest
	16, // 27: api.PipelineService.CreatePipelineV1:output_type -> api.Pipeline
	16, // 28: api.PipelineService.GetPipelineV1:output_type -> api.Pipeline
	16, // 29: api.PipelineService.GetPipelineByNameV1:output_type -> api.Pipeline
	5,  // 30: api.PipelineService.ListPipelinesV1:output_type -> api.ListPipelinesResponse
	22, // 31: api.PipelineService.DeletePipelineV1:output_type -> google.protobuf.Empty
	9,  // 32: api.PipelineService.GetTemplate:output_type -> api.GetTemplateResponse
	17, // 33: api.PipelineService.CreatePipelineVersionV1:output_type -> api.PipelineVersion
	17, // 34: api.PipelineService.GetPipelineVersionV1:output_type -> api.PipelineVersion
	14, // 35: api.PipelineService.ListPipelineVersionsV1:output_type -> api.ListPipelineVersionsResponse
	22, // 36: api.PipelineService.DeletePipelineVersionV1:output_type -> google.protobuf.Empty
	9,  // 37: api.PipelineService.GetPipelineVersionTemplate:output_type -> api.GetTemplateResponse
	22, // 38: api.PipelineService.UpdatePipelineDefaultVersionV1:output_type -> google.protobuf.Empty
	27, // [27:39] is the sub-list for method output_type
	15, // [15:27] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_backend_api_v1beta1_pipeline_proto_init() }
func file_backend_api_v1beta1_pipeline_proto_init() {
	if File_backend_api_v1beta1_pipeline_proto != nil {
		return
	}
	file_backend_api_v1beta1_parameter_proto_init()
	file_backend_api_v1beta1_resource_reference_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backend_api_v1beta1_pipeline_proto_rawDesc), len(file_backend_api_v1beta1_pipeline_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_api_v1beta1_pipeline_proto_goTypes,
		DependencyIndexes: file_backend_api_v1beta1_pipeline_proto_depIdxs,
		MessageInfos:      file_backend_api_v1beta1_pipeline_proto_msgTypes,
	}.Build()
	File_backend_api_v1beta1_pipeline_proto = out.File
	file_backend_api_v1beta1_pipeline_proto_goTypes = nil
	file_backend_api_v1beta1_pipeline_proto_depIdxs = nil
}
