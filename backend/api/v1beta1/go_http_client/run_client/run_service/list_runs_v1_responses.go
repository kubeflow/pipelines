// Code generated by go-swagger; DO NOT EDIT.

package run_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	run_model "github.com/kubeflow/pipelines/backend/api/v1beta1/go_http_client/run_model"
)

// ListRunsV1Reader is a Reader for the ListRunsV1 structure.
type ListRunsV1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRunsV1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListRunsV1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListRunsV1Default(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListRunsV1OK creates a ListRunsV1OK with default headers values
func NewListRunsV1OK() *ListRunsV1OK {
	return &ListRunsV1OK{}
}

/*ListRunsV1OK handles this case with default header values.

A successful response.
*/
type ListRunsV1OK struct {
	Payload *run_model.APIListRunsResponse
}

func (o *ListRunsV1OK) Error() string {
	return fmt.Sprintf("[GET /apis/v1beta1/runs][%d] listRunsV1OK  %+v", 200, o.Payload)
}

func (o *ListRunsV1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(run_model.APIListRunsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRunsV1Default creates a ListRunsV1Default with default headers values
func NewListRunsV1Default(code int) *ListRunsV1Default {
	return &ListRunsV1Default{
		_statusCode: code,
	}
}

/*ListRunsV1Default handles this case with default header values.

ListRunsV1Default list runs v1 default
*/
type ListRunsV1Default struct {
	_statusCode int

	Payload *run_model.APIStatus
}

// Code gets the status code for the list runs v1 default response
func (o *ListRunsV1Default) Code() int {
	return o._statusCode
}

func (o *ListRunsV1Default) Error() string {
	return fmt.Sprintf("[GET /apis/v1beta1/runs][%d] ListRunsV1 default  %+v", o._statusCode, o.Payload)
}

func (o *ListRunsV1Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(run_model.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
