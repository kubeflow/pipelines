// Code generated by go-swagger; DO NOT EDIT.

package pipeline_upload_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kubeflow/pipelines/backend/api/v1beta1/go_http_client/pipeline_upload_model"
)

// UploadPipelineVersionReader is a Reader for the UploadPipelineVersion structure.
type UploadPipelineVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadPipelineVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadPipelineVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUploadPipelineVersionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUploadPipelineVersionOK creates a UploadPipelineVersionOK with default headers values
func NewUploadPipelineVersionOK() *UploadPipelineVersionOK {
	return &UploadPipelineVersionOK{}
}

/*
UploadPipelineVersionOK describes a response with status code 200, with default header values.

UploadPipelineVersionOK upload pipeline version o k
*/
type UploadPipelineVersionOK struct {
	Payload *pipeline_upload_model.APIPipelineVersion
}

// IsSuccess returns true when this upload pipeline version o k response has a 2xx status code
func (o *UploadPipelineVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this upload pipeline version o k response has a 3xx status code
func (o *UploadPipelineVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload pipeline version o k response has a 4xx status code
func (o *UploadPipelineVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this upload pipeline version o k response has a 5xx status code
func (o *UploadPipelineVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this upload pipeline version o k response a status code equal to that given
func (o *UploadPipelineVersionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the upload pipeline version o k response
func (o *UploadPipelineVersionOK) Code() int {
	return 200
}

func (o *UploadPipelineVersionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /apis/v1beta1/pipelines/upload_version][%d] uploadPipelineVersionOK %s", 200, payload)
}

func (o *UploadPipelineVersionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /apis/v1beta1/pipelines/upload_version][%d] uploadPipelineVersionOK %s", 200, payload)
}

func (o *UploadPipelineVersionOK) GetPayload() *pipeline_upload_model.APIPipelineVersion {
	return o.Payload
}

func (o *UploadPipelineVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pipeline_upload_model.APIPipelineVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadPipelineVersionDefault creates a UploadPipelineVersionDefault with default headers values
func NewUploadPipelineVersionDefault(code int) *UploadPipelineVersionDefault {
	return &UploadPipelineVersionDefault{
		_statusCode: code,
	}
}

/*
UploadPipelineVersionDefault describes a response with status code -1, with default header values.

UploadPipelineVersionDefault upload pipeline version default
*/
type UploadPipelineVersionDefault struct {
	_statusCode int

	Payload *pipeline_upload_model.APIStatus
}

// IsSuccess returns true when this upload pipeline version default response has a 2xx status code
func (o *UploadPipelineVersionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this upload pipeline version default response has a 3xx status code
func (o *UploadPipelineVersionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this upload pipeline version default response has a 4xx status code
func (o *UploadPipelineVersionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this upload pipeline version default response has a 5xx status code
func (o *UploadPipelineVersionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this upload pipeline version default response a status code equal to that given
func (o *UploadPipelineVersionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the upload pipeline version default response
func (o *UploadPipelineVersionDefault) Code() int {
	return o._statusCode
}

func (o *UploadPipelineVersionDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /apis/v1beta1/pipelines/upload_version][%d] UploadPipelineVersion default %s", o._statusCode, payload)
}

func (o *UploadPipelineVersionDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /apis/v1beta1/pipelines/upload_version][%d] UploadPipelineVersion default %s", o._statusCode, payload)
}

func (o *UploadPipelineVersionDefault) GetPayload() *pipeline_upload_model.APIStatus {
	return o.Payload
}

func (o *UploadPipelineVersionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pipeline_upload_model.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
