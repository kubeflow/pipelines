# coding: utf-8

"""
    Kubeflow Pipelines API

    This file contains REST API specification for Kubeflow Pipelines. The file is autogenerated from the swagger definition.

    Contact: kubeflow-pipelines@google.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kfp_server_api.configuration import Configuration


class V2beta1Predicate(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'operation': 'V2beta1PredicateOperation',
        'key': 'str',
        'int_value': 'int',
        'long_value': 'str',
        'string_value': 'str',
        'timestamp_value': 'datetime',
        'int_values': 'PredicateIntValues',
        'long_values': 'PredicateLongValues',
        'string_values': 'PredicateStringValues'
    }

    attribute_map = {
        'operation': 'operation',
        'key': 'key',
        'int_value': 'int_value',
        'long_value': 'long_value',
        'string_value': 'string_value',
        'timestamp_value': 'timestamp_value',
        'int_values': 'int_values',
        'long_values': 'long_values',
        'string_values': 'string_values'
    }

    def __init__(self, operation=None, key=None, int_value=None, long_value=None, string_value=None, timestamp_value=None, int_values=None, long_values=None, string_values=None, local_vars_configuration=None):  # noqa: E501
        """V2beta1Predicate - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._operation = None
        self._key = None
        self._int_value = None
        self._long_value = None
        self._string_value = None
        self._timestamp_value = None
        self._int_values = None
        self._long_values = None
        self._string_values = None
        self.discriminator = None

        if operation is not None:
            self.operation = operation
        if key is not None:
            self.key = key
        if int_value is not None:
            self.int_value = int_value
        if long_value is not None:
            self.long_value = long_value
        if string_value is not None:
            self.string_value = string_value
        if timestamp_value is not None:
            self.timestamp_value = timestamp_value
        if int_values is not None:
            self.int_values = int_values
        if long_values is not None:
            self.long_values = long_values
        if string_values is not None:
            self.string_values = string_values

    @property
    def operation(self):
        """Gets the operation of this V2beta1Predicate.  # noqa: E501


        :return: The operation of this V2beta1Predicate.  # noqa: E501
        :rtype: V2beta1PredicateOperation
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this V2beta1Predicate.


        :param operation: The operation of this V2beta1Predicate.  # noqa: E501
        :type operation: V2beta1PredicateOperation
        """

        self._operation = operation

    @property
    def key(self):
        """Gets the key of this V2beta1Predicate.  # noqa: E501

        Key for the operation (first argument).  # noqa: E501

        :return: The key of this V2beta1Predicate.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this V2beta1Predicate.

        Key for the operation (first argument).  # noqa: E501

        :param key: The key of this V2beta1Predicate.  # noqa: E501
        :type key: str
        """

        self._key = key

    @property
    def int_value(self):
        """Gets the int_value of this V2beta1Predicate.  # noqa: E501

        Integer.  # noqa: E501

        :return: The int_value of this V2beta1Predicate.  # noqa: E501
        :rtype: int
        """
        return self._int_value

    @int_value.setter
    def int_value(self, int_value):
        """Sets the int_value of this V2beta1Predicate.

        Integer.  # noqa: E501

        :param int_value: The int_value of this V2beta1Predicate.  # noqa: E501
        :type int_value: int
        """

        self._int_value = int_value

    @property
    def long_value(self):
        """Gets the long_value of this V2beta1Predicate.  # noqa: E501

        Long integer.  # noqa: E501

        :return: The long_value of this V2beta1Predicate.  # noqa: E501
        :rtype: str
        """
        return self._long_value

    @long_value.setter
    def long_value(self, long_value):
        """Sets the long_value of this V2beta1Predicate.

        Long integer.  # noqa: E501

        :param long_value: The long_value of this V2beta1Predicate.  # noqa: E501
        :type long_value: str
        """

        self._long_value = long_value

    @property
    def string_value(self):
        """Gets the string_value of this V2beta1Predicate.  # noqa: E501

        String.  # noqa: E501

        :return: The string_value of this V2beta1Predicate.  # noqa: E501
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this V2beta1Predicate.

        String.  # noqa: E501

        :param string_value: The string_value of this V2beta1Predicate.  # noqa: E501
        :type string_value: str
        """

        self._string_value = string_value

    @property
    def timestamp_value(self):
        """Gets the timestamp_value of this V2beta1Predicate.  # noqa: E501

        Timestamp values will be converted to Unix time (seconds since the epoch) prior to being used in a filtering operation.  # noqa: E501

        :return: The timestamp_value of this V2beta1Predicate.  # noqa: E501
        :rtype: datetime
        """
        return self._timestamp_value

    @timestamp_value.setter
    def timestamp_value(self, timestamp_value):
        """Sets the timestamp_value of this V2beta1Predicate.

        Timestamp values will be converted to Unix time (seconds since the epoch) prior to being used in a filtering operation.  # noqa: E501

        :param timestamp_value: The timestamp_value of this V2beta1Predicate.  # noqa: E501
        :type timestamp_value: datetime
        """

        self._timestamp_value = timestamp_value

    @property
    def int_values(self):
        """Gets the int_values of this V2beta1Predicate.  # noqa: E501


        :return: The int_values of this V2beta1Predicate.  # noqa: E501
        :rtype: PredicateIntValues
        """
        return self._int_values

    @int_values.setter
    def int_values(self, int_values):
        """Sets the int_values of this V2beta1Predicate.


        :param int_values: The int_values of this V2beta1Predicate.  # noqa: E501
        :type int_values: PredicateIntValues
        """

        self._int_values = int_values

    @property
    def long_values(self):
        """Gets the long_values of this V2beta1Predicate.  # noqa: E501


        :return: The long_values of this V2beta1Predicate.  # noqa: E501
        :rtype: PredicateLongValues
        """
        return self._long_values

    @long_values.setter
    def long_values(self, long_values):
        """Sets the long_values of this V2beta1Predicate.


        :param long_values: The long_values of this V2beta1Predicate.  # noqa: E501
        :type long_values: PredicateLongValues
        """

        self._long_values = long_values

    @property
    def string_values(self):
        """Gets the string_values of this V2beta1Predicate.  # noqa: E501


        :return: The string_values of this V2beta1Predicate.  # noqa: E501
        :rtype: PredicateStringValues
        """
        return self._string_values

    @string_values.setter
    def string_values(self, string_values):
        """Sets the string_values of this V2beta1Predicate.


        :param string_values: The string_values of this V2beta1Predicate.  # noqa: E501
        :type string_values: PredicateStringValues
        """

        self._string_values = string_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V2beta1Predicate):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, V2beta1Predicate):
            return True

        return self.to_dict() != other.to_dict()
