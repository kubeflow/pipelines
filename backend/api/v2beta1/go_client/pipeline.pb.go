// Copyright 2018 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: backend/api/v2beta1/pipeline.proto

package go_client

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pipeline struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output. Unique pipeline ID. Generated by API server.
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// Required if name is not provided. Pipeline display name provided by user.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Required if display_name is not provided. Pipeline name provided by user.
	Name string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	// Optional input field. A short description of the pipeline.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Output. Creation time of the pipeline.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Input. A namespace this pipeline belongs to.
	// Causes error if user is not authorized to access the specified namespace.
	// If not specified in CreatePipeline, default namespace is used.
	Namespace string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// In case any error happens retrieving a pipeline field, only pipeline ID,
	// and the error message is returned. Client has the flexibility of choosing
	// how to handle the error. This is especially useful during listing call.
	Error         *status.Status `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{0}
}

func (x *Pipeline) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *Pipeline) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Pipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pipeline) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Pipeline) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Pipeline) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Pipeline) GetError() *status.Status {
	if x != nil {
		return x.Error
	}
	return nil
}

type PipelineVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required input field. Unique ID of the parent pipeline.
	// This is ignored in CreatePipelineAndVersion API.
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// Output. Unique pipeline version ID. Generated by API server.
	PipelineVersionId string `protobuf:"bytes,2,opt,name=pipeline_version_id,json=pipelineVersionId,proto3" json:"pipeline_version_id,omitempty"`
	// Required if name is not provided. Pipeline version display name provided by user.
	// This is ignored in CreatePipelineAndVersion API.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Required if display_name is not provided. Pipeline version name provided by user.
	// This is ignored in CreatePipelineAndVersion API.
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// Optional input field. Short description of the pipeline version.
	// This is ignored in CreatePipelineAndVersion API.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Output. Creation time of the pipeline version.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Input. Required. The URL to the source of the pipeline version.
	// This is required when creating the pipeine version through
	// CreatePipelineVersion or CreatePipelineAndVersion API.
	PackageUrl *Url `protobuf:"bytes,6,opt,name=package_url,json=packageUrl,proto3" json:"package_url,omitempty"`
	// Input. Optional. The URL to the code source of the pipeline version.
	// The code is usually the Python definition of the pipeline and potentially
	// related the component definitions. This allows users to trace back to how
	// the pipeline YAML was created.
	CodeSourceUrl string `protobuf:"bytes,9,opt,name=code_source_url,json=codeSourceUrl,proto3" json:"code_source_url,omitempty"`
	// Output. The pipeline spec for the pipeline version.
	PipelineSpec *structpb.Struct `protobuf:"bytes,7,opt,name=pipeline_spec,json=pipelineSpec,proto3" json:"pipeline_spec,omitempty"`
	// In case any error happens retrieving a pipeline version field, only
	// pipeline ID, pipeline version ID, and the error message are returned.
	// Client has the flexibility of choosing how to handle the error.
	// This is especially useful during List() calls.
	Error         *status.Status `protobuf:"bytes,8,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipelineVersion) Reset() {
	*x = PipelineVersion{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineVersion) ProtoMessage() {}

func (x *PipelineVersion) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineVersion.ProtoReflect.Descriptor instead.
func (*PipelineVersion) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{1}
}

func (x *PipelineVersion) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *PipelineVersion) GetPipelineVersionId() string {
	if x != nil {
		return x.PipelineVersionId
	}
	return ""
}

func (x *PipelineVersion) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *PipelineVersion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineVersion) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PipelineVersion) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PipelineVersion) GetPackageUrl() *Url {
	if x != nil {
		return x.PackageUrl
	}
	return nil
}

func (x *PipelineVersion) GetCodeSourceUrl() string {
	if x != nil {
		return x.CodeSourceUrl
	}
	return ""
}

func (x *PipelineVersion) GetPipelineSpec() *structpb.Struct {
	if x != nil {
		return x.PipelineSpec
	}
	return nil
}

func (x *PipelineVersion) GetError() *status.Status {
	if x != nil {
		return x.Error
	}
	return nil
}

type Url struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// URL of the pipeline version definition.
	PipelineUrl   string `protobuf:"bytes,1,opt,name=pipeline_url,json=pipelineUrl,proto3" json:"pipeline_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Url) Reset() {
	*x = Url{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Url) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Url) ProtoMessage() {}

func (x *Url) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Url.ProtoReflect.Descriptor instead.
func (*Url) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{2}
}

func (x *Url) GetPipelineUrl() string {
	if x != nil {
		return x.PipelineUrl
	}
	return ""
}

type CreatePipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required input. Pipeline that needs to be created.
	Pipeline      *Pipeline `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePipelineRequest) Reset() {
	*x = CreatePipelineRequest{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineRequest) ProtoMessage() {}

func (x *CreatePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineRequest.ProtoReflect.Descriptor instead.
func (*CreatePipelineRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePipelineRequest) GetPipeline() *Pipeline {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

type GetPipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required input. The ID of the pipeline to be retrieved.
	PipelineId    string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPipelineRequest) Reset() {
	*x = GetPipelineRequest{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineRequest) ProtoMessage() {}

func (x *GetPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{4}
}

func (x *GetPipelineRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

type ListPipelinesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional input. Namespace for the pipelines.
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// A page token to request the results page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The number of pipelines to be listed per page. If there are more pipelines
	// than this number, the response message will contain a valid value in the
	// nextPageToken field.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Sorting order in form of "field_name", "field_name asc" or "field_name desc".
	// Ascending by default.
	SortBy string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	// A url-encoded, JSON-serialized filter protocol buffer (see
	// [filter.proto](https://github.com/kubeflow/pipelines/blob/master/backend/api/filter.proto)).
	Filter        string `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPipelinesRequest) Reset() {
	*x = ListPipelinesRequest{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelinesRequest) ProtoMessage() {}

func (x *ListPipelinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelinesRequest.ProtoReflect.Descriptor instead.
func (*ListPipelinesRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{5}
}

func (x *ListPipelinesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListPipelinesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListPipelinesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPipelinesRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListPipelinesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListPipelinesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Returned pipelines.
	Pipelines []*Pipeline `protobuf:"bytes,1,rep,name=pipelines,proto3" json:"pipelines,omitempty"`
	// The total number of pipelines for the given query.
	TotalSize int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The token to list the next page of pipelines.
	// This token can be used on the next ListPipelinesRequest.
	NextPageToken string `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPipelinesResponse) Reset() {
	*x = ListPipelinesResponse{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelinesResponse) ProtoMessage() {}

func (x *ListPipelinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelinesResponse.ProtoReflect.Descriptor instead.
func (*ListPipelinesResponse) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{6}
}

func (x *ListPipelinesResponse) GetPipelines() []*Pipeline {
	if x != nil {
		return x.Pipelines
	}
	return nil
}

func (x *ListPipelinesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListPipelinesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetPipelineByNameRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional input. Namespace of the pipeline.
	// It could be empty if default namespaces needs to be used or if multi-user
	// support is turned off.
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Required input. Name of the pipeline to be retrieved.
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPipelineByNameRequest) Reset() {
	*x = GetPipelineByNameRequest{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPipelineByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineByNameRequest) ProtoMessage() {}

func (x *GetPipelineByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineByNameRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineByNameRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{7}
}

func (x *GetPipelineByNameRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetPipelineByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeletePipelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required input. ID of the pipeline to be deleted.
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// Optional. If true, the pipeline and all its versions will be deleted.
	// If false (default), only the pipeline will be deleted if it has no versions.
	Cascade       bool `protobuf:"varint,2,opt,name=cascade,proto3" json:"cascade,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePipelineRequest) Reset() {
	*x = DeletePipelineRequest{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePipelineRequest) ProtoMessage() {}

func (x *DeletePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePipelineRequest.ProtoReflect.Descriptor instead.
func (*DeletePipelineRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePipelineRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *DeletePipelineRequest) GetCascade() bool {
	if x != nil {
		return x.Cascade
	}
	return false
}

type CreatePipelineAndVersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required input. Pipeline (parent) to be created.
	Pipeline *Pipeline `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	// Required input. Pipeline version (child) to be created.
	// Pipeline spec will be downloaded from pipeline_version.package_url.
	PipelineVersion *PipelineVersion `protobuf:"bytes,2,opt,name=pipeline_version,json=pipelineVersion,proto3" json:"pipeline_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreatePipelineAndVersionRequest) Reset() {
	*x = CreatePipelineAndVersionRequest{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePipelineAndVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineAndVersionRequest) ProtoMessage() {}

func (x *CreatePipelineAndVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineAndVersionRequest.ProtoReflect.Descriptor instead.
func (*CreatePipelineAndVersionRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{9}
}

func (x *CreatePipelineAndVersionRequest) GetPipeline() *Pipeline {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

func (x *CreatePipelineAndVersionRequest) GetPipelineVersion() *PipelineVersion {
	if x != nil {
		return x.PipelineVersion
	}
	return nil
}

type CreatePipelineVersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required input. ID of the parent pipeline.
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// Required input. Pipeline version ID to be created.
	PipelineVersion *PipelineVersion `protobuf:"bytes,2,opt,name=pipeline_version,json=pipelineVersion,proto3" json:"pipeline_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreatePipelineVersionRequest) Reset() {
	*x = CreatePipelineVersionRequest{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePipelineVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineVersionRequest) ProtoMessage() {}

func (x *CreatePipelineVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineVersionRequest.ProtoReflect.Descriptor instead.
func (*CreatePipelineVersionRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePipelineVersionRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *CreatePipelineVersionRequest) GetPipelineVersion() *PipelineVersion {
	if x != nil {
		return x.PipelineVersion
	}
	return nil
}

type GetPipelineVersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required input. ID of the parent pipeline.
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// Required input. ID of the pipeline version to be retrieved.
	PipelineVersionId string `protobuf:"bytes,2,opt,name=pipeline_version_id,json=pipelineVersionId,proto3" json:"pipeline_version_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetPipelineVersionRequest) Reset() {
	*x = GetPipelineVersionRequest{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPipelineVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineVersionRequest) ProtoMessage() {}

func (x *GetPipelineVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineVersionRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineVersionRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{11}
}

func (x *GetPipelineVersionRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *GetPipelineVersionRequest) GetPipelineVersionId() string {
	if x != nil {
		return x.PipelineVersionId
	}
	return ""
}

type ListPipelineVersionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required input. ID of the parent pipeline.
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// A page token to request the results page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The number of pipeline versions to be listed per page. If there are more pipeline
	// versions than this number, the response message will contain a valid value in the
	// nextPageToken field.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Sorting order in form of "field_name", "field_name asc" or "field_name desc".
	// Ascending by default.
	SortBy string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	// A url-encoded, JSON-serialized filter protocol buffer (see
	// [filter.proto](https://github.com/kubeflow/pipelines/blob/master/backend/api/filter.proto)).
	Filter        string `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPipelineVersionsRequest) Reset() {
	*x = ListPipelineVersionsRequest{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelineVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelineVersionsRequest) ProtoMessage() {}

func (x *ListPipelineVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelineVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListPipelineVersionsRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{12}
}

func (x *ListPipelineVersionsRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *ListPipelineVersionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListPipelineVersionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPipelineVersionsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListPipelineVersionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListPipelineVersionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Returned pipeline versions.
	PipelineVersions []*PipelineVersion `protobuf:"bytes,1,rep,name=pipeline_versions,json=pipelineVersions,proto3" json:"pipeline_versions,omitempty"`
	// The token to list the next page of pipeline versions.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of pipeline versions for the given query.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPipelineVersionsResponse) Reset() {
	*x = ListPipelineVersionsResponse{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelineVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelineVersionsResponse) ProtoMessage() {}

func (x *ListPipelineVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelineVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListPipelineVersionsResponse) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{13}
}

func (x *ListPipelineVersionsResponse) GetPipelineVersions() []*PipelineVersion {
	if x != nil {
		return x.PipelineVersions
	}
	return nil
}

func (x *ListPipelineVersionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListPipelineVersionsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type DeletePipelineVersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required input. ID of the parent pipeline.
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// Required input. The ID of the pipeline version to be deleted.
	PipelineVersionId string `protobuf:"bytes,2,opt,name=pipeline_version_id,json=pipelineVersionId,proto3" json:"pipeline_version_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeletePipelineVersionRequest) Reset() {
	*x = DeletePipelineVersionRequest{}
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePipelineVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePipelineVersionRequest) ProtoMessage() {}

func (x *DeletePipelineVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_api_v2beta1_pipeline_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePipelineVersionRequest.ProtoReflect.Descriptor instead.
func (*DeletePipelineVersionRequest) Descriptor() ([]byte, []int) {
	return file_backend_api_v2beta1_pipeline_proto_rawDescGZIP(), []int{14}
}

func (x *DeletePipelineVersionRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *DeletePipelineVersionRequest) GetPipelineVersionId() string {
	if x != nil {
		return x.PipelineVersionId
	}
	return ""
}

var File_backend_api_v2beta1_pipeline_proto protoreflect.FileDescriptor

const file_backend_api_v2beta1_pipeline_proto_rawDesc = "" +
	"\n" +
	"\"backend/api/v2beta1/pipeline.proto\x12&kubeflow.pipelines.backend.api.v2beta1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x17google/rpc/status.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x87\x02\n" +
	"\bPipeline\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x12\n" +
	"\x04name\x18\a \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12(\n" +
	"\x05error\x18\x06 \x01(\v2\x12.google.rpc.StatusR\x05error\"\xd4\x03\n" +
	"\x0fPipelineVersion\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12.\n" +
	"\x13pipeline_version_id\x18\x02 \x01(\tR\x11pipelineVersionId\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12L\n" +
	"\vpackage_url\x18\x06 \x01(\v2+.kubeflow.pipelines.backend.api.v2beta1.UrlR\n" +
	"packageUrl\x12&\n" +
	"\x0fcode_source_url\x18\t \x01(\tR\rcodeSourceUrl\x12<\n" +
	"\rpipeline_spec\x18\a \x01(\v2\x17.google.protobuf.StructR\fpipelineSpec\x12(\n" +
	"\x05error\x18\b \x01(\v2\x12.google.rpc.StatusR\x05error\"(\n" +
	"\x03Url\x12!\n" +
	"\fpipeline_url\x18\x01 \x01(\tR\vpipelineUrl\"e\n" +
	"\x15CreatePipelineRequest\x12L\n" +
	"\bpipeline\x18\x01 \x01(\v20.kubeflow.pipelines.backend.api.v2beta1.PipelineR\bpipeline\"5\n" +
	"\x12GetPipelineRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\"\xa1\x01\n" +
	"\x14ListPipelinesRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\x04 \x01(\tR\x06sortBy\x12\x16\n" +
	"\x06filter\x18\x05 \x01(\tR\x06filter\"\xae\x01\n" +
	"\x15ListPipelinesResponse\x12N\n" +
	"\tpipelines\x18\x01 \x03(\v20.kubeflow.pipelines.backend.api.v2beta1.PipelineR\tpipelines\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x05R\ttotalSize\x12&\n" +
	"\x0fnext_page_token\x18\x03 \x01(\tR\rnextPageToken\"L\n" +
	"\x18GetPipelineByNameRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"R\n" +
	"\x15DeletePipelineRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12\x18\n" +
	"\acascade\x18\x02 \x01(\bR\acascade\"\xd3\x01\n" +
	"\x1fCreatePipelineAndVersionRequest\x12L\n" +
	"\bpipeline\x18\x01 \x01(\v20.kubeflow.pipelines.backend.api.v2beta1.PipelineR\bpipeline\x12b\n" +
	"\x10pipeline_version\x18\x02 \x01(\v27.kubeflow.pipelines.backend.api.v2beta1.PipelineVersionR\x0fpipelineVersion\"\xa3\x01\n" +
	"\x1cCreatePipelineVersionRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12b\n" +
	"\x10pipeline_version\x18\x02 \x01(\v27.kubeflow.pipelines.backend.api.v2beta1.PipelineVersionR\x0fpipelineVersion\"l\n" +
	"\x19GetPipelineVersionRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12.\n" +
	"\x13pipeline_version_id\x18\x02 \x01(\tR\x11pipelineVersionId\"\xab\x01\n" +
	"\x1bListPipelineVersionsRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\x04 \x01(\tR\x06sortBy\x12\x16\n" +
	"\x06filter\x18\x05 \x01(\tR\x06filter\"\xcb\x01\n" +
	"\x1cListPipelineVersionsResponse\x12d\n" +
	"\x11pipeline_versions\x18\x01 \x03(\v27.kubeflow.pipelines.backend.api.v2beta1.PipelineVersionR\x10pipelineVersions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"o\n" +
	"\x1cDeletePipelineVersionRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12.\n" +
	"\x13pipeline_version_id\x18\x02 \x01(\tR\x11pipelineVersionId2\x97\x0f\n" +
	"\x0fPipelineService\x12\xac\x01\n" +
	"\x0eCreatePipeline\x12=.kubeflow.pipelines.backend.api.v2beta1.CreatePipelineRequest\x1a0.kubeflow.pipelines.backend.api.v2beta1.Pipeline\")\x82\xd3\xe4\x93\x02#:\bpipeline\"\x17/apis/v2beta1/pipelines\x12\xaa\x01\n" +
	"\vGetPipeline\x12:.kubeflow.pipelines.backend.api.v2beta1.GetPipelineRequest\x1a0.kubeflow.pipelines.backend.api.v2beta1.Pipeline\"-\x82\xd3\xe4\x93\x02'\x12%/apis/v2beta1/pipelines/{pipeline_id}\x12\xb5\x01\n" +
	"\x11GetPipelineByName\x12@.kubeflow.pipelines.backend.api.v2beta1.GetPipelineByNameRequest\x1a0.kubeflow.pipelines.backend.api.v2beta1.Pipeline\",\x82\xd3\xe4\x93\x02&\x12$/apis/v2beta1/pipelines/names/{name}\x12\xad\x01\n" +
	"\rListPipelines\x12<.kubeflow.pipelines.backend.api.v2beta1.ListPipelinesRequest\x1a=.kubeflow.pipelines.backend.api.v2beta1.ListPipelinesResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/apis/v2beta1/pipelines\x12\x96\x01\n" +
	"\x0eDeletePipeline\x12=.kubeflow.pipelines.backend.api.v2beta1.DeletePipelineRequest\x1a\x16.google.protobuf.Empty\"-\x82\xd3\xe4\x93\x02'*%/apis/v2beta1/pipelines/{pipeline_id}\x12\xc0\x01\n" +
	"\x18CreatePipelineAndVersion\x12G.kubeflow.pipelines.backend.api.v2beta1.CreatePipelineAndVersionRequest\x1a0.kubeflow.pipelines.backend.api.v2beta1.Pipeline\")\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/apis/v2beta1/pipelines/create\x12\xe0\x01\n" +
	"\x15CreatePipelineVersion\x12D.kubeflow.pipelines.backend.api.v2beta1.CreatePipelineVersionRequest\x1a7.kubeflow.pipelines.backend.api.v2beta1.PipelineVersion\"H\x82\xd3\xe4\x93\x02B:\x10pipeline_version\"./apis/v2beta1/pipelines/{pipeline_id}/versions\x12\xde\x01\n" +
	"\x12GetPipelineVersion\x12A.kubeflow.pipelines.backend.api.v2beta1.GetPipelineVersionRequest\x1a7.kubeflow.pipelines.backend.api.v2beta1.PipelineVersion\"L\x82\xd3\xe4\x93\x02F\x12D/apis/v2beta1/pipelines/{pipeline_id}/versions/{pipeline_version_id}\x12\xd9\x01\n" +
	"\x14ListPipelineVersions\x12C.kubeflow.pipelines.backend.api.v2beta1.ListPipelineVersionsRequest\x1aD.kubeflow.pipelines.backend.api.v2beta1.ListPipelineVersionsResponse\"6\x82\xd3\xe4\x93\x020\x12./apis/v2beta1/pipelines/{pipeline_id}/versions\x12\xc3\x01\n" +
	"\x15DeletePipelineVersion\x12D.kubeflow.pipelines.backend.api.v2beta1.DeletePipelineVersionRequest\x1a\x16.google.protobuf.Empty\"L\x82\xd3\xe4\x93\x02F*D/apis/v2beta1/pipelines/{pipeline_id}/versions/{pipeline_version_id}B\x98\x01\x92AX*\x02\x01\x02R#\n" +
	"\adefault\x12\x18\x12\x16\n" +
	"\x14\x1a\x12.google.rpc.StatusZ\x1f\n" +
	"\x1d\n" +
	"\x06Bearer\x12\x13\b\x02\x1a\rauthorization \x02b\f\n" +
	"\n" +
	"\n" +
	"\x06Bearer\x12\x00Z;github.com/kubeflow/pipelines/backend/api/v2beta1/go_clientb\x06proto3"

var (
	file_backend_api_v2beta1_pipeline_proto_rawDescOnce sync.Once
	file_backend_api_v2beta1_pipeline_proto_rawDescData []byte
)

func file_backend_api_v2beta1_pipeline_proto_rawDescGZIP() []byte {
	file_backend_api_v2beta1_pipeline_proto_rawDescOnce.Do(func() {
		file_backend_api_v2beta1_pipeline_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backend_api_v2beta1_pipeline_proto_rawDesc), len(file_backend_api_v2beta1_pipeline_proto_rawDesc)))
	})
	return file_backend_api_v2beta1_pipeline_proto_rawDescData
}

var file_backend_api_v2beta1_pipeline_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_backend_api_v2beta1_pipeline_proto_goTypes = []any{
	(*Pipeline)(nil),                        // 0: kubeflow.pipelines.backend.api.v2beta1.Pipeline
	(*PipelineVersion)(nil),                 // 1: kubeflow.pipelines.backend.api.v2beta1.PipelineVersion
	(*Url)(nil),                             // 2: kubeflow.pipelines.backend.api.v2beta1.Url
	(*CreatePipelineRequest)(nil),           // 3: kubeflow.pipelines.backend.api.v2beta1.CreatePipelineRequest
	(*GetPipelineRequest)(nil),              // 4: kubeflow.pipelines.backend.api.v2beta1.GetPipelineRequest
	(*ListPipelinesRequest)(nil),            // 5: kubeflow.pipelines.backend.api.v2beta1.ListPipelinesRequest
	(*ListPipelinesResponse)(nil),           // 6: kubeflow.pipelines.backend.api.v2beta1.ListPipelinesResponse
	(*GetPipelineByNameRequest)(nil),        // 7: kubeflow.pipelines.backend.api.v2beta1.GetPipelineByNameRequest
	(*DeletePipelineRequest)(nil),           // 8: kubeflow.pipelines.backend.api.v2beta1.DeletePipelineRequest
	(*CreatePipelineAndVersionRequest)(nil), // 9: kubeflow.pipelines.backend.api.v2beta1.CreatePipelineAndVersionRequest
	(*CreatePipelineVersionRequest)(nil),    // 10: kubeflow.pipelines.backend.api.v2beta1.CreatePipelineVersionRequest
	(*GetPipelineVersionRequest)(nil),       // 11: kubeflow.pipelines.backend.api.v2beta1.GetPipelineVersionRequest
	(*ListPipelineVersionsRequest)(nil),     // 12: kubeflow.pipelines.backend.api.v2beta1.ListPipelineVersionsRequest
	(*ListPipelineVersionsResponse)(nil),    // 13: kubeflow.pipelines.backend.api.v2beta1.ListPipelineVersionsResponse
	(*DeletePipelineVersionRequest)(nil),    // 14: kubeflow.pipelines.backend.api.v2beta1.DeletePipelineVersionRequest
	(*timestamppb.Timestamp)(nil),           // 15: google.protobuf.Timestamp
	(*status.Status)(nil),                   // 16: google.rpc.Status
	(*structpb.Struct)(nil),                 // 17: google.protobuf.Struct
	(*emptypb.Empty)(nil),                   // 18: google.protobuf.Empty
}
var file_backend_api_v2beta1_pipeline_proto_depIdxs = []int32{
	15, // 0: kubeflow.pipelines.backend.api.v2beta1.Pipeline.created_at:type_name -> google.protobuf.Timestamp
	16, // 1: kubeflow.pipelines.backend.api.v2beta1.Pipeline.error:type_name -> google.rpc.Status
	15, // 2: kubeflow.pipelines.backend.api.v2beta1.PipelineVersion.created_at:type_name -> google.protobuf.Timestamp
	2,  // 3: kubeflow.pipelines.backend.api.v2beta1.PipelineVersion.package_url:type_name -> kubeflow.pipelines.backend.api.v2beta1.Url
	17, // 4: kubeflow.pipelines.backend.api.v2beta1.PipelineVersion.pipeline_spec:type_name -> google.protobuf.Struct
	16, // 5: kubeflow.pipelines.backend.api.v2beta1.PipelineVersion.error:type_name -> google.rpc.Status
	0,  // 6: kubeflow.pipelines.backend.api.v2beta1.CreatePipelineRequest.pipeline:type_name -> kubeflow.pipelines.backend.api.v2beta1.Pipeline
	0,  // 7: kubeflow.pipelines.backend.api.v2beta1.ListPipelinesResponse.pipelines:type_name -> kubeflow.pipelines.backend.api.v2beta1.Pipeline
	0,  // 8: kubeflow.pipelines.backend.api.v2beta1.CreatePipelineAndVersionRequest.pipeline:type_name -> kubeflow.pipelines.backend.api.v2beta1.Pipeline
	1,  // 9: kubeflow.pipelines.backend.api.v2beta1.CreatePipelineAndVersionRequest.pipeline_version:type_name -> kubeflow.pipelines.backend.api.v2beta1.PipelineVersion
	1,  // 10: kubeflow.pipelines.backend.api.v2beta1.CreatePipelineVersionRequest.pipeline_version:type_name -> kubeflow.pipelines.backend.api.v2beta1.PipelineVersion
	1,  // 11: kubeflow.pipelines.backend.api.v2beta1.ListPipelineVersionsResponse.pipeline_versions:type_name -> kubeflow.pipelines.backend.api.v2beta1.PipelineVersion
	3,  // 12: kubeflow.pipelines.backend.api.v2beta1.PipelineService.CreatePipeline:input_type -> kubeflow.pipelines.backend.api.v2beta1.CreatePipelineRequest
	4,  // 13: kubeflow.pipelines.backend.api.v2beta1.PipelineService.GetPipeline:input_type -> kubeflow.pipelines.backend.api.v2beta1.GetPipelineRequest
	7,  // 14: kubeflow.pipelines.backend.api.v2beta1.PipelineService.GetPipelineByName:input_type -> kubeflow.pipelines.backend.api.v2beta1.GetPipelineByNameRequest
	5,  // 15: kubeflow.pipelines.backend.api.v2beta1.PipelineService.ListPipelines:input_type -> kubeflow.pipelines.backend.api.v2beta1.ListPipelinesRequest
	8,  // 16: kubeflow.pipelines.backend.api.v2beta1.PipelineService.DeletePipeline:input_type -> kubeflow.pipelines.backend.api.v2beta1.DeletePipelineRequest
	9,  // 17: kubeflow.pipelines.backend.api.v2beta1.PipelineService.CreatePipelineAndVersion:input_type -> kubeflow.pipelines.backend.api.v2beta1.CreatePipelineAndVersionRequest
	10, // 18: kubeflow.pipelines.backend.api.v2beta1.PipelineService.CreatePipelineVersion:input_type -> kubeflow.pipelines.backend.api.v2beta1.CreatePipelineVersionRequest
	11, // 19: kubeflow.pipelines.backend.api.v2beta1.PipelineService.GetPipelineVersion:input_type -> kubeflow.pipelines.backend.api.v2beta1.GetPipelineVersionRequest
	12, // 20: kubeflow.pipelines.backend.api.v2beta1.PipelineService.ListPipelineVersions:input_type -> kubeflow.pipelines.backend.api.v2beta1.ListPipelineVersionsRequest
	14, // 21: kubeflow.pipelines.backend.api.v2beta1.PipelineService.DeletePipelineVersion:input_type -> kubeflow.pipelines.backend.api.v2beta1.DeletePipelineVersionRequest
	0,  // 22: kubeflow.pipelines.backend.api.v2beta1.PipelineService.CreatePipeline:output_type -> kubeflow.pipelines.backend.api.v2beta1.Pipeline
	0,  // 23: kubeflow.pipelines.backend.api.v2beta1.PipelineService.GetPipeline:output_type -> kubeflow.pipelines.backend.api.v2beta1.Pipeline
	0,  // 24: kubeflow.pipelines.backend.api.v2beta1.PipelineService.GetPipelineByName:output_type -> kubeflow.pipelines.backend.api.v2beta1.Pipeline
	6,  // 25: kubeflow.pipelines.backend.api.v2beta1.PipelineService.ListPipelines:output_type -> kubeflow.pipelines.backend.api.v2beta1.ListPipelinesResponse
	18, // 26: kubeflow.pipelines.backend.api.v2beta1.PipelineService.DeletePipeline:output_type -> google.protobuf.Empty
	0,  // 27: kubeflow.pipelines.backend.api.v2beta1.PipelineService.CreatePipelineAndVersion:output_type -> kubeflow.pipelines.backend.api.v2beta1.Pipeline
	1,  // 28: kubeflow.pipelines.backend.api.v2beta1.PipelineService.CreatePipelineVersion:output_type -> kubeflow.pipelines.backend.api.v2beta1.PipelineVersion
	1,  // 29: kubeflow.pipelines.backend.api.v2beta1.PipelineService.GetPipelineVersion:output_type -> kubeflow.pipelines.backend.api.v2beta1.PipelineVersion
	13, // 30: kubeflow.pipelines.backend.api.v2beta1.PipelineService.ListPipelineVersions:output_type -> kubeflow.pipelines.backend.api.v2beta1.ListPipelineVersionsResponse
	18, // 31: kubeflow.pipelines.backend.api.v2beta1.PipelineService.DeletePipelineVersion:output_type -> google.protobuf.Empty
	22, // [22:32] is the sub-list for method output_type
	12, // [12:22] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_backend_api_v2beta1_pipeline_proto_init() }
func file_backend_api_v2beta1_pipeline_proto_init() {
	if File_backend_api_v2beta1_pipeline_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backend_api_v2beta1_pipeline_proto_rawDesc), len(file_backend_api_v2beta1_pipeline_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_api_v2beta1_pipeline_proto_goTypes,
		DependencyIndexes: file_backend_api_v2beta1_pipeline_proto_depIdxs,
		MessageInfos:      file_backend_api_v2beta1_pipeline_proto_msgTypes,
	}.Build()
	File_backend_api_v2beta1_pipeline_proto = out.File
	file_backend_api_v2beta1_pipeline_proto_goTypes = nil
	file_backend_api_v2beta1_pipeline_proto_depIdxs = nil
}
