// Code generated by go-swagger; DO NOT EDIT.

package pipeline_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPipelineServiceCreatePipelineVersionParams creates a new PipelineServiceCreatePipelineVersionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPipelineServiceCreatePipelineVersionParams() *PipelineServiceCreatePipelineVersionParams {
	return &PipelineServiceCreatePipelineVersionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPipelineServiceCreatePipelineVersionParamsWithTimeout creates a new PipelineServiceCreatePipelineVersionParams object
// with the ability to set a timeout on a request.
func NewPipelineServiceCreatePipelineVersionParamsWithTimeout(timeout time.Duration) *PipelineServiceCreatePipelineVersionParams {
	return &PipelineServiceCreatePipelineVersionParams{
		timeout: timeout,
	}
}

// NewPipelineServiceCreatePipelineVersionParamsWithContext creates a new PipelineServiceCreatePipelineVersionParams object
// with the ability to set a context for a request.
func NewPipelineServiceCreatePipelineVersionParamsWithContext(ctx context.Context) *PipelineServiceCreatePipelineVersionParams {
	return &PipelineServiceCreatePipelineVersionParams{
		Context: ctx,
	}
}

// NewPipelineServiceCreatePipelineVersionParamsWithHTTPClient creates a new PipelineServiceCreatePipelineVersionParams object
// with the ability to set a custom HTTPClient for a request.
func NewPipelineServiceCreatePipelineVersionParamsWithHTTPClient(client *http.Client) *PipelineServiceCreatePipelineVersionParams {
	return &PipelineServiceCreatePipelineVersionParams{
		HTTPClient: client,
	}
}

/*
PipelineServiceCreatePipelineVersionParams contains all the parameters to send to the API endpoint

	for the pipeline service create pipeline version operation.

	Typically these are written to a http.Request.
*/
type PipelineServiceCreatePipelineVersionParams struct {

	/* PipelineID.

	   Required input. ID of the parent pipeline.
	*/
	PipelineID string

	/* PipelineVersionCreatedAt.

	   Output. Creation time of the pipeline version.

	   Format: date-time
	*/
	PipelineVersionCreatedAt *strfmt.DateTime

	/* PipelineVersionDescription.

	   Optional input field. Short description of the pipeline version.
	*/
	PipelineVersionDescription *string

	/* PipelineVersionDisplayName.

	   Required input field. Pipeline version name provided by user.
	*/
	PipelineVersionDisplayName *string

	/* PipelineVersionErrorCode.

	   The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].

	   Format: int32
	*/
	PipelineVersionErrorCode *int32

	/* PipelineVersionErrorMessage.

	     A developer-facing error message, which should be in English. Any
	user-facing error message should be localized and sent in the
	[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
	*/
	PipelineVersionErrorMessage *string

	/* PipelineVersionPackageURLPipelineURL.

	   URL of the pipeline version definition.
	*/
	PipelineVersionPackageURLPipelineURL *string

	/* PipelineVersionPipelineID.

	   Required input field. Unique ID of the parent pipeline.
	*/
	PipelineVersionPipelineID *string

	/* PipelineVersionPipelineVersionID.

	   Output. Unique pipeline version ID. Generated by API server.
	*/
	PipelineVersionPipelineVersionID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the pipeline service create pipeline version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PipelineServiceCreatePipelineVersionParams) WithDefaults() *PipelineServiceCreatePipelineVersionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the pipeline service create pipeline version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PipelineServiceCreatePipelineVersionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithTimeout(timeout time.Duration) *PipelineServiceCreatePipelineVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithContext(ctx context.Context) *PipelineServiceCreatePipelineVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithHTTPClient(client *http.Client) *PipelineServiceCreatePipelineVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPipelineID adds the pipelineID to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithPipelineID(pipelineID string) *PipelineServiceCreatePipelineVersionParams {
	o.SetPipelineID(pipelineID)
	return o
}

// SetPipelineID adds the pipelineId to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetPipelineID(pipelineID string) {
	o.PipelineID = pipelineID
}

// WithPipelineVersionCreatedAt adds the pipelineVersionCreatedAt to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithPipelineVersionCreatedAt(pipelineVersionCreatedAt *strfmt.DateTime) *PipelineServiceCreatePipelineVersionParams {
	o.SetPipelineVersionCreatedAt(pipelineVersionCreatedAt)
	return o
}

// SetPipelineVersionCreatedAt adds the pipelineVersionCreatedAt to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetPipelineVersionCreatedAt(pipelineVersionCreatedAt *strfmt.DateTime) {
	o.PipelineVersionCreatedAt = pipelineVersionCreatedAt
}

// WithPipelineVersionDescription adds the pipelineVersionDescription to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithPipelineVersionDescription(pipelineVersionDescription *string) *PipelineServiceCreatePipelineVersionParams {
	o.SetPipelineVersionDescription(pipelineVersionDescription)
	return o
}

// SetPipelineVersionDescription adds the pipelineVersionDescription to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetPipelineVersionDescription(pipelineVersionDescription *string) {
	o.PipelineVersionDescription = pipelineVersionDescription
}

// WithPipelineVersionDisplayName adds the pipelineVersionDisplayName to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithPipelineVersionDisplayName(pipelineVersionDisplayName *string) *PipelineServiceCreatePipelineVersionParams {
	o.SetPipelineVersionDisplayName(pipelineVersionDisplayName)
	return o
}

// SetPipelineVersionDisplayName adds the pipelineVersionDisplayName to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetPipelineVersionDisplayName(pipelineVersionDisplayName *string) {
	o.PipelineVersionDisplayName = pipelineVersionDisplayName
}

// WithPipelineVersionErrorCode adds the pipelineVersionErrorCode to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithPipelineVersionErrorCode(pipelineVersionErrorCode *int32) *PipelineServiceCreatePipelineVersionParams {
	o.SetPipelineVersionErrorCode(pipelineVersionErrorCode)
	return o
}

// SetPipelineVersionErrorCode adds the pipelineVersionErrorCode to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetPipelineVersionErrorCode(pipelineVersionErrorCode *int32) {
	o.PipelineVersionErrorCode = pipelineVersionErrorCode
}

// WithPipelineVersionErrorMessage adds the pipelineVersionErrorMessage to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithPipelineVersionErrorMessage(pipelineVersionErrorMessage *string) *PipelineServiceCreatePipelineVersionParams {
	o.SetPipelineVersionErrorMessage(pipelineVersionErrorMessage)
	return o
}

// SetPipelineVersionErrorMessage adds the pipelineVersionErrorMessage to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetPipelineVersionErrorMessage(pipelineVersionErrorMessage *string) {
	o.PipelineVersionErrorMessage = pipelineVersionErrorMessage
}

// WithPipelineVersionPackageURLPipelineURL adds the pipelineVersionPackageURLPipelineURL to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithPipelineVersionPackageURLPipelineURL(pipelineVersionPackageURLPipelineURL *string) *PipelineServiceCreatePipelineVersionParams {
	o.SetPipelineVersionPackageURLPipelineURL(pipelineVersionPackageURLPipelineURL)
	return o
}

// SetPipelineVersionPackageURLPipelineURL adds the pipelineVersionPackageUrlPipelineUrl to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetPipelineVersionPackageURLPipelineURL(pipelineVersionPackageURLPipelineURL *string) {
	o.PipelineVersionPackageURLPipelineURL = pipelineVersionPackageURLPipelineURL
}

// WithPipelineVersionPipelineID adds the pipelineVersionPipelineID to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithPipelineVersionPipelineID(pipelineVersionPipelineID *string) *PipelineServiceCreatePipelineVersionParams {
	o.SetPipelineVersionPipelineID(pipelineVersionPipelineID)
	return o
}

// SetPipelineVersionPipelineID adds the pipelineVersionPipelineId to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetPipelineVersionPipelineID(pipelineVersionPipelineID *string) {
	o.PipelineVersionPipelineID = pipelineVersionPipelineID
}

// WithPipelineVersionPipelineVersionID adds the pipelineVersionPipelineVersionID to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) WithPipelineVersionPipelineVersionID(pipelineVersionPipelineVersionID *string) *PipelineServiceCreatePipelineVersionParams {
	o.SetPipelineVersionPipelineVersionID(pipelineVersionPipelineVersionID)
	return o
}

// SetPipelineVersionPipelineVersionID adds the pipelineVersionPipelineVersionId to the pipeline service create pipeline version params
func (o *PipelineServiceCreatePipelineVersionParams) SetPipelineVersionPipelineVersionID(pipelineVersionPipelineVersionID *string) {
	o.PipelineVersionPipelineVersionID = pipelineVersionPipelineVersionID
}

// WriteToRequest writes these params to a swagger request
func (o *PipelineServiceCreatePipelineVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param pipelineId
	if err := r.SetPathParam("pipelineId", o.PipelineID); err != nil {
		return err
	}

	if o.PipelineVersionCreatedAt != nil {

		// query param pipelineVersion.createdAt
		var qrPipelineVersionCreatedAt strfmt.DateTime

		if o.PipelineVersionCreatedAt != nil {
			qrPipelineVersionCreatedAt = *o.PipelineVersionCreatedAt
		}
		qPipelineVersionCreatedAt := qrPipelineVersionCreatedAt.String()
		if qPipelineVersionCreatedAt != "" {

			if err := r.SetQueryParam("pipelineVersion.createdAt", qPipelineVersionCreatedAt); err != nil {
				return err
			}
		}
	}

	if o.PipelineVersionDescription != nil {

		// query param pipelineVersion.description
		var qrPipelineVersionDescription string

		if o.PipelineVersionDescription != nil {
			qrPipelineVersionDescription = *o.PipelineVersionDescription
		}
		qPipelineVersionDescription := qrPipelineVersionDescription
		if qPipelineVersionDescription != "" {

			if err := r.SetQueryParam("pipelineVersion.description", qPipelineVersionDescription); err != nil {
				return err
			}
		}
	}

	if o.PipelineVersionDisplayName != nil {

		// query param pipelineVersion.displayName
		var qrPipelineVersionDisplayName string

		if o.PipelineVersionDisplayName != nil {
			qrPipelineVersionDisplayName = *o.PipelineVersionDisplayName
		}
		qPipelineVersionDisplayName := qrPipelineVersionDisplayName
		if qPipelineVersionDisplayName != "" {

			if err := r.SetQueryParam("pipelineVersion.displayName", qPipelineVersionDisplayName); err != nil {
				return err
			}
		}
	}

	if o.PipelineVersionErrorCode != nil {

		// query param pipelineVersion.error.code
		var qrPipelineVersionErrorCode int32

		if o.PipelineVersionErrorCode != nil {
			qrPipelineVersionErrorCode = *o.PipelineVersionErrorCode
		}
		qPipelineVersionErrorCode := swag.FormatInt32(qrPipelineVersionErrorCode)
		if qPipelineVersionErrorCode != "" {

			if err := r.SetQueryParam("pipelineVersion.error.code", qPipelineVersionErrorCode); err != nil {
				return err
			}
		}
	}

	if o.PipelineVersionErrorMessage != nil {

		// query param pipelineVersion.error.message
		var qrPipelineVersionErrorMessage string

		if o.PipelineVersionErrorMessage != nil {
			qrPipelineVersionErrorMessage = *o.PipelineVersionErrorMessage
		}
		qPipelineVersionErrorMessage := qrPipelineVersionErrorMessage
		if qPipelineVersionErrorMessage != "" {

			if err := r.SetQueryParam("pipelineVersion.error.message", qPipelineVersionErrorMessage); err != nil {
				return err
			}
		}
	}

	if o.PipelineVersionPackageURLPipelineURL != nil {

		// query param pipelineVersion.packageUrl.pipelineUrl
		var qrPipelineVersionPackageURLPipelineURL string

		if o.PipelineVersionPackageURLPipelineURL != nil {
			qrPipelineVersionPackageURLPipelineURL = *o.PipelineVersionPackageURLPipelineURL
		}
		qPipelineVersionPackageURLPipelineURL := qrPipelineVersionPackageURLPipelineURL
		if qPipelineVersionPackageURLPipelineURL != "" {

			if err := r.SetQueryParam("pipelineVersion.packageUrl.pipelineUrl", qPipelineVersionPackageURLPipelineURL); err != nil {
				return err
			}
		}
	}

	if o.PipelineVersionPipelineID != nil {

		// query param pipelineVersion.pipelineId
		var qrPipelineVersionPipelineID string

		if o.PipelineVersionPipelineID != nil {
			qrPipelineVersionPipelineID = *o.PipelineVersionPipelineID
		}
		qPipelineVersionPipelineID := qrPipelineVersionPipelineID
		if qPipelineVersionPipelineID != "" {

			if err := r.SetQueryParam("pipelineVersion.pipelineId", qPipelineVersionPipelineID); err != nil {
				return err
			}
		}
	}

	if o.PipelineVersionPipelineVersionID != nil {

		// query param pipelineVersion.pipelineVersionId
		var qrPipelineVersionPipelineVersionID string

		if o.PipelineVersionPipelineVersionID != nil {
			qrPipelineVersionPipelineVersionID = *o.PipelineVersionPipelineVersionID
		}
		qPipelineVersionPipelineVersionID := qrPipelineVersionPipelineVersionID
		if qPipelineVersionPipelineVersionID != "" {

			if err := r.SetQueryParam("pipelineVersion.pipelineVersionId", qPipelineVersionPipelineVersionID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
