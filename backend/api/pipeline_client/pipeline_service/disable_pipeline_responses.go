// Code generated by go-swagger; DO NOT EDIT.

package pipeline_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	fmt "fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	pipeline_model "github.com/googleprivate/ml/backend/api/pipeline_model"
)

// DisablePipelineReader is a Reader for the DisablePipeline structure.
type DisablePipelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisablePipelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDisablePipelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewDisablePipelineDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDisablePipelineOK creates a DisablePipelineOK with default headers values
func NewDisablePipelineOK() *DisablePipelineOK {
	return &DisablePipelineOK{}
}

/*DisablePipelineOK handles this case with default header values.

DisablePipelineOK disable pipeline o k
*/
type DisablePipelineOK struct {
	Payload pipeline_model.ProtobufEmpty
}

func (o *DisablePipelineOK) Error() string {
	return fmt.Sprintf("[POST /apis/v1alpha2/jobs/{id}/disable][%d] disablePipelineOK  %+v", 200, o.Payload)
}

func (o *DisablePipelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisablePipelineDefault creates a DisablePipelineDefault with default headers values
func NewDisablePipelineDefault(code int) *DisablePipelineDefault {
	return &DisablePipelineDefault{
		_statusCode: code,
	}
}

/*DisablePipelineDefault handles this case with default header values.

DisablePipelineDefault disable pipeline default
*/
type DisablePipelineDefault struct {
	_statusCode int

	Payload *pipeline_model.APIStatus
}

// Code gets the status code for the disable pipeline default response
func (o *DisablePipelineDefault) Code() int {
	return o._statusCode
}

func (o *DisablePipelineDefault) Error() string {
	return fmt.Sprintf("[POST /apis/v1alpha2/jobs/{id}/disable][%d] DisablePipeline default  %+v", o._statusCode, o.Payload)
}

func (o *DisablePipelineDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pipeline_model.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
