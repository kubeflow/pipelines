# PIPELINE DEFINITION
# Name: parallel-for-failure
# Description: Simple ParallelFor loop that fails to test DAG status updates
components:
  comp-fail-task:
    executorLabel: exec-fail-task
    inputDefinitions:
      parameters:
        item:
          parameterType: STRING
  comp-for-loop-2:
    dag:
      tasks:
        fail-task:
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-fail-task
          inputs:
            parameters:
              item:
                componentInputParameter: pipelinechannel--loop-item-param-1
          taskInfo:
            name: fail-task
    inputDefinitions:
      parameters:
        pipelinechannel--loop-item-param-1:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-fail-task:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - fail_task
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.13.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef fail_task(item: str):\n    \"\"\"Component that always fails.\"\
          \"\"\n    import sys\n    print(f\"Processing {item}\")\n    print(\"This\
          \ task is designed to fail for testing purposes\")\n    sys.exit(1)\n\n"
        image: python:3.9
pipelineInfo:
  description: Simple ParallelFor loop that fails to test DAG status updates
  name: parallel-for-failure
root:
  dag:
    tasks:
      for-loop-2:
        componentRef:
          name: comp-for-loop-2
        parameterIterator:
          itemInput: pipelinechannel--loop-item-param-1
          items:
            raw: '["item1", "item2", "item3"]'
        taskInfo:
          name: for-loop-2
schemaVersion: 2.1.0
sdkVersion: kfp-2.13.0
