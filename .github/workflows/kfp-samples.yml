name: KFP Samples

on:
  push:
    branches:
      - master
  pull_request:
    paths:
      - '.github/resources/**'
      - '.github/workflows/kfp-samples.yml'
      - '.github/workflows/kubeflow-pipelines-integration-v2.yml'
      - 'backend/**'
      - 'samples/**'
      - 'samples/core/dataflow/**'
      - 'samples/core/parameterized_tfx_oss/**'

jobs:
  samples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [ "v1.29.2", "v1.30.2", "v1.31.0" ]
    name: KFP Samples - K8s ${{ matrix.k8s_version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Create KFP cluster
      uses: ./.github/actions/kfp-cluster
      with:
        k8s_version: ${{ matrix.k8s_version }}

    - name: Build and upload the sample Modelcar image to Kind
      run: |
        docker build -f samples/v2/modelcar/Dockerfile -t registry.domain.local/modelcar:test .
        kind --name kfp load docker-image registry.domain.local/modelcar:test

    - name: Forward API port
      run: ./.github/resources/scripts/forward-port.sh "kubeflow" "ml-pipeline" 8888 8888

    - name: Run Samples Tests
      id: tests
      env:
        PULL_NUMBER: ${{ github.event.pull_request.number }}
        REPO_NAME: ${{ github.repository }}
      run: |
        ./backend/src/v2/test/sample-test.sh
      continue-on-error: true

    - name: Collect failed logs
      if: steps.tests.outcome != 'success'
      run: | 
        ./.github/resources/scripts/collect-logs.sh --ns kubeflow --output /tmp/tmp_pod_log.txt
        exit 1

    - name: Collect test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: kfp-samples-tests-artifacts-k8s-${{ matrix.k8s_version }}
        path: /tmp/tmp*/*

