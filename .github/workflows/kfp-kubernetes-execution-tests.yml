name: k8s execution tests

on:
  push:
    branches: [master]

  pull_request:
    paths:
      - '.github/workflows/kfp-kubernetes-execution-tests.yml'
      - '.github/resources/**'
      - 'sdk/python/**'
      - 'api/v2alpha1/**'
      - 'kubernetes_platform/**'
      - 'backend/**'
      - '!**/*.md'
      - '!**/OWNERS'

jobs:
  kfp-kubernetes-execution-tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        k8s_version: [ "v1.29.2", "v1.31.0" ]
    name: kfp-kubernetes execution tests - K8s ${{ matrix.k8s_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # This is intended to address disk space issues that have surfaced
      # intermittently during CI -
      # https://github.com/actions/runner-images/issues/2840#issuecomment-1284059930
      - name: Free up space in /dev/root
        run: |
            echo "Disk usage before clean up:"
            df -h
            sudo rm -rf /usr/share/dotnet
            sudo rm -rf "$AGENT_TOOLSDIRECTORY"
            echo "Disk usage after clean up:"
            df -h

      - name: Create KFP cluster
        id: create-kfp-cluster
        uses: ./.github/actions/kfp-cluster
        with:
          k8s_version: ${{ matrix.k8s_version }}
        continue-on-error: true

      - name: Forward API port
        if: ${{ steps.create-kfp-cluster.outcome == 'success' }}
        id: forward-api-port
        run: ./.github/resources/scripts/forward-port.sh "kubeflow" "ml-pipeline" 8888 8888
        continue-on-error: true

      - name: Install protobuf dependencies & kfp-pipeline-spec
        if: ${{ steps.forward-api-port.outcome == 'success' }}
        id: install-protobuf-deps
        uses: ./.github/actions/protobuf

      - name: Install kfp & kfp-kubernetes from source
        if: ${{ steps.install-protobuf-deps.outcome == 'success' }}
        id: install-kfp-k8s-deps
        uses: ./.github/actions/kfp-k8s

      - name: Install requirements
        id: install-requirements
        if: ${{ steps.install-kfp-kubernetes.outcome == 'success' }}
        run: pip install -r ./test/kfp-kubernetes-execution-tests/requirements.txt

      - name: Run tests
        id: test
        if: ${{ steps.install-kfp-k8s-deps.outcome == 'success' }}
        env:
          PULL_NUMBER: ${{ github.event.pull_request.number }}
          REPO_NAME: ${{ github.repository }}
        run: |
          export KFP_ENDPOINT="http://localhost:8888"
          export TIMEOUT_SECONDS=2700
          pytest ./test/kfp-kubernetes-execution-tests/sdk_execution_tests.py --asyncio-task-timeout $TIMEOUT_SECONDS
        continue-on-error: true

      - name: Collect failed logs
        if: ${{ steps.create-kfp-cluster.outcome != 'success' || steps.forward-api-port.outcome != 'success' || steps.test.outcome != 'success'}}
        run: |
          ./.github/resources/scripts/collect-logs.sh --ns kubeflow --output /tmp/tmp_pod_log.txt
          exit 1

      - name: Collect test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kfp-execution-tests-artifacts-k8s-${{ matrix.k8s_version }}
          path: /tmp/tmp*/*
