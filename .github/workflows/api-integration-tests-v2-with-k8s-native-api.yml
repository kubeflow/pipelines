name: KFP API Integration V2 with K8s native API tests

on:
  push:
    branches: [master]

  pull_request:
    paths:
      - '.github/workflows/api-integration-tests-v2-with-k8s-native-api.yml'
      - '.github/resources/**'
      - 'api/**'
      - 'go.mod'
      - 'go.sum'
      - 'backend/**'
      - 'manifests/kustomize/**'
      - 'test/**'
      - '!**/*.md'
      - '!**/OWNERS'

jobs:
  build:
    uses: ./.github/workflows/image-builds-with-cache.yml

  api-integration-tests-v2:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        pipeline_store: [ "database", "kubernetes" ]
        k8s_version: [ "v1.29.2", "v1.31.0" ]
    name: API integration tests v2 - K8s with ${{ matrix.pipeline_store }} ${{ matrix.k8s_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Free up disk space
        run: ./.github/resources/scripts/free-disk-space.sh

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Create KFP cluster
        id: create-kfp-cluster
        uses: ./.github/actions/kfp-cluster
        with:
          k8s_version: ${{ matrix.k8s_version }}
          pipeline_store: ${{ matrix.pipeline_store }}
          image_path: ${{ needs.build.outputs.IMAGE_PATH }}
          image_tag: ${{ needs.build.outputs.IMAGE_TAG }}
          image_registry: ${{ needs.build.outputs.IMAGE_REGISTRY }}
        continue-on-error: true

      - name: Forward API port
        id: forward-api-port
        if: ${{ steps.create-kfp-cluster.outcome == 'success' }}
        run: ./.github/resources/scripts/forward-port.sh "kubeflow" "ml-pipeline" 8888 8888
        continue-on-error: true

      - name: Forward MLMD port
        id: forward-mlmd-port
        if: ${{ steps.forward-api-port.outcome == 'success' }}
        run: kubectl -n kubeflow port-forward svc/metadata-grpc-service 8080:8080 &
        continue-on-error: true

      - name: API integration tests v2
        id: tests
        if: ${{ steps.forward-api-port.outcome == 'success' }}
        working-directory: ./backend/test/v2/integration
        run: go test -v ./... -namespace kubeflow -args -runIntegrationTests=true
        env:
          PULL_NUMBER: ${{ github.event.pull_request.number }}
          PIPELINE_STORE: ${{ matrix.pipeline_store }}
        continue-on-error: true

      - name: Collect failed logs
        if: ${{ steps.create-kfp-cluster.outcome != 'success' || steps.forward-api-port.outcome != 'success' || steps.forward-mlmd-port.outcome != 'success' || steps.tests.outcome != 'success' }}
        run: |
          ./.github/resources/scripts/collect-logs.sh --ns kubeflow --output /tmp/tmp_pod_log.txt
          exit 1

      - name: Collect test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kfp-api-integration-tests-v2-artifacts-k8s-${{ matrix.k8s_version }}-${{ matrix.pipeline_store }}
          path: /tmp/tmp*/*

  api-integration-tests-v2-compile-k8s:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        k8s_version: [ "v1.29.2", "v1.31.0" ]
    name: API integration tests v2 - compile pipelines with Kubernetes - K8s ${{ matrix.k8s_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Free up disk space
        run: ./.github/resources/scripts/free-disk-space.sh

      - name: Create KFP cluster
        id: create-kfp-cluster
        uses: ./.github/actions/kfp-cluster
        with:
          k8s_version: ${{ matrix.k8s_version }}
          pipeline_store: kubernetes
          image_path: ${{ needs.build.outputs.IMAGE_PATH }}
          image_tag: ${{ needs.build.outputs.IMAGE_TAG }}
          image_registry: ${{ needs.build.outputs.IMAGE_REGISTRY }}
        continue-on-error: true

      - name: Forward API port
        id: forward-api-port
        if: ${{ steps.create-kfp-cluster.outcome == 'success' }}
        run: ./.github/resources/scripts/forward-port.sh "kubeflow" "ml-pipeline" 8888 8888
        continue-on-error: true

      - name: Forward MLMD port
        id: forward-mlmd-port
        if: ${{ steps.forward-api-port.outcome == 'success' }}
        run: kubectl -n kubeflow port-forward svc/metadata-grpc-service 8080:8080 &
        continue-on-error: true

      - name: API integration tests v2
        id: tests
        if: ${{ steps.forward-api-port.outcome == 'success' }}
        working-directory: ./backend/test/v2/integration
        run: go test -v ./... -namespace kubeflow -args -runIntegrationTests=true -uploadPipelinesWithKubernetes=true
        env:
          PULL_NUMBER: ${{ github.event.pull_request.number }}
          PIPELINE_STORE: kubernetes
        continue-on-error: true

      - name: Collect failed logs
        if: ${{ steps.create-kfp-cluster.outcome != 'success' || steps.forward-api-port.outcome != 'success' || steps.forward-mlmd-port.outcome != 'success' || steps.tests.outcome != 'success' }}
        run: |
          ./.github/resources/scripts/collect-logs.sh --ns kubeflow --output /tmp/tmp_pod_log.txt
          exit 1

      - name: Collect test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kfp-api-integration-tests-v2-artifacts-compile-kubernetes-k8s-${{ matrix.k8s_version }}
          path: /tmp/tmp*/*