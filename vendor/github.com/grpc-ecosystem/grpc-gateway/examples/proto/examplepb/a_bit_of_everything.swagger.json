{
  "swagger": "2.0",
  "info": {
    "title": "A Bit of Everything",
    "version": "1.0",
    "contact": {
      "name": "gRPC-Gateway project",
      "url": "https://github.com/grpc-ecosystem/grpc-gateway",
      "email": "none@example.com"
    }
  },
  "schemes": [
    "http",
    "https",
    "wss"
  ],
  "consumes": [
    "application/json",
    "application/x-foo-mime"
  ],
  "produces": [
    "application/json",
    "application/x-foo-mime"
  ],
  "paths": {
    "/v1/example/a_bit_of_everything": {
      "post": {
        "operationId": "CreateBody",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/examplepbABitOfEverything"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/examplepbABitOfEverything"
            }
          }
        ],
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/echo/{value}": {
      "get": {
        "summary": "Summary: Echo rpc",
        "description": "Description Echo",
        "operationId": "Echo",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/subStringMessage"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "int32",
              "format": "integer"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          },
          "503": {
            "description": "Returned when the resource is temporarily unavailable.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "echo service",
          "echo rpc"
        ],
        "externalDocs": {
          "description": "Find out more Echo",
          "url": "https://github.com/grpc-ecosystem/grpc-gateway"
        }
      }
    },
    "/v1/example/a_bit_of_everything/query/{uuid}": {
      "get": {
        "operationId": "GetQuery",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "single_nested.name",
            "description": "name is nested field.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "single_nested.amount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "single_nested.ok",
            "description": " - FALSE: FALSE is false.\n - TRUE: TRUE is true.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FALSE",
              "TRUE"
            ],
            "default": "FALSE"
          },
          {
            "name": "float_value",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "double_value",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "int64_value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "uint64_value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "int32_value",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fixed64_value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "fixed32_value",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bool_value",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "string_value",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bytes_value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "uint32_value",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "enum_value",
            "description": " - ZERO: ZERO means 0\n - ONE: ONE means 1",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ZERO",
              "ONE"
            ],
            "default": "ZERO"
          },
          {
            "name": "path_enum_value",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ABC",
              "DEF"
            ],
            "default": "ABC"
          },
          {
            "name": "nested_path_enum_value",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "GHI",
              "JKL"
            ],
            "default": "GHI"
          },
          {
            "name": "sfixed32_value",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sfixed64_value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sint32_value",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sint64_value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "repeated_string_value",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "oneof_string",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nonConventionalNameValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timestamp_value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "repeated_enum_value",
            "description": "repeated enum value. it is comma-separated in query.\n\n - ZERO: ZERO means 0\n - ONE: ONE means 1",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ZERO",
                "ONE"
              ]
            }
          }
        ],
        "tags": [
          "ABitOfEverythingService"
        ],
        "deprecated": true,
        "security": [],
        "externalDocs": {
          "description": "Find out more about GetQuery",
          "url": "https://github.com/grpc-ecosystem/grpc-gateway"
        }
      }
    },
    "/v1/example/a_bit_of_everything/{float_value}/{double_value}/{int64_value}/separator/{uint64_value}/{int32_value}/{fixed64_value}/{fixed32_value}/{bool_value}/{string_value}/{uint32_value}/{sfixed32_value}/{sfixed64_value}/{sint32_value}/{sint64_value}/{nonConventionalNameValue}/{enum_value}/{path_enum_value}/{nested_path_enum_value}": {
      "post": {
        "summary": "Create a new ABitOfEverything",
        "description": "This API creates a new ABitOfEverything",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/examplepbABitOfEverything"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "parameters": [
          {
            "name": "float_value",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "double_value",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "int64_value",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "uint64_value",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "int32_value",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fixed64_value",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "fixed32_value",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bool_value",
            "in": "path",
            "required": true,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "string_value",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uint32_value",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sfixed32_value",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sfixed64_value",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sint32_value",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sint64_value",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "nonConventionalNameValue",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "enum_value",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "ZERO",
              "ONE"
            ]
          },
          {
            "name": "path_enum_value",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "ABC",
              "DEF"
            ]
          },
          {
            "name": "nested_path_enum_value",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "GHI",
              "JKL"
            ]
          }
        ],
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/{single_nested.name}": {
      "post": {
        "operationId": "DeepPathEcho",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/examplepbABitOfEverything"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "parameters": [
          {
            "name": "single_nested.name",
            "description": "name is nested field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/examplepbABitOfEverything"
            }
          }
        ],
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/{uuid}": {
      "get": {
        "operationId": "Lookup",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/examplepbABitOfEverything"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ABitOfEverythingService"
        ]
      },
      "delete": {
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ABitOfEverythingService"
        ],
        "security": [
          {
            "ApiKeyAuth": [],
            "OAuth2": [
              "read",
              "write"
            ]
          }
        ]
      },
      "put": {
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/examplepbABitOfEverything"
            }
          }
        ],
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything_repeated/{path_repeated_float_value}/{path_repeated_double_value}/{path_repeated_int64_value}/{path_repeated_uint64_value}/{path_repeated_int32_value}/{path_repeated_fixed64_value}/{path_repeated_fixed32_value}/{path_repeated_bool_value}/{path_repeated_string_value}/{path_repeated_bytes_value}/{path_repeated_uint32_value}/{path_repeated_enum_value}/{path_repeated_sfixed32_value}/{path_repeated_sfixed64_value}/{path_repeated_sint32_value}/{path_repeated_sint64_value}": {
      "get": {
        "operationId": "GetRepeatedQuery",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/examplepbABitOfEverythingRepeated"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "parameters": [
          {
            "name": "path_repeated_float_value",
            "description": "repeated values. they are comma-separated in path",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_double_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_int64_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_uint64_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_int32_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_fixed64_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_fixed32_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_bool_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "boolean",
              "format": "boolean"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_string_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_bytes_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_uint32_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_enum_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ZERO",
                "ONE"
              ]
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_sfixed32_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_sfixed64_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_sint32_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "path_repeated_sint64_value",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "minItems": 1
          }
        ],
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/echo": {
      "get": {
        "summary": "Summary: Echo rpc",
        "description": "Description Echo",
        "operationId": "Echo3",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/subStringMessage"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "int32",
              "format": "integer"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          },
          "503": {
            "description": "Returned when the resource is temporarily unavailable.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "echo service",
          "echo rpc"
        ],
        "externalDocs": {
          "description": "Find out more Echo",
          "url": "https://github.com/grpc-ecosystem/grpc-gateway"
        }
      },
      "post": {
        "summary": "Summary: Echo rpc",
        "description": "Description Echo",
        "operationId": "Echo2",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/subStringMessage"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "int32",
              "format": "integer"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          },
          "503": {
            "description": "Returned when the resource is temporarily unavailable.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "echo service",
          "echo rpc"
        ],
        "externalDocs": {
          "description": "Find out more Echo",
          "url": "https://github.com/grpc-ecosystem/grpc-gateway"
        }
      }
    },
    "/v2/example/empty": {
      "get": {
        "summary": "Create a new ABitOfEverything",
        "description": "This API creates a new ABitOfEverything",
        "operationId": "Empty",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "tags": [
          "camelCaseServiceName"
        ]
      }
    },
    "/v2/example/errorwithdetails": {
      "get": {
        "operationId": "ErrorWithDetails",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/postwithemptybody/{name}": {
      "post": {
        "operationId": "PostWithEmptyBody",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/examplepbBody"
            }
          }
        ],
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/timeout": {
      "get": {
        "operationId": "Timeout",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/withbody/{id}": {
      "post": {
        "operationId": "GetMessageWithBody",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          },
          "418": {
            "description": "I'm a teapot.",
            "schema": {
              "$ref": "#/definitions/examplepbNumericEnum"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/examplepbBody"
            }
          }
        ],
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    }
  },
  "definitions": {
    "ABitOfEverythingNested": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is nested field."
        },
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "ok": {
          "$ref": "#/definitions/NestedDeepEnum"
        }
      },
      "description": "Nested is nested type."
    },
    "MessagePathEnumNestedPathEnum": {
      "type": "string",
      "enum": [
        "GHI",
        "JKL"
      ],
      "default": "GHI"
    },
    "NestedDeepEnum": {
      "type": "string",
      "enum": [
        "FALSE",
        "TRUE"
      ],
      "default": "FALSE",
      "description": "DeepEnum is one or zero.\n\n - FALSE: FALSE is false.\n - TRUE: TRUE is true."
    },
    "examplepbABitOfEverything": {
      "type": "object",
      "properties": {
        "single_nested": {
          "$ref": "#/definitions/ABitOfEverythingNested"
        },
        "uuid": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        },
        "nested": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ABitOfEverythingNested"
          }
        },
        "float_value": {
          "type": "number",
          "format": "float"
        },
        "double_value": {
          "type": "number",
          "format": "double"
        },
        "int64_value": {
          "type": "string",
          "format": "int64"
        },
        "uint64_value": {
          "type": "string",
          "format": "uint64"
        },
        "int32_value": {
          "type": "integer",
          "format": "int32"
        },
        "fixed64_value": {
          "type": "string",
          "format": "uint64"
        },
        "fixed32_value": {
          "type": "integer",
          "format": "int64"
        },
        "bool_value": {
          "type": "boolean",
          "format": "boolean"
        },
        "string_value": {
          "type": "string"
        },
        "bytes_value": {
          "type": "string",
          "format": "byte"
        },
        "uint32_value": {
          "type": "integer",
          "format": "int64"
        },
        "enum_value": {
          "$ref": "#/definitions/examplepbNumericEnum"
        },
        "path_enum_value": {
          "$ref": "#/definitions/pathenumPathEnum"
        },
        "nested_path_enum_value": {
          "$ref": "#/definitions/MessagePathEnumNestedPathEnum"
        },
        "sfixed32_value": {
          "type": "integer",
          "format": "int32"
        },
        "sfixed64_value": {
          "type": "string",
          "format": "int64"
        },
        "sint32_value": {
          "type": "integer",
          "format": "int32"
        },
        "sint64_value": {
          "type": "string",
          "format": "int64"
        },
        "repeated_string_value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "oneof_empty": {
          "$ref": "#/definitions/protobufEmpty"
        },
        "oneof_string": {
          "type": "string"
        },
        "map_value": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/examplepbNumericEnum"
          }
        },
        "mapped_string_value": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "mapped_nested_value": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ABitOfEverythingNested"
          }
        },
        "nonConventionalNameValue": {
          "type": "string"
        },
        "timestamp_value": {
          "type": "string",
          "format": "date-time"
        },
        "repeated_enum_value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/examplepbNumericEnum"
          },
          "title": "repeated enum value. it is comma-separated in query"
        }
      },
      "description": "Intentionaly complicated message type to cover many features of Protobuf.",
      "title": "A bit of everything",
      "externalDocs": {
        "description": "Find out more about ABitOfEverything",
        "url": "https://github.com/grpc-ecosystem/grpc-gateway"
      },
      "required": [
        "uuid"
      ]
    },
    "examplepbABitOfEverythingRepeated": {
      "type": "object",
      "properties": {
        "path_repeated_float_value": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "title": "repeated values. they are comma-separated in path"
        },
        "path_repeated_double_value": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "path_repeated_int64_value": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "path_repeated_uint64_value": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        },
        "path_repeated_int32_value": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "path_repeated_fixed64_value": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        },
        "path_repeated_fixed32_value": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "path_repeated_bool_value": {
          "type": "array",
          "items": {
            "type": "boolean",
            "format": "boolean"
          }
        },
        "path_repeated_string_value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path_repeated_bytes_value": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "path_repeated_uint32_value": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "path_repeated_enum_value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/examplepbNumericEnum"
          }
        },
        "path_repeated_sfixed32_value": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "path_repeated_sfixed64_value": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "path_repeated_sint32_value": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "path_repeated_sint64_value": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "title": "ABitOfEverythingRepeated is used to validate repeated path parameter functionality"
    },
    "examplepbBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "examplepbNumericEnum": {
      "type": "string",
      "enum": [
        "ZERO",
        "ONE"
      ],
      "default": "ZERO",
      "description": "NumericEnum is one or zero.\n\n - ZERO: ZERO means 0\n - ONE: ONE means 1"
    },
    "pathenumPathEnum": {
      "type": "string",
      "enum": [
        "ABC",
        "DEF"
      ],
      "default": "ABC"
    },
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    },
    "subStringMessage": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    },
    "BasicAuth": {
      "type": "basic"
    },
    "OAuth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://example.com/oauth/authorize",
      "tokenUrl": "https://example.com/oauth/token",
      "scopes": {
        "admin": "Grants read and write access to administrative information",
        "read": "Grants read access",
        "write": "Grants write access"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": [],
      "BasicAuth": []
    },
    {
      "ApiKeyAuth": [],
      "OAuth2": [
        "read",
        "write"
      ]
    }
  ],
  "externalDocs": {
    "description": "More about gRPC-Gateway",
    "url": "https://github.com/grpc-ecosystem/grpc-gateway"
  }
}
