{
  "swagger": "2.0",
  "info": {
    "title": "EVE Swagger Interface",
    "description": "An OpenAPI for EVE Online",
    "version": "0.7.5"
  },
  "host": "esi.tech.ccp.is",
  "basePath": "/latest",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/alliances/{alliance_id}/": {
      "get": {
        "description": "Public information about an alliance\n\n---\nAlternate route: `/dev/alliances/{alliance_id}/`\n\nAlternate route: `/v3/alliances/{alliance_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get alliance information",
        "tags": [
          "Alliance"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/alliance_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Public data about an alliance",
            "examples": {
              "application/json": {
                "name": "C C P Alliance",
                "ticker": "<C C P>",
                "creator_id": 12345,
                "creator_corporation_id": 45678,
                "executor_corporation_id": 98356193,
                "date_founded": "2016-06-26T21:00:00Z"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "name",
                "creator_id",
                "creator_corporation_id",
                "ticker",
                "date_founded"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "the full name of the alliance",
                  "title": "get_alliances_alliance_id_name"
                },
                "creator_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ID of the character that created the alliance",
                  "title": "get_alliances_alliance_id_creator_id"
                },
                "creator_corporation_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ID of the corporation that created the alliance",
                  "title": "get_alliances_alliance_id_creator_corporation_id"
                },
                "ticker": {
                  "type": "string",
                  "description": "the short name of the alliance",
                  "title": "get_alliances_alliance_id_ticker"
                },
                "executor_corporation_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "the executor corporation ID, if this alliance is not closed",
                  "title": "get_alliances_alliance_id_executor_corporation_id"
                },
                "date_founded": {
                  "type": "string",
                  "format": "date-time",
                  "title": "get_alliances_alliance_id_date_founded",
                  "description": "date_founded string"
                },
                "faction_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Faction ID this alliance is fighting for, if this alliance is enlisted in factional warfare",
                  "title": "get_alliances_alliance_id_faction_id"
                }
              },
              "title": "get_alliances_alliance_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Alliance not found",
            "schema": {
              "type": "object",
              "title": "get_alliances_alliance_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_alliances_alliance_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_alliances_alliance_id",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      }
    },
    "/alliances/{alliance_id}/corporations/": {
      "get": {
        "description": "List all current member corporations of an alliance\n\n---\nAlternate route: `/dev/alliances/{alliance_id}/corporations/`\n\nAlternate route: `/legacy/alliances/{alliance_id}/corporations/`\n\nAlternate route: `/v1/alliances/{alliance_id}/corporations/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List alliance's corporations",
        "tags": [
          "Alliance"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/alliance_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of corporation IDs",
            "examples": {
              "application/json": [
                98000001
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "uniqueItems": true,
                "title": "get_alliances_alliance_id_corporations_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_alliances_alliance_id_corporations_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_alliances_alliance_id_corporations",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/alliances/names/": {
      "get": {
        "description": "Resolve a set of alliance IDs to alliance names\n\n---\nAlternate route: `/dev/alliances/names/`\n\nAlternate route: `/v2/alliances/names/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get alliance names",
        "tags": [
          "Alliance"
        ],
        "parameters": [
          {
            "name": "alliance_ids",
            "in": "query",
            "description": "A comma separated list of alliance IDs",
            "required": true,
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of id/name associations",
            "examples": {
              "application/json": [
                {
                  "alliance_id": 1000171,
                  "alliance_name": "Republic University"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "object",
                "required": [
                  "alliance_id",
                  "alliance_name"
                ],
                "properties": {
                  "alliance_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_alliances_names_alliance_id",
                    "description": "alliance_id integer"
                  },
                  "alliance_name": {
                    "type": "string",
                    "title": "get_alliances_names_alliance_name",
                    "description": "alliance_name string"
                  }
                },
                "title": "get_alliances_names_200_ok",
                "description": "200 ok object"
              },
              "title": "get_alliances_names_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_alliances_names",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/alliances/{alliance_id}/icons/": {
      "get": {
        "description": "Get the icon urls for a alliance\n\n---\nAlternate route: `/dev/alliances/{alliance_id}/icons/`\n\nAlternate route: `/legacy/alliances/{alliance_id}/icons/`\n\nAlternate route: `/v1/alliances/{alliance_id}/icons/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get alliance icon",
        "tags": [
          "Alliance"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/alliance_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Icon URLs for the given alliance id and server",
            "examples": {
              "application/json": {
                "px64x64": "https://imageserver.eveonline.com/Alliance/503818424_64.png",
                "px128x128": "https://imageserver.eveonline.com/Alliance/503818424_128.png"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "px64x64": {
                  "type": "string",
                  "title": "get_alliances_alliance_id_icons_px64x64",
                  "description": "px64x64 string"
                },
                "px128x128": {
                  "type": "string",
                  "title": "get_alliances_alliance_id_icons_px128x128",
                  "description": "px128x128 string"
                }
              },
              "title": "get_alliances_alliance_id_icons_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "No image server for this datasource",
            "examples": {
              "application/json": {
                "error": "No image server for this datasource"
              }
            },
            "schema": {
              "type": "object",
              "description": "No image server for this datasource",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "error message",
                  "title": "get_alliances_alliance_id_icons_error"
                }
              },
              "title": "get_alliances_alliance_id_icons_not_found"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_alliances_alliance_id_icons",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/alliances/": {
      "get": {
        "description": "List all active player alliances\n\n---\nAlternate route: `/dev/alliances/`\n\nAlternate route: `/legacy/alliances/`\n\nAlternate route: `/v1/alliances/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List all alliances",
        "tags": [
          "Alliance"
        ],
        "responses": {
          "200": {
            "description": "List of Alliance IDs",
            "examples": {
              "application/json": [
                99000001,
                99000002
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 5000,
              "items": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "uniqueItems": true,
                "title": "get_alliances_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_alliances_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_alliances",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/assets/": {
      "get": {
        "description": "Return a list of the characters assets\n\n---\nAlternate route: `/dev/characters/{character_id}/assets/`\n\nAlternate route: `/v3/characters/{character_id}/assets/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get character assets",
        "tags": [
          "Assets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A flat list of the users assets",
            "examples": {
              "application/json": [
                {
                  "location_flag": "Hangar",
                  "location_id": 60002959,
                  "is_singleton": true,
                  "type_id": 3516,
                  "item_id": 1000000016835,
                  "location_type": "station",
                  "quantity": 1
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "type_id",
                  "quantity",
                  "location_id",
                  "location_type",
                  "item_id",
                  "location_flag",
                  "is_singleton"
                ],
                "properties": {
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_assets_type_id",
                    "description": "type_id integer"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_assets_quantity",
                    "description": "quantity integer"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_characters_character_id_assets_location_id",
                    "description": "location_id integer"
                  },
                  "location_type": {
                    "type": "string",
                    "enum": [
                      "station",
                      "solar_system",
                      "other"
                    ],
                    "title": "get_characters_character_id_assets_location_type",
                    "description": "location_type string"
                  },
                  "item_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_characters_character_id_assets_item_id",
                    "description": "item_id integer"
                  },
                  "location_flag": {
                    "type": "string",
                    "enum": [
                      "AssetSafety",
                      "AutoFit",
                      "Cargo",
                      "CorpseBay",
                      "Deliveries",
                      "DroneBay",
                      "FighterBay",
                      "FighterTube0",
                      "FighterTube1",
                      "FighterTube2",
                      "FighterTube3",
                      "FighterTube4",
                      "FleetHangar",
                      "Hangar",
                      "HangarAll",
                      "HiSlot0",
                      "HiSlot1",
                      "HiSlot2",
                      "HiSlot3",
                      "HiSlot4",
                      "HiSlot5",
                      "HiSlot6",
                      "HiSlot7",
                      "HiddenModifiers",
                      "Implant",
                      "LoSlot0",
                      "LoSlot1",
                      "LoSlot2",
                      "LoSlot3",
                      "LoSlot4",
                      "LoSlot5",
                      "LoSlot6",
                      "LoSlot7",
                      "Locked",
                      "MedSlot0",
                      "MedSlot1",
                      "MedSlot2",
                      "MedSlot3",
                      "MedSlot4",
                      "MedSlot5",
                      "MedSlot6",
                      "MedSlot7",
                      "QuafeBay",
                      "RigSlot0",
                      "RigSlot1",
                      "RigSlot2",
                      "RigSlot3",
                      "RigSlot4",
                      "RigSlot5",
                      "RigSlot6",
                      "RigSlot7",
                      "ShipHangar",
                      "Skill",
                      "SpecializedAmmoHold",
                      "SpecializedCommandCenterHold",
                      "SpecializedFuelBay",
                      "SpecializedGasHold",
                      "SpecializedIndustrialShipHold",
                      "SpecializedLargeShipHold",
                      "SpecializedMaterialBay",
                      "SpecializedMediumShipHold",
                      "SpecializedMineralHold",
                      "SpecializedOreHold",
                      "SpecializedPlanetaryCommoditiesHold",
                      "SpecializedSalvageHold",
                      "SpecializedShipHold",
                      "SpecializedSmallShipHold",
                      "SubSystemBay",
                      "SubSystemSlot0",
                      "SubSystemSlot1",
                      "SubSystemSlot2",
                      "SubSystemSlot3",
                      "SubSystemSlot4",
                      "SubSystemSlot5",
                      "SubSystemSlot6",
                      "SubSystemSlot7",
                      "Unlocked",
                      "Wardrobe"
                    ],
                    "title": "get_characters_character_id_assets_location_flag",
                    "description": "location_flag string"
                  },
                  "is_singleton": {
                    "type": "boolean",
                    "title": "get_characters_character_id_assets_is_singleton",
                    "description": "is_singleton boolean"
                  }
                },
                "title": "get_characters_character_id_assets_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_assets_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-assets.read_assets.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_assets",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      }
    },
    "/corporations/{corporation_id}/assets/": {
      "get": {
        "description": "Return a list of the corporation assets\n\n---\nAlternate route: `/v2/corporations/{corporation_id}/assets/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n\n\n---\n[This route has an available update](https://esi.tech.ccp.is/diff/latest/dev/#GET-/corporations/{corporation_id}/assets/)",
        "summary": "Get corporation assets",
        "tags": [
          "Assets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of assets",
            "examples": {
              "application/json": [
                {
                  "location_flag": "Hangar",
                  "location_id": 60002959,
                  "is_singleton": true,
                  "type_id": 3516,
                  "item_id": 1000000016835,
                  "location_type": "station",
                  "quantity": 1
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "type_id",
                  "quantity",
                  "location_id",
                  "location_type",
                  "item_id",
                  "location_flag",
                  "is_singleton"
                ],
                "properties": {
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_assets_type_id",
                    "description": "type_id integer"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_assets_quantity",
                    "description": "quantity integer"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_corporations_corporation_id_assets_location_id",
                    "description": "location_id integer"
                  },
                  "location_type": {
                    "type": "string",
                    "enum": [
                      "station",
                      "solar_system",
                      "other"
                    ],
                    "title": "get_corporations_corporation_id_assets_location_type",
                    "description": "location_type string"
                  },
                  "item_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_corporations_corporation_id_assets_item_id",
                    "description": "item_id integer"
                  },
                  "is_singleton": {
                    "type": "boolean",
                    "title": "get_corporations_corporation_id_assets_is_singleton",
                    "description": "is_singleton boolean"
                  },
                  "location_flag": {
                    "type": "string",
                    "enum": [
                      "AssetSafety",
                      "AutoFit",
                      "Bonus",
                      "Booster",
                      "BoosterBay",
                      "Capsule",
                      "Cargo",
                      "CorpDeliveries",
                      "CorpSAG1",
                      "CorpSAG2",
                      "CorpSAG3",
                      "CorpSAG4",
                      "CorpSAG5",
                      "CorpSAG6",
                      "CorpSAG7",
                      "CrateLoot",
                      "Deliveries",
                      "DroneBay",
                      "DustBattle",
                      "DustDatabank",
                      "FighterBay",
                      "FighterTube0",
                      "FighterTube1",
                      "FighterTube2",
                      "FighterTube3",
                      "FighterTube4",
                      "FleetHangar",
                      "Hangar",
                      "HangarAll",
                      "HiSlot0",
                      "HiSlot1",
                      "HiSlot2",
                      "HiSlot3",
                      "HiSlot4",
                      "HiSlot5",
                      "HiSlot6",
                      "HiSlot7",
                      "HiddenModifers",
                      "Implant",
                      "Impounded",
                      "JunkyardReprocessed",
                      "JunkyardTrashed",
                      "LoSlot0",
                      "LoSlot1",
                      "LoSlot2",
                      "LoSlot3",
                      "LoSlot4",
                      "LoSlot5",
                      "LoSlot6",
                      "LoSlot7",
                      "Locked",
                      "MedSlot0",
                      "MedSlot1",
                      "MedSlot2",
                      "MedSlot3",
                      "MedSlot4",
                      "MedSlot5",
                      "MedSlot6",
                      "MedSlot7",
                      "OfficeFolder",
                      "Pilot",
                      "PlanetSurface",
                      "QuafeBay",
                      "Reward",
                      "RigSlot0",
                      "RigSlot1",
                      "RigSlot2",
                      "RigSlot3",
                      "RigSlot4",
                      "RigSlot5",
                      "RigSlot6",
                      "RigSlot7",
                      "SecondaryStorage",
                      "ServiceSlot0",
                      "ServiceSlot1",
                      "ServiceSlot2",
                      "ServiceSlot3",
                      "ServiceSlot4",
                      "ServiceSlot5",
                      "ServiceSlot6",
                      "ServiceSlot7",
                      "ShipHangar",
                      "ShipOffline",
                      "Skill",
                      "SkillInTraining",
                      "SpecializedAmmoHold",
                      "SpecializedCommandCenterHold",
                      "SpecializedFuelBay",
                      "SpecializedGasHold",
                      "SpecializedIndustrialShipHold",
                      "SpecializedLargeShipHold",
                      "SpecializedMaterialBay",
                      "SpecializedMediumShipHold",
                      "SpecializedMineralHold",
                      "SpecializedOreHold",
                      "SpecializedPlanetaryCommoditiesHold",
                      "SpecializedSalvageHold",
                      "SpecializedShipHold",
                      "SpecializedSmallShipHold",
                      "StructureActive",
                      "StructureFuel",
                      "StructureInactive",
                      "StructureOffline",
                      "SubSystemSlot0",
                      "SubSystemSlot1",
                      "SubSystemSlot2",
                      "SubSystemSlot3",
                      "SubSystemSlot4",
                      "SubSystemSlot5",
                      "SubSystemSlot6",
                      "SubSystemSlot7",
                      "SubsystemBay",
                      "Unlocked",
                      "Wallet",
                      "Wardrobe"
                    ],
                    "title": "get_corporations_corporation_id_assets_location_flag",
                    "description": "location_flag string"
                  }
                },
                "title": "get_corporations_corporation_id_assets_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_assets_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-assets.read_corporation_assets.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_assets",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "v2"
        ]
      }
    },
    "/characters/{character_id}/assets/names/": {
      "post": {
        "description": "Return names for a set of item ids, which you can get from character assets endpoint. Typically used for items that can customize names, like containers or ships.\n\n---\nAlternate route: `/dev/characters/{character_id}/assets/names/`\n\nAlternate route: `/legacy/characters/{character_id}/assets/names/`\n\nAlternate route: `/v1/characters/{character_id}/assets/names/`\n",
        "summary": "Get character asset names",
        "tags": [
          "Assets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "item_ids",
            "in": "body",
            "description": "A list of item ids",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1000,
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "format": "int64",
                "title": "post_characters_character_id_assets_names_item_id",
                "description": "item_id integer"
              },
              "title": "post_characters_character_id_assets_names_item_ids",
              "description": "item_ids array"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of asset names",
            "examples": {
              "application/json": [
                {
                  "item_id": 12345,
                  "name": "Awesome Name"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "item_id",
                  "name"
                ],
                "properties": {
                  "item_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "post_characters_character_id_assets_names_item_id",
                    "description": "item_id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "post_characters_character_id_assets_names_name",
                    "description": "name string"
                  }
                },
                "title": "post_characters_character_id_assets_names_200_ok",
                "description": "200 ok object"
              },
              "title": "post_characters_character_id_assets_names_ok",
              "description": "200 ok array"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-assets.read_assets.v1"
            ]
          }
        ],
        "operationId": "post_characters_character_id_assets_names",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/assets/locations/": {
      "post": {
        "description": "Return locations for a set of item ids, which you can get from character assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)\n\n---\nAlternate route: `/dev/characters/{character_id}/assets/locations/`\n\nAlternate route: `/v2/characters/{character_id}/assets/locations/`\n",
        "summary": "Get character asset locations",
        "tags": [
          "Assets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "item_ids",
            "in": "body",
            "description": "A list of item ids",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1000,
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "format": "int64",
                "title": "post_characters_character_id_assets_locations_item_id",
                "description": "item_id integer"
              },
              "title": "post_characters_character_id_assets_locations_item_ids",
              "description": "item_ids array"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of asset locations",
            "examples": {
              "application/json": [
                {
                  "item_id": 12345,
                  "position": {
                    "x": 1.2,
                    "y": 2.3,
                    "z": -3.4
                  }
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "item_id",
                  "position"
                ],
                "properties": {
                  "item_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "post_characters_character_id_assets_locations_item_id",
                    "description": "item_id integer"
                  },
                  "position": {
                    "type": "object",
                    "required": [
                      "x",
                      "y",
                      "z"
                    ],
                    "properties": {
                      "x": {
                        "type": "number",
                        "format": "double",
                        "title": "post_characters_character_id_assets_locations_x",
                        "description": "x number"
                      },
                      "y": {
                        "type": "number",
                        "format": "double",
                        "title": "post_characters_character_id_assets_locations_y",
                        "description": "y number"
                      },
                      "z": {
                        "type": "number",
                        "format": "double",
                        "title": "post_characters_character_id_assets_locations_z",
                        "description": "z number"
                      }
                    },
                    "title": "post_characters_character_id_assets_locations_position",
                    "description": "position object"
                  }
                },
                "title": "post_characters_character_id_assets_locations_200_ok",
                "description": "200 ok object"
              },
              "title": "post_characters_character_id_assets_locations_ok",
              "description": "200 ok array"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-assets.read_assets.v1"
            ]
          }
        ],
        "operationId": "post_characters_character_id_assets_locations",
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/corporations/{corporation_id}/assets/names/": {
      "post": {
        "description": "Return names for a set of item ids, which you can get from corporation assets endpoint. Only valid for items that can customize names, like containers or ships.\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/assets/names/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/assets/names/`\n\nAlternate route: `/v1/corporations/{corporation_id}/assets/names/`\n\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get coporation asset names",
        "tags": [
          "Assets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "item_ids",
            "in": "body",
            "description": "A list of item ids",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1000,
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "format": "int64",
                "title": "post_corporations_corporation_id_assets_names_item_id",
                "description": "item_id integer"
              },
              "title": "post_corporations_corporation_id_assets_names_item_ids",
              "description": "item_ids array"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of asset names",
            "examples": {
              "application/json": [
                {
                  "item_id": 12345,
                  "name": "Awesome Name"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "item_id",
                  "name"
                ],
                "properties": {
                  "item_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "post_corporations_corporation_id_assets_names_item_id",
                    "description": "item_id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "post_corporations_corporation_id_assets_names_name",
                    "description": "name string"
                  }
                },
                "title": "post_corporations_corporation_id_assets_names_200_ok",
                "description": "200 ok object"
              },
              "title": "post_corporations_corporation_id_assets_names_ok",
              "description": "200 ok array"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-assets.read_corporation_assets.v1"
            ]
          }
        ],
        "operationId": "post_corporations_corporation_id_assets_names",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/assets/locations/": {
      "post": {
        "description": "Return locations for a set of item ids, which you can get from corporation assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/assets/locations/`\n\nAlternate route: `/v2/corporations/{corporation_id}/assets/locations/`\n\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation asset locations",
        "tags": [
          "Assets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "item_ids",
            "in": "body",
            "description": "A list of item ids",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1000,
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "format": "int64",
                "title": "post_corporations_corporation_id_assets_locations_item_id",
                "description": "item_id integer"
              },
              "title": "post_corporations_corporation_id_assets_locations_item_ids",
              "description": "item_ids array"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of asset locations",
            "examples": {
              "application/json": [
                {
                  "item_id": 12345,
                  "position": {
                    "x": 1.2,
                    "y": 2.3,
                    "z": -3.4
                  }
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "item_id",
                  "position"
                ],
                "properties": {
                  "item_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "post_corporations_corporation_id_assets_locations_item_id",
                    "description": "item_id integer"
                  },
                  "position": {
                    "type": "object",
                    "required": [
                      "x",
                      "y",
                      "z"
                    ],
                    "properties": {
                      "x": {
                        "type": "number",
                        "format": "double",
                        "title": "post_corporations_corporation_id_assets_locations_x",
                        "description": "x number"
                      },
                      "y": {
                        "type": "number",
                        "format": "double",
                        "title": "post_corporations_corporation_id_assets_locations_y",
                        "description": "y number"
                      },
                      "z": {
                        "type": "number",
                        "format": "double",
                        "title": "post_corporations_corporation_id_assets_locations_z",
                        "description": "z number"
                      }
                    },
                    "title": "post_corporations_corporation_id_assets_locations_position",
                    "description": "position object"
                  }
                },
                "title": "post_corporations_corporation_id_assets_locations_200_ok",
                "description": "200 ok object"
              },
              "title": "post_corporations_corporation_id_assets_locations_ok",
              "description": "200 ok array"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-assets.read_corporation_assets.v1"
            ]
          }
        ],
        "operationId": "post_corporations_corporation_id_assets_locations",
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/characters/{character_id}/bookmarks/": {
      "get": {
        "description": "A list of your character's personal bookmarks\n\n---\nAlternate route: `/dev/characters/{character_id}/bookmarks/`\n\nAlternate route: `/v2/characters/{character_id}/bookmarks/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List bookmarks",
        "tags": [
          "Bookmarks"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of bookmarks",
            "examples": {
              "application/json": [
                {
                  "bookmark_id": 4,
                  "location_id": 30003430,
                  "item": {
                    "type_id": 29633,
                    "item_id": 50006722
                  },
                  "folder_id": 5,
                  "label": "Stargate",
                  "notes": "This is a stargate",
                  "created": "2016-08-09T11:57:47Z",
                  "creator_id": 2112625428
                },
                {
                  "bookmark_id": 5,
                  "location_id": 30003430,
                  "coordinates": {
                    "x": -2958928814000,
                    "y": -338367275823,
                    "z": 2114538075090
                  },
                  "folder_id": 5,
                  "label": "Random location",
                  "notes": "This is a random location in space",
                  "created": "2016-08-09T11:57:47Z",
                  "creator_id": 2112625428
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "bookmark_id",
                  "created",
                  "label",
                  "notes",
                  "location_id",
                  "creator_id"
                ],
                "properties": {
                  "bookmark_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_bookmarks_bookmark_id",
                    "description": "bookmark_id integer"
                  },
                  "folder_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_bookmarks_folder_id",
                    "description": "folder_id integer"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_characters_character_id_bookmarks_created",
                    "description": "created string"
                  },
                  "label": {
                    "type": "string",
                    "title": "get_characters_character_id_bookmarks_label",
                    "description": "label string"
                  },
                  "notes": {
                    "type": "string",
                    "title": "get_characters_character_id_bookmarks_notes",
                    "description": "notes string"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_bookmarks_location_id",
                    "description": "location_id integer"
                  },
                  "creator_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_bookmarks_creator_id",
                    "description": "creator_id integer"
                  },
                  "item": {
                    "type": "object",
                    "description": "Optional object that is returned if a bookmark was made on a particular item.",
                    "required": [
                      "item_id",
                      "type_id"
                    ],
                    "properties": {
                      "item_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_bookmarks_item_id",
                        "description": "item_id integer"
                      },
                      "type_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_bookmarks_type_id",
                        "description": "type_id integer"
                      }
                    },
                    "title": "get_characters_character_id_bookmarks_item"
                  },
                  "coordinates": {
                    "type": "object",
                    "description": "Optional object that is returned if a bookmark was made on a planet or a random location in space.",
                    "required": [
                      "x",
                      "y",
                      "z"
                    ],
                    "properties": {
                      "x": {
                        "type": "number",
                        "format": "double",
                        "title": "get_characters_character_id_bookmarks_x",
                        "description": "x number"
                      },
                      "y": {
                        "type": "number",
                        "format": "double",
                        "title": "get_characters_character_id_bookmarks_y",
                        "description": "y number"
                      },
                      "z": {
                        "type": "number",
                        "format": "double",
                        "title": "get_characters_character_id_bookmarks_z",
                        "description": "z number"
                      }
                    },
                    "title": "get_characters_character_id_bookmarks_coordinates"
                  }
                },
                "title": "get_characters_character_id_bookmarks_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_bookmarks_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-bookmarks.read_character_bookmarks.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_bookmarks",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/characters/{character_id}/bookmarks/folders/": {
      "get": {
        "description": "A list of your character's personal bookmark folders\n\n---\nAlternate route: `/dev/characters/{character_id}/bookmarks/folders/`\n\nAlternate route: `/v2/characters/{character_id}/bookmarks/folders/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List bookmark folders",
        "tags": [
          "Bookmarks"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of bookmark folders",
            "examples": {
              "application/json": [
                {
                  "folder_id": 5,
                  "name": "Icecream"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "folder_id",
                  "name"
                ],
                "properties": {
                  "folder_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_bookmarks_folders_folder_id",
                    "description": "folder_id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "get_characters_character_id_bookmarks_folders_name",
                    "description": "name string"
                  }
                },
                "title": "get_characters_character_id_bookmarks_folders_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_bookmarks_folders_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-bookmarks.read_character_bookmarks.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_bookmarks_folders",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/corporations/{corporation_id}/bookmarks/": {
      "get": {
        "description": "A list of your corporation's bookmarks\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/bookmarks/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/bookmarks/`\n\nAlternate route: `/v1/corporations/{corporation_id}/bookmarks/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List corporation bookmarks",
        "tags": [
          "Bookmarks"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of corporation owned bookmarks",
            "examples": {
              "application/json": [
                {
                  "bookmark_id": 4,
                  "location_id": 30003430,
                  "item": {
                    "type_id": 29633,
                    "item_id": 50006722
                  },
                  "creator_id": 2112625428,
                  "folder_id": 5,
                  "label": "Stargate",
                  "notes": "This is a stargate",
                  "created": "2016-08-09T11:57:47Z"
                },
                {
                  "bookmark_id": 5,
                  "location_id": 30003430,
                  "coordinates": {
                    "x": -2958928814000,
                    "y": -338367275823,
                    "z": 2114538075090
                  },
                  "creator_id": 2112625428,
                  "folder_id": 5,
                  "label": "Random location",
                  "notes": "This is a random location in space",
                  "created": "2016-08-09T11:57:47Z"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "bookmark_id",
                  "creator_id",
                  "created",
                  "label",
                  "notes",
                  "location_id"
                ],
                "properties": {
                  "bookmark_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_bookmarks_bookmark_id",
                    "description": "bookmark_id integer"
                  },
                  "creator_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_bookmarks_creator_id",
                    "description": "creator_id integer"
                  },
                  "folder_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_bookmarks_folder_id",
                    "description": "folder_id integer"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporations_corporation_id_bookmarks_created",
                    "description": "created string"
                  },
                  "label": {
                    "type": "string",
                    "title": "get_corporations_corporation_id_bookmarks_label",
                    "description": "label string"
                  },
                  "notes": {
                    "type": "string",
                    "title": "get_corporations_corporation_id_bookmarks_notes",
                    "description": "notes string"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_bookmarks_location_id",
                    "description": "location_id integer"
                  },
                  "item": {
                    "type": "object",
                    "description": "Optional object that is returned if a bookmark was made on a particular item.",
                    "required": [
                      "item_id",
                      "type_id"
                    ],
                    "properties": {
                      "item_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_corporations_corporation_id_bookmarks_item_id",
                        "description": "item_id integer"
                      },
                      "type_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_bookmarks_type_id",
                        "description": "type_id integer"
                      }
                    },
                    "title": "get_corporations_corporation_id_bookmarks_item"
                  },
                  "coordinates": {
                    "type": "object",
                    "description": "Optional object that is returned if a bookmark was made on a planet or a random location in space.",
                    "required": [
                      "x",
                      "y",
                      "z"
                    ],
                    "properties": {
                      "x": {
                        "type": "number",
                        "format": "double",
                        "title": "get_corporations_corporation_id_bookmarks_x",
                        "description": "x number"
                      },
                      "y": {
                        "type": "number",
                        "format": "double",
                        "title": "get_corporations_corporation_id_bookmarks_y",
                        "description": "y number"
                      },
                      "z": {
                        "type": "number",
                        "format": "double",
                        "title": "get_corporations_corporation_id_bookmarks_z",
                        "description": "z number"
                      }
                    },
                    "title": "get_corporations_corporation_id_bookmarks_coordinates"
                  }
                },
                "title": "get_corporations_corporation_id_bookmarks_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_bookmarks_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-bookmarks.read_corporation_bookmarks.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_bookmarks",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/bookmarks/folders/": {
      "get": {
        "description": "A list of your corporation's bookmark folders\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/bookmarks/folders/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/bookmarks/folders/`\n\nAlternate route: `/v1/corporations/{corporation_id}/bookmarks/folders/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List corporation bookmark folders",
        "tags": [
          "Bookmarks"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of corporation owned bookmark folders",
            "examples": {
              "application/json": [
                {
                  "folder_id": 5,
                  "name": "Important Locations"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "folder_id",
                  "name"
                ],
                "properties": {
                  "folder_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_bookmarks_folders_folder_id",
                    "description": "folder_id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "get_corporations_corporation_id_bookmarks_folders_name",
                    "description": "name string"
                  },
                  "creator_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_bookmarks_folders_creator_id",
                    "description": "creator_id integer"
                  }
                },
                "title": "get_corporations_corporation_id_bookmarks_folders_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_bookmarks_folders_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-bookmarks.read_corporation_bookmarks.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_bookmarks_folders",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/calendar/": {
      "get": {
        "description": "Get 50 event summaries from the calendar. If no from_event ID is given, the resource will return the next 50 chronological event summaries from now. If a from_event ID is specified, it will return the next 50 chronological event summaries from after that event.\n\n---\nAlternate route: `/dev/characters/{character_id}/calendar/`\n\nAlternate route: `/legacy/characters/{character_id}/calendar/`\n\nAlternate route: `/v1/characters/{character_id}/calendar/`\n\n---\nThis route is cached for up to 5 seconds",
        "summary": "List calendar event summaries",
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "from_event",
            "in": "query",
            "description": "The event ID to retrieve events from",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of event summaries",
            "examples": {
              "application/json": [
                {
                  "event_id": 1386435,
                  "event_date": "2016-06-26T20:00:00Z",
                  "title": "o7 The EVE Online Show",
                  "importance": 0,
                  "event_response": "accepted"
                }
              ]
            },
            "schema": {
              "type": "array",
              "description": "Up to 50 events from now or the event you requested",
              "maxItems": 50,
              "items": {
                "description": "event",
                "type": "object",
                "properties": {
                  "event_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_calendar_event_id",
                    "description": "event_id integer"
                  },
                  "event_date": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_characters_character_id_calendar_event_date",
                    "description": "event_date string"
                  },
                  "title": {
                    "type": "string",
                    "title": "get_characters_character_id_calendar_title",
                    "description": "title string"
                  },
                  "importance": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_calendar_importance",
                    "description": "importance integer"
                  },
                  "event_response": {
                    "type": "string",
                    "enum": [
                      "declined",
                      "not_responded",
                      "accepted",
                      "tentative"
                    ],
                    "title": "get_characters_character_id_calendar_event_response",
                    "description": "event_response string"
                  }
                },
                "title": "get_characters_character_id_calendar_200_ok"
              },
              "title": "get_characters_character_id_calendar_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-calendar.read_calendar_events.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_calendar",
        "x-cached-seconds": 5,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/calendar/{event_id}/": {
      "get": {
        "description": "Get all the information for a specific event\n\n---\nAlternate route: `/dev/characters/{character_id}/calendar/{event_id}/`\n\nAlternate route: `/v3/characters/{character_id}/calendar/{event_id}/`\n\n---\nThis route is cached for up to 5 seconds",
        "summary": "Get an event",
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "The id of the event requested",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Full details of a specific event",
            "examples": {
              "application/json": {
                "event_id": 1386435,
                "owner_id": 1,
                "owner_name": "EVE System",
                "date": "2016-06-26T21:00:00Z",
                "title": "o7 The EVE Online Show",
                "duration": 60,
                "importance": 1,
                "response": "Undecided",
                "text": "o7: The EVE Online Show features latest developer news, fast paced action, community overviews and a lot more with CCP Guard and CCP Mimic. Join the thrilling o7 live broadcast at 20:00 EVE time (=UTC) on <a href=\"http://www.twitch.tv/ccp\">EVE TV</a>. Don't miss it!",
                "owner_type": "eve_server"
              }
            },
            "schema": {
              "type": "object",
              "description": "Full details of a specific event",
              "required": [
                "event_id",
                "owner_id",
                "owner_name",
                "date",
                "title",
                "duration",
                "importance",
                "response",
                "text",
                "owner_type"
              ],
              "properties": {
                "event_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_calendar_event_id_event_id",
                  "description": "event_id integer"
                },
                "owner_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_calendar_event_id_owner_id",
                  "description": "owner_id integer"
                },
                "owner_name": {
                  "type": "string",
                  "title": "get_characters_character_id_calendar_event_id_owner_name",
                  "description": "owner_name string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time",
                  "title": "get_characters_character_id_calendar_event_id_date",
                  "description": "date string"
                },
                "title": {
                  "type": "string",
                  "title": "get_characters_character_id_calendar_event_id_title",
                  "description": "title string"
                },
                "duration": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Length in minutes",
                  "title": "get_characters_character_id_calendar_event_id_duration"
                },
                "importance": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_calendar_event_id_importance",
                  "description": "importance integer"
                },
                "response": {
                  "type": "string",
                  "title": "get_characters_character_id_calendar_event_id_response",
                  "description": "response string"
                },
                "text": {
                  "type": "string",
                  "title": "get_characters_character_id_calendar_event_id_text",
                  "description": "text string"
                },
                "owner_type": {
                  "type": "string",
                  "enum": [
                    "eve_server",
                    "corporation",
                    "faction",
                    "character",
                    "alliance"
                  ],
                  "title": "get_characters_character_id_calendar_event_id_owner_type",
                  "description": "owner_type string"
                }
              },
              "title": "get_characters_character_id_calendar_event_id_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-calendar.read_calendar_events.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_calendar_event_id",
        "x-cached-seconds": 5,
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      },
      "put": {
        "description": "Set your response status to an event\n\n---\nAlternate route: `/dev/characters/{character_id}/calendar/{event_id}/`\n\nAlternate route: `/v3/characters/{character_id}/calendar/{event_id}/`\n",
        "summary": "Respond to an event",
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "The ID of the event requested",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "response",
            "in": "body",
            "description": "The response value to set, overriding current value.",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "response"
              ],
              "properties": {
                "response": {
                  "type": "string",
                  "enum": [
                    "accepted",
                    "declined",
                    "tentative"
                  ],
                  "title": "put_characters_character_id_calendar_event_id_response",
                  "description": "response string"
                }
              },
              "title": "put_characters_character_id_calendar_event_id_response",
              "description": "response object"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Event updated"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-calendar.respond_calendar_events.v1"
            ]
          }
        ],
        "operationId": "put_characters_character_id_calendar_event_id",
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      }
    },
    "/characters/{character_id}/calendar/{event_id}/attendees/": {
      "get": {
        "description": "Get all invited attendees for a given event\n\n---\nAlternate route: `/dev/characters/{character_id}/calendar/{event_id}/attendees/`\n\nAlternate route: `/legacy/characters/{character_id}/calendar/{event_id}/attendees/`\n\nAlternate route: `/v1/characters/{character_id}/calendar/{event_id}/attendees/`\n\n---\nThis route is cached for up to 600 seconds",
        "summary": "Get attendees",
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "The id of the event requested",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of attendees",
            "examples": {
              "application/json": [
                {
                  "character_id": 2112625428,
                  "event_response": "accepted"
                },
                {
                  "character_id": 95465499,
                  "event_response": "tentative"
                }
              ]
            },
            "schema": {
              "type": "array",
              "description": "List of attendees for a given event",
              "maxItems": 100,
              "items": {
                "type": "object",
                "description": "character_id and response of an attendee",
                "properties": {
                  "character_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_calendar_event_id_attendees_character_id",
                    "description": "character_id integer"
                  },
                  "event_response": {
                    "type": "string",
                    "enum": [
                      "declined",
                      "not_responded",
                      "accepted",
                      "tentative"
                    ],
                    "title": "get_characters_character_id_calendar_event_id_attendees_event_response",
                    "description": "event_response string"
                  }
                },
                "title": "get_characters_character_id_calendar_event_id_attendees_200_ok"
              },
              "title": "get_characters_character_id_calendar_event_id_attendees_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-calendar.read_calendar_events.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_calendar_event_id_attendees",
        "x-cached-seconds": 600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/": {
      "get": {
        "description": "Public information about a character\n\n---\nAlternate route: `/dev/characters/{character_id}/`\n\nAlternate route: `/v4/characters/{character_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get character's public information",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Public data for the given character",
            "examples": {
              "application/json": {
                "corporation_id": 109299958,
                "birthday": "2015-03-24T11:37:00Z",
                "name": "CCP Bartender",
                "gender": "male",
                "race_id": 2,
                "description": "",
                "bloodline_id": 3,
                "ancestry_id": 19
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "corporation_id",
                "birthday",
                "name",
                "gender",
                "race_id",
                "bloodline_id"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "get_characters_character_id_name",
                  "description": "name string"
                },
                "description": {
                  "type": "string",
                  "title": "get_characters_character_id_description",
                  "description": "description string"
                },
                "corporation_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The character's corporation ID",
                  "title": "get_characters_character_id_corporation_id"
                },
                "alliance_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The character's alliance ID",
                  "title": "get_characters_character_id_alliance_id"
                },
                "birthday": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation date of the character",
                  "title": "get_characters_character_id_birthday"
                },
                "gender": {
                  "type": "string",
                  "enum": [
                    "female",
                    "male"
                  ],
                  "title": "get_characters_character_id_gender",
                  "description": "gender string"
                },
                "race_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_race_id",
                  "description": "race_id integer"
                },
                "bloodline_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_bloodline_id",
                  "description": "bloodline_id integer"
                },
                "ancestry_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_ancestry_id",
                  "description": "ancestry_id integer"
                },
                "security_status": {
                  "type": "number",
                  "format": "float",
                  "minimum": -10,
                  "maximum": 10,
                  "title": "get_characters_character_id_security_status",
                  "description": "security_status number"
                },
                "faction_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ID of the faction the character is fighting for, if the character is enlisted in Factional Warfare",
                  "title": "get_characters_character_id_faction_id"
                }
              },
              "title": "get_characters_character_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Character not found",
            "schema": {
              "type": "object",
              "title": "get_characters_character_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_characters_character_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_characters_character_id",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v4"
        ]
      }
    },
    "/characters/affiliation/": {
      "post": {
        "description": "Bulk lookup of character IDs to corporation, alliance and faction\n\n---\nAlternate route: `/dev/characters/affiliation/`\n\nAlternate route: `/legacy/characters/affiliation/`\n\nAlternate route: `/v1/characters/affiliation/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Character affiliation",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "name": "characters",
            "in": "body",
            "description": "The character IDs to fetch affiliations for. All characters must exist, or none will be returned.",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1000,
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "post_characters_affiliation_character",
                "description": "character integer"
              },
              "title": "post_characters_affiliation_characters",
              "description": "characters array"
            }
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Character corporation, alliance and faction IDs",
            "examples": {
              "application/json": [
                {
                  "character_id": 95538921,
                  "corporation_id": 109299958,
                  "alliance_id": 434243723
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "character_id",
                  "corporation_id"
                ],
                "properties": {
                  "character_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The character's ID",
                    "title": "post_characters_affiliation_character_id"
                  },
                  "corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The character's corporation ID",
                    "title": "post_characters_affiliation_corporation_id"
                  },
                  "alliance_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The character's alliance ID, if their corporation is in an alliance",
                    "title": "post_characters_affiliation_alliance_id"
                  },
                  "faction_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The character's faction ID, if their corporation is in a faction",
                    "title": "post_characters_affiliation_faction_id"
                  }
                },
                "title": "post_characters_affiliation_200_ok",
                "description": "200 ok object"
              },
              "title": "post_characters_affiliation_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "No characters found!",
            "schema": {
              "type": "object",
              "title": "post_characters_affiliation_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "post_characters_affiliation_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "post_characters_affiliation",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/cspa/": {
      "post": {
        "description": "Takes a source character ID in the url and a set of target character ID's in the body, returns a CSPA charge cost\n\n---\nAlternate route: `/dev/characters/{character_id}/cspa/`\n\nAlternate route: `/v4/characters/{character_id}/cspa/`\n",
        "summary": "Calculate a CSPA charge cost",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "name": "characters",
            "in": "body",
            "description": "The target characters to calculate the charge for",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "maxItems": 100,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "post_characters_character_id_cspa_character",
                "description": "character integer"
              },
              "title": "post_characters_character_id_cspa_characters",
              "description": "characters array"
            }
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "201": {
            "description": "Aggregate cost of sending a mail from the source character to the target characters, in ISK",
            "examples": {
              "application/json": 2950
            },
            "schema": {
              "type": "number",
              "format": "float",
              "title": "post_characters_character_id_cspa_created",
              "description": "201 created number"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_contacts.v1"
            ]
          }
        ],
        "operationId": "post_characters_character_id_cspa",
        "x-alternate-versions": [
          "dev",
          "v4"
        ]
      }
    },
    "/characters/names/": {
      "get": {
        "description": "Resolve a set of character IDs to character names\n\n---\nAlternate route: `/dev/characters/names/`\n\nAlternate route: `/legacy/characters/names/`\n\nAlternate route: `/v1/characters/names/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get character names",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "name": "character_ids",
            "in": "query",
            "description": "A comma separated list of character IDs",
            "required": true,
            "type": "array",
            "maxItems": 1000,
            "minItems": 1,
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of id/name associations",
            "examples": {
              "application/json": [
                {
                  "character_id": 95465499,
                  "character_name": "CCP Bartender"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "character_id",
                  "character_name"
                ],
                "properties": {
                  "character_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_characters_names_character_id",
                    "description": "character_id integer"
                  },
                  "character_name": {
                    "type": "string",
                    "title": "get_characters_names_character_name",
                    "description": "character_name string"
                  }
                },
                "title": "get_characters_names_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_names_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_characters_names",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/portrait/": {
      "get": {
        "description": "Get portrait urls for a character\n\n---\nAlternate route: `/dev/characters/{character_id}/portrait/`\n\nAlternate route: `/v2/characters/{character_id}/portrait/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get character portraits",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Public data for the given character",
            "examples": {
              "application/json": {
                "px64x64": "https://imageserver.eveonline.com/Character/95465499_64.jpg",
                "px128x128": "https://imageserver.eveonline.com/Character/95465499_128.jpg",
                "px256x256": "https://imageserver.eveonline.com/Character/95465499_256.jpg",
                "px512x512": "https://imageserver.eveonline.com/Character/95465499_512.jpg"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "px64x64": {
                  "type": "string",
                  "title": "get_characters_character_id_portrait_px64x64",
                  "description": "px64x64 string"
                },
                "px128x128": {
                  "type": "string",
                  "title": "get_characters_character_id_portrait_px128x128",
                  "description": "px128x128 string"
                },
                "px256x256": {
                  "type": "string",
                  "title": "get_characters_character_id_portrait_px256x256",
                  "description": "px256x256 string"
                },
                "px512x512": {
                  "type": "string",
                  "title": "get_characters_character_id_portrait_px512x512",
                  "description": "px512x512 string"
                }
              },
              "title": "get_characters_character_id_portrait_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "No image server for this datasource",
            "examples": {
              "application/json": {
                "error": "No image server for this datasource"
              }
            },
            "schema": {
              "type": "object",
              "description": "No image server for this datasource",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "error message",
                  "title": "get_characters_character_id_portrait_error"
                }
              },
              "title": "get_characters_character_id_portrait_not_found"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_characters_character_id_portrait",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/characters/{character_id}/corporationhistory/": {
      "get": {
        "description": "Get a list of all the corporations a character has been a member of\n\n---\nAlternate route: `/dev/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/legacy/characters/{character_id}/corporationhistory/`\n\nAlternate route: `/v1/characters/{character_id}/corporationhistory/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get corporation history",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Corporation history for the given character",
            "examples": {
              "application/json": [
                {
                  "start_date": "2016-06-26T20:00:00Z",
                  "corporation_id": 90000001,
                  "is_deleted": true,
                  "record_id": 500
                },
                {
                  "start_date": "2016-07-26T20:00:00Z",
                  "corporation_id": 90000002,
                  "record_id": 501
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "start_date",
                  "corporation_id",
                  "record_id"
                ],
                "properties": {
                  "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_characters_character_id_corporationhistory_start_date",
                    "description": "start_date string"
                  },
                  "corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_corporationhistory_corporation_id",
                    "description": "corporation_id integer"
                  },
                  "is_deleted": {
                    "type": "boolean",
                    "description": "True if the corporation has been deleted",
                    "title": "get_characters_character_id_corporationhistory_is_deleted"
                  },
                  "record_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An incrementing ID that can be used to canonically establish order of records in cases where dates may be ambiguous",
                    "title": "get_characters_character_id_corporationhistory_record_id"
                  }
                },
                "title": "get_characters_character_id_corporationhistory_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_corporationhistory_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_characters_character_id_corporationhistory",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/chat_channels/": {
      "get": {
        "description": "Return chat channels that a character is the owner or operator of\n\n---\nAlternate route: `/dev/characters/{character_id}/chat_channels/`\n\nAlternate route: `/legacy/characters/{character_id}/chat_channels/`\n\nAlternate route: `/v1/characters/{character_id}/chat_channels/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get chat channels",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of chat channels",
            "examples": {
              "application/json": [
                {
                  "channel_id": -69329950,
                  "name": "Players' Haven",
                  "owner_id": 95578451,
                  "comparison_key": "players'haven",
                  "has_password": false,
                  "motd": "<b>Feed pineapples to the cats!</b>",
                  "allowed": [],
                  "operators": [],
                  "blocked": [],
                  "muted": []
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "channel_id",
                  "name",
                  "owner_id",
                  "comparison_key",
                  "has_password",
                  "motd",
                  "allowed",
                  "operators",
                  "blocked",
                  "muted"
                ],
                "properties": {
                  "channel_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique channel ID. Always negative for player-created channels. Permanent (CCP created) channels have a positive ID, but don't appear in the API",
                    "title": "get_characters_character_id_chat_channels_channel_id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Displayed name of channel",
                    "title": "get_characters_character_id_chat_channels_name"
                  },
                  "owner_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_chat_channels_owner_id",
                    "description": "owner_id integer"
                  },
                  "comparison_key": {
                    "type": "string",
                    "description": "Normalized, unique string used to compare channel names",
                    "title": "get_characters_character_id_chat_channels_comparison_key"
                  },
                  "has_password": {
                    "type": "boolean",
                    "description": "If this is a password protected channel",
                    "title": "get_characters_character_id_chat_channels_has_password"
                  },
                  "motd": {
                    "type": "string",
                    "description": "Message of the day for this channel",
                    "title": "get_characters_character_id_chat_channels_motd"
                  },
                  "allowed": {
                    "type": "array",
                    "maxItems": 1000,
                    "items": {
                      "type": "object",
                      "required": [
                        "accessor_id",
                        "accessor_type"
                      ],
                      "properties": {
                        "accessor_id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "ID of an allowed channel member",
                          "title": "get_characters_character_id_chat_channels_accessor_id"
                        },
                        "accessor_type": {
                          "type": "string",
                          "enum": [
                            "character",
                            "corporation",
                            "alliance"
                          ],
                          "title": "get_characters_character_id_chat_channels_accessor_type",
                          "description": "accessor_type string"
                        }
                      },
                      "title": "get_characters_character_id_chat_channels_allowed",
                      "description": "allowed object"
                    },
                    "title": "get_characters_character_id_chat_channels_allowed",
                    "description": "allowed array"
                  },
                  "operators": {
                    "type": "array",
                    "maxItems": 1000,
                    "items": {
                      "type": "object",
                      "required": [
                        "accessor_id",
                        "accessor_type"
                      ],
                      "properties": {
                        "accessor_id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "ID of a channel operator",
                          "title": "get_characters_character_id_chat_channels_accessor_id"
                        },
                        "accessor_type": {
                          "type": "string",
                          "enum": [
                            "character",
                            "corporation",
                            "alliance"
                          ],
                          "title": "get_characters_character_id_chat_channels_accessor_type",
                          "description": "accessor_type string"
                        }
                      },
                      "title": "get_characters_character_id_chat_channels_operator",
                      "description": "operator object"
                    },
                    "title": "get_characters_character_id_chat_channels_operators",
                    "description": "operators array"
                  },
                  "blocked": {
                    "type": "array",
                    "maxItems": 1000,
                    "items": {
                      "type": "object",
                      "required": [
                        "accessor_id",
                        "accessor_type"
                      ],
                      "properties": {
                        "accessor_id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "ID of a blocked channel member",
                          "title": "get_characters_character_id_chat_channels_accessor_id"
                        },
                        "accessor_type": {
                          "type": "string",
                          "enum": [
                            "character",
                            "corporation",
                            "alliance"
                          ],
                          "title": "get_characters_character_id_chat_channels_accessor_type",
                          "description": "accessor_type string"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Reason this accessor is blocked",
                          "title": "get_characters_character_id_chat_channels_reason"
                        },
                        "end_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which this accessor will no longer be blocked",
                          "title": "get_characters_character_id_chat_channels_end_at"
                        }
                      },
                      "title": "get_characters_character_id_chat_channels_blocked",
                      "description": "blocked object"
                    },
                    "title": "get_characters_character_id_chat_channels_blocked",
                    "description": "blocked array"
                  },
                  "muted": {
                    "type": "array",
                    "maxItems": 1000,
                    "items": {
                      "type": "object",
                      "required": [
                        "accessor_id",
                        "accessor_type"
                      ],
                      "properties": {
                        "accessor_id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "ID of a muted channel member",
                          "title": "get_characters_character_id_chat_channels_accessor_id"
                        },
                        "accessor_type": {
                          "type": "string",
                          "enum": [
                            "character",
                            "corporation",
                            "alliance"
                          ],
                          "title": "get_characters_character_id_chat_channels_accessor_type",
                          "description": "accessor_type string"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Reason this accessor is muted",
                          "title": "get_characters_character_id_chat_channels_reason"
                        },
                        "end_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which this accessor will no longer be muted",
                          "title": "get_characters_character_id_chat_channels_end_at"
                        }
                      },
                      "title": "get_characters_character_id_chat_channels_muted",
                      "description": "muted object"
                    },
                    "title": "get_characters_character_id_chat_channels_muted",
                    "description": "muted array"
                  }
                },
                "title": "get_characters_character_id_chat_channels_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_chat_channels_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_chat_channels.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_chat_channels",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/medals/": {
      "get": {
        "description": "Return a list of medals the character has\n\n---\nAlternate route: `/dev/characters/{character_id}/medals/`\n\nAlternate route: `/legacy/characters/{character_id}/medals/`\n\nAlternate route: `/v1/characters/{character_id}/medals/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get medals",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of medals",
            "examples": {
              "application/json": [
                {
                  "medal_id": 3,
                  "title": "33 tester medal",
                  "description": "For 33 corp!",
                  "corporation_id": 98000001,
                  "issuer_id": 2112000002,
                  "date": "2017-03-16T15:01:45Z",
                  "reason": "Thanks!",
                  "status": "private",
                  "graphics": [
                    {
                      "part": 1,
                      "layer": 0,
                      "graphic": "caldari.1_1",
                      "color": -1
                    },
                    {
                      "part": 1,
                      "layer": 1,
                      "graphic": "caldari.1_2",
                      "color": -330271
                    },
                    {
                      "part": 2,
                      "layer": 0,
                      "graphic": "compass.1_2",
                      "color": -1
                    }
                  ]
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "medal_id",
                  "title",
                  "description",
                  "corporation_id",
                  "issuer_id",
                  "date",
                  "reason",
                  "status",
                  "graphics"
                ],
                "properties": {
                  "medal_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_medals_medal_id",
                    "description": "medal_id integer"
                  },
                  "title": {
                    "type": "string",
                    "title": "get_characters_character_id_medals_title",
                    "description": "title string"
                  },
                  "description": {
                    "type": "string",
                    "title": "get_characters_character_id_medals_description",
                    "description": "description string"
                  },
                  "corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_medals_corporation_id",
                    "description": "corporation_id integer"
                  },
                  "issuer_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_medals_issuer_id",
                    "description": "issuer_id integer"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_characters_character_id_medals_date",
                    "description": "date string"
                  },
                  "reason": {
                    "type": "string",
                    "title": "get_characters_character_id_medals_reason",
                    "description": "reason string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "public",
                      "private"
                    ],
                    "title": "get_characters_character_id_medals_status",
                    "description": "status string"
                  },
                  "graphics": {
                    "type": "array",
                    "minItems": 3,
                    "maxItems": 9,
                    "items": {
                      "type": "object",
                      "required": [
                        "part",
                        "layer",
                        "graphic"
                      ],
                      "properties": {
                        "part": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_characters_character_id_medals_part",
                          "description": "part integer"
                        },
                        "layer": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_characters_character_id_medals_layer",
                          "description": "layer integer"
                        },
                        "graphic": {
                          "type": "string",
                          "title": "get_characters_character_id_medals_graphic",
                          "description": "graphic string"
                        },
                        "color": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_characters_character_id_medals_color",
                          "description": "color integer"
                        }
                      },
                      "title": "get_characters_character_id_medals_graphic",
                      "description": "graphic object"
                    },
                    "title": "get_characters_character_id_medals_graphics",
                    "description": "graphics array"
                  }
                },
                "title": "get_characters_character_id_medals_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_medals_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_medals.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_medals",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/standings/": {
      "get": {
        "description": "Return character standings from agents, NPC corporations, and factions\n\n---\nAlternate route: `/dev/characters/{character_id}/standings/`\n\nAlternate route: `/legacy/characters/{character_id}/standings/`\n\nAlternate route: `/v1/characters/{character_id}/standings/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get standings",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of standings",
            "examples": {
              "application/json": [
                {
                  "from_id": 3009841,
                  "from_type": "agent",
                  "standing": 0.1
                },
                {
                  "from_id": 1000061,
                  "from_type": "npc_corp",
                  "standing": 0
                },
                {
                  "from_id": 500003,
                  "from_type": "faction",
                  "standing": -1
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "from_id",
                  "from_type",
                  "standing"
                ],
                "properties": {
                  "from_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_standings_from_id",
                    "description": "from_id integer"
                  },
                  "from_type": {
                    "type": "string",
                    "enum": [
                      "agent",
                      "npc_corp",
                      "faction"
                    ],
                    "title": "get_characters_character_id_standings_from_type",
                    "description": "from_type string"
                  },
                  "standing": {
                    "type": "number",
                    "format": "float",
                    "minimum": -10,
                    "maximum": 10,
                    "title": "get_characters_character_id_standings_standing",
                    "description": "standing number"
                  }
                },
                "title": "get_characters_character_id_standings_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_standings_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_standings.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_standings",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/agents_research/": {
      "get": {
        "description": "Return a list of agents research information for a character. The formula for finding the current research points with an agent is: currentPoints = remainderPoints + pointsPerDay * days(currentTime - researchStartDate)\n\n---\nAlternate route: `/dev/characters/{character_id}/agents_research/`\n\nAlternate route: `/legacy/characters/{character_id}/agents_research/`\n\nAlternate route: `/v1/characters/{character_id}/agents_research/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get agents research",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of agents research information",
            "examples": {
              "application/json": [
                {
                  "agent_id": 3009358,
                  "skill_type_id": 11450,
                  "started_at": "2017-03-23T14:47:00Z",
                  "points_per_day": 53.5346162146776,
                  "remainder_points": 53604.0634303189
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "agent_id",
                  "skill_type_id",
                  "started_at",
                  "points_per_day",
                  "remainder_points"
                ],
                "properties": {
                  "agent_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_agents_research_agent_id",
                    "description": "agent_id integer"
                  },
                  "skill_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_agents_research_skill_type_id",
                    "description": "skill_type_id integer"
                  },
                  "started_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_characters_character_id_agents_research_started_at",
                    "description": "started_at string"
                  },
                  "points_per_day": {
                    "type": "number",
                    "format": "float",
                    "title": "get_characters_character_id_agents_research_points_per_day",
                    "description": "points_per_day number"
                  },
                  "remainder_points": {
                    "type": "number",
                    "format": "float",
                    "title": "get_characters_character_id_agents_research_remainder_points",
                    "description": "remainder_points number"
                  }
                },
                "title": "get_characters_character_id_agents_research_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_agents_research_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_agents_research.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_agents_research",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/blueprints/": {
      "get": {
        "description": "Return a list of blueprints the character owns\n\n---\nAlternate route: `/dev/characters/{character_id}/blueprints/`\n\nAlternate route: `/v2/characters/{character_id}/blueprints/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get blueprints",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of blueprints",
            "examples": {
              "application/json": [
                {
                  "item_id": 1000000010495,
                  "type_id": 691,
                  "location_id": 60014719,
                  "location_flag": "Hangar",
                  "quantity": 1,
                  "time_efficiency": 0,
                  "material_efficiency": 0,
                  "runs": -1
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "item_id",
                  "type_id",
                  "location_id",
                  "location_flag",
                  "quantity",
                  "time_efficiency",
                  "material_efficiency",
                  "runs"
                ],
                "properties": {
                  "item_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique ID for this item.",
                    "title": "get_characters_character_id_blueprints_item_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_blueprints_type_id",
                    "description": "type_id integer"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "References a solar system, station or item_id if this blueprint is located within a container. If the return value is an item_id, then the Character AssetList API must be queried to find the container using the given item_id to determine the correct location of the Blueprint.",
                    "title": "get_characters_character_id_blueprints_location_id"
                  },
                  "location_flag": {
                    "type": "string",
                    "description": "Type of the location_id",
                    "enum": [
                      "AutoFit",
                      "Cargo",
                      "CorpseBay",
                      "DroneBay",
                      "FleetHangar",
                      "Deliveries",
                      "HiddenModifiers",
                      "Hangar",
                      "HangarAll",
                      "LoSlot0",
                      "LoSlot1",
                      "LoSlot2",
                      "LoSlot3",
                      "LoSlot4",
                      "LoSlot5",
                      "LoSlot6",
                      "LoSlot7",
                      "MedSlot0",
                      "MedSlot1",
                      "MedSlot2",
                      "MedSlot3",
                      "MedSlot4",
                      "MedSlot5",
                      "MedSlot6",
                      "MedSlot7",
                      "HiSlot0",
                      "HiSlot1",
                      "HiSlot2",
                      "HiSlot3",
                      "HiSlot4",
                      "HiSlot5",
                      "HiSlot6",
                      "HiSlot7",
                      "AssetSafety",
                      "Locked",
                      "Unlocked",
                      "Implant",
                      "QuafeBay",
                      "RigSlot0",
                      "RigSlot1",
                      "RigSlot2",
                      "RigSlot3",
                      "RigSlot4",
                      "RigSlot5",
                      "RigSlot6",
                      "RigSlot7",
                      "ShipHangar",
                      "SpecializedFuelBay",
                      "SpecializedOreHold",
                      "SpecializedGasHold",
                      "SpecializedMineralHold",
                      "SpecializedSalvageHold",
                      "SpecializedShipHold",
                      "SpecializedSmallShipHold",
                      "SpecializedMediumShipHold",
                      "SpecializedLargeShipHold",
                      "SpecializedIndustrialShipHold",
                      "SpecializedAmmoHold",
                      "SpecializedCommandCenterHold",
                      "SpecializedPlanetaryCommoditiesHold",
                      "SpecializedMaterialBay",
                      "SubSystemSlot0",
                      "SubSystemSlot1",
                      "SubSystemSlot2",
                      "SubSystemSlot3",
                      "SubSystemSlot4",
                      "SubSystemSlot5",
                      "SubSystemSlot6",
                      "SubSystemSlot7",
                      "FighterBay",
                      "FighterTube0",
                      "FighterTube1",
                      "FighterTube2",
                      "FighterTube3",
                      "FighterTube4",
                      "Module"
                    ],
                    "title": "get_characters_character_id_blueprints_location_flag"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A range of numbers with a minimum of -2 and no maximum value where -1 is an original and -2 is a copy. It can be a positive integer if it is a stack of blueprint originals fresh from the market (e.g. no activities performed on them yet).",
                    "minimum": -2,
                    "title": "get_characters_character_id_blueprints_quantity"
                  },
                  "time_efficiency": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time Efficiency Level of the blueprint.",
                    "minimum": 0,
                    "maximum": 20,
                    "title": "get_characters_character_id_blueprints_time_efficiency"
                  },
                  "material_efficiency": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Material Efficiency Level of the blueprint.",
                    "minimum": 0,
                    "maximum": 25,
                    "title": "get_characters_character_id_blueprints_material_efficiency"
                  },
                  "runs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of runs remaining if the blueprint is a copy, -1 if it is an original.",
                    "minimum": -1,
                    "title": "get_characters_character_id_blueprints_runs"
                  }
                },
                "title": "get_characters_character_id_blueprints_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_blueprints_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_blueprints.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_blueprints",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/characters/{character_id}/fatigue/": {
      "get": {
        "description": "Return a character's jump activation and fatigue information\n\n---\nAlternate route: `/dev/characters/{character_id}/fatigue/`\n\nAlternate route: `/legacy/characters/{character_id}/fatigue/`\n\nAlternate route: `/v1/characters/{character_id}/fatigue/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get jump fatigue",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Jump activation and fatigue information",
            "examples": {
              "application/json": {
                "last_jump_date": "2017-07-05T15:47:00Z",
                "jump_fatigue_expire_date": "2017-07-06T15:47:00Z",
                "last_update_date": "2017-07-05T15:42:00Z"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "last_jump_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Character's last jump activation",
                  "title": "get_characters_character_id_fatigue_last_jump_date"
                },
                "jump_fatigue_expire_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Character's jump fatigue expiry",
                  "title": "get_characters_character_id_fatigue_jump_fatigue_expire_date"
                },
                "last_update_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Character's last jump update",
                  "title": "get_characters_character_id_fatigue_last_update_date"
                }
              },
              "title": "get_characters_character_id_fatigue_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_fatigue.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_fatigue",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/notifications/contacts/": {
      "get": {
        "description": "Return notifications about having been added to someone's contact list\n\n---\nAlternate route: `/dev/characters/{character_id}/notifications/contacts/`\n\nAlternate route: `/legacy/characters/{character_id}/notifications/contacts/`\n\nAlternate route: `/v1/characters/{character_id}/notifications/contacts/`\n\n---\nThis route is cached for up to 600 seconds",
        "summary": "Get new contact notifications",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of contact notifications",
            "examples": {
              "application/json": [
                {
                  "notification_id": 1,
                  "sender_character_id": 95465499,
                  "send_date": "2017-08-16T10:08:00Z",
                  "standing_level": 1.5,
                  "message": "hello friend :3"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 50,
              "items": {
                "type": "object",
                "required": [
                  "notification_id",
                  "send_date",
                  "standing_level",
                  "message",
                  "sender_character_id"
                ],
                "properties": {
                  "notification_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_notifications_contacts_notification_id",
                    "description": "notification_id integer"
                  },
                  "send_date": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_characters_character_id_notifications_contacts_send_date",
                    "description": "send_date string"
                  },
                  "standing_level": {
                    "description": "A number representing the standing level the receiver has been added at by the sender. The standing levels are as follows: -10 -> Terrible | -5 -> Bad |  0 -> Neutral |  5 -> Good |  10 -> Excellent",
                    "type": "number",
                    "format": "float",
                    "title": "get_characters_character_id_notifications_contacts_standing_level"
                  },
                  "message": {
                    "type": "string",
                    "title": "get_characters_character_id_notifications_contacts_message",
                    "description": "message string"
                  },
                  "sender_character_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_notifications_contacts_sender_character_id",
                    "description": "sender_character_id integer"
                  }
                },
                "title": "get_characters_character_id_notifications_contacts_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_notifications_contacts_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_notifications.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_notifications_contacts",
        "x-cached-seconds": 600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/notifications/": {
      "get": {
        "description": "Return character notifications\n\n---\nAlternate route: `/legacy/characters/{character_id}/notifications/`\n\nAlternate route: `/v1/characters/{character_id}/notifications/`\n\n---\nThis route is cached for up to 600 seconds\n\n---\n[This route has an available update](https://esi.tech.ccp.is/diff/latest/dev/#GET-/characters/{character_id}/notifications/)",
        "summary": "Get character notifications",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns your recent notifications",
            "examples": {
              "application/json": [
                {
                  "notification_id": 1,
                  "type": "InsurancePayoutMsg",
                  "sender_id": 1000132,
                  "sender_type": "corporation",
                  "timestamp": "2017-08-16T10:08:00Z",
                  "is_read": true,
                  "text": "amount: 3731016.4000000004\nitemID: 1024881021663\npayout: 1\n"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 500,
              "items": {
                "type": "object",
                "required": [
                  "notification_id",
                  "type",
                  "sender_id",
                  "sender_type",
                  "timestamp"
                ],
                "properties": {
                  "notification_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_characters_character_id_notifications_notification_id",
                    "description": "notification_id integer"
                  },
                  "sender_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_notifications_sender_id",
                    "description": "sender_id integer"
                  },
                  "sender_type": {
                    "type": "string",
                    "enum": [
                      "character",
                      "corporation",
                      "alliance",
                      "faction",
                      "other"
                    ],
                    "title": "get_characters_character_id_notifications_sender_type",
                    "description": "sender_type string"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_characters_character_id_notifications_timestamp",
                    "description": "timestamp string"
                  },
                  "is_read": {
                    "type": "boolean",
                    "title": "get_characters_character_id_notifications_is_read",
                    "description": "is_read boolean"
                  },
                  "text": {
                    "type": "string",
                    "title": "get_characters_character_id_notifications_text",
                    "description": "text string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "AcceptedAlly",
                      "AcceptedSurrender",
                      "AllAnchoringMsg",
                      "AllMaintenanceBillMsg",
                      "AllStrucInvulnerableMsg",
                      "AllStructVulnerableMsg",
                      "AllWarCorpJoinedAllianceMsg",
                      "AllWarDeclaredMsg",
                      "AllWarInvalidatedMsg",
                      "AllWarRetractedMsg",
                      "AllWarSurrenderMsg",
                      "AllianceCapitalChanged",
                      "AllyContractCancelled",
                      "AllyJoinedWarAggressorMsg",
                      "AllyJoinedWarAllyMsg",
                      "AllyJoinedWarDefenderMsg",
                      "BattlePunishFriendlyFire",
                      "BillOutOfMoneyMsg",
                      "BillPaidCorpAllMsg",
                      "BountyClaimMsg",
                      "BountyESSShared",
                      "BountyESSTaken",
                      "BountyPlacedAlliance",
                      "BountyPlacedChar",
                      "BountyPlacedCorp",
                      "BountyYourBountyClaimed",
                      "BuddyConnectContactAdd",
                      "CharAppAcceptMsg",
                      "CharAppRejectMsg",
                      "CharAppWithdrawMsg",
                      "CharLeftCorpMsg",
                      "CharMedalMsg",
                      "CharTerminationMsg",
                      "CloneActivationMsg",
                      "CloneActivationMsg2",
                      "CloneMovedMsg",
                      "CloneRevokedMsg1",
                      "CloneRevokedMsg2",
                      "ContactAdd",
                      "ContactEdit",
                      "ContainerPasswordMsg",
                      "CorpAllBillMsg",
                      "CorpAppAcceptMsg",
                      "CorpAppInvitedMsg",
                      "CorpAppNewMsg",
                      "CorpAppRejectCustomMsg",
                      "CorpAppRejectMsg",
                      "CorpDividendMsg",
                      "CorpFriendlyFireDisableTimerCompleted",
                      "CorpFriendlyFireDisableTimerStarted",
                      "CorpFriendlyFireEnableTimerCompleted",
                      "CorpFriendlyFireEnableTimerStarted",
                      "CorpKicked",
                      "CorpLiquidationMsg",
                      "CorpNewCEOMsg",
                      "CorpNewsMsg",
                      "CorpOfficeExpirationMsg",
                      "CorpStructLostMsg",
                      "CorpTaxChangeMsg",
                      "CorpVoteCEORevokedMsg",
                      "CorpVoteMsg",
                      "CorpWarDeclaredMsg",
                      "CorpWarFightingLegalMsg",
                      "CorpWarInvalidatedMsg",
                      "CorpWarRetractedMsg",
                      "CorpWarSurrenderMsg",
                      "CustomsMsg",
                      "DeclareWar",
                      "DistrictAttacked",
                      "DustAppAcceptedMsg",
                      "EntosisCaptureStarted",
                      "FWAllianceKickMsg",
                      "FWAllianceWarningMsg",
                      "FWCharKickMsg",
                      "FWCharRankGainMsg",
                      "FWCharRankLossMsg",
                      "FWCharWarningMsg",
                      "FWCorpJoinMsg",
                      "FWCorpKickMsg",
                      "FWCorpLeaveMsg",
                      "FWCorpWarningMsg",
                      "FacWarCorpJoinRequestMsg",
                      "FacWarCorpJoinWithdrawMsg",
                      "FacWarCorpLeaveRequestMsg",
                      "FacWarCorpLeaveWithdrawMsg",
                      "FacWarLPDisqualifiedEvent",
                      "FacWarLPDisqualifiedKill",
                      "FacWarLPPayoutEvent",
                      "FacWarLPPayoutKill",
                      "GameTimeAdded",
                      "GameTimeReceived",
                      "GameTimeSent",
                      "GiftReceived",
                      "IHubDestroyedByBillFailure",
                      "IncursionCompletedMsg",
                      "IndustryTeamAuctionLost",
                      "IndustryTeamAuctionWon",
                      "InfrastructureHubBillAboutToExpire",
                      "InsuranceExpirationMsg",
                      "InsuranceFirstShipMsg",
                      "InsuranceInvalidatedMsg",
                      "InsuranceIssuedMsg",
                      "InsurancePayoutMsg",
                      "JumpCloneDeletedMsg1",
                      "JumpCloneDeletedMsg2",
                      "KillReportFinalBlow",
                      "KillReportVictim",
                      "KillRightAvailable",
                      "KillRightAvailableOpen",
                      "KillRightEarned",
                      "KillRightUnavailable",
                      "KillRightUnavailableOpen",
                      "KillRightUsed",
                      "LocateCharMsg",
                      "MadeWarMutual",
                      "MercOfferedNegotiationMsg",
                      "MissionOfferExpirationMsg",
                      "MissionTimeoutMsg",
                      "MoonminingAutomaticFracture",
                      "MoonminingExtractionCancelled",
                      "MoonminingExtractionFinished",
                      "MoonminingLaserFired",
                      "NPCStandingsGained",
                      "NPCStandingsLost",
                      "OfferedSurrender",
                      "OfferedToAlly",
                      "OldLscMessages",
                      "OperationFinished",
                      "OrbitalAttacked",
                      "OrbitalReinforced",
                      "OwnershipTransferred",
                      "ReimbursementMsg",
                      "ResearchMissionAvailableMsg",
                      "RetractsWar",
                      "SeasonalChallengeCompleted",
                      "SovAllClaimAquiredMsg",
                      "SovAllClaimLostMsg",
                      "SovCommandNodeEventStarted",
                      "SovCorpBillLateMsg",
                      "SovCorpClaimFailMsg",
                      "SovDisruptorMsg",
                      "SovStationEnteredFreeport",
                      "SovStructureDestroyed",
                      "SovStructureReinforced",
                      "SovStructureSelfDestructCancel",
                      "SovStructureSelfDestructFinished",
                      "SovStructureSelfDestructRequested",
                      "SovereigntyIHDamageMsg",
                      "SovereigntySBUDamageMsg",
                      "SovereigntyTCUDamageMsg",
                      "StationAggressionMsg1",
                      "StationAggressionMsg2",
                      "StationConquerMsg",
                      "StationServiceDisabled",
                      "StationServiceEnabled",
                      "StationStateChangeMsg",
                      "StoryLineMissionAvailableMsg",
                      "StructureAnchoring",
                      "StructureCourierContractChanged",
                      "StructureDestroyed",
                      "StructureFuelAlert",
                      "StructureItemsDelivered",
                      "StructureLostArmor",
                      "StructureLostShields",
                      "StructureOnline",
                      "StructureServicesOffline",
                      "StructureUnanchoring",
                      "StructureUnderAttack",
                      "TowerAlertMsg",
                      "TowerResourceAlertMsg",
                      "TransactionReversalMsg",
                      "TutorialMsg",
                      "WarAllyOfferDeclinedMsg",
                      "WarSurrenderDeclinedMsg",
                      "WarSurrenderOfferMsg",
                      "notificationTypeMoonminingExtractionStarted"
                    ],
                    "title": "get_characters_character_id_notifications_type",
                    "description": "type string"
                  }
                },
                "title": "get_characters_character_id_notifications_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_notifications_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_notifications.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_notifications",
        "x-cached-seconds": 600,
        "x-alternate-versions": [
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/roles/": {
      "get": {
        "description": "Returns a character's corporation roles\n\n---\nAlternate route: `/dev/characters/{character_id}/roles/`\n\nAlternate route: `/v2/characters/{character_id}/roles/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get character corporation roles",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "The character's roles in thier corporation",
            "examples": {
              "application/json": {
                "roles": [
                  "Director",
                  "Station_Manager"
                ]
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "roles": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string",
                    "uniqueItems": true,
                    "enum": [
                      "Account_Take_1",
                      "Account_Take_2",
                      "Account_Take_3",
                      "Account_Take_4",
                      "Account_Take_5",
                      "Account_Take_6",
                      "Account_Take_7",
                      "Accountant",
                      "Auditor",
                      "Communications_Officer",
                      "Config_Equipment",
                      "Config_Starbase_Equipment",
                      "Container_Take_1",
                      "Container_Take_2",
                      "Container_Take_3",
                      "Container_Take_4",
                      "Container_Take_5",
                      "Container_Take_6",
                      "Container_Take_7",
                      "Contract_Manager",
                      "Diplomat",
                      "Director",
                      "Factory_Manager",
                      "Fitting_Manager",
                      "Hangar_Query_1",
                      "Hangar_Query_2",
                      "Hangar_Query_3",
                      "Hangar_Query_4",
                      "Hangar_Query_5",
                      "Hangar_Query_6",
                      "Hangar_Query_7",
                      "Hangar_Take_1",
                      "Hangar_Take_2",
                      "Hangar_Take_3",
                      "Hangar_Take_4",
                      "Hangar_Take_5",
                      "Hangar_Take_6",
                      "Hangar_Take_7",
                      "Junior_Accountant",
                      "Personnel_Manager",
                      "Rent_Factory_Facility",
                      "Rent_Office",
                      "Rent_Research_Facility",
                      "Security_Officer",
                      "Starbase_Defense_Operator",
                      "Starbase_Fuel_Technician",
                      "Station_Manager",
                      "Terrestrial_Combat_Officer",
                      "Terrestrial_Logistics_Officer",
                      "Trader"
                    ],
                    "title": "get_characters_character_id_roles_role",
                    "description": "role string"
                  },
                  "title": "get_characters_character_id_roles_roles",
                  "description": "roles array"
                },
                "roles_at_hq": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string",
                    "uniqueItems": true,
                    "enum": [
                      "Account_Take_1",
                      "Account_Take_2",
                      "Account_Take_3",
                      "Account_Take_4",
                      "Account_Take_5",
                      "Account_Take_6",
                      "Account_Take_7",
                      "Accountant",
                      "Auditor",
                      "Communications_Officer",
                      "Config_Equipment",
                      "Config_Starbase_Equipment",
                      "Container_Take_1",
                      "Container_Take_2",
                      "Container_Take_3",
                      "Container_Take_4",
                      "Container_Take_5",
                      "Container_Take_6",
                      "Container_Take_7",
                      "Contract_Manager",
                      "Diplomat",
                      "Director",
                      "Factory_Manager",
                      "Fitting_Manager",
                      "Hangar_Query_1",
                      "Hangar_Query_2",
                      "Hangar_Query_3",
                      "Hangar_Query_4",
                      "Hangar_Query_5",
                      "Hangar_Query_6",
                      "Hangar_Query_7",
                      "Hangar_Take_1",
                      "Hangar_Take_2",
                      "Hangar_Take_3",
                      "Hangar_Take_4",
                      "Hangar_Take_5",
                      "Hangar_Take_6",
                      "Hangar_Take_7",
                      "Junior_Accountant",
                      "Personnel_Manager",
                      "Rent_Factory_Facility",
                      "Rent_Office",
                      "Rent_Research_Facility",
                      "Security_Officer",
                      "Starbase_Defense_Operator",
                      "Starbase_Fuel_Technician",
                      "Station_Manager",
                      "Terrestrial_Combat_Officer",
                      "Terrestrial_Logistics_Officer",
                      "Trader"
                    ],
                    "title": "get_characters_character_id_roles_roles_at_hq",
                    "description": "roles_at_hq string"
                  },
                  "title": "get_characters_character_id_roles_roles_at_hq",
                  "description": "roles_at_hq array"
                },
                "roles_at_base": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string",
                    "uniqueItems": true,
                    "enum": [
                      "Account_Take_1",
                      "Account_Take_2",
                      "Account_Take_3",
                      "Account_Take_4",
                      "Account_Take_5",
                      "Account_Take_6",
                      "Account_Take_7",
                      "Accountant",
                      "Auditor",
                      "Communications_Officer",
                      "Config_Equipment",
                      "Config_Starbase_Equipment",
                      "Container_Take_1",
                      "Container_Take_2",
                      "Container_Take_3",
                      "Container_Take_4",
                      "Container_Take_5",
                      "Container_Take_6",
                      "Container_Take_7",
                      "Contract_Manager",
                      "Diplomat",
                      "Director",
                      "Factory_Manager",
                      "Fitting_Manager",
                      "Hangar_Query_1",
                      "Hangar_Query_2",
                      "Hangar_Query_3",
                      "Hangar_Query_4",
                      "Hangar_Query_5",
                      "Hangar_Query_6",
                      "Hangar_Query_7",
                      "Hangar_Take_1",
                      "Hangar_Take_2",
                      "Hangar_Take_3",
                      "Hangar_Take_4",
                      "Hangar_Take_5",
                      "Hangar_Take_6",
                      "Hangar_Take_7",
                      "Junior_Accountant",
                      "Personnel_Manager",
                      "Rent_Factory_Facility",
                      "Rent_Office",
                      "Rent_Research_Facility",
                      "Security_Officer",
                      "Starbase_Defense_Operator",
                      "Starbase_Fuel_Technician",
                      "Station_Manager",
                      "Terrestrial_Combat_Officer",
                      "Terrestrial_Logistics_Officer",
                      "Trader"
                    ],
                    "title": "get_characters_character_id_roles_roles_at_base",
                    "description": "roles_at_base string"
                  },
                  "title": "get_characters_character_id_roles_roles_at_base",
                  "description": "roles_at_base array"
                },
                "roles_at_other": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string",
                    "uniqueItems": true,
                    "enum": [
                      "Account_Take_1",
                      "Account_Take_2",
                      "Account_Take_3",
                      "Account_Take_4",
                      "Account_Take_5",
                      "Account_Take_6",
                      "Account_Take_7",
                      "Accountant",
                      "Auditor",
                      "Communications_Officer",
                      "Config_Equipment",
                      "Config_Starbase_Equipment",
                      "Container_Take_1",
                      "Container_Take_2",
                      "Container_Take_3",
                      "Container_Take_4",
                      "Container_Take_5",
                      "Container_Take_6",
                      "Container_Take_7",
                      "Contract_Manager",
                      "Diplomat",
                      "Director",
                      "Factory_Manager",
                      "Fitting_Manager",
                      "Hangar_Query_1",
                      "Hangar_Query_2",
                      "Hangar_Query_3",
                      "Hangar_Query_4",
                      "Hangar_Query_5",
                      "Hangar_Query_6",
                      "Hangar_Query_7",
                      "Hangar_Take_1",
                      "Hangar_Take_2",
                      "Hangar_Take_3",
                      "Hangar_Take_4",
                      "Hangar_Take_5",
                      "Hangar_Take_6",
                      "Hangar_Take_7",
                      "Junior_Accountant",
                      "Personnel_Manager",
                      "Rent_Factory_Facility",
                      "Rent_Office",
                      "Rent_Research_Facility",
                      "Security_Officer",
                      "Starbase_Defense_Operator",
                      "Starbase_Fuel_Technician",
                      "Station_Manager",
                      "Terrestrial_Combat_Officer",
                      "Terrestrial_Logistics_Officer",
                      "Trader"
                    ],
                    "title": "get_characters_character_id_roles_roles_at_other",
                    "description": "roles_at_other string"
                  },
                  "title": "get_characters_character_id_roles_roles_at_other",
                  "description": "roles_at_other array"
                }
              },
              "title": "get_characters_character_id_roles_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_corporation_roles.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_roles",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/characters/{character_id}/titles/": {
      "get": {
        "description": "Returns a character's titles\n\n---\nAlternate route: `/dev/characters/{character_id}/titles/`\n\nAlternate route: `/legacy/characters/{character_id}/titles/`\n\nAlternate route: `/v1/characters/{character_id}/titles/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get character corporation titles",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of titles",
            "examples": {
              "application/json": [
                {
                  "title_id": 1,
                  "name": "Awesome Title"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 16,
              "items": {
                "type": "object",
                "properties": {
                  "title_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_titles_title_id",
                    "description": "title_id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "get_characters_character_id_titles_name",
                    "description": "name string"
                  }
                },
                "title": "get_characters_character_id_titles_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_titles_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_titles.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_titles",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/stats/": {
      "get": {
        "description": "Returns aggregate yearly stats for a character\n\n---\nAlternate route: `/dev/characters/{character_id}/stats/`\n\nAlternate route: `/v2/characters/{character_id}/stats/`\n\n---\nThis route is cached for up to 86400 seconds",
        "summary": "Yearly aggregate stats",
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Character stats",
            "examples": {
              "application/json": [
                {
                  "year": 2014,
                  "character": {
                    "days_of_activity": 365,
                    "minutes": 1000000,
                    "sessions_started": 500
                  },
                  "combat": {
                    "kills_low_sec": 42
                  }
                },
                {
                  "year": 2015,
                  "character": {
                    "days_of_activity": 365,
                    "minutes": 1000000,
                    "sessions_started": 500
                  },
                  "combat": {
                    "kills_null_sec": 1337
                  }
                }
              ]
            },
            "schema": {
              "type": "array",
              "description": "List of character aggregate stats",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "description": "Aggregate stats for a year",
                "required": [
                  "year"
                ],
                "properties": {
                  "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gregorian year for this set of aggregates",
                    "title": "get_characters_character_id_stats_year"
                  },
                  "character": {
                    "type": "object",
                    "properties": {
                      "days_of_activity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_days_of_activity",
                        "description": "days_of_activity integer"
                      },
                      "minutes": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_minutes",
                        "description": "minutes integer"
                      },
                      "sessions_started": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_sessions_started",
                        "description": "sessions_started integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_character",
                    "description": "character object"
                  },
                  "combat": {
                    "type": "object",
                    "properties": {
                      "cap_drainedby_npc": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_cap_drainedby_npc",
                        "description": "cap_drainedby_npc integer"
                      },
                      "cap_drainedby_pc": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_cap_drainedby_pc",
                        "description": "cap_drainedby_pc integer"
                      },
                      "cap_draining_pc": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_cap_draining_pc",
                        "description": "cap_draining_pc integer"
                      },
                      "criminal_flag_set": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_criminal_flag_set",
                        "description": "criminal_flag_set integer"
                      },
                      "damage_from_np_cs_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_np_cs_amount",
                        "description": "damage_from_np_cs_amount integer"
                      },
                      "damage_from_np_cs_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_np_cs_num_shots",
                        "description": "damage_from_np_cs_num_shots integer"
                      },
                      "damage_from_players_bomb_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_bomb_amount",
                        "description": "damage_from_players_bomb_amount integer"
                      },
                      "damage_from_players_bomb_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_bomb_num_shots",
                        "description": "damage_from_players_bomb_num_shots integer"
                      },
                      "damage_from_players_combat_drone_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_combat_drone_amount",
                        "description": "damage_from_players_combat_drone_amount integer"
                      },
                      "damage_from_players_combat_drone_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_combat_drone_num_shots",
                        "description": "damage_from_players_combat_drone_num_shots integer"
                      },
                      "damage_from_players_energy_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_energy_amount",
                        "description": "damage_from_players_energy_amount integer"
                      },
                      "damage_from_players_energy_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_energy_num_shots",
                        "description": "damage_from_players_energy_num_shots integer"
                      },
                      "damage_from_players_fighter_bomber_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_fighter_bomber_amount",
                        "description": "damage_from_players_fighter_bomber_amount integer"
                      },
                      "damage_from_players_fighter_bomber_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_fighter_bomber_num_shots",
                        "description": "damage_from_players_fighter_bomber_num_shots integer"
                      },
                      "damage_from_players_fighter_drone_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_fighter_drone_amount",
                        "description": "damage_from_players_fighter_drone_amount integer"
                      },
                      "damage_from_players_fighter_drone_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_fighter_drone_num_shots",
                        "description": "damage_from_players_fighter_drone_num_shots integer"
                      },
                      "damage_from_players_hybrid_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_hybrid_amount",
                        "description": "damage_from_players_hybrid_amount integer"
                      },
                      "damage_from_players_hybrid_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_hybrid_num_shots",
                        "description": "damage_from_players_hybrid_num_shots integer"
                      },
                      "damage_from_players_missile_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_missile_amount",
                        "description": "damage_from_players_missile_amount integer"
                      },
                      "damage_from_players_missile_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_missile_num_shots",
                        "description": "damage_from_players_missile_num_shots integer"
                      },
                      "damage_from_players_projectile_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_projectile_amount",
                        "description": "damage_from_players_projectile_amount integer"
                      },
                      "damage_from_players_projectile_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_projectile_num_shots",
                        "description": "damage_from_players_projectile_num_shots integer"
                      },
                      "damage_from_players_smart_bomb_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_smart_bomb_amount",
                        "description": "damage_from_players_smart_bomb_amount integer"
                      },
                      "damage_from_players_smart_bomb_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_smart_bomb_num_shots",
                        "description": "damage_from_players_smart_bomb_num_shots integer"
                      },
                      "damage_from_players_super_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_super_amount",
                        "description": "damage_from_players_super_amount integer"
                      },
                      "damage_from_players_super_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_players_super_num_shots",
                        "description": "damage_from_players_super_num_shots integer"
                      },
                      "damage_from_structures_total_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_structures_total_amount",
                        "description": "damage_from_structures_total_amount integer"
                      },
                      "damage_from_structures_total_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_from_structures_total_num_shots",
                        "description": "damage_from_structures_total_num_shots integer"
                      },
                      "damage_to_players_bomb_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_bomb_amount",
                        "description": "damage_to_players_bomb_amount integer"
                      },
                      "damage_to_players_bomb_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_bomb_num_shots",
                        "description": "damage_to_players_bomb_num_shots integer"
                      },
                      "damage_to_players_combat_drone_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_combat_drone_amount",
                        "description": "damage_to_players_combat_drone_amount integer"
                      },
                      "damage_to_players_combat_drone_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_combat_drone_num_shots",
                        "description": "damage_to_players_combat_drone_num_shots integer"
                      },
                      "damage_to_players_energy_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_energy_amount",
                        "description": "damage_to_players_energy_amount integer"
                      },
                      "damage_to_players_energy_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_energy_num_shots",
                        "description": "damage_to_players_energy_num_shots integer"
                      },
                      "damage_to_players_fighter_bomber_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_fighter_bomber_amount",
                        "description": "damage_to_players_fighter_bomber_amount integer"
                      },
                      "damage_to_players_fighter_bomber_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_fighter_bomber_num_shots",
                        "description": "damage_to_players_fighter_bomber_num_shots integer"
                      },
                      "damage_to_players_fighter_drone_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_fighter_drone_amount",
                        "description": "damage_to_players_fighter_drone_amount integer"
                      },
                      "damage_to_players_fighter_drone_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_fighter_drone_num_shots",
                        "description": "damage_to_players_fighter_drone_num_shots integer"
                      },
                      "damage_to_players_hybrid_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_hybrid_amount",
                        "description": "damage_to_players_hybrid_amount integer"
                      },
                      "damage_to_players_hybrid_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_hybrid_num_shots",
                        "description": "damage_to_players_hybrid_num_shots integer"
                      },
                      "damage_to_players_missile_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_missile_amount",
                        "description": "damage_to_players_missile_amount integer"
                      },
                      "damage_to_players_missile_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_missile_num_shots",
                        "description": "damage_to_players_missile_num_shots integer"
                      },
                      "damage_to_players_projectile_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_projectile_amount",
                        "description": "damage_to_players_projectile_amount integer"
                      },
                      "damage_to_players_projectile_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_projectile_num_shots",
                        "description": "damage_to_players_projectile_num_shots integer"
                      },
                      "damage_to_players_smart_bomb_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_smart_bomb_amount",
                        "description": "damage_to_players_smart_bomb_amount integer"
                      },
                      "damage_to_players_smart_bomb_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_smart_bomb_num_shots",
                        "description": "damage_to_players_smart_bomb_num_shots integer"
                      },
                      "damage_to_players_super_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_super_amount",
                        "description": "damage_to_players_super_amount integer"
                      },
                      "damage_to_players_super_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_players_super_num_shots",
                        "description": "damage_to_players_super_num_shots integer"
                      },
                      "damage_to_structures_total_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_structures_total_amount",
                        "description": "damage_to_structures_total_amount integer"
                      },
                      "damage_to_structures_total_num_shots": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_damage_to_structures_total_num_shots",
                        "description": "damage_to_structures_total_num_shots integer"
                      },
                      "deaths_high_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_deaths_high_sec",
                        "description": "deaths_high_sec integer"
                      },
                      "deaths_low_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_deaths_low_sec",
                        "description": "deaths_low_sec integer"
                      },
                      "deaths_null_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_deaths_null_sec",
                        "description": "deaths_null_sec integer"
                      },
                      "deaths_pod_high_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_deaths_pod_high_sec",
                        "description": "deaths_pod_high_sec integer"
                      },
                      "deaths_pod_low_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_deaths_pod_low_sec",
                        "description": "deaths_pod_low_sec integer"
                      },
                      "deaths_pod_null_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_deaths_pod_null_sec",
                        "description": "deaths_pod_null_sec integer"
                      },
                      "deaths_pod_wormhole": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_deaths_pod_wormhole",
                        "description": "deaths_pod_wormhole integer"
                      },
                      "deaths_wormhole": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_deaths_wormhole",
                        "description": "deaths_wormhole integer"
                      },
                      "drone_engage": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_drone_engage",
                        "description": "drone_engage integer"
                      },
                      "dscans": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_dscans",
                        "description": "dscans integer"
                      },
                      "duel_requested": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_duel_requested",
                        "description": "duel_requested integer"
                      },
                      "engagement_register": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_engagement_register",
                        "description": "engagement_register integer"
                      },
                      "kills_assists": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_kills_assists",
                        "description": "kills_assists integer"
                      },
                      "kills_high_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_kills_high_sec",
                        "description": "kills_high_sec integer"
                      },
                      "kills_low_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_kills_low_sec",
                        "description": "kills_low_sec integer"
                      },
                      "kills_null_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_kills_null_sec",
                        "description": "kills_null_sec integer"
                      },
                      "kills_pod_high_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_kills_pod_high_sec",
                        "description": "kills_pod_high_sec integer"
                      },
                      "kills_pod_low_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_kills_pod_low_sec",
                        "description": "kills_pod_low_sec integer"
                      },
                      "kills_pod_null_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_kills_pod_null_sec",
                        "description": "kills_pod_null_sec integer"
                      },
                      "kills_pod_wormhole": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_kills_pod_wormhole",
                        "description": "kills_pod_wormhole integer"
                      },
                      "kills_wormhole": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_kills_wormhole",
                        "description": "kills_wormhole integer"
                      },
                      "npc_flag_set": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_npc_flag_set",
                        "description": "npc_flag_set integer"
                      },
                      "probe_scans": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_probe_scans",
                        "description": "probe_scans integer"
                      },
                      "pvp_flag_set": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_pvp_flag_set",
                        "description": "pvp_flag_set integer"
                      },
                      "repair_armor_by_remote_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_armor_by_remote_amount",
                        "description": "repair_armor_by_remote_amount integer"
                      },
                      "repair_armor_remote_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_armor_remote_amount",
                        "description": "repair_armor_remote_amount integer"
                      },
                      "repair_armor_self_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_armor_self_amount",
                        "description": "repair_armor_self_amount integer"
                      },
                      "repair_capacitor_by_remote_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_capacitor_by_remote_amount",
                        "description": "repair_capacitor_by_remote_amount integer"
                      },
                      "repair_capacitor_remote_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_capacitor_remote_amount",
                        "description": "repair_capacitor_remote_amount integer"
                      },
                      "repair_capacitor_self_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_capacitor_self_amount",
                        "description": "repair_capacitor_self_amount integer"
                      },
                      "repair_hull_by_remote_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_hull_by_remote_amount",
                        "description": "repair_hull_by_remote_amount integer"
                      },
                      "repair_hull_remote_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_hull_remote_amount",
                        "description": "repair_hull_remote_amount integer"
                      },
                      "repair_hull_self_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_hull_self_amount",
                        "description": "repair_hull_self_amount integer"
                      },
                      "repair_shield_by_remote_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_shield_by_remote_amount",
                        "description": "repair_shield_by_remote_amount integer"
                      },
                      "repair_shield_remote_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_shield_remote_amount",
                        "description": "repair_shield_remote_amount integer"
                      },
                      "repair_shield_self_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repair_shield_self_amount",
                        "description": "repair_shield_self_amount integer"
                      },
                      "self_destructs": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_self_destructs",
                        "description": "self_destructs integer"
                      },
                      "warp_scramble_pc": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_warp_scramble_pc",
                        "description": "warp_scramble_pc integer"
                      },
                      "warp_scrambledby_npc": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_warp_scrambledby_npc",
                        "description": "warp_scrambledby_npc integer"
                      },
                      "warp_scrambledby_pc": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_warp_scrambledby_pc",
                        "description": "warp_scrambledby_pc integer"
                      },
                      "weapon_flag_set": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_weapon_flag_set",
                        "description": "weapon_flag_set integer"
                      },
                      "webifiedby_npc": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_webifiedby_npc",
                        "description": "webifiedby_npc integer"
                      },
                      "webifiedby_pc": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_webifiedby_pc",
                        "description": "webifiedby_pc integer"
                      },
                      "webifying_pc": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_webifying_pc",
                        "description": "webifying_pc integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_combat",
                    "description": "combat object"
                  },
                  "industry": {
                    "type": "object",
                    "properties": {
                      "hacking_successes": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_hacking_successes",
                        "description": "hacking_successes integer"
                      },
                      "jobs_cancelled": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_cancelled",
                        "description": "jobs_cancelled integer"
                      },
                      "jobs_completed_copy_blueprint": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_copy_blueprint",
                        "description": "jobs_completed_copy_blueprint integer"
                      },
                      "jobs_completed_invention": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_invention",
                        "description": "jobs_completed_invention integer"
                      },
                      "jobs_completed_manufacture": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture",
                        "description": "jobs_completed_manufacture integer"
                      },
                      "jobs_completed_manufacture_asteroid": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_asteroid",
                        "description": "jobs_completed_manufacture_asteroid integer"
                      },
                      "jobs_completed_manufacture_asteroid_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_asteroid_quantity",
                        "description": "jobs_completed_manufacture_asteroid_quantity integer"
                      },
                      "jobs_completed_manufacture_charge": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_charge",
                        "description": "jobs_completed_manufacture_charge integer"
                      },
                      "jobs_completed_manufacture_charge_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_charge_quantity",
                        "description": "jobs_completed_manufacture_charge_quantity integer"
                      },
                      "jobs_completed_manufacture_commodity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_commodity",
                        "description": "jobs_completed_manufacture_commodity integer"
                      },
                      "jobs_completed_manufacture_commodity_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_commodity_quantity",
                        "description": "jobs_completed_manufacture_commodity_quantity integer"
                      },
                      "jobs_completed_manufacture_deployable": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_deployable",
                        "description": "jobs_completed_manufacture_deployable integer"
                      },
                      "jobs_completed_manufacture_deployable_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_deployable_quantity",
                        "description": "jobs_completed_manufacture_deployable_quantity integer"
                      },
                      "jobs_completed_manufacture_drone": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_drone",
                        "description": "jobs_completed_manufacture_drone integer"
                      },
                      "jobs_completed_manufacture_drone_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_drone_quantity",
                        "description": "jobs_completed_manufacture_drone_quantity integer"
                      },
                      "jobs_completed_manufacture_implant": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_implant",
                        "description": "jobs_completed_manufacture_implant integer"
                      },
                      "jobs_completed_manufacture_implant_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_implant_quantity",
                        "description": "jobs_completed_manufacture_implant_quantity integer"
                      },
                      "jobs_completed_manufacture_module": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_module",
                        "description": "jobs_completed_manufacture_module integer"
                      },
                      "jobs_completed_manufacture_module_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_module_quantity",
                        "description": "jobs_completed_manufacture_module_quantity integer"
                      },
                      "jobs_completed_manufacture_other": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_other",
                        "description": "jobs_completed_manufacture_other integer"
                      },
                      "jobs_completed_manufacture_other_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_other_quantity",
                        "description": "jobs_completed_manufacture_other_quantity integer"
                      },
                      "jobs_completed_manufacture_ship": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_ship",
                        "description": "jobs_completed_manufacture_ship integer"
                      },
                      "jobs_completed_manufacture_ship_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_ship_quantity",
                        "description": "jobs_completed_manufacture_ship_quantity integer"
                      },
                      "jobs_completed_manufacture_structure": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_structure",
                        "description": "jobs_completed_manufacture_structure integer"
                      },
                      "jobs_completed_manufacture_structure_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_structure_quantity",
                        "description": "jobs_completed_manufacture_structure_quantity integer"
                      },
                      "jobs_completed_manufacture_subsystem": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_subsystem",
                        "description": "jobs_completed_manufacture_subsystem integer"
                      },
                      "jobs_completed_manufacture_subsystem_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_manufacture_subsystem_quantity",
                        "description": "jobs_completed_manufacture_subsystem_quantity integer"
                      },
                      "jobs_completed_material_productivity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_material_productivity",
                        "description": "jobs_completed_material_productivity integer"
                      },
                      "jobs_completed_time_productivity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_completed_time_productivity",
                        "description": "jobs_completed_time_productivity integer"
                      },
                      "jobs_started_copy_blueprint": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_started_copy_blueprint",
                        "description": "jobs_started_copy_blueprint integer"
                      },
                      "jobs_started_invention": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_started_invention",
                        "description": "jobs_started_invention integer"
                      },
                      "jobs_started_manufacture": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_started_manufacture",
                        "description": "jobs_started_manufacture integer"
                      },
                      "jobs_started_material_productivity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_started_material_productivity",
                        "description": "jobs_started_material_productivity integer"
                      },
                      "jobs_started_time_productivity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jobs_started_time_productivity",
                        "description": "jobs_started_time_productivity integer"
                      },
                      "reprocess_item": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_reprocess_item",
                        "description": "reprocess_item integer"
                      },
                      "reprocess_item_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_reprocess_item_quantity",
                        "description": "reprocess_item_quantity integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_industry",
                    "description": "industry object"
                  },
                  "inventory": {
                    "type": "object",
                    "properties": {
                      "abandon_loot_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_abandon_loot_quantity",
                        "description": "abandon_loot_quantity integer"
                      },
                      "trash_item_quantity": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_trash_item_quantity",
                        "description": "trash_item_quantity integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_inventory",
                    "description": "inventory object"
                  },
                  "isk": {
                    "type": "object",
                    "properties": {
                      "in": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_in",
                        "description": "in integer"
                      },
                      "out": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_out",
                        "description": "out integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_isk",
                    "description": "isk object"
                  },
                  "market": {
                    "type": "object",
                    "properties": {
                      "accept_contracts_courier": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_accept_contracts_courier",
                        "description": "accept_contracts_courier integer"
                      },
                      "accept_contracts_item_exchange": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_accept_contracts_item_exchange",
                        "description": "accept_contracts_item_exchange integer"
                      },
                      "buy_orders_placed": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_buy_orders_placed",
                        "description": "buy_orders_placed integer"
                      },
                      "cancel_market_order": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_cancel_market_order",
                        "description": "cancel_market_order integer"
                      },
                      "create_contracts_auction": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_create_contracts_auction",
                        "description": "create_contracts_auction integer"
                      },
                      "create_contracts_courier": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_create_contracts_courier",
                        "description": "create_contracts_courier integer"
                      },
                      "create_contracts_item_exchange": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_create_contracts_item_exchange",
                        "description": "create_contracts_item_exchange integer"
                      },
                      "deliver_courier_contract": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_deliver_courier_contract",
                        "description": "deliver_courier_contract integer"
                      },
                      "isk_gained": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_isk_gained",
                        "description": "isk_gained integer"
                      },
                      "isk_spent": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_isk_spent",
                        "description": "isk_spent integer"
                      },
                      "modify_market_order": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_modify_market_order",
                        "description": "modify_market_order integer"
                      },
                      "search_contracts": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_search_contracts",
                        "description": "search_contracts integer"
                      },
                      "sell_orders_placed": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_sell_orders_placed",
                        "description": "sell_orders_placed integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_market",
                    "description": "market object"
                  },
                  "mining": {
                    "type": "object",
                    "properties": {
                      "drone_mine": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_drone_mine",
                        "description": "drone_mine integer"
                      },
                      "ore_arkonor": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_arkonor",
                        "description": "ore_arkonor integer"
                      },
                      "ore_bistot": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_bistot",
                        "description": "ore_bistot integer"
                      },
                      "ore_crokite": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_crokite",
                        "description": "ore_crokite integer"
                      },
                      "ore_dark_ochre": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_dark_ochre",
                        "description": "ore_dark_ochre integer"
                      },
                      "ore_gneiss": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_gneiss",
                        "description": "ore_gneiss integer"
                      },
                      "ore_harvestable_cloud": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_harvestable_cloud",
                        "description": "ore_harvestable_cloud integer"
                      },
                      "ore_hedbergite": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_hedbergite",
                        "description": "ore_hedbergite integer"
                      },
                      "ore_hemorphite": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_hemorphite",
                        "description": "ore_hemorphite integer"
                      },
                      "ore_ice": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_ice",
                        "description": "ore_ice integer"
                      },
                      "ore_jaspet": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_jaspet",
                        "description": "ore_jaspet integer"
                      },
                      "ore_kernite": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_kernite",
                        "description": "ore_kernite integer"
                      },
                      "ore_mercoxit": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_mercoxit",
                        "description": "ore_mercoxit integer"
                      },
                      "ore_omber": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_omber",
                        "description": "ore_omber integer"
                      },
                      "ore_plagioclase": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_plagioclase",
                        "description": "ore_plagioclase integer"
                      },
                      "ore_pyroxeres": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_pyroxeres",
                        "description": "ore_pyroxeres integer"
                      },
                      "ore_scordite": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_scordite",
                        "description": "ore_scordite integer"
                      },
                      "ore_spodumain": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_spodumain",
                        "description": "ore_spodumain integer"
                      },
                      "ore_veldspar": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_ore_veldspar",
                        "description": "ore_veldspar integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_mining",
                    "description": "mining object"
                  },
                  "module": {
                    "type": "object",
                    "properties": {
                      "activations_armor_hardener": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_armor_hardener",
                        "description": "activations_armor_hardener integer"
                      },
                      "activations_armor_repair_unit": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_armor_repair_unit",
                        "description": "activations_armor_repair_unit integer"
                      },
                      "activations_armor_resistance_shift_hardener": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_armor_resistance_shift_hardener",
                        "description": "activations_armor_resistance_shift_hardener integer"
                      },
                      "activations_automated_targeting_system": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_automated_targeting_system",
                        "description": "activations_automated_targeting_system integer"
                      },
                      "activations_bastion": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_bastion",
                        "description": "activations_bastion integer"
                      },
                      "activations_bomb_launcher": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_bomb_launcher",
                        "description": "activations_bomb_launcher integer"
                      },
                      "activations_capacitor_booster": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_capacitor_booster",
                        "description": "activations_capacitor_booster integer"
                      },
                      "activations_cargo_scanner": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_cargo_scanner",
                        "description": "activations_cargo_scanner integer"
                      },
                      "activations_cloaking_device": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_cloaking_device",
                        "description": "activations_cloaking_device integer"
                      },
                      "activations_clone_vat_bay": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_clone_vat_bay",
                        "description": "activations_clone_vat_bay integer"
                      },
                      "activations_cynosural_field": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_cynosural_field",
                        "description": "activations_cynosural_field integer"
                      },
                      "activations_damage_control": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_damage_control",
                        "description": "activations_damage_control integer"
                      },
                      "activations_data_miners": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_data_miners",
                        "description": "activations_data_miners integer"
                      },
                      "activations_drone_control_unit": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_drone_control_unit",
                        "description": "activations_drone_control_unit integer"
                      },
                      "activations_drone_tracking_modules": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_drone_tracking_modules",
                        "description": "activations_drone_tracking_modules integer"
                      },
                      "activations_eccm": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_eccm",
                        "description": "activations_eccm integer"
                      },
                      "activations_ecm": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_ecm",
                        "description": "activations_ecm integer"
                      },
                      "activations_ecm_burst": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_ecm_burst",
                        "description": "activations_ecm_burst integer"
                      },
                      "activations_energy_destabilizer": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_energy_destabilizer",
                        "description": "activations_energy_destabilizer integer"
                      },
                      "activations_energy_vampire": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_energy_vampire",
                        "description": "activations_energy_vampire integer"
                      },
                      "activations_energy_weapon": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_energy_weapon",
                        "description": "activations_energy_weapon integer"
                      },
                      "activations_festival_launcher": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_festival_launcher",
                        "description": "activations_festival_launcher integer"
                      },
                      "activations_frequency_mining_laser": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_frequency_mining_laser",
                        "description": "activations_frequency_mining_laser integer"
                      },
                      "activations_fueled_armor_repairer": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_fueled_armor_repairer",
                        "description": "activations_fueled_armor_repairer integer"
                      },
                      "activations_fueled_shield_booster": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_fueled_shield_booster",
                        "description": "activations_fueled_shield_booster integer"
                      },
                      "activations_gang_coordinator": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_gang_coordinator",
                        "description": "activations_gang_coordinator integer"
                      },
                      "activations_gas_cloud_harvester": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_gas_cloud_harvester",
                        "description": "activations_gas_cloud_harvester integer"
                      },
                      "activations_hull_repair_unit": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_hull_repair_unit",
                        "description": "activations_hull_repair_unit integer"
                      },
                      "activations_hybrid_weapon": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_hybrid_weapon",
                        "description": "activations_hybrid_weapon integer"
                      },
                      "activations_industrial_core": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_industrial_core",
                        "description": "activations_industrial_core integer"
                      },
                      "activations_interdiction_sphere_launcher": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_interdiction_sphere_launcher",
                        "description": "activations_interdiction_sphere_launcher integer"
                      },
                      "activations_micro_jump_drive": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_micro_jump_drive",
                        "description": "activations_micro_jump_drive integer"
                      },
                      "activations_mining_laser": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_mining_laser",
                        "description": "activations_mining_laser integer"
                      },
                      "activations_missile_launcher": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_missile_launcher",
                        "description": "activations_missile_launcher integer"
                      },
                      "activations_passive_targeting_system": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_passive_targeting_system",
                        "description": "activations_passive_targeting_system integer"
                      },
                      "activations_probe_launcher": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_probe_launcher",
                        "description": "activations_probe_launcher integer"
                      },
                      "activations_projected_eccm": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_projected_eccm",
                        "description": "activations_projected_eccm integer"
                      },
                      "activations_projectile_weapon": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_projectile_weapon",
                        "description": "activations_projectile_weapon integer"
                      },
                      "activations_propulsion_module": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_propulsion_module",
                        "description": "activations_propulsion_module integer"
                      },
                      "activations_remote_armor_repairer": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_remote_armor_repairer",
                        "description": "activations_remote_armor_repairer integer"
                      },
                      "activations_remote_capacitor_transmitter": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_remote_capacitor_transmitter",
                        "description": "activations_remote_capacitor_transmitter integer"
                      },
                      "activations_remote_ecm_burst": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_remote_ecm_burst",
                        "description": "activations_remote_ecm_burst integer"
                      },
                      "activations_remote_hull_repairer": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_remote_hull_repairer",
                        "description": "activations_remote_hull_repairer integer"
                      },
                      "activations_remote_sensor_booster": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_remote_sensor_booster",
                        "description": "activations_remote_sensor_booster integer"
                      },
                      "activations_remote_sensor_damper": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_remote_sensor_damper",
                        "description": "activations_remote_sensor_damper integer"
                      },
                      "activations_remote_shield_booster": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_remote_shield_booster",
                        "description": "activations_remote_shield_booster integer"
                      },
                      "activations_remote_tracking_computer": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_remote_tracking_computer",
                        "description": "activations_remote_tracking_computer integer"
                      },
                      "activations_salvager": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_salvager",
                        "description": "activations_salvager integer"
                      },
                      "activations_sensor_booster": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_sensor_booster",
                        "description": "activations_sensor_booster integer"
                      },
                      "activations_shield_booster": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_shield_booster",
                        "description": "activations_shield_booster integer"
                      },
                      "activations_shield_hardener": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_shield_hardener",
                        "description": "activations_shield_hardener integer"
                      },
                      "activations_ship_scanner": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_ship_scanner",
                        "description": "activations_ship_scanner integer"
                      },
                      "activations_siege": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_siege",
                        "description": "activations_siege integer"
                      },
                      "activations_smart_bomb": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_smart_bomb",
                        "description": "activations_smart_bomb integer"
                      },
                      "activations_stasis_web": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_stasis_web",
                        "description": "activations_stasis_web integer"
                      },
                      "activations_strip_miner": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_strip_miner",
                        "description": "activations_strip_miner integer"
                      },
                      "activations_super_weapon": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_super_weapon",
                        "description": "activations_super_weapon integer"
                      },
                      "activations_survey_scanner": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_survey_scanner",
                        "description": "activations_survey_scanner integer"
                      },
                      "activations_target_breaker": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_target_breaker",
                        "description": "activations_target_breaker integer"
                      },
                      "activations_target_painter": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_target_painter",
                        "description": "activations_target_painter integer"
                      },
                      "activations_tracking_computer": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_tracking_computer",
                        "description": "activations_tracking_computer integer"
                      },
                      "activations_tracking_disruptor": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_tracking_disruptor",
                        "description": "activations_tracking_disruptor integer"
                      },
                      "activations_tractor_beam": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_tractor_beam",
                        "description": "activations_tractor_beam integer"
                      },
                      "activations_triage": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_triage",
                        "description": "activations_triage integer"
                      },
                      "activations_warp_disrupt_field_generator": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_warp_disrupt_field_generator",
                        "description": "activations_warp_disrupt_field_generator integer"
                      },
                      "activations_warp_scrambler": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_activations_warp_scrambler",
                        "description": "activations_warp_scrambler integer"
                      },
                      "link_weapons": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_link_weapons",
                        "description": "link_weapons integer"
                      },
                      "overload": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_overload",
                        "description": "overload integer"
                      },
                      "repairs": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_repairs",
                        "description": "repairs integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_module",
                    "description": "module object"
                  },
                  "orbital": {
                    "type": "object",
                    "properties": {
                      "strike_characters_killed": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_strike_characters_killed",
                        "description": "strike_characters_killed integer"
                      },
                      "strike_damage_to_players_armor_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_strike_damage_to_players_armor_amount",
                        "description": "strike_damage_to_players_armor_amount integer"
                      },
                      "strike_damage_to_players_shield_amount": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_strike_damage_to_players_shield_amount",
                        "description": "strike_damage_to_players_shield_amount integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_orbital",
                    "description": "orbital object"
                  },
                  "pve": {
                    "type": "object",
                    "properties": {
                      "dungeons_completed_agent": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_dungeons_completed_agent",
                        "description": "dungeons_completed_agent integer"
                      },
                      "dungeons_completed_distribution": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_dungeons_completed_distribution",
                        "description": "dungeons_completed_distribution integer"
                      },
                      "missions_succeeded": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_missions_succeeded",
                        "description": "missions_succeeded integer"
                      },
                      "missions_succeeded_epic_arc": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_missions_succeeded_epic_arc",
                        "description": "missions_succeeded_epic_arc integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_pve",
                    "description": "pve object"
                  },
                  "social": {
                    "type": "object",
                    "properties": {
                      "add_contact_bad": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_add_contact_bad",
                        "description": "add_contact_bad integer"
                      },
                      "add_contact_good": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_add_contact_good",
                        "description": "add_contact_good integer"
                      },
                      "add_contact_high": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_add_contact_high",
                        "description": "add_contact_high integer"
                      },
                      "add_contact_horrible": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_add_contact_horrible",
                        "description": "add_contact_horrible integer"
                      },
                      "add_contact_neutral": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_add_contact_neutral",
                        "description": "add_contact_neutral integer"
                      },
                      "add_note": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_add_note",
                        "description": "add_note integer"
                      },
                      "added_as_contact_bad": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_added_as_contact_bad",
                        "description": "added_as_contact_bad integer"
                      },
                      "added_as_contact_good": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_added_as_contact_good",
                        "description": "added_as_contact_good integer"
                      },
                      "added_as_contact_high": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_added_as_contact_high",
                        "description": "added_as_contact_high integer"
                      },
                      "added_as_contact_horrible": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_added_as_contact_horrible",
                        "description": "added_as_contact_horrible integer"
                      },
                      "added_as_contact_neutral": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_added_as_contact_neutral",
                        "description": "added_as_contact_neutral integer"
                      },
                      "calendar_event_created": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_calendar_event_created",
                        "description": "calendar_event_created integer"
                      },
                      "chat_messages_alliance": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_chat_messages_alliance",
                        "description": "chat_messages_alliance integer"
                      },
                      "chat_messages_constellation": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_chat_messages_constellation",
                        "description": "chat_messages_constellation integer"
                      },
                      "chat_messages_corporation": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_chat_messages_corporation",
                        "description": "chat_messages_corporation integer"
                      },
                      "chat_messages_fleet": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_chat_messages_fleet",
                        "description": "chat_messages_fleet integer"
                      },
                      "chat_messages_region": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_chat_messages_region",
                        "description": "chat_messages_region integer"
                      },
                      "chat_messages_solarsystem": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_chat_messages_solarsystem",
                        "description": "chat_messages_solarsystem integer"
                      },
                      "chat_messages_warfaction": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_chat_messages_warfaction",
                        "description": "chat_messages_warfaction integer"
                      },
                      "chat_total_message_length": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_chat_total_message_length",
                        "description": "chat_total_message_length integer"
                      },
                      "direct_trades": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_direct_trades",
                        "description": "direct_trades integer"
                      },
                      "fleet_broadcasts": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_fleet_broadcasts",
                        "description": "fleet_broadcasts integer"
                      },
                      "fleet_joins": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_fleet_joins",
                        "description": "fleet_joins integer"
                      },
                      "mails_received": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_mails_received",
                        "description": "mails_received integer"
                      },
                      "mails_sent": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_mails_sent",
                        "description": "mails_sent integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_social",
                    "description": "social object"
                  },
                  "travel": {
                    "type": "object",
                    "properties": {
                      "acceleration_gate_activations": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_acceleration_gate_activations",
                        "description": "acceleration_gate_activations integer"
                      },
                      "align_to": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_align_to",
                        "description": "align_to integer"
                      },
                      "distance_warped_high_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_distance_warped_high_sec",
                        "description": "distance_warped_high_sec integer"
                      },
                      "distance_warped_low_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_distance_warped_low_sec",
                        "description": "distance_warped_low_sec integer"
                      },
                      "distance_warped_null_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_distance_warped_null_sec",
                        "description": "distance_warped_null_sec integer"
                      },
                      "distance_warped_wormhole": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_distance_warped_wormhole",
                        "description": "distance_warped_wormhole integer"
                      },
                      "docks_high_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_docks_high_sec",
                        "description": "docks_high_sec integer"
                      },
                      "docks_low_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_docks_low_sec",
                        "description": "docks_low_sec integer"
                      },
                      "docks_null_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_docks_null_sec",
                        "description": "docks_null_sec integer"
                      },
                      "jumps_stargate_high_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jumps_stargate_high_sec",
                        "description": "jumps_stargate_high_sec integer"
                      },
                      "jumps_stargate_low_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jumps_stargate_low_sec",
                        "description": "jumps_stargate_low_sec integer"
                      },
                      "jumps_stargate_null_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jumps_stargate_null_sec",
                        "description": "jumps_stargate_null_sec integer"
                      },
                      "jumps_wormhole": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_jumps_wormhole",
                        "description": "jumps_wormhole integer"
                      },
                      "warps_high_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_warps_high_sec",
                        "description": "warps_high_sec integer"
                      },
                      "warps_low_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_warps_low_sec",
                        "description": "warps_low_sec integer"
                      },
                      "warps_null_sec": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_warps_null_sec",
                        "description": "warps_null_sec integer"
                      },
                      "warps_to_bookmark": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_warps_to_bookmark",
                        "description": "warps_to_bookmark integer"
                      },
                      "warps_to_celestial": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_warps_to_celestial",
                        "description": "warps_to_celestial integer"
                      },
                      "warps_to_fleet_member": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_warps_to_fleet_member",
                        "description": "warps_to_fleet_member integer"
                      },
                      "warps_to_scan_result": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_warps_to_scan_result",
                        "description": "warps_to_scan_result integer"
                      },
                      "warps_wormhole": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_stats_warps_wormhole",
                        "description": "warps_wormhole integer"
                      }
                    },
                    "title": "get_characters_character_id_stats_travel",
                    "description": "travel object"
                  }
                },
                "title": "get_characters_character_id_stats_200_ok"
              },
              "title": "get_characters_character_id_stats_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characterstats.read.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_stats",
        "x-cached-seconds": 86400,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/characters/{character_id}/clones/": {
      "get": {
        "description": "A list of the character's clones\n\n---\nAlternate route: `/dev/characters/{character_id}/clones/`\n\nAlternate route: `/v3/characters/{character_id}/clones/`\n\n---\nThis route is cached for up to 120 seconds",
        "summary": "Get clones",
        "tags": [
          "Clones"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Clone information for the given character",
            "examples": {
              "application/json": {
                "home_location": {
                  "location_id": 1021348135816,
                  "location_type": "structure"
                },
                "jump_clones": [
                  {
                    "jump_clone_id": 12345,
                    "location_id": 60003463,
                    "location_type": "station",
                    "implants": [
                      22118
                    ]
                  }
                ]
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "jump_clones"
              ],
              "properties": {
                "last_clone_jump_date": {
                  "type": "string",
                  "format": "date-time",
                  "title": "get_characters_character_id_clones_last_clone_jump_date",
                  "description": "last_clone_jump_date string"
                },
                "home_location": {
                  "type": "object",
                  "properties": {
                    "location_id": {
                      "type": "integer",
                      "format": "int64",
                      "title": "get_characters_character_id_clones_location_id",
                      "description": "location_id integer"
                    },
                    "location_type": {
                      "type": "string",
                      "enum": [
                        "station",
                        "structure"
                      ],
                      "title": "get_characters_character_id_clones_location_type",
                      "description": "location_type string"
                    }
                  },
                  "title": "get_characters_character_id_clones_home_location",
                  "description": "home_location object"
                },
                "last_station_change_date": {
                  "type": "string",
                  "format": "date-time",
                  "title": "get_characters_character_id_clones_last_station_change_date",
                  "description": "last_station_change_date string"
                },
                "jump_clones": {
                  "type": "array",
                  "maxItems": 10,
                  "items": {
                    "type": "object",
                    "required": [
                      "jump_clone_id",
                      "location_id",
                      "location_type",
                      "implants"
                    ],
                    "properties": {
                      "jump_clone_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_clones_jump_clone_id",
                        "description": "jump_clone_id integer"
                      },
                      "name": {
                        "type": "string",
                        "title": "get_characters_character_id_clones_name",
                        "description": "name string"
                      },
                      "location_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_clones_location_id",
                        "description": "location_id integer"
                      },
                      "location_type": {
                        "type": "string",
                        "enum": [
                          "station",
                          "structure"
                        ],
                        "title": "get_characters_character_id_clones_location_type",
                        "description": "location_type string"
                      },
                      "implants": {
                        "type": "array",
                        "maxItems": 11,
                        "items": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_characters_character_id_clones_implant",
                          "description": "implant integer"
                        },
                        "title": "get_characters_character_id_clones_implants",
                        "description": "implants array"
                      }
                    },
                    "title": "get_characters_character_id_clones_jump_clone",
                    "description": "jump_clone object"
                  },
                  "title": "get_characters_character_id_clones_jump_clones",
                  "description": "jump_clones array"
                }
              },
              "title": "get_characters_character_id_clones_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-clones.read_clones.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_clones",
        "x-cached-seconds": 120,
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      }
    },
    "/characters/{character_id}/implants/": {
      "get": {
        "description": "Return implants on the active clone of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/implants/`\n\nAlternate route: `/legacy/characters/{character_id}/implants/`\n\nAlternate route: `/v1/characters/{character_id}/implants/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get active implants",
        "tags": [
          "Clones"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of implant type ids",
            "examples": {
              "application/json": [
                1,
                2,
                3
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 11,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_characters_character_id_implants_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_characters_character_id_implants_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-clones.read_implants.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_implants",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/contacts/": {
      "delete": {
        "description": "Bulk delete contacts\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/`\n\nAlternate route: `/v2/characters/{character_id}/contacts/`\n",
        "summary": "Delete contacts",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "name": "contact_ids",
            "in": "query",
            "description": "A list of contacts to delete",
            "required": true,
            "type": "array",
            "minItems": 1,
            "maxItems": 20,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Contacts deleted"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.write_contacts.v1"
            ]
          }
        ],
        "operationId": "delete_characters_character_id_contacts",
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      },
      "get": {
        "description": "Return contacts of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/`\n\nAlternate route: `/legacy/characters/{character_id}/contacts/`\n\nAlternate route: `/v1/characters/{character_id}/contacts/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get contacts",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of contacts",
            "examples": {
              "application/json": [
                {
                  "standing": 9.9,
                  "contact_type": "character",
                  "contact_id": 123,
                  "is_watched": true,
                  "is_blocked": true
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1024,
              "items": {
                "type": "object",
                "required": [
                  "standing",
                  "contact_type",
                  "contact_id"
                ],
                "properties": {
                  "standing": {
                    "type": "number",
                    "format": "float",
                    "description": "Standing of the contact",
                    "title": "get_characters_character_id_contacts_standing"
                  },
                  "contact_type": {
                    "type": "string",
                    "enum": [
                      "character",
                      "corporation",
                      "alliance",
                      "faction"
                    ],
                    "title": "get_characters_character_id_contacts_contact_type",
                    "description": "contact_type string"
                  },
                  "contact_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_contacts_contact_id",
                    "description": "contact_id integer"
                  },
                  "is_watched": {
                    "type": "boolean",
                    "description": "Whether this contact is being watched",
                    "title": "get_characters_character_id_contacts_is_watched"
                  },
                  "is_blocked": {
                    "type": "boolean",
                    "description": "Whether this contact is in the blocked list. Note a missing value denotes unknown, not true or false",
                    "title": "get_characters_character_id_contacts_is_blocked"
                  },
                  "label_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Custom label of the contact",
                    "title": "get_characters_character_id_contacts_label_id"
                  }
                },
                "title": "get_characters_character_id_contacts_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_contacts_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_contacts.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_contacts",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "post": {
        "description": "Bulk add contacts with same settings\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/`\n\nAlternate route: `/legacy/characters/{character_id}/contacts/`\n\nAlternate route: `/v1/characters/{character_id}/contacts/`\n",
        "summary": "Add contacts",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "name": "contact_ids",
            "in": "body",
            "description": "A list of contacts to add",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 100,
              "items": {
                "type": "integer",
                "format": "int32",
                "description": "ID of the contact to add",
                "title": "post_characters_character_id_contacts_contact_id"
              },
              "title": "post_characters_character_id_contacts_contact_ids",
              "description": "contact_ids array"
            }
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "label_id",
            "in": "query",
            "description": "Add a custom label to the new contact",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "standing",
            "in": "query",
            "description": "Standing for the new contact",
            "required": true,
            "type": "number",
            "format": "float",
            "minimum": -10,
            "maximum": 10
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "name": "watched",
            "in": "query",
            "description": "Whether the new contact should be watched, note this is only effective on characters",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "201": {
            "description": "A list of contact ids that successfully created",
            "examples": {
              "application/json": [
                123,
                456
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "post_characters_character_id_contacts_201_created",
                "description": "201 created integer"
              },
              "title": "post_characters_character_id_contacts_created",
              "description": "201 created array"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.write_contacts.v1"
            ]
          }
        ],
        "operationId": "post_characters_character_id_contacts",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "put": {
        "description": "Bulk edit contacts with same settings\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/`\n\nAlternate route: `/legacy/characters/{character_id}/contacts/`\n\nAlternate route: `/v1/characters/{character_id}/contacts/`\n",
        "summary": "Edit contacts",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "name": "contact_ids",
            "in": "body",
            "description": "A list of contacts to edit",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 100,
              "items": {
                "type": "integer",
                "format": "int32",
                "description": "ID of the contact to edit",
                "title": "put_characters_character_id_contacts_contact_id"
              },
              "title": "put_characters_character_id_contacts_contact_ids",
              "description": "contact_ids array"
            }
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "label_id",
            "in": "query",
            "description": "Add a custom label to the contact, use 0 for clearing label",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "standing",
            "in": "query",
            "description": "Standing for the contact",
            "required": true,
            "type": "number",
            "format": "float",
            "minimum": -10,
            "maximum": 10
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "name": "watched",
            "in": "query",
            "description": "Whether the contact should be watched, note this is only effective on characters",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Contacts updated"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.write_contacts.v1"
            ]
          }
        ],
        "operationId": "put_characters_character_id_contacts",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/contacts/": {
      "get": {
        "description": "Return contacts of a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/contacts/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/contacts/`\n\nAlternate route: `/v1/corporations/{corporation_id}/contacts/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get corporation contacts",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of contacts",
            "examples": {
              "application/json": [
                {
                  "standing": 9.9,
                  "contact_type": "character",
                  "contact_id": 123,
                  "is_watched": true
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 200,
              "items": {
                "type": "object",
                "required": [
                  "standing",
                  "contact_type",
                  "contact_id"
                ],
                "properties": {
                  "standing": {
                    "type": "number",
                    "format": "float",
                    "description": "Standing of the contact",
                    "title": "get_corporations_corporation_id_contacts_standing"
                  },
                  "contact_type": {
                    "type": "string",
                    "enum": [
                      "character",
                      "corporation",
                      "alliance",
                      "faction"
                    ],
                    "title": "get_corporations_corporation_id_contacts_contact_type",
                    "description": "contact_type string"
                  },
                  "contact_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_contacts_contact_id",
                    "description": "contact_id integer"
                  },
                  "is_watched": {
                    "type": "boolean",
                    "description": "Whether this contact is being watched",
                    "title": "get_corporations_corporation_id_contacts_is_watched"
                  },
                  "label_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Custom label of the contact",
                    "title": "get_corporations_corporation_id_contacts_label_id"
                  }
                },
                "title": "get_corporations_corporation_id_contacts_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_contacts_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_contacts.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_contacts",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/alliances/{alliance_id}/contacts/": {
      "get": {
        "description": "Return contacts of an alliance\n\n---\nAlternate route: `/dev/alliances/{alliance_id}/contacts/`\n\nAlternate route: `/legacy/alliances/{alliance_id}/contacts/`\n\nAlternate route: `/v1/alliances/{alliance_id}/contacts/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get alliance contacts",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/alliance_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of contacts",
            "examples": {
              "application/json": [
                {
                  "standing": 9.9,
                  "contact_type": "character",
                  "contact_id": 2112625428
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "standing",
                  "contact_type",
                  "contact_id"
                ],
                "properties": {
                  "standing": {
                    "type": "number",
                    "format": "float",
                    "description": "Standing of the contact",
                    "title": "get_alliances_alliance_id_contacts_standing"
                  },
                  "contact_type": {
                    "type": "string",
                    "enum": [
                      "character",
                      "corporation",
                      "alliance",
                      "faction"
                    ],
                    "title": "get_alliances_alliance_id_contacts_contact_type",
                    "description": "contact_type string"
                  },
                  "contact_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_alliances_alliance_id_contacts_contact_id",
                    "description": "contact_id integer"
                  },
                  "label_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Custom label of the contact",
                    "title": "get_alliances_alliance_id_contacts_label_id"
                  }
                },
                "title": "get_alliances_alliance_id_contacts_200_ok",
                "description": "200 ok object"
              },
              "title": "get_alliances_alliance_id_contacts_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-alliances.read_contacts.v1"
            ]
          }
        ],
        "operationId": "get_alliances_alliance_id_contacts",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/contacts/labels/": {
      "get": {
        "description": "Return custom labels for contacts the character defined\n\n---\nAlternate route: `/dev/characters/{character_id}/contacts/labels/`\n\nAlternate route: `/legacy/characters/{character_id}/contacts/labels/`\n\nAlternate route: `/v1/characters/{character_id}/contacts/labels/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get contact labels",
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of contact labels",
            "examples": {
              "application/json": [
                {
                  "label_id": 123,
                  "label_name": "Friends"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 64,
              "items": {
                "type": "object",
                "required": [
                  "label_id",
                  "label_name"
                ],
                "properties": {
                  "label_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_characters_character_id_contacts_labels_label_id",
                    "description": "label_id integer"
                  },
                  "label_name": {
                    "type": "string",
                    "title": "get_characters_character_id_contacts_labels_label_name",
                    "description": "label_name string"
                  }
                },
                "title": "get_characters_character_id_contacts_labels_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_contacts_labels_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_contacts.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_contacts_labels",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/contracts/": {
      "get": {
        "description": "Returns contracts available to a character, only if the character is issuer, acceptor or assignee. Only returns contracts no older than 30 days, or if the status is \"in_progress\".\n\n---\nAlternate route: `/dev/characters/{character_id}/contracts/`\n\nAlternate route: `/legacy/characters/{character_id}/contracts/`\n\nAlternate route: `/v1/characters/{character_id}/contracts/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get contracts",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of contracts",
            "examples": {
              "application/json": [
                {
                  "contract_id": 1,
                  "issuer_id": 123,
                  "issuer_corporation_id": 456,
                  "assignee_id": 0,
                  "acceptor_id": 0,
                  "type": "auction",
                  "status": "outstanding",
                  "for_corporation": true,
                  "availability": "public",
                  "date_issued": "2017-06-06T13:12:32Z",
                  "date_expired": "2017-06-13T13:12:32Z",
                  "start_location_id": 60014719,
                  "end_location_id": 60014719,
                  "date_accepted": "2017-06-06T13:12:32Z",
                  "days_to_complete": 0,
                  "date_completed": "2017-06-06T13:12:32Z",
                  "price": 1000000.01,
                  "reward": 0.01,
                  "buyout": 10000000000.01,
                  "volume": 0.01
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "contract_id",
                  "issuer_id",
                  "issuer_corporation_id",
                  "assignee_id",
                  "acceptor_id",
                  "type",
                  "status",
                  "for_corporation",
                  "availability",
                  "date_issued",
                  "date_expired"
                ],
                "properties": {
                  "contract_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_contracts_contract_id",
                    "description": "contract_id integer"
                  },
                  "issuer_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Character ID for the issuer",
                    "title": "get_characters_character_id_contracts_issuer_id"
                  },
                  "issuer_corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Character's corporation ID for the issuer",
                    "title": "get_characters_character_id_contracts_issuer_corporation_id"
                  },
                  "assignee_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID to whom the contract is assigned, can be corporation or character ID",
                    "title": "get_characters_character_id_contracts_assignee_id"
                  },
                  "acceptor_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Who will accept the contract",
                    "title": "get_characters_character_id_contracts_acceptor_id"
                  },
                  "start_location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Start location ID (for Couriers contract)",
                    "title": "get_characters_character_id_contracts_start_location_id"
                  },
                  "end_location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "End location ID (for Couriers contract)",
                    "title": "get_characters_character_id_contracts_end_location_id"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the contract",
                    "enum": [
                      "unknown",
                      "item_exchange",
                      "auction",
                      "courier",
                      "loan"
                    ],
                    "title": "get_characters_character_id_contracts_type"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the the contract",
                    "enum": [
                      "outstanding",
                      "in_progress",
                      "finished_issuer",
                      "finished_contractor",
                      "finished",
                      "cancelled",
                      "rejected",
                      "failed",
                      "deleted",
                      "reversed"
                    ],
                    "title": "get_characters_character_id_contracts_status"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the contract",
                    "title": "get_characters_character_id_contracts_title"
                  },
                  "for_corporation": {
                    "type": "boolean",
                    "description": "true if the contract was issued on behalf of the issuer's corporation",
                    "title": "get_characters_character_id_contracts_for_corporation"
                  },
                  "availability": {
                    "type": "string",
                    "description": "To whom the contract is available",
                    "enum": [
                      "public",
                      "personal",
                      "corporation",
                      "alliance"
                    ],
                    "title": "get_characters_character_id_contracts_availability"
                  },
                  "date_issued": {
                    "type": "string",
                    "format": "date-time",
                    "description": "\\u0421reation date of the contract",
                    "title": "get_characters_character_id_contracts_date_issued"
                  },
                  "date_expired": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expiration date of the contract",
                    "title": "get_characters_character_id_contracts_date_expired"
                  },
                  "date_accepted": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date of confirmation of contract",
                    "title": "get_characters_character_id_contracts_date_accepted"
                  },
                  "days_to_complete": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days to perform the contract",
                    "title": "get_characters_character_id_contracts_days_to_complete"
                  },
                  "date_completed": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date of completed of contract",
                    "title": "get_characters_character_id_contracts_date_completed"
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Price of contract (for ItemsExchange and Auctions)",
                    "title": "get_characters_character_id_contracts_price"
                  },
                  "reward": {
                    "type": "number",
                    "format": "double",
                    "description": "Remuneration for contract (for Couriers only)",
                    "title": "get_characters_character_id_contracts_reward"
                  },
                  "collateral": {
                    "type": "number",
                    "format": "double",
                    "description": "Collateral price (for Couriers only)",
                    "title": "get_characters_character_id_contracts_collateral"
                  },
                  "buyout": {
                    "type": "number",
                    "format": "double",
                    "description": "Buyout price (for Auctions only)",
                    "title": "get_characters_character_id_contracts_buyout"
                  },
                  "volume": {
                    "type": "number",
                    "format": "double",
                    "description": "Volume of items in the contract",
                    "title": "get_characters_character_id_contracts_volume"
                  }
                },
                "title": "get_characters_character_id_contracts_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_contracts_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-contracts.read_character_contracts.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_contracts",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/contracts/{contract_id}/items/": {
      "get": {
        "description": "Lists items of a particular contract\n\n---\nAlternate route: `/dev/characters/{character_id}/contracts/{contract_id}/items/`\n\nAlternate route: `/legacy/characters/{character_id}/contracts/{contract_id}/items/`\n\nAlternate route: `/v1/characters/{character_id}/contracts/{contract_id}/items/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get contract items",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "name": "contract_id",
            "in": "path",
            "description": "ID of a contract",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of items in this contract",
            "examples": {
              "application/json": [
                {
                  "record_id": 123456,
                  "type_id": 587,
                  "quantity": 1,
                  "is_singleton": false,
                  "is_included": true
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 2000,
              "items": {
                "type": "object",
                "required": [
                  "record_id",
                  "type_id",
                  "quantity",
                  "is_singleton",
                  "is_included"
                ],
                "properties": {
                  "record_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique ID for the item",
                    "title": "get_characters_character_id_contracts_contract_id_items_record_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Type ID for item",
                    "title": "get_characters_character_id_contracts_contract_id_items_type_id"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items in the stack",
                    "title": "get_characters_character_id_contracts_contract_id_items_quantity"
                  },
                  "raw_quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "-1 indicates that the item is a singleton (non-stackable). If the item happens to be a Blueprint, -1 is an Original and -2 is a Blueprint Copy",
                    "title": "get_characters_character_id_contracts_contract_id_items_raw_quantity"
                  },
                  "is_singleton": {
                    "type": "boolean",
                    "title": "get_characters_character_id_contracts_contract_id_items_is_singleton",
                    "description": "is_singleton boolean"
                  },
                  "is_included": {
                    "type": "boolean",
                    "description": "true if the contract issuer has submitted this item with the contract, false if the isser is asking for this item in the contract.",
                    "title": "get_characters_character_id_contracts_contract_id_items_is_included"
                  }
                },
                "title": "get_characters_character_id_contracts_contract_id_items_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_contracts_contract_id_items_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-contracts.read_character_contracts.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_contracts_contract_id_items",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/contracts/{contract_id}/bids/": {
      "get": {
        "description": "Lists bids on a particular auction contract\n\n---\nAlternate route: `/dev/characters/{character_id}/contracts/{contract_id}/bids/`\n\nAlternate route: `/legacy/characters/{character_id}/contracts/{contract_id}/bids/`\n\nAlternate route: `/v1/characters/{character_id}/contracts/{contract_id}/bids/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get contract bids",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "name": "contract_id",
            "in": "path",
            "description": "ID of a contract",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of bids",
            "examples": {
              "application/json": [
                {
                  "bid_id": 1,
                  "bidder_id": 123,
                  "date_bid": "2017-01-01T10:10:10Z",
                  "amount": 1.23
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 2000,
              "items": {
                "type": "object",
                "required": [
                  "bid_id",
                  "bidder_id",
                  "date_bid",
                  "amount"
                ],
                "properties": {
                  "bid_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique ID for the bid",
                    "title": "get_characters_character_id_contracts_contract_id_bids_bid_id"
                  },
                  "bidder_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Character ID of the bidder",
                    "title": "get_characters_character_id_contracts_contract_id_bids_bidder_id"
                  },
                  "date_bid": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Datetime when the bid was placed",
                    "title": "get_characters_character_id_contracts_contract_id_bids_date_bid"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "The amount bid, in ISK",
                    "title": "get_characters_character_id_contracts_contract_id_bids_amount"
                  }
                },
                "title": "get_characters_character_id_contracts_contract_id_bids_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_contracts_contract_id_bids_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-contracts.read_character_contracts.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_contracts_contract_id_bids",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/contracts/": {
      "get": {
        "description": "Returns contracts available to a coporation, only if the corporation is issuer, acceptor or assignee. Only returns contracts no older than 30 days, or if the status is \"in_progress\".\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/contracts/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/contracts/`\n\nAlternate route: `/v1/corporations/{corporation_id}/contracts/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get coporation contracts",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of contracts",
            "examples": {
              "application/json": [
                {
                  "contract_id": 1,
                  "issuer_id": 123,
                  "issuer_corporation_id": 456,
                  "assignee_id": 0,
                  "acceptor_id": 0,
                  "type": "auction",
                  "status": "outstanding",
                  "for_corporation": true,
                  "availability": "public",
                  "date_issued": "2017-06-06T13:12:32Z",
                  "date_expired": "2017-06-13T13:12:32Z",
                  "start_location_id": 60014719,
                  "end_location_id": 60014719,
                  "days_to_complete": 0,
                  "price": 1000000.01,
                  "reward": 0.01,
                  "buyout": 10000000000.01,
                  "volume": 0.01
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "contract_id",
                  "issuer_id",
                  "issuer_corporation_id",
                  "assignee_id",
                  "acceptor_id",
                  "type",
                  "status",
                  "for_corporation",
                  "availability",
                  "date_issued",
                  "date_expired"
                ],
                "properties": {
                  "contract_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_contracts_contract_id",
                    "description": "contract_id integer"
                  },
                  "issuer_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Character ID for the issuer",
                    "title": "get_corporations_corporation_id_contracts_issuer_id"
                  },
                  "issuer_corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Character's corporation ID for the issuer",
                    "title": "get_corporations_corporation_id_contracts_issuer_corporation_id"
                  },
                  "assignee_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID to whom the contract is assigned, can be corporation or character ID",
                    "title": "get_corporations_corporation_id_contracts_assignee_id"
                  },
                  "acceptor_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Who will accept the contract",
                    "title": "get_corporations_corporation_id_contracts_acceptor_id"
                  },
                  "start_location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Start location ID (for Couriers contract)",
                    "title": "get_corporations_corporation_id_contracts_start_location_id"
                  },
                  "end_location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "End location ID (for Couriers contract)",
                    "title": "get_corporations_corporation_id_contracts_end_location_id"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the contract",
                    "enum": [
                      "unknown",
                      "item_exchange",
                      "auction",
                      "courier",
                      "loan"
                    ],
                    "title": "get_corporations_corporation_id_contracts_type"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the the contract",
                    "enum": [
                      "outstanding",
                      "in_progress",
                      "finished_issuer",
                      "finished_contractor",
                      "finished",
                      "cancelled",
                      "rejected",
                      "failed",
                      "deleted",
                      "reversed"
                    ],
                    "title": "get_corporations_corporation_id_contracts_status"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the contract",
                    "title": "get_corporations_corporation_id_contracts_title"
                  },
                  "for_corporation": {
                    "type": "boolean",
                    "description": "true if the contract was issued on behalf of the issuer's corporation",
                    "title": "get_corporations_corporation_id_contracts_for_corporation"
                  },
                  "availability": {
                    "type": "string",
                    "description": "To whom the contract is available",
                    "enum": [
                      "public",
                      "personal",
                      "corporation",
                      "alliance"
                    ],
                    "title": "get_corporations_corporation_id_contracts_availability"
                  },
                  "date_issued": {
                    "type": "string",
                    "format": "date-time",
                    "description": "\\u0421reation date of the contract",
                    "title": "get_corporations_corporation_id_contracts_date_issued"
                  },
                  "date_expired": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expiration date of the contract",
                    "title": "get_corporations_corporation_id_contracts_date_expired"
                  },
                  "date_accepted": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date of confirmation of contract",
                    "title": "get_corporations_corporation_id_contracts_date_accepted"
                  },
                  "days_to_complete": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days to perform the contract",
                    "title": "get_corporations_corporation_id_contracts_days_to_complete"
                  },
                  "date_completed": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date of completed of contract",
                    "title": "get_corporations_corporation_id_contracts_date_completed"
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Price of contract (for ItemsExchange and Auctions)",
                    "title": "get_corporations_corporation_id_contracts_price"
                  },
                  "reward": {
                    "type": "number",
                    "format": "double",
                    "description": "Remuneration for contract (for Couriers only)",
                    "title": "get_corporations_corporation_id_contracts_reward"
                  },
                  "collateral": {
                    "type": "number",
                    "format": "double",
                    "description": "Collateral price (for Couriers only)",
                    "title": "get_corporations_corporation_id_contracts_collateral"
                  },
                  "buyout": {
                    "type": "number",
                    "format": "double",
                    "description": "Buyout price (for Auctions only)",
                    "title": "get_corporations_corporation_id_contracts_buyout"
                  },
                  "volume": {
                    "type": "number",
                    "format": "double",
                    "description": "Volume of items in the contract",
                    "title": "get_corporations_corporation_id_contracts_volume"
                  }
                },
                "title": "get_corporations_corporation_id_contracts_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_contracts_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [],
        "security": [
          {
            "evesso": [
              "esi-contracts.read_corporation_contracts.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_contracts",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/contracts/{contract_id}/items/": {
      "get": {
        "description": "Lists items of a particular contract\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/contracts/{contract_id}/items/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/contracts/{contract_id}/items/`\n\nAlternate route: `/v1/corporations/{corporation_id}/contracts/{contract_id}/items/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get corporation contract items",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "description": "ID of a contract",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of items in this contract",
            "examples": {
              "application/json": [
                {
                  "record_id": 123456,
                  "type_id": 587,
                  "quantity": 1,
                  "is_singleton": false,
                  "is_included": true
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 2000,
              "items": {
                "type": "object",
                "required": [
                  "record_id",
                  "type_id",
                  "quantity",
                  "is_singleton",
                  "is_included"
                ],
                "properties": {
                  "record_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique ID for the item",
                    "title": "get_corporations_corporation_id_contracts_contract_id_items_record_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Type ID for item",
                    "title": "get_corporations_corporation_id_contracts_contract_id_items_type_id"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items in the stack",
                    "title": "get_corporations_corporation_id_contracts_contract_id_items_quantity"
                  },
                  "raw_quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "-1 indicates that the item is a singleton (non-stackable). If the item happens to be a Blueprint, -1 is an Original and -2 is a Blueprint Copy",
                    "title": "get_corporations_corporation_id_contracts_contract_id_items_raw_quantity"
                  },
                  "is_singleton": {
                    "type": "boolean",
                    "title": "get_corporations_corporation_id_contracts_contract_id_items_is_singleton",
                    "description": "is_singleton boolean"
                  },
                  "is_included": {
                    "type": "boolean",
                    "description": "true if the contract issuer has submitted this item with the contract, false if the isser is asking for this item in the contract.",
                    "title": "get_corporations_corporation_id_contracts_contract_id_items_is_included"
                  }
                },
                "title": "get_corporations_corporation_id_contracts_contract_id_items_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_contracts_contract_id_items_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [],
        "security": [
          {
            "evesso": [
              "esi-contracts.read_corporation_contracts.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_contracts_contract_id_items",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/contracts/{contract_id}/bids/": {
      "get": {
        "description": "Lists bids on a particular auction contract\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/contracts/{contract_id}/bids/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/contracts/{contract_id}/bids/`\n\nAlternate route: `/v1/corporations/{corporation_id}/contracts/{contract_id}/bids/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get corporation contract bids",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "description": "ID of a contract",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of bids",
            "examples": {
              "application/json": [
                {
                  "bid_id": 1,
                  "bidder_id": 123,
                  "date_bid": "2017-01-01T10:10:10Z",
                  "amount": 1.23
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "bid_id",
                  "bidder_id",
                  "date_bid",
                  "amount"
                ],
                "properties": {
                  "bid_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique ID for the bid",
                    "title": "get_corporations_corporation_id_contracts_contract_id_bids_bid_id"
                  },
                  "bidder_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Character ID of the bidder",
                    "title": "get_corporations_corporation_id_contracts_contract_id_bids_bidder_id"
                  },
                  "date_bid": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Datetime when the bid was placed",
                    "title": "get_corporations_corporation_id_contracts_contract_id_bids_date_bid"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "The amount bid, in ISK",
                    "title": "get_corporations_corporation_id_contracts_contract_id_bids_amount"
                  }
                },
                "title": "get_corporations_corporation_id_contracts_contract_id_bids_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_contracts_contract_id_bids_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [],
        "security": [
          {
            "evesso": [
              "esi-contracts.read_corporation_contracts.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_contracts_contract_id_bids",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/shareholders/": {
      "get": {
        "description": "Return the current shareholders of a corporation.\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/shareholders/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/shareholders/`\n\nAlternate route: `/v1/corporations/{corporation_id}/shareholders/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation shareholders",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of shareholders",
            "examples": {
              "application/json": [
                {
                  "shareholder_id": 98000001,
                  "shareholder_type": "corporation",
                  "share_count": 580
                },
                {
                  "shareholder_id": 2112000003,
                  "shareholder_type": "character",
                  "share_count": 20
                },
                {
                  "shareholder_id": 2112000004,
                  "shareholder_type": "character",
                  "share_count": 300
                },
                {
                  "shareholder_id": 2112000001,
                  "shareholder_type": "character",
                  "share_count": 100
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "description": "List of shareholders",
              "items": {
                "type": "object",
                "required": [
                  "shareholder_id",
                  "shareholder_type",
                  "share_count"
                ],
                "properties": {
                  "shareholder_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_shareholders_shareholder_id",
                    "description": "shareholder_id integer"
                  },
                  "shareholder_type": {
                    "type": "string",
                    "enum": [
                      "character",
                      "corporation"
                    ],
                    "title": "get_corporations_corporation_id_shareholders_shareholder_type",
                    "description": "shareholder_type string"
                  },
                  "share_count": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_corporations_corporation_id_shareholders_share_count",
                    "description": "share_count integer"
                  }
                },
                "title": "get_corporations_corporation_id_shareholders_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_shareholders_ok"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-wallet.read_corporation_wallets.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_shareholders",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/": {
      "get": {
        "description": "Public information about a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/`\n\nAlternate route: `/v4/corporations/{corporation_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get corporation information",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Public information about a corporation",
            "examples": {
              "application/json": {
                "name": "C C P",
                "ticker": "-CCP-",
                "member_count": 656,
                "ceo_id": 180548812,
                "alliance_id": 434243723,
                "description": "This is a corporation description, it's basically just a string",
                "tax_rate": 0.256,
                "date_founded": "2004-11-28T16:42:51Z",
                "creator_id": 180548812,
                "url": "http://www.eveonline.com"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "name",
                "ticker",
                "member_count",
                "ceo_id",
                "tax_rate",
                "creator_id"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "the full name of the corporation",
                  "title": "get_corporations_corporation_id_name"
                },
                "ticker": {
                  "type": "string",
                  "description": "the short name of the corporation",
                  "title": "get_corporations_corporation_id_ticker"
                },
                "member_count": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_corporations_corporation_id_member_count",
                  "description": "member_count integer"
                },
                "ceo_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_corporations_corporation_id_ceo_id",
                  "description": "ceo_id integer"
                },
                "alliance_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ID of the alliance that corporation is a member of, if any",
                  "title": "get_corporations_corporation_id_alliance_id"
                },
                "description": {
                  "type": "string",
                  "title": "get_corporations_corporation_id_description",
                  "description": "description string"
                },
                "tax_rate": {
                  "type": "number",
                  "format": "float",
                  "minimum": 0,
                  "maximum": 1,
                  "title": "get_corporations_corporation_id_tax_rate",
                  "description": "tax_rate number"
                },
                "date_founded": {
                  "type": "string",
                  "format": "date-time",
                  "title": "get_corporations_corporation_id_date_founded",
                  "description": "date_founded string"
                },
                "creator_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_corporations_corporation_id_creator_id",
                  "description": "creator_id integer"
                },
                "url": {
                  "type": "string",
                  "title": "get_corporations_corporation_id_url",
                  "description": "url string"
                },
                "faction_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_corporations_corporation_id_faction_id",
                  "description": "faction_id integer"
                },
                "home_station_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_corporations_corporation_id_home_station_id",
                  "description": "home_station_id integer"
                },
                "shares": {
                  "type": "integer",
                  "format": "int64",
                  "title": "get_corporations_corporation_id_shares",
                  "description": "shares integer"
                }
              },
              "title": "get_corporations_corporation_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Corporation not found",
            "schema": {
              "type": "object",
              "title": "get_corporations_corporation_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_corporations_corporation_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_corporations_corporation_id",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v4"
        ]
      }
    },
    "/corporations/{corporation_id}/alliancehistory/": {
      "get": {
        "description": "Get a list of all the alliances a corporation has been a member of\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/alliancehistory/`\n\nAlternate route: `/v2/corporations/{corporation_id}/alliancehistory/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get alliance history",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Alliance history for the given corporation",
            "examples": {
              "application/json": [
                {
                  "record_id": 23,
                  "start_date": "2016-10-25T14:46:00Z",
                  "alliance_id": 99000006,
                  "is_deleted": true
                },
                {
                  "record_id": 1,
                  "start_date": "2015-07-06T20:56:00Z"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "start_date",
                  "record_id"
                ],
                "properties": {
                  "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporations_corporation_id_alliancehistory_start_date",
                    "description": "start_date string"
                  },
                  "alliance_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_alliancehistory_alliance_id",
                    "description": "alliance_id integer"
                  },
                  "is_deleted": {
                    "type": "boolean",
                    "description": "True if the alliance has been closed",
                    "title": "get_corporations_corporation_id_alliancehistory_is_deleted"
                  },
                  "record_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An incrementing ID that can be used to canonically establish order of records in cases where dates may be ambiguous",
                    "title": "get_corporations_corporation_id_alliancehistory_record_id"
                  }
                },
                "title": "get_corporations_corporation_id_alliancehistory_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_alliancehistory_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_corporations_corporation_id_alliancehistory",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/corporations/names/": {
      "get": {
        "description": "Resolve a set of corporation IDs to corporation names\n\n---\nAlternate route: `/dev/corporations/names/`\n\nAlternate route: `/v2/corporations/names/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get corporation names",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "name": "corporation_ids",
            "in": "query",
            "description": "A comma separated list of corporation IDs",
            "required": true,
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of id/name associations",
            "examples": {
              "application/json": [
                {
                  "corporation_id": 1000171,
                  "corporation_name": "Republic University"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "object",
                "required": [
                  "corporation_id",
                  "corporation_name"
                ],
                "properties": {
                  "corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_names_corporation_id",
                    "description": "corporation_id integer"
                  },
                  "corporation_name": {
                    "type": "string",
                    "title": "get_corporations_names_corporation_name",
                    "description": "corporation_name string"
                  }
                },
                "title": "get_corporations_names_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_names_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_corporations_names",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/corporations/{corporation_id}/members/": {
      "get": {
        "description": "Return the current member list of a corporation, the token's character need to be a member of the corporation.\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/members/`\n\nAlternate route: `/v3/corporations/{corporation_id}/members/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get corporation members",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of member character IDs",
            "examples": {
              "application/json": [
                90000001,
                90000002
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 12601,
              "description": "A list of character IDs",
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_corporations_corporation_id_members_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_corporations_corporation_id_members_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-corporations.read_corporation_membership.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_members",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      }
    },
    "/corporations/{corporation_id}/roles/": {
      "get": {
        "description": "Return the roles of all members if the character has the personnel manager role or any grantable role.\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/roles/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/roles/`\n\nAlternate route: `/v1/corporations/{corporation_id}/roles/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get corporation member roles",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of member character ID's and roles",
            "examples": {
              "application/json": [
                {
                  "character_id": 1000171,
                  "roles": [
                    "Director",
                    "Station_Manager"
                  ]
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 12601,
              "items": {
                "type": "object",
                "required": [
                  "character_id"
                ],
                "properties": {
                  "character_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_roles_character_id",
                    "description": "character_id integer"
                  },
                  "roles": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_roles_role",
                      "description": "role string"
                    },
                    "title": "get_corporations_corporation_id_roles_roles",
                    "description": "roles array"
                  },
                  "grantable_roles": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_roles_grantable_role",
                      "description": "grantable_role string"
                    },
                    "title": "get_corporations_corporation_id_roles_grantable_roles",
                    "description": "grantable_roles array"
                  },
                  "roles_at_hq": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_roles_roles_at_hq",
                      "description": "roles_at_hq string"
                    },
                    "title": "get_corporations_corporation_id_roles_roles_at_hq",
                    "description": "roles_at_hq array"
                  },
                  "grantable_roles_at_hq": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_roles_grantable_roles_at_hq",
                      "description": "grantable_roles_at_hq string"
                    },
                    "title": "get_corporations_corporation_id_roles_grantable_roles_at_hq",
                    "description": "grantable_roles_at_hq array"
                  },
                  "roles_at_base": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_roles_roles_at_base",
                      "description": "roles_at_base string"
                    },
                    "title": "get_corporations_corporation_id_roles_roles_at_base",
                    "description": "roles_at_base array"
                  },
                  "grantable_roles_at_base": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_roles_grantable_roles_at_base",
                      "description": "grantable_roles_at_base string"
                    },
                    "title": "get_corporations_corporation_id_roles_grantable_roles_at_base",
                    "description": "grantable_roles_at_base array"
                  },
                  "roles_at_other": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_roles_roles_at_other",
                      "description": "roles_at_other string"
                    },
                    "title": "get_corporations_corporation_id_roles_roles_at_other",
                    "description": "roles_at_other array"
                  },
                  "grantable_roles_at_other": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_roles_grantable_roles_at_other",
                      "description": "grantable_roles_at_other string"
                    },
                    "title": "get_corporations_corporation_id_roles_grantable_roles_at_other",
                    "description": "grantable_roles_at_other array"
                  }
                },
                "title": "get_corporations_corporation_id_roles_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_roles_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-corporations.read_corporation_membership.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_roles",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/roles/history/": {
      "get": {
        "description": "Return how roles have changed for a coporation's members, up to a month\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/roles/history/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/roles/history/`\n\nAlternate route: `/v1/corporations/{corporation_id}/roles/history/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation member roles history",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of role changes",
            "examples": {
              "application/json": [
                {
                  "character_id": 12345,
                  "changed_at": "2016-10-25T14:46:00Z",
                  "issuer_id": 45678,
                  "role_type": "roles",
                  "old_roles": [
                    "Diplomat"
                  ],
                  "new_roles": [
                    "Station_Manager"
                  ]
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "character_id",
                  "changed_at",
                  "issuer_id",
                  "role_type",
                  "old_roles",
                  "new_roles"
                ],
                "properties": {
                  "character_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The character whose roles are changed",
                    "title": "get_corporations_corporation_id_roles_history_character_id"
                  },
                  "changed_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporations_corporation_id_roles_history_changed_at",
                    "description": "changed_at string"
                  },
                  "issuer_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the character who issued this change",
                    "title": "get_corporations_corporation_id_roles_history_issuer_id"
                  },
                  "role_type": {
                    "type": "string",
                    "enum": [
                      "grantable_roles",
                      "grantable_roles_at_base",
                      "grantable_roles_at_hq",
                      "grantable_roles_at_other",
                      "roles",
                      "roles_at_base",
                      "roles_at_hq",
                      "roles_at_other"
                    ],
                    "title": "get_corporations_corporation_id_roles_history_role_type",
                    "description": "role_type string"
                  },
                  "old_roles": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_roles_history_old_role",
                      "description": "old_role string"
                    },
                    "title": "get_corporations_corporation_id_roles_history_old_roles",
                    "description": "old_roles array"
                  },
                  "new_roles": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_roles_history_new_role",
                      "description": "new_role string"
                    },
                    "title": "get_corporations_corporation_id_roles_history_new_roles",
                    "description": "new_roles array"
                  }
                },
                "title": "get_corporations_corporation_id_roles_history_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_roles_history_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_corporation_membership.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_roles_history",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/icons/": {
      "get": {
        "description": "Get the icon urls for a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/icons/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/icons/`\n\nAlternate route: `/v1/corporations/{corporation_id}/icons/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get corporation icon",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Urls for icons for the given corporation id and server",
            "examples": {
              "application/json": {
                "px64x64": "https://imageserver.eveonline.com/Corporation/1000010_64.png",
                "px128x128": "https://imageserver.eveonline.com/Corporation/1000010_128.png",
                "px256x256": "https://imageserver.eveonline.com/Corporation/1000010_256.png"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "px64x64": {
                  "type": "string",
                  "title": "get_corporations_corporation_id_icons_px64x64",
                  "description": "px64x64 string"
                },
                "px128x128": {
                  "type": "string",
                  "title": "get_corporations_corporation_id_icons_px128x128",
                  "description": "px128x128 string"
                },
                "px256x256": {
                  "type": "string",
                  "title": "get_corporations_corporation_id_icons_px256x256",
                  "description": "px256x256 string"
                }
              },
              "title": "get_corporations_corporation_id_icons_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "No image server for this datasource",
            "examples": {
              "application/json": {
                "error": "No image server for this datasource"
              }
            },
            "schema": {
              "type": "object",
              "description": "No image server for this datasource",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "error message",
                  "title": "get_corporations_corporation_id_icons_error"
                }
              },
              "title": "get_corporations_corporation_id_icons_not_found"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_corporations_corporation_id_icons",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/npccorps/": {
      "get": {
        "description": "Get a list of npc corporations\n\n---\nAlternate route: `/dev/corporations/npccorps/`\n\nAlternate route: `/legacy/corporations/npccorps/`\n\nAlternate route: `/v1/corporations/npccorps/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get npc corporations",
        "tags": [
          "Corporation"
        ],
        "responses": {
          "200": {
            "description": "A list of npc corporation ids",
            "examples": {
              "application/json": [
                1000001,
                1000002,
                1000003
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 500,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_corporations_npccorps_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_corporations_npccorps_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_corporations_npccorps",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/structures/": {
      "get": {
        "description": "Get a list of corporation structures. This route's version includes the changes to structures detailed in this blog: https://www.eveonline.com/article/upwell-2.0-structures-changes-coming-on-february-13th\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/structures/`\n\nAlternate route: `/v2/corporations/{corporation_id}/structures/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): StationManager\n",
        "summary": "Get corporation structures",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of corporation structures' information",
            "examples": {
              "application/json": [
                {
                  "structure_id": 1021975535893,
                  "type_id": 35833,
                  "corporation_id": 667531913,
                  "system_id": 30004763,
                  "profile_id": 11237,
                  "state": "shield_vulnerable",
                  "reinforce_weekday": 2,
                  "reinforce_hour": 22
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "structure_id",
                  "type_id",
                  "corporation_id",
                  "system_id",
                  "profile_id",
                  "reinforce_weekday",
                  "reinforce_hour",
                  "state"
                ],
                "properties": {
                  "structure_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The Item ID of the structure",
                    "title": "get_corporations_corporation_id_structures_structure_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The type id of the structure",
                    "title": "get_corporations_corporation_id_structures_type_id"
                  },
                  "corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the corporation that owns the structure",
                    "title": "get_corporations_corporation_id_structures_corporation_id"
                  },
                  "system_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The solar system the structure is in",
                    "title": "get_corporations_corporation_id_structures_system_id"
                  },
                  "profile_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The id of the ACL profile for this citadel",
                    "title": "get_corporations_corporation_id_structures_profile_id"
                  },
                  "fuel_expires": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date on which the structure will run out of fuel",
                    "title": "get_corporations_corporation_id_structures_fuel_expires"
                  },
                  "services": {
                    "type": "array",
                    "description": "Contains a list of service upgrades, and their state",
                    "maxItems": 10,
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "state"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "get_corporations_corporation_id_structures_name",
                          "description": "name string"
                        },
                        "state": {
                          "type": "string",
                          "enum": [
                            "online",
                            "offline",
                            "cleanup"
                          ],
                          "title": "get_corporations_corporation_id_structures_state",
                          "description": "state string"
                        }
                      },
                      "title": "get_corporations_corporation_id_structures_service",
                      "description": "service object"
                    },
                    "title": "get_corporations_corporation_id_structures_services"
                  },
                  "state_timer_start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date at which the structure entered it's current state",
                    "title": "get_corporations_corporation_id_structures_state_timer_start"
                  },
                  "state_timer_end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date at which the structure will move to it's next state",
                    "title": "get_corporations_corporation_id_structures_state_timer_end"
                  },
                  "unanchors_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date at which the structure will unanchor",
                    "title": "get_corporations_corporation_id_structures_unanchors_at"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "anchor_vulnerable",
                      "anchoring",
                      "armor_reinforce",
                      "armor_vulnerable",
                      "fitting_invulnerable",
                      "hull_reinforce",
                      "hull_vulnerable",
                      "online_deprecated",
                      "onlining_vulnerable",
                      "shield_vulnerable",
                      "unanchored",
                      "unknown"
                    ],
                    "title": "get_corporations_corporation_id_structures_state",
                    "description": "state string"
                  },
                  "reinforce_weekday": {
                    "description": "The day of the week when the structure exits its final reinforcement period and becomes vulnerable to attack against its hull. Monday is 0 and Sunday is 6.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 6,
                    "title": "get_corporations_corporation_id_structures_reinforce_weekday"
                  },
                  "reinforce_hour": {
                    "description": "The hour of day that determines the four hour window when the structure will randomly exit its reinforcement periods and become vulnerable to attack against its armor and/or hull. The structure will become vulnerable at a random time that is +/- 2 hours centered on the value of this property.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 23,
                    "title": "get_corporations_corporation_id_structures_reinforce_hour"
                  },
                  "next_reinforce_weekday": {
                    "description": "The requested change to reinforce_weekday that will take effect at the time shown by next_reinforce_apply.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 6,
                    "title": "get_corporations_corporation_id_structures_next_reinforce_weekday"
                  },
                  "next_reinforce_hour": {
                    "description": "The requested change to reinforce_hour that will take effect at the time shown by next_reinforce_apply.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 23,
                    "title": "get_corporations_corporation_id_structures_next_reinforce_hour"
                  },
                  "next_reinforce_apply": {
                    "description": "The date and time when the structure's newly requested reinforcement times (e.g. next_reinforce_hour and next_reinforce_day) will take effect.",
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporations_corporation_id_structures_next_reinforce_apply"
                  }
                },
                "title": "get_corporations_corporation_id_structures_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_structures_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "StationManager"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_structures.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_structures",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/corporations/{corporation_id}/membertracking/": {
      "get": {
        "description": "Returns additional information about a corporation's members which helps tracking their activities\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/membertracking/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/membertracking/`\n\nAlternate route: `/v1/corporations/{corporation_id}/membertracking/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Track corporation members",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of member character IDs",
            "examples": {
              "application/json": [
                {
                  "character_id": 2112000001,
                  "start_date": "2017-07-10T14:46:00Z",
                  "logon_date": "2017-08-03T14:22:03Z",
                  "logoff_date": "2017-08-03T14:31:16Z",
                  "location_id": 30003657,
                  "ship_type_id": 22464
                },
                {
                  "character_id": 2112000002,
                  "start_date": "2017-07-10T14:50:00Z",
                  "logon_date": "2017-07-25T10:54:00Z",
                  "logoff_date": "2017-07-25T11:07:40Z",
                  "location_id": 30003657,
                  "ship_type_id": 670
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 12601,
              "items": {
                "type": "object",
                "required": [
                  "character_id"
                ],
                "properties": {
                  "character_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_membertracking_character_id",
                    "description": "character_id integer"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporations_corporation_id_membertracking_start_date",
                    "description": "start_date string"
                  },
                  "base_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_membertracking_base_id",
                    "description": "base_id integer"
                  },
                  "logon_date": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporations_corporation_id_membertracking_logon_date",
                    "description": "logon_date string"
                  },
                  "logoff_date": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporations_corporation_id_membertracking_logoff_date",
                    "description": "logoff_date string"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_corporations_corporation_id_membertracking_location_id",
                    "description": "location_id integer"
                  },
                  "ship_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_membertracking_ship_type_id",
                    "description": "ship_type_id integer"
                  }
                },
                "title": "get_corporations_corporation_id_membertracking_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_membertracking_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.track_members.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_membertracking",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/divisions/": {
      "get": {
        "description": "Return corporation hangar and wallet division names, only show if a division is not using the default name\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/divisions/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/divisions/`\n\nAlternate route: `/v1/corporations/{corporation_id}/divisions/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation divisions",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of corporation division names",
            "examples": {
              "application/json": {
                "hangar": [
                  {
                    "division": 1,
                    "name": "Awesome Hangar 1"
                  }
                ],
                "wallet": [
                  {
                    "division": 1,
                    "name": "Rich Wallet 1"
                  }
                ]
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "hangar": {
                  "type": "array",
                  "maxItems": 7,
                  "items": {
                    "type": "object",
                    "properties": {
                      "division": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1,
                        "maximum": 7,
                        "title": "get_corporations_corporation_id_divisions_division",
                        "description": "division integer"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "get_corporations_corporation_id_divisions_name",
                        "description": "name string"
                      }
                    },
                    "title": "get_corporations_corporation_id_divisions_hangar",
                    "description": "hangar object"
                  },
                  "title": "get_corporations_corporation_id_divisions_hangar",
                  "description": "hangar array"
                },
                "wallet": {
                  "type": "array",
                  "maxItems": 7,
                  "items": {
                    "type": "object",
                    "properties": {
                      "division": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1,
                        "maximum": 7,
                        "title": "get_corporations_corporation_id_divisions_division",
                        "description": "division integer"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "get_corporations_corporation_id_divisions_name",
                        "description": "name string"
                      }
                    },
                    "title": "get_corporations_corporation_id_divisions_wallet",
                    "description": "wallet object"
                  },
                  "title": "get_corporations_corporation_id_divisions_wallet",
                  "description": "wallet array"
                }
              },
              "title": "get_corporations_corporation_id_divisions_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_divisions.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_divisions",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/members/limit/": {
      "get": {
        "description": "Return a corporation's member limit, not including CEO himself\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/members/limit/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/members/limit/`\n\nAlternate route: `/v1/corporations/{corporation_id}/members/limit/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation member limit",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "The corporation's member limit",
            "examples": {
              "application/json": 40
            },
            "schema": {
              "type": "integer",
              "format": "int32",
              "title": "get_corporations_corporation_id_members_limit_ok",
              "description": "200 ok integer"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.track_members.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_members_limit",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/titles/": {
      "get": {
        "description": "Returns a corporation's titles\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/titles/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/titles/`\n\nAlternate route: `/v1/corporations/{corporation_id}/titles/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation titles",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of titles",
            "examples": {
              "application/json": [
                {
                  "title_id": 1,
                  "name": "Awesome Title",
                  "roles": [
                    "Hangar_Take_6",
                    "Hangar_Query_2"
                  ]
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 16,
              "items": {
                "type": "object",
                "properties": {
                  "title_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_titles_title_id",
                    "description": "title_id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "get_corporations_corporation_id_titles_name",
                    "description": "name string"
                  },
                  "roles": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_titles_role",
                      "description": "role string"
                    },
                    "title": "get_corporations_corporation_id_titles_roles",
                    "description": "roles array"
                  },
                  "grantable_roles": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_titles_grantable_role",
                      "description": "grantable_role string"
                    },
                    "title": "get_corporations_corporation_id_titles_grantable_roles",
                    "description": "grantable_roles array"
                  },
                  "roles_at_hq": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_titles_roles_at_hq",
                      "description": "roles_at_hq string"
                    },
                    "title": "get_corporations_corporation_id_titles_roles_at_hq",
                    "description": "roles_at_hq array"
                  },
                  "grantable_roles_at_hq": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_titles_grantable_roles_at_hq",
                      "description": "grantable_roles_at_hq string"
                    },
                    "title": "get_corporations_corporation_id_titles_grantable_roles_at_hq",
                    "description": "grantable_roles_at_hq array"
                  },
                  "roles_at_base": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_titles_roles_at_base",
                      "description": "roles_at_base string"
                    },
                    "title": "get_corporations_corporation_id_titles_roles_at_base",
                    "description": "roles_at_base array"
                  },
                  "grantable_roles_at_base": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_titles_grantable_roles_at_base",
                      "description": "grantable_roles_at_base string"
                    },
                    "title": "get_corporations_corporation_id_titles_grantable_roles_at_base",
                    "description": "grantable_roles_at_base array"
                  },
                  "roles_at_other": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_titles_roles_at_other",
                      "description": "roles_at_other string"
                    },
                    "title": "get_corporations_corporation_id_titles_roles_at_other",
                    "description": "roles_at_other array"
                  },
                  "grantable_roles_at_other": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string",
                      "uniqueItems": true,
                      "enum": [
                        "Account_Take_1",
                        "Account_Take_2",
                        "Account_Take_3",
                        "Account_Take_4",
                        "Account_Take_5",
                        "Account_Take_6",
                        "Account_Take_7",
                        "Accountant",
                        "Auditor",
                        "Communications_Officer",
                        "Config_Equipment",
                        "Config_Starbase_Equipment",
                        "Container_Take_1",
                        "Container_Take_2",
                        "Container_Take_3",
                        "Container_Take_4",
                        "Container_Take_5",
                        "Container_Take_6",
                        "Container_Take_7",
                        "Contract_Manager",
                        "Diplomat",
                        "Director",
                        "Factory_Manager",
                        "Fitting_Manager",
                        "Hangar_Query_1",
                        "Hangar_Query_2",
                        "Hangar_Query_3",
                        "Hangar_Query_4",
                        "Hangar_Query_5",
                        "Hangar_Query_6",
                        "Hangar_Query_7",
                        "Hangar_Take_1",
                        "Hangar_Take_2",
                        "Hangar_Take_3",
                        "Hangar_Take_4",
                        "Hangar_Take_5",
                        "Hangar_Take_6",
                        "Hangar_Take_7",
                        "Junior_Accountant",
                        "Personnel_Manager",
                        "Rent_Factory_Facility",
                        "Rent_Office",
                        "Rent_Research_Facility",
                        "Security_Officer",
                        "Starbase_Defense_Operator",
                        "Starbase_Fuel_Technician",
                        "Station_Manager",
                        "Terrestrial_Combat_Officer",
                        "Terrestrial_Logistics_Officer",
                        "Trader"
                      ],
                      "title": "get_corporations_corporation_id_titles_grantable_roles_at_other",
                      "description": "grantable_roles_at_other string"
                    },
                    "title": "get_corporations_corporation_id_titles_grantable_roles_at_other",
                    "description": "grantable_roles_at_other array"
                  }
                },
                "title": "get_corporations_corporation_id_titles_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_titles_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_titles.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_titles",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/members/titles/": {
      "get": {
        "description": "Returns a corporation's members' titles\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/members/titles/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/members/titles/`\n\nAlternate route: `/v1/corporations/{corporation_id}/members/titles/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation's members' titles",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of members and theirs titles",
            "examples": {
              "application/json": [
                {
                  "character_id": 12345,
                  "titles": []
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 12601,
              "items": {
                "type": "object",
                "required": [
                  "character_id",
                  "titles"
                ],
                "properties": {
                  "character_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_members_titles_character_id",
                    "description": "character_id integer"
                  },
                  "titles": {
                    "type": "array",
                    "maxItems": 16,
                    "description": "A list of title_id",
                    "items": {
                      "type": "integer",
                      "format": "int32",
                      "title": "get_corporations_corporation_id_members_titles_title",
                      "description": "title integer"
                    },
                    "title": "get_corporations_corporation_id_members_titles_titles"
                  }
                },
                "title": "get_corporations_corporation_id_members_titles_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_members_titles_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_titles.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_members_titles",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/blueprints/": {
      "get": {
        "description": "Returns a list of blueprints the corporation owns\n\n---\nAlternate route: `/legacy/corporations/{corporation_id}/blueprints/`\n\nAlternate route: `/v1/corporations/{corporation_id}/blueprints/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n\n\n---\n[This route has an available update](https://esi.tech.ccp.is/diff/latest/dev/#GET-/corporations/{corporation_id}/blueprints/)",
        "summary": "Get corporation blueprints",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of corporation blueprints",
            "examples": {
              "application/json": [
                {
                  "item_id": 1000000010495,
                  "type_id": 691,
                  "location_id": 60014719,
                  "location_flag": "CorpSAG1",
                  "quantity": 1,
                  "time_efficiency": 0,
                  "material_efficiency": 0,
                  "runs": -1
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "item_id",
                  "type_id",
                  "location_id",
                  "location_flag",
                  "quantity",
                  "time_efficiency",
                  "material_efficiency",
                  "runs"
                ],
                "properties": {
                  "item_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique ID for this item.",
                    "title": "get_corporations_corporation_id_blueprints_item_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_blueprints_type_id",
                    "description": "type_id integer"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "References a solar system, station or item_id if this blueprint is located within a container.",
                    "title": "get_corporations_corporation_id_blueprints_location_id"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A range of numbers with a minimum of -2 and no maximum value where -1 is an original and -2 is a copy. It can be a positive integer if it is a stack of blueprint originals fresh from the market (e.g. no activities performed on them yet).",
                    "minimum": -2,
                    "title": "get_corporations_corporation_id_blueprints_quantity"
                  },
                  "time_efficiency": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time Efficiency Level of the blueprint.",
                    "minimum": 0,
                    "maximum": 20,
                    "title": "get_corporations_corporation_id_blueprints_time_efficiency"
                  },
                  "material_efficiency": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Material Efficiency Level of the blueprint.",
                    "minimum": 0,
                    "maximum": 25,
                    "title": "get_corporations_corporation_id_blueprints_material_efficiency"
                  },
                  "runs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of runs remaining if the blueprint is a copy, -1 if it is an original.",
                    "minimum": -1,
                    "title": "get_corporations_corporation_id_blueprints_runs"
                  },
                  "location_flag": {
                    "type": "string",
                    "description": "Type of the location_id",
                    "enum": [
                      "AssetSafety",
                      "AutoFit",
                      "Bonus",
                      "Booster",
                      "BoosterBay",
                      "Capsule",
                      "Cargo",
                      "CorpDeliveries",
                      "CorpSAG1",
                      "CorpSAG2",
                      "CorpSAG3",
                      "CorpSAG4",
                      "CorpSAG5",
                      "CorpSAG6",
                      "CorpSAG7",
                      "CrateLoot",
                      "Deliveries",
                      "DroneBay",
                      "DustBattle",
                      "DustDatabank",
                      "FighterBay",
                      "FighterTube0",
                      "FighterTube1",
                      "FighterTube2",
                      "FighterTube3",
                      "FighterTube4",
                      "FleetHangar",
                      "Hangar",
                      "HangarAll",
                      "HiSlot0",
                      "HiSlot1",
                      "HiSlot2",
                      "HiSlot3",
                      "HiSlot4",
                      "HiSlot5",
                      "HiSlot6",
                      "HiSlot7",
                      "HiddenModifers",
                      "Implant",
                      "Impounded",
                      "JunkyardReprocessed",
                      "JunkyardTrashed",
                      "LoSlot0",
                      "LoSlot1",
                      "LoSlot2",
                      "LoSlot3",
                      "LoSlot4",
                      "LoSlot5",
                      "LoSlot6",
                      "LoSlot7",
                      "Locked",
                      "MedSlot0",
                      "MedSlot1",
                      "MedSlot2",
                      "MedSlot3",
                      "MedSlot4",
                      "MedSlot5",
                      "MedSlot6",
                      "MedSlot7",
                      "OfficeFolder",
                      "Pilot",
                      "PlanetSurface",
                      "QuafeBay",
                      "Reward",
                      "RigSlot0",
                      "RigSlot1",
                      "RigSlot2",
                      "RigSlot3",
                      "RigSlot4",
                      "RigSlot5",
                      "RigSlot6",
                      "RigSlot7",
                      "SecondaryStorage",
                      "ServiceSlot0",
                      "ServiceSlot1",
                      "ServiceSlot2",
                      "ServiceSlot3",
                      "ServiceSlot4",
                      "ServiceSlot5",
                      "ServiceSlot6",
                      "ServiceSlot7",
                      "ShipHangar",
                      "ShipOffline",
                      "Skill",
                      "SkillInTraining",
                      "SpecializedAmmoHold",
                      "SpecializedCommandCenterHold",
                      "SpecializedFuelBay",
                      "SpecializedGasHold",
                      "SpecializedIndustrialShipHold",
                      "SpecializedLargeShipHold",
                      "SpecializedMaterialBay",
                      "SpecializedMediumShipHold",
                      "SpecializedMineralHold",
                      "SpecializedOreHold",
                      "SpecializedPlanetaryCommoditiesHold",
                      "SpecializedSalvageHold",
                      "SpecializedShipHold",
                      "SpecializedSmallShipHold",
                      "StructureActive",
                      "StructureFuel",
                      "StructureInactive",
                      "StructureOffline",
                      "SubSystemSlot0",
                      "SubSystemSlot1",
                      "SubSystemSlot2",
                      "SubSystemSlot3",
                      "SubSystemSlot4",
                      "SubSystemSlot5",
                      "SubSystemSlot6",
                      "SubSystemSlot7",
                      "SubsystemBay",
                      "Unlocked",
                      "Wallet",
                      "Wardrobe"
                    ],
                    "title": "get_corporations_corporation_id_blueprints_location_flag"
                  }
                },
                "title": "get_corporations_corporation_id_blueprints_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_blueprints_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_blueprints.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_blueprints",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/standings/": {
      "get": {
        "description": "Return corporation standings from agents, NPC corporations, and factions\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/standings/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/standings/`\n\nAlternate route: `/v1/corporations/{corporation_id}/standings/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get corporation standings",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of standings",
            "examples": {
              "application/json": [
                {
                  "from_id": 3009841,
                  "from_type": "agent",
                  "standing": 0.1
                },
                {
                  "from_id": 1000061,
                  "from_type": "npc_corp",
                  "standing": 0
                },
                {
                  "from_id": 500003,
                  "from_type": "faction",
                  "standing": -1
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "from_id",
                  "from_type",
                  "standing"
                ],
                "properties": {
                  "from_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_standings_from_id",
                    "description": "from_id integer"
                  },
                  "from_type": {
                    "type": "string",
                    "enum": [
                      "agent",
                      "npc_corp",
                      "faction"
                    ],
                    "title": "get_corporations_corporation_id_standings_from_type",
                    "description": "from_type string"
                  },
                  "standing": {
                    "type": "number",
                    "format": "float",
                    "minimum": -10,
                    "maximum": 10,
                    "title": "get_corporations_corporation_id_standings_standing",
                    "description": "standing number"
                  }
                },
                "title": "get_corporations_corporation_id_standings_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_standings_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_standings.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_standings",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/starbases/": {
      "get": {
        "description": "Returns list of corporation starbases (POSes)\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/starbases/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/starbases/`\n\nAlternate route: `/v1/corporations/{corporation_id}/starbases/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation starbases (POSes)",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of starbases (POSes)",
            "examples": {
              "application/json": [
                {
                  "starbase_id": 12345,
                  "type_id": 456,
                  "system_id": 123456
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "starbase_id",
                  "type_id",
                  "system_id"
                ],
                "properties": {
                  "starbase_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique ID for this starbase (POS)",
                    "title": "get_corporations_corporation_id_starbases_starbase_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Starbase (POS) type",
                    "title": "get_corporations_corporation_id_starbases_type_id"
                  },
                  "system_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The solar system this starbase (POS) is in, unanchored POSes have this information",
                    "title": "get_corporations_corporation_id_starbases_system_id"
                  },
                  "moon_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The moon this starbase (POS) is anchored on, unanchored POSes do not have this information",
                    "title": "get_corporations_corporation_id_starbases_moon_id"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "offline",
                      "online",
                      "onlining",
                      "reinforced",
                      "unanchoring"
                    ],
                    "title": "get_corporations_corporation_id_starbases_state",
                    "description": "state string"
                  },
                  "unanchor_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the POS started unanchoring, for starbases (POSes) in unanchoring state",
                    "title": "get_corporations_corporation_id_starbases_unanchor_at"
                  },
                  "reinforced_until": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the POS will be out of reinforcement, for starbases (POSes) in reinforced state",
                    "title": "get_corporations_corporation_id_starbases_reinforced_until"
                  },
                  "onlined_since": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the POS onlined, for starbases (POSes) in online state",
                    "title": "get_corporations_corporation_id_starbases_onlined_since"
                  }
                },
                "title": "get_corporations_corporation_id_starbases_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_starbases_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_starbases.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_starbases",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/starbases/{starbase_id}/": {
      "get": {
        "description": "Returns various settings and fuels of a starbase (POS)\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/starbases/{starbase_id}/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/starbases/{starbase_id}/`\n\nAlternate route: `/v1/corporations/{corporation_id}/starbases/{starbase_id}/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get starbase (POS) detail",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "starbase_id",
            "in": "path",
            "description": "An EVE starbase (POS) ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "system_id",
            "in": "query",
            "description": "The solar system this starbase (POS) is located in,",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of starbases (POSes)",
            "examples": {
              "application/json": {
                "fuel_bay_view": "config_starbase_equipment_role",
                "fuel_bay_take": "config_starbase_equipment_role",
                "anchor": "config_starbase_equipment_role",
                "unanchor": "config_starbase_equipment_role",
                "online": "config_starbase_equipment_role",
                "offline": "config_starbase_equipment_role",
                "allow_corporation_members": true,
                "allow_alliance_members": false,
                "use_alliance_standings": false,
                "attack_if_other_security_status_dropping": false,
                "attack_if_at_war": true
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "fuel_bay_view",
                "fuel_bay_take",
                "anchor",
                "unanchor",
                "online",
                "offline",
                "allow_corporation_members",
                "allow_alliance_members",
                "use_alliance_standings",
                "attack_if_other_security_status_dropping",
                "attack_if_at_war"
              ],
              "properties": {
                "fuel_bay_view": {
                  "type": "string",
                  "description": "Who can view the starbase (POS)'s fule bay. Characters either need to have required role or belong to the starbase (POS) owner's corporation or alliance, as described by the enum, all other access settings follows the same scheme",
                  "enum": [
                    "alliance_member",
                    "config_starbase_equipment_role",
                    "corporation_member",
                    "starbase_fuel_technician_role"
                  ],
                  "title": "get_corporations_corporation_id_starbases_starbase_id_fuel_bay_view"
                },
                "fuel_bay_take": {
                  "type": "string",
                  "description": "Who can take fuel blocks out of the starbase (POS)'s fuel bay",
                  "enum": [
                    "alliance_member",
                    "config_starbase_equipment_role",
                    "corporation_member",
                    "starbase_fuel_technician_role"
                  ],
                  "title": "get_corporations_corporation_id_starbases_starbase_id_fuel_bay_take"
                },
                "anchor": {
                  "type": "string",
                  "description": "Who can anchor starbase (POS) and its structures",
                  "enum": [
                    "alliance_member",
                    "config_starbase_equipment_role",
                    "corporation_member",
                    "starbase_fuel_technician_role"
                  ],
                  "title": "get_corporations_corporation_id_starbases_starbase_id_anchor"
                },
                "unanchor": {
                  "type": "string",
                  "description": "Who can unanchor starbase (POS) and its structures",
                  "enum": [
                    "alliance_member",
                    "config_starbase_equipment_role",
                    "corporation_member",
                    "starbase_fuel_technician_role"
                  ],
                  "title": "get_corporations_corporation_id_starbases_starbase_id_unanchor"
                },
                "online": {
                  "type": "string",
                  "description": "Who can online starbase (POS) and its structures",
                  "enum": [
                    "alliance_member",
                    "config_starbase_equipment_role",
                    "corporation_member",
                    "starbase_fuel_technician_role"
                  ],
                  "title": "get_corporations_corporation_id_starbases_starbase_id_online"
                },
                "offline": {
                  "type": "string",
                  "description": "Who can offline starbase (POS) and its structures",
                  "enum": [
                    "alliance_member",
                    "config_starbase_equipment_role",
                    "corporation_member",
                    "starbase_fuel_technician_role"
                  ],
                  "title": "get_corporations_corporation_id_starbases_starbase_id_offline"
                },
                "allow_corporation_members": {
                  "type": "boolean",
                  "title": "get_corporations_corporation_id_starbases_starbase_id_allow_corporation_members",
                  "description": "allow_corporation_members boolean"
                },
                "allow_alliance_members": {
                  "type": "boolean",
                  "title": "get_corporations_corporation_id_starbases_starbase_id_allow_alliance_members",
                  "description": "allow_alliance_members boolean"
                },
                "use_alliance_standings": {
                  "type": "boolean",
                  "description": "True if the starbase (POS) is using alliance standings, otherwise using corporation's",
                  "title": "get_corporations_corporation_id_starbases_starbase_id_use_alliance_standings"
                },
                "attack_standing_threshold": {
                  "type": "number",
                  "format": "float",
                  "description": "Starbase (POS) will attack if target's standing is lower than this value",
                  "title": "get_corporations_corporation_id_starbases_starbase_id_attack_standing_threshold"
                },
                "attack_security_status_threshold": {
                  "type": "number",
                  "format": "float",
                  "description": "Starbase (POS) will attack if target's security standing is lower than this value",
                  "title": "get_corporations_corporation_id_starbases_starbase_id_attack_security_status_threshold"
                },
                "attack_if_other_security_status_dropping": {
                  "type": "boolean",
                  "title": "get_corporations_corporation_id_starbases_starbase_id_attack_if_other_security_status_dropping",
                  "description": "attack_if_other_security_status_dropping boolean"
                },
                "attack_if_at_war": {
                  "type": "boolean",
                  "title": "get_corporations_corporation_id_starbases_starbase_id_attack_if_at_war",
                  "description": "attack_if_at_war boolean"
                },
                "fuels": {
                  "type": "array",
                  "maxItems": 20,
                  "description": "Fuel blocks and other things that will be consumed when operating a starbase (POS)",
                  "items": {
                    "type": "object",
                    "required": [
                      "type_id",
                      "quantity"
                    ],
                    "properties": {
                      "type_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_starbases_starbase_id_type_id",
                        "description": "type_id integer"
                      },
                      "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_starbases_starbase_id_quantity",
                        "description": "quantity integer"
                      }
                    },
                    "title": "get_corporations_corporation_id_starbases_starbase_id_fuel",
                    "description": "fuel object"
                  },
                  "title": "get_corporations_corporation_id_starbases_starbase_id_fuels"
                }
              },
              "title": "get_corporations_corporation_id_starbases_starbase_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_starbases.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_starbases_starbase_id",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/containers/logs/": {
      "get": {
        "description": "Returns logs recorded in the past seven days from all audit log secure containers (ALSC) owned by a given corporation\n\n---\nAlternate route: `/legacy/corporations/{corporation_id}/containers/logs/`\n\nAlternate route: `/v1/corporations/{corporation_id}/containers/logs/`\n\n---\nThis route is cached for up to 600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n\n\n---\n[This route has an available update](https://esi.tech.ccp.is/diff/latest/dev/#GET-/corporations/{corporation_id}/containers/logs/)",
        "summary": "Get all corporation ALSC logs",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of corporation ALSC logs",
            "examples": {
              "application/json": [
                {
                  "logged_at": "2017-10-10T14:00:00Z",
                  "container_id": 1000000012279,
                  "container_type_id": 17365,
                  "character_id": 2112625428,
                  "location_id": 1000000012278,
                  "action": "set_password",
                  "location_flag": "CorpSAG1",
                  "password_type": "general"
                },
                {
                  "logged_at": "2017-10-11T12:04:33Z",
                  "container_id": 1000000012279,
                  "container_type_id": 17365,
                  "character_id": 2112625428,
                  "location_id": 1000000012278,
                  "action": "lock",
                  "location_flag": "CorpSAG1",
                  "type_id": 1230,
                  "quantity": 30
                },
                {
                  "logged_at": "2017-10-11T12:06:29Z",
                  "container_id": 1000000012279,
                  "container_type_id": 17365,
                  "character_id": 2112625428,
                  "location_id": 1000000012278,
                  "action": "configure",
                  "location_flag": "CorpSAG2",
                  "old_config_bitmask": 23,
                  "new_config_bitmask": 31
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "logged_at",
                  "container_id",
                  "container_type_id",
                  "character_id",
                  "location_id",
                  "action",
                  "location_flag"
                ],
                "properties": {
                  "logged_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when this log was created",
                    "title": "get_corporations_corporation_id_containers_logs_logged_at"
                  },
                  "container_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the container",
                    "title": "get_corporations_corporation_id_containers_logs_container_id"
                  },
                  "container_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Type ID of the container",
                    "title": "get_corporations_corporation_id_containers_logs_container_type_id"
                  },
                  "character_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the character who performed the action.",
                    "title": "get_corporations_corporation_id_containers_logs_character_id"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_corporations_corporation_id_containers_logs_location_id",
                    "description": "location_id integer"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "add",
                      "assemble",
                      "configure",
                      "enter_password",
                      "lock",
                      "move",
                      "repackage",
                      "set_name",
                      "set_password",
                      "unlock"
                    ],
                    "title": "get_corporations_corporation_id_containers_logs_action",
                    "description": "action string"
                  },
                  "password_type": {
                    "type": "string",
                    "enum": [
                      "config",
                      "general"
                    ],
                    "description": "Type of password set if action is of type SetPassword or EnterPassword",
                    "title": "get_corporations_corporation_id_containers_logs_password_type"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Type ID of the item being acted upon",
                    "title": "get_corporations_corporation_id_containers_logs_type_id"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Quantity of the item being acted upon",
                    "title": "get_corporations_corporation_id_containers_logs_quantity"
                  },
                  "old_config_bitmask": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_containers_logs_old_config_bitmask",
                    "description": "old_config_bitmask integer"
                  },
                  "new_config_bitmask": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_containers_logs_new_config_bitmask",
                    "description": "new_config_bitmask integer"
                  },
                  "location_flag": {
                    "type": "string",
                    "enum": [
                      "AssetSafety",
                      "AutoFit",
                      "Bonus",
                      "Booster",
                      "BoosterBay",
                      "Capsule",
                      "Cargo",
                      "CorpDeliveries",
                      "CorpSAG1",
                      "CorpSAG2",
                      "CorpSAG3",
                      "CorpSAG4",
                      "CorpSAG5",
                      "CorpSAG6",
                      "CorpSAG7",
                      "CrateLoot",
                      "Deliveries",
                      "DroneBay",
                      "DustBattle",
                      "DustDatabank",
                      "FighterBay",
                      "FighterTube0",
                      "FighterTube1",
                      "FighterTube2",
                      "FighterTube3",
                      "FighterTube4",
                      "FleetHangar",
                      "Hangar",
                      "HangarAll",
                      "HiSlot0",
                      "HiSlot1",
                      "HiSlot2",
                      "HiSlot3",
                      "HiSlot4",
                      "HiSlot5",
                      "HiSlot6",
                      "HiSlot7",
                      "HiddenModifers",
                      "Implant",
                      "Impounded",
                      "JunkyardReprocessed",
                      "JunkyardTrashed",
                      "LoSlot0",
                      "LoSlot1",
                      "LoSlot2",
                      "LoSlot3",
                      "LoSlot4",
                      "LoSlot5",
                      "LoSlot6",
                      "LoSlot7",
                      "Locked",
                      "MedSlot0",
                      "MedSlot1",
                      "MedSlot2",
                      "MedSlot3",
                      "MedSlot4",
                      "MedSlot5",
                      "MedSlot6",
                      "MedSlot7",
                      "OfficeFolder",
                      "Pilot",
                      "PlanetSurface",
                      "QuafeBay",
                      "Reward",
                      "RigSlot0",
                      "RigSlot1",
                      "RigSlot2",
                      "RigSlot3",
                      "RigSlot4",
                      "RigSlot5",
                      "RigSlot6",
                      "RigSlot7",
                      "SecondaryStorage",
                      "ServiceSlot0",
                      "ServiceSlot1",
                      "ServiceSlot2",
                      "ServiceSlot3",
                      "ServiceSlot4",
                      "ServiceSlot5",
                      "ServiceSlot6",
                      "ServiceSlot7",
                      "ShipHangar",
                      "ShipOffline",
                      "Skill",
                      "SkillInTraining",
                      "SpecializedAmmoHold",
                      "SpecializedCommandCenterHold",
                      "SpecializedFuelBay",
                      "SpecializedGasHold",
                      "SpecializedIndustrialShipHold",
                      "SpecializedLargeShipHold",
                      "SpecializedMaterialBay",
                      "SpecializedMediumShipHold",
                      "SpecializedMineralHold",
                      "SpecializedOreHold",
                      "SpecializedPlanetaryCommoditiesHold",
                      "SpecializedSalvageHold",
                      "SpecializedShipHold",
                      "SpecializedSmallShipHold",
                      "StructureActive",
                      "StructureFuel",
                      "StructureInactive",
                      "StructureOffline",
                      "SubSystemSlot0",
                      "SubSystemSlot1",
                      "SubSystemSlot2",
                      "SubSystemSlot3",
                      "SubSystemSlot4",
                      "SubSystemSlot5",
                      "SubSystemSlot6",
                      "SubSystemSlot7",
                      "SubsystemBay",
                      "Unlocked",
                      "Wallet",
                      "Wardrobe"
                    ],
                    "title": "get_corporations_corporation_id_containers_logs_location_flag",
                    "description": "location_flag string"
                  }
                },
                "title": "get_corporations_corporation_id_containers_logs_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_containers_logs_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_container_logs.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_containers_logs",
        "x-cached-seconds": 600,
        "x-alternate-versions": [
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/facilities/": {
      "get": {
        "description": "Return a corporation's facilities\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/facilities/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/facilities/`\n\nAlternate route: `/v1/corporations/{corporation_id}/facilities/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Factory_Manager\n",
        "summary": "Get corporation facilities",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of corporation facilities",
            "examples": {
              "application/json": [
                {
                  "facility_id": 123,
                  "type_id": 2502,
                  "system_id": 45678
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "facility_id",
                  "type_id",
                  "system_id"
                ],
                "properties": {
                  "facility_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_corporations_corporation_id_facilities_facility_id",
                    "description": "facility_id integer"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_facilities_type_id",
                    "description": "type_id integer"
                  },
                  "system_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_facilities_system_id",
                    "description": "system_id integer"
                  }
                },
                "title": "get_corporations_corporation_id_facilities_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_facilities_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Factory_Manager"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_facilities.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_facilities",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/medals/": {
      "get": {
        "description": "Returns a corporation's medals\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/medals/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/medals/`\n\nAlternate route: `/v1/corporations/{corporation_id}/medals/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get corporation medals",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of medals",
            "examples": {
              "application/json": [
                {
                  "medal_id": 123,
                  "title": "Awesome Medal",
                  "description": "An Awesome Medal",
                  "creator_id": 46578,
                  "created_at": "2017-10-10T14:00:00Z"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "medal_id",
                  "title",
                  "description",
                  "creator_id",
                  "created_at"
                ],
                "properties": {
                  "medal_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_medals_medal_id",
                    "description": "medal_id integer"
                  },
                  "title": {
                    "type": "string",
                    "maxLength": 100,
                    "title": "get_corporations_corporation_id_medals_title",
                    "description": "title string"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "title": "get_corporations_corporation_id_medals_description",
                    "description": "description string"
                  },
                  "creator_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the character who created this medal",
                    "title": "get_corporations_corporation_id_medals_creator_id"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporations_corporation_id_medals_created_at",
                    "description": "created_at string"
                  }
                },
                "title": "get_corporations_corporation_id_medals_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_medals_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_medals.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_medals",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/medals/issued/": {
      "get": {
        "description": "Returns medals issued by a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/medals/issued/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/medals/issued/`\n\nAlternate route: `/v1/corporations/{corporation_id}/medals/issued/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation issued medals",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of issued medals",
            "examples": {
              "application/json": [
                {
                  "medal_id": 123,
                  "character_id": 45678,
                  "reason": "Awesome Reason",
                  "status": "private",
                  "issuer_id": 67890,
                  "issued_at": "2017-10-10T14:00:00Z"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "medal_id",
                  "character_id",
                  "reason",
                  "status",
                  "issuer_id",
                  "issued_at"
                ],
                "properties": {
                  "medal_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_medals_issued_medal_id",
                    "description": "medal_id integer"
                  },
                  "character_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the character who was rewarded this medal",
                    "title": "get_corporations_corporation_id_medals_issued_character_id"
                  },
                  "reason": {
                    "type": "string",
                    "maxLength": 1000,
                    "title": "get_corporations_corporation_id_medals_issued_reason",
                    "description": "reason string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public"
                    ],
                    "title": "get_corporations_corporation_id_medals_issued_status",
                    "description": "status string"
                  },
                  "issuer_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the character who issued the medal",
                    "title": "get_corporations_corporation_id_medals_issued_issuer_id"
                  },
                  "issued_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporations_corporation_id_medals_issued_issued_at",
                    "description": "issued_at string"
                  }
                },
                "title": "get_corporations_corporation_id_medals_issued_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_medals_issued_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_medals.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_medals_issued",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/outposts/": {
      "get": {
        "description": "Get a list of corporation outpost IDs Note: This endpoint will be removed once outposts are migrated to Citadels as talked about in this blog: https://community.eveonline.com/news/dev-blogs/the-next-steps-in-structure-transition/\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/outposts/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/outposts/`\n\nAlternate route: `/v1/corporations/{corporation_id}/outposts/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation outposts",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of corporation outpost IDs",
            "examples": {
              "application/json": [
                61001146,
                61001147,
                61001148
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_corporations_corporation_id_outposts_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_corporations_corporation_id_outposts_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_outposts.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_outposts",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/outposts/{outpost_id}/": {
      "get": {
        "description": "Get details about a given outpost. Note: This endpoint will be removed once outposts are migrated to Citadels as talked about in this blog: https://community.eveonline.com/news/dev-blogs/the-next-steps-in-structure-transition/\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/outposts/{outpost_id}/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/outposts/{outpost_id}/`\n\nAlternate route: `/v1/corporations/{corporation_id}/outposts/{outpost_id}/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation outpost details",
        "tags": [
          "Corporation"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "outpost_id",
            "in": "path",
            "description": "A station (outpost) ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Details about the given outpost",
            "examples": {
              "application/json": {
                "owner_id": 98000002,
                "system_id": 30000657,
                "docking_cost_per_ship_volume": 0,
                "office_rental_cost": 100,
                "type_id": 21644,
                "reprocessing_efficiency": 0.5,
                "reprocessing_station_take": 0.01,
                "standing_owner_id": 99003581,
                "coordinates": {
                  "x": -102478848000,
                  "y": -18310963200,
                  "z": -9660456960
                },
                "services": [
                  {
                    "service_name": "Reprocessing Plant",
                    "owner_id": 98000002,
                    "minimum_standing": 0,
                    "surcharge_per_bad_standing": 0,
                    "discount_per_good_standing": 10
                  }
                ]
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "owner_id",
                "system_id",
                "docking_cost_per_ship_volume",
                "office_rental_cost",
                "type_id",
                "reprocessing_efficiency",
                "reprocessing_station_take",
                "standing_owner_id",
                "coordinates",
                "services"
              ],
              "properties": {
                "owner_id": {
                  "description": "The entity that owns the station (e.g. the entity whose logo is on the station services bar)",
                  "type": "integer",
                  "format": "int32",
                  "title": "get_corporations_corporation_id_outposts_outpost_id_owner_id"
                },
                "system_id": {
                  "description": "The ID of the solar system the outpost rests in",
                  "type": "integer",
                  "format": "int32",
                  "title": "get_corporations_corporation_id_outposts_outpost_id_system_id"
                },
                "docking_cost_per_ship_volume": {
                  "type": "number",
                  "format": "float",
                  "title": "get_corporations_corporation_id_outposts_outpost_id_docking_cost_per_ship_volume",
                  "description": "docking_cost_per_ship_volume number"
                },
                "office_rental_cost": {
                  "type": "integer",
                  "format": "int64",
                  "title": "get_corporations_corporation_id_outposts_outpost_id_office_rental_cost",
                  "description": "office_rental_cost integer"
                },
                "type_id": {
                  "description": "The type ID of the given outpost",
                  "type": "integer",
                  "format": "int32",
                  "title": "get_corporations_corporation_id_outposts_outpost_id_type_id"
                },
                "reprocessing_efficiency": {
                  "type": "number",
                  "format": "float",
                  "title": "get_corporations_corporation_id_outposts_outpost_id_reprocessing_efficiency",
                  "description": "reprocessing_efficiency number"
                },
                "reprocessing_station_take": {
                  "type": "number",
                  "format": "float",
                  "title": "get_corporations_corporation_id_outposts_outpost_id_reprocessing_station_take",
                  "description": "reprocessing_station_take number"
                },
                "standing_owner_id": {
                  "description": "The owner ID that sets the ability for someone to dock based on standings.",
                  "type": "integer",
                  "format": "int32",
                  "title": "get_corporations_corporation_id_outposts_outpost_id_standing_owner_id"
                },
                "coordinates": {
                  "type": "object",
                  "required": [
                    "x",
                    "y",
                    "z"
                  ],
                  "properties": {
                    "x": {
                      "type": "number",
                      "format": "double",
                      "title": "get_corporations_corporation_id_outposts_outpost_id_x",
                      "description": "x number"
                    },
                    "y": {
                      "type": "number",
                      "format": "double",
                      "title": "get_corporations_corporation_id_outposts_outpost_id_y",
                      "description": "y number"
                    },
                    "z": {
                      "type": "number",
                      "format": "double",
                      "title": "get_corporations_corporation_id_outposts_outpost_id_z",
                      "description": "z number"
                    }
                  },
                  "title": "get_corporations_corporation_id_outposts_outpost_id_coordinates",
                  "description": "coordinates object"
                },
                "services": {
                  "description": "A list of services the given outpost provides",
                  "type": "array",
                  "maxItems": 27,
                  "items": {
                    "type": "object",
                    "required": [
                      "service_name",
                      "minimum_standing",
                      "surcharge_per_bad_standing",
                      "discount_per_good_standing"
                    ],
                    "properties": {
                      "service_name": {
                        "type": "string",
                        "enum": [
                          "Bounty Missions",
                          "Assassination Missions",
                          "Courier Missions",
                          "Interbus",
                          "Reprocessing Plant",
                          "Refinery",
                          "Market",
                          "Black Market",
                          "Stock Exchange",
                          "Cloning",
                          "Surgery",
                          "DNA Therapy",
                          "Repair Facilities",
                          "Factory",
                          "Laboratory",
                          "Gambling",
                          "Fitting",
                          "Paintshop",
                          "News",
                          "Storage",
                          "Insurance",
                          "Docking",
                          "Office Rental",
                          "Jump Clone Facility",
                          "Loyalty Point Store",
                          "Navy Offices",
                          "Security Office"
                        ],
                        "title": "get_corporations_corporation_id_outposts_outpost_id_service_name",
                        "description": "service_name string"
                      },
                      "minimum_standing": {
                        "type": "number",
                        "format": "double",
                        "title": "get_corporations_corporation_id_outposts_outpost_id_minimum_standing",
                        "description": "minimum_standing number"
                      },
                      "surcharge_per_bad_standing": {
                        "type": "number",
                        "format": "double",
                        "title": "get_corporations_corporation_id_outposts_outpost_id_surcharge_per_bad_standing",
                        "description": "surcharge_per_bad_standing number"
                      },
                      "discount_per_good_standing": {
                        "type": "number",
                        "format": "double",
                        "title": "get_corporations_corporation_id_outposts_outpost_id_discount_per_good_standing",
                        "description": "discount_per_good_standing number"
                      }
                    },
                    "title": "get_corporations_corporation_id_outposts_outpost_id_service",
                    "description": "service object"
                  },
                  "title": "get_corporations_corporation_id_outposts_outpost_id_services"
                }
              },
              "title": "get_corporations_corporation_id_outposts_outpost_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_outposts.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_outposts_outpost_id",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/dogma/attributes/": {
      "get": {
        "description": "Get a list of dogma attribute ids\n\n---\nAlternate route: `/dev/dogma/attributes/`\n\nAlternate route: `/legacy/dogma/attributes/`\n\nAlternate route: `/v1/dogma/attributes/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get attributes",
        "tags": [
          "Dogma"
        ],
        "responses": {
          "200": {
            "description": "A list of dogma attribute ids",
            "examples": {
              "application/json": [
                1,
                2,
                3
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_dogma_attributes_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_dogma_attributes_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_dogma_attributes",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/dogma/attributes/{attribute_id}/": {
      "get": {
        "description": "Get information on a dogma attribute\n\n---\nAlternate route: `/dev/dogma/attributes/{attribute_id}/`\n\nAlternate route: `/legacy/dogma/attributes/{attribute_id}/`\n\nAlternate route: `/v1/dogma/attributes/{attribute_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get attribute information",
        "tags": [
          "Dogma"
        ],
        "parameters": [
          {
            "name": "attribute_id",
            "in": "path",
            "description": "A dogma attribute ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a dogma attribute",
            "examples": {
              "application/json": {
                "attribute_id": 20,
                "name": "speedFactor",
                "description": "Factor by which topspeed increases.",
                "icon_id": 1389,
                "default_value": 1,
                "published": true,
                "display_name": "Maximum Velocity Bonus",
                "unit_id": 124,
                "high_is_good": true
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "attribute_id"
              ],
              "properties": {
                "attribute_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_attributes_attribute_id_attribute_id",
                  "description": "attribute_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_dogma_attributes_attribute_id_name",
                  "description": "name string"
                },
                "description": {
                  "type": "string",
                  "title": "get_dogma_attributes_attribute_id_description",
                  "description": "description string"
                },
                "icon_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_attributes_attribute_id_icon_id",
                  "description": "icon_id integer"
                },
                "default_value": {
                  "type": "number",
                  "format": "float",
                  "title": "get_dogma_attributes_attribute_id_default_value",
                  "description": "default_value number"
                },
                "published": {
                  "type": "boolean",
                  "title": "get_dogma_attributes_attribute_id_published",
                  "description": "published boolean"
                },
                "display_name": {
                  "type": "string",
                  "title": "get_dogma_attributes_attribute_id_display_name",
                  "description": "display_name string"
                },
                "unit_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_attributes_attribute_id_unit_id",
                  "description": "unit_id integer"
                },
                "stackable": {
                  "type": "boolean",
                  "title": "get_dogma_attributes_attribute_id_stackable",
                  "description": "stackable boolean"
                },
                "high_is_good": {
                  "type": "boolean",
                  "title": "get_dogma_attributes_attribute_id_high_is_good",
                  "description": "high_is_good boolean"
                }
              },
              "title": "get_dogma_attributes_attribute_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Dogma attribute not found",
            "schema": {
              "type": "object",
              "title": "get_dogma_attributes_attribute_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_dogma_attributes_attribute_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_dogma_attributes_attribute_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/dogma/effects/": {
      "get": {
        "description": "Get a list of dogma effect ids\n\n---\nAlternate route: `/dev/dogma/effects/`\n\nAlternate route: `/legacy/dogma/effects/`\n\nAlternate route: `/v1/dogma/effects/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get effects",
        "tags": [
          "Dogma"
        ],
        "responses": {
          "200": {
            "description": "A list of dogma effect ids",
            "examples": {
              "application/json": [
                1,
                2,
                3
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_dogma_effects_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_dogma_effects_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_dogma_effects",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/dogma/effects/{effect_id}/": {
      "get": {
        "description": "Get information on a dogma effect\n\n---\nAlternate route: `/dev/dogma/effects/{effect_id}/`\n\nAlternate route: `/v2/dogma/effects/{effect_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get effect information",
        "tags": [
          "Dogma"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "effect_id",
            "in": "path",
            "description": "A dogma effect ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a dogma effect",
            "examples": {
              "application/json": {
                "effect_id": 12,
                "name": "hiPower",
                "display_name": "High power",
                "description": "Requires a high power slot.",
                "icon_id": 293,
                "effect_category": 0,
                "pre_expression": 131,
                "post_expression": 131,
                "published": true
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "effect_id"
              ],
              "properties": {
                "effect_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_effects_effect_id_effect_id",
                  "description": "effect_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_dogma_effects_effect_id_name",
                  "description": "name string"
                },
                "display_name": {
                  "type": "string",
                  "title": "get_dogma_effects_effect_id_display_name",
                  "description": "display_name string"
                },
                "description": {
                  "type": "string",
                  "title": "get_dogma_effects_effect_id_description",
                  "description": "description string"
                },
                "icon_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_effects_effect_id_icon_id",
                  "description": "icon_id integer"
                },
                "effect_category": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_effects_effect_id_effect_category",
                  "description": "effect_category integer"
                },
                "pre_expression": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_effects_effect_id_pre_expression",
                  "description": "pre_expression integer"
                },
                "post_expression": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_effects_effect_id_post_expression",
                  "description": "post_expression integer"
                },
                "is_offensive": {
                  "type": "boolean",
                  "title": "get_dogma_effects_effect_id_is_offensive",
                  "description": "is_offensive boolean"
                },
                "is_assistance": {
                  "type": "boolean",
                  "title": "get_dogma_effects_effect_id_is_assistance",
                  "description": "is_assistance boolean"
                },
                "disallow_auto_repeat": {
                  "type": "boolean",
                  "title": "get_dogma_effects_effect_id_disallow_auto_repeat",
                  "description": "disallow_auto_repeat boolean"
                },
                "published": {
                  "type": "boolean",
                  "title": "get_dogma_effects_effect_id_published",
                  "description": "published boolean"
                },
                "is_warp_safe": {
                  "type": "boolean",
                  "title": "get_dogma_effects_effect_id_is_warp_safe",
                  "description": "is_warp_safe boolean"
                },
                "range_chance": {
                  "type": "boolean",
                  "title": "get_dogma_effects_effect_id_range_chance",
                  "description": "range_chance boolean"
                },
                "electronic_chance": {
                  "type": "boolean",
                  "title": "get_dogma_effects_effect_id_electronic_chance",
                  "description": "electronic_chance boolean"
                },
                "duration_attribute_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_effects_effect_id_duration_attribute_id",
                  "description": "duration_attribute_id integer"
                },
                "tracking_speed_attribute_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_effects_effect_id_tracking_speed_attribute_id",
                  "description": "tracking_speed_attribute_id integer"
                },
                "discharge_attribute_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_effects_effect_id_discharge_attribute_id",
                  "description": "discharge_attribute_id integer"
                },
                "range_attribute_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_effects_effect_id_range_attribute_id",
                  "description": "range_attribute_id integer"
                },
                "falloff_attribute_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_dogma_effects_effect_id_falloff_attribute_id",
                  "description": "falloff_attribute_id integer"
                },
                "modifiers": {
                  "type": "array",
                  "maxItems": 100,
                  "items": {
                    "type": "object",
                    "required": [
                      "func"
                    ],
                    "properties": {
                      "func": {
                        "type": "string",
                        "title": "get_dogma_effects_effect_id_func",
                        "description": "func string"
                      },
                      "domain": {
                        "type": "string",
                        "title": "get_dogma_effects_effect_id_domain",
                        "description": "domain string"
                      },
                      "modified_attribute_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_dogma_effects_effect_id_modified_attribute_id",
                        "description": "modified_attribute_id integer"
                      },
                      "modifying_attribute_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_dogma_effects_effect_id_modifying_attribute_id",
                        "description": "modifying_attribute_id integer"
                      },
                      "effect_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_dogma_effects_effect_id_effect_id",
                        "description": "effect_id integer"
                      },
                      "operator": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_dogma_effects_effect_id_operator",
                        "description": "operator integer"
                      }
                    },
                    "title": "get_dogma_effects_effect_id_modifier",
                    "description": "modifier object"
                  },
                  "title": "get_dogma_effects_effect_id_modifiers",
                  "description": "modifiers array"
                }
              },
              "title": "get_dogma_effects_effect_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Dogma effect not found",
            "schema": {
              "type": "object",
              "title": "get_dogma_effects_effect_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_dogma_effects_effect_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_dogma_effects_effect_id",
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/fw/wars/": {
      "get": {
        "description": "Data about which NPC factions are at war\n\n---\nAlternate route: `/dev/fw/wars/`\n\nAlternate route: `/legacy/fw/wars/`\n\nAlternate route: `/v1/fw/wars/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Data about which NPC factions are at war",
        "tags": [
          "Faction Warfare"
        ],
        "responses": {
          "200": {
            "description": "A list of NPC factions at war",
            "examples": {
              "application/json": [
                {
                  "faction_id": 500001,
                  "against_id": 500002
                }
              ]
            },
            "schema": {
              "type": "array",
              "description": "List of factions at war",
              "maxItems": 8,
              "items": {
                "type": "object",
                "required": [
                  "faction_id",
                  "against_id"
                ],
                "properties": {
                  "faction_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fw_wars_faction_id",
                    "description": "faction_id integer"
                  },
                  "against_id": {
                    "description": "The faction ID of the enemy faction.",
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fw_wars_against_id"
                  }
                },
                "title": "get_fw_wars_200_ok",
                "description": "200 ok object"
              },
              "title": "get_fw_wars_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_fw_wars",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fw/stats/": {
      "get": {
        "summary": "An overview of statistics about factions involved in faction warfare",
        "description": "Statistical overviews of factions involved in faction warfare\n\n---\nAlternate route: `/dev/fw/stats/`\n\nAlternate route: `/legacy/fw/stats/`\n\nAlternate route: `/v1/fw/stats/`\n\n---\nThis route expires daily at 11:05",
        "tags": [
          "Faction Warfare"
        ],
        "responses": {
          "200": {
            "description": "Per faction breakdown of faction warfare statistics",
            "examples": {
              "application/json": [
                {
                  "faction_id": 500001,
                  "pilots": 28863,
                  "systems_controlled": 20,
                  "kills": {
                    "yesterday": 136,
                    "last_week": 893,
                    "total": 684350
                  },
                  "victory_points": {
                    "yesterday": 15980,
                    "last_week": 102640,
                    "total": 52658260
                  }
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 4,
              "items": {
                "type": "object",
                "required": [
                  "faction_id",
                  "pilots",
                  "systems_controlled",
                  "kills",
                  "victory_points"
                ],
                "properties": {
                  "faction_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fw_stats_faction_id",
                    "description": "faction_id integer"
                  },
                  "pilots": {
                    "description": "How many pilots fight for the given faction",
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fw_stats_pilots"
                  },
                  "systems_controlled": {
                    "description": "The number of solar systems controlled by the given faction",
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fw_stats_systems_controlled"
                  },
                  "kills": {
                    "type": "object",
                    "description": "Summary of kills against an enemy faction for the given faction",
                    "required": [
                      "yesterday",
                      "last_week",
                      "total"
                    ],
                    "properties": {
                      "yesterday": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Yesterday's total number of kills against enemy factions",
                        "title": "get_fw_stats_yesterday"
                      },
                      "last_week": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Last week's total number of kills against enemy factions",
                        "title": "get_fw_stats_last_week"
                      },
                      "total": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Total number of kills against enemy factions since faction warfare began",
                        "title": "get_fw_stats_total"
                      }
                    },
                    "title": "get_fw_stats_kills"
                  },
                  "victory_points": {
                    "type": "object",
                    "description": "Summary of victory points gained for the given faction",
                    "required": [
                      "yesterday",
                      "last_week",
                      "total"
                    ],
                    "properties": {
                      "yesterday": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Yesterday's victory points gained",
                        "title": "get_fw_stats_yesterday"
                      },
                      "last_week": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Last week's victory points gained",
                        "title": "get_fw_stats_last_week"
                      },
                      "total": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Total victory points gained since faction warfare began",
                        "title": "get_fw_stats_total"
                      }
                    },
                    "title": "get_fw_stats_victory_points"
                  }
                },
                "title": "get_fw_stats_200_ok",
                "description": "200 ok object"
              },
              "title": "get_fw_stats_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_fw_stats",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fw/systems/": {
      "get": {
        "summary": "Ownership of faction warfare systems",
        "description": "An overview of the current ownership of faction warfare solar systems\n\n---\nAlternate route: `/dev/fw/systems/`\n\nAlternate route: `/legacy/fw/systems/`\n\nAlternate route: `/v1/fw/systems/`\n\n---\nThis route is cached for up to 1800 seconds",
        "tags": [
          "Faction Warfare"
        ],
        "responses": {
          "200": {
            "description": "All faction war solar systems",
            "examples": {
              "application/json": [
                {
                  "solar_system_id": 30002096,
                  "owner_faction_id": 500001,
                  "occupier_faction_id": 500001,
                  "victory_points": 60,
                  "victory_points_threshold": 3000,
                  "contested": true
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 171,
              "items": {
                "type": "object",
                "required": [
                  "solar_system_id",
                  "occupier_faction_id",
                  "owner_faction_id",
                  "victory_points",
                  "victory_points_threshold",
                  "contested"
                ],
                "properties": {
                  "solar_system_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fw_systems_solar_system_id",
                    "description": "solar_system_id integer"
                  },
                  "owner_faction_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fw_systems_owner_faction_id",
                    "description": "owner_faction_id integer"
                  },
                  "occupier_faction_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fw_systems_occupier_faction_id",
                    "description": "occupier_faction_id integer"
                  },
                  "victory_points": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fw_systems_victory_points",
                    "description": "victory_points integer"
                  },
                  "victory_points_threshold": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fw_systems_victory_points_threshold",
                    "description": "victory_points_threshold integer"
                  },
                  "contested": {
                    "type": "boolean",
                    "title": "get_fw_systems_contested",
                    "description": "contested boolean"
                  }
                },
                "title": "get_fw_systems_200_ok",
                "description": "200 ok object"
              },
              "title": "get_fw_systems_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_fw_systems",
        "x-cached-seconds": 1800,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fw/leaderboards/": {
      "get": {
        "summary": "List of the top factions in faction warfare",
        "description": "Top 4 leaderboard of factions for kills and victory points separated by total, last week and yesterday.\n\n---\nAlternate route: `/dev/fw/leaderboards/`\n\nAlternate route: `/legacy/fw/leaderboards/`\n\nAlternate route: `/v1/fw/leaderboards/`\n\n---\nThis route expires daily at 11:05",
        "tags": [
          "Faction Warfare"
        ],
        "responses": {
          "200": {
            "description": "Corporation leaderboard of kills and victory points within faction warfare.",
            "examples": {
              "application/json": {
                "kills": {
                  "yesterday": [
                    {
                      "faction_id": 500001,
                      "amount": 100
                    },
                    {
                      "faction_id": 500004,
                      "amount": 50
                    }
                  ],
                  "last_week": [
                    {
                      "faction_id": 500001,
                      "amount": 730
                    },
                    {
                      "faction_id": 500004,
                      "amount": 671
                    }
                  ],
                  "active_total": [
                    {
                      "faction_id": 500004,
                      "amount": 832273
                    },
                    {
                      "faction_id": 500001,
                      "amount": 687915
                    }
                  ]
                },
                "victory_points": {
                  "yesterday": [
                    {
                      "faction_id": 500002,
                      "amount": 5000
                    },
                    {
                      "faction_id": 500003,
                      "amount": 3500
                    }
                  ],
                  "last_week": [
                    {
                      "faction_id": 500001,
                      "amount": 97360
                    },
                    {
                      "faction_id": 500004,
                      "amount": 84980
                    }
                  ],
                  "active_total": [
                    {
                      "faction_id": 500001,
                      "amount": 53130500
                    },
                    {
                      "faction_id": 500004,
                      "amount": 50964263
                    }
                  ]
                }
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "kills",
                "victory_points"
              ],
              "properties": {
                "kills": {
                  "type": "object",
                  "description": "Top 4 rankings of factions by number of kills from yesterday, last week and in total.",
                  "required": [
                    "yesterday",
                    "last_week",
                    "active_total"
                  ],
                  "properties": {
                    "yesterday": {
                      "description": "Top 4 ranking of factions by kills in the past day",
                      "type": "array",
                      "maxItems": 4,
                      "items": {
                        "type": "object",
                        "properties": {
                          "faction_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_faction_id",
                            "description": "faction_id integer"
                          },
                          "amount": {
                            "description": "Amount of kills",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_yesterday",
                        "description": "yesterday object"
                      },
                      "title": "get_fw_leaderboards_yesterday"
                    },
                    "last_week": {
                      "description": "Top 4 ranking of factions by kills in the past week",
                      "type": "array",
                      "maxItems": 4,
                      "items": {
                        "type": "object",
                        "properties": {
                          "faction_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_faction_id",
                            "description": "faction_id integer"
                          },
                          "amount": {
                            "description": "Amount of kills",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_last_week",
                        "description": "last_week object"
                      },
                      "title": "get_fw_leaderboards_last_week"
                    },
                    "active_total": {
                      "description": "Top 4 ranking of factions active in faction warfare by total kills. A faction is considered \"active\" if they have participated in faction warfare in the past 14 days.",
                      "type": "array",
                      "maxItems": 4,
                      "items": {
                        "type": "object",
                        "properties": {
                          "faction_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_faction_id",
                            "description": "faction_id integer"
                          },
                          "amount": {
                            "description": "Amount of kills",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_active_total",
                        "description": "active_total object"
                      },
                      "title": "get_fw_leaderboards_active_total"
                    }
                  },
                  "title": "get_fw_leaderboards_kills"
                },
                "victory_points": {
                  "description": "Top 4 rankings of factions by victory points from yesterday, last week and in total",
                  "type": "object",
                  "required": [
                    "yesterday",
                    "last_week",
                    "active_total"
                  ],
                  "properties": {
                    "yesterday": {
                      "description": "Top 4 ranking of factions by victory points in the past day",
                      "type": "array",
                      "maxItems": 4,
                      "items": {
                        "type": "object",
                        "properties": {
                          "faction_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_faction_id",
                            "description": "faction_id integer"
                          },
                          "amount": {
                            "description": "Amount of victory points",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_yesterday",
                        "description": "yesterday object"
                      },
                      "title": "get_fw_leaderboards_yesterday"
                    },
                    "last_week": {
                      "description": "Top 4 ranking of factions by victory points in the past week",
                      "type": "array",
                      "maxItems": 4,
                      "items": {
                        "type": "object",
                        "properties": {
                          "faction_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_faction_id",
                            "description": "faction_id integer"
                          },
                          "amount": {
                            "description": "Amount of victory points",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_last_week",
                        "description": "last_week object"
                      },
                      "title": "get_fw_leaderboards_last_week"
                    },
                    "active_total": {
                      "description": "Top 4 ranking of factions active in faction warfare by total victory points. A faction is considered \"active\" if they have participated in faction warfare in the past 14 days.",
                      "type": "array",
                      "maxItems": 4,
                      "items": {
                        "type": "object",
                        "properties": {
                          "faction_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_faction_id",
                            "description": "faction_id integer"
                          },
                          "amount": {
                            "description": "Amount of victory points",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_active_total",
                        "description": "active_total object"
                      },
                      "title": "get_fw_leaderboards_active_total"
                    }
                  },
                  "title": "get_fw_leaderboards_victory_points"
                }
              },
              "title": "get_fw_leaderboards_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_fw_leaderboards",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fw/leaderboards/characters/": {
      "get": {
        "summary": "List of the top pilots in faction warfare",
        "description": "Top 100 leaderboard of pilots for kills and victory points separated by total, last week and yesterday.\n\n---\nAlternate route: `/dev/fw/leaderboards/characters/`\n\nAlternate route: `/legacy/fw/leaderboards/characters/`\n\nAlternate route: `/v1/fw/leaderboards/characters/`\n\n---\nThis route expires daily at 11:05",
        "tags": [
          "Faction Warfare"
        ],
        "responses": {
          "200": {
            "description": "Character leaderboard of kills and victory points within faction warfare.",
            "examples": {
              "application/json": {
                "kills": {
                  "yesterday": [
                    {
                      "character_id": 2112625428,
                      "amount": 34
                    },
                    {
                      "character_id": 95465499,
                      "amount": 20
                    }
                  ],
                  "last_week": [
                    {
                      "character_id": 2112625428,
                      "amount": 100
                    },
                    {
                      "character_id": 95465499,
                      "amount": 70
                    }
                  ],
                  "active_total": [
                    {
                      "character_id": 2112625428,
                      "amount": 10000
                    },
                    {
                      "character_id": 95465499,
                      "amount": 8500
                    }
                  ]
                },
                "victory_points": {
                  "yesterday": [
                    {
                      "character_id": 2112625428,
                      "amount": 620
                    },
                    {
                      "character_id": 95465499,
                      "amount": 550
                    }
                  ],
                  "last_week": [
                    {
                      "character_id": 2112625428,
                      "amount": 2660
                    },
                    {
                      "character_id": 95465499,
                      "amount": 2000
                    }
                  ],
                  "active_total": [
                    {
                      "character_id": 2112625428,
                      "amount": 1239158
                    },
                    {
                      "character_id": 95465499,
                      "amount": 1139029
                    }
                  ]
                }
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "kills",
                "victory_points"
              ],
              "properties": {
                "kills": {
                  "type": "object",
                  "description": "Top 100 rankings of pilots by number of kills from yesterday, last week and in total.",
                  "required": [
                    "yesterday",
                    "last_week",
                    "active_total"
                  ],
                  "properties": {
                    "yesterday": {
                      "description": "Top 100 ranking of pilots by kills in the past day",
                      "type": "array",
                      "maxItems": 100,
                      "items": {
                        "type": "object",
                        "properties": {
                          "character_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_character_id",
                            "description": "character_id integer"
                          },
                          "amount": {
                            "description": "Amount of kills",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_characters_yesterday",
                        "description": "yesterday object"
                      },
                      "title": "get_fw_leaderboards_characters_yesterday"
                    },
                    "last_week": {
                      "description": "Top 100 ranking of pilots by kills in the past week",
                      "type": "array",
                      "maxItems": 100,
                      "items": {
                        "type": "object",
                        "properties": {
                          "character_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_character_id",
                            "description": "character_id integer"
                          },
                          "amount": {
                            "description": "Amount of kills",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_characters_last_week",
                        "description": "last_week object"
                      },
                      "title": "get_fw_leaderboards_characters_last_week"
                    },
                    "active_total": {
                      "description": "Top 100 ranking of pilots active in faction warfare by total kills. A pilot is considered \"active\" if they have participated in faction warfare in the past 14 days.",
                      "type": "array",
                      "maxItems": 100,
                      "items": {
                        "type": "object",
                        "properties": {
                          "character_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_character_id",
                            "description": "character_id integer"
                          },
                          "amount": {
                            "description": "Amount of kills",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_characters_active_total",
                        "description": "active_total object"
                      },
                      "title": "get_fw_leaderboards_characters_active_total"
                    }
                  },
                  "title": "get_fw_leaderboards_characters_kills"
                },
                "victory_points": {
                  "description": "Top 100 rankings of pilots by victory points from yesterday, last week and in total",
                  "type": "object",
                  "required": [
                    "yesterday",
                    "last_week",
                    "active_total"
                  ],
                  "properties": {
                    "yesterday": {
                      "description": "Top 100 ranking of pilots by victory points in the past day",
                      "type": "array",
                      "maxItems": 100,
                      "items": {
                        "type": "object",
                        "properties": {
                          "character_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_character_id",
                            "description": "character_id integer"
                          },
                          "amount": {
                            "description": "Amount of victory points",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_characters_yesterday",
                        "description": "yesterday object"
                      },
                      "title": "get_fw_leaderboards_characters_yesterday"
                    },
                    "last_week": {
                      "description": "Top 100 ranking of pilots by victory points in the past week",
                      "type": "array",
                      "maxItems": 100,
                      "items": {
                        "type": "object",
                        "properties": {
                          "character_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_character_id",
                            "description": "character_id integer"
                          },
                          "amount": {
                            "description": "Amount of victory points",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_characters_last_week",
                        "description": "last_week object"
                      },
                      "title": "get_fw_leaderboards_characters_last_week"
                    },
                    "active_total": {
                      "description": "Top 100 ranking of pilots active in faction warfare by total victory points. A pilot is considered \"active\" if they have participated in faction warfare in the past 14 days.",
                      "type": "array",
                      "maxItems": 100,
                      "items": {
                        "type": "object",
                        "properties": {
                          "character_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_character_id",
                            "description": "character_id integer"
                          },
                          "amount": {
                            "description": "Amount of victory points",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_characters_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_characters_active_total",
                        "description": "active_total object"
                      },
                      "title": "get_fw_leaderboards_characters_active_total"
                    }
                  },
                  "title": "get_fw_leaderboards_characters_victory_points"
                }
              },
              "title": "get_fw_leaderboards_characters_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_fw_leaderboards_characters",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fw/leaderboards/corporations/": {
      "get": {
        "summary": "List of the top corporations in faction warfare",
        "description": "Top 10 leaderboard of corporations for kills and victory points separated by total, last week and yesterday.\n\n---\nAlternate route: `/dev/fw/leaderboards/corporations/`\n\nAlternate route: `/legacy/fw/leaderboards/corporations/`\n\nAlternate route: `/v1/fw/leaderboards/corporations/`\n\n---\nThis route expires daily at 11:05",
        "tags": [
          "Faction Warfare"
        ],
        "responses": {
          "200": {
            "description": "Corporation leaderboard of kills and victory points within faction warfare.",
            "examples": {
              "application/json": {
                "kills": {
                  "yesterday": [
                    {
                      "corporation_id": 1000180,
                      "amount": 51
                    },
                    {
                      "corporation_id": 1000182,
                      "amount": 39
                    }
                  ],
                  "last_week": [
                    {
                      "corporation_id": 1000180,
                      "amount": 290
                    },
                    {
                      "corporation_id": 1000182,
                      "amount": 169
                    }
                  ],
                  "active_total": [
                    {
                      "corporation_id": 1000180,
                      "amount": 81692
                    },
                    {
                      "corporation_id": 1000182,
                      "amount": 76793
                    }
                  ]
                },
                "victory_points": {
                  "yesterday": [
                    {
                      "corporation_id": 1000180,
                      "amount": 12600
                    },
                    {
                      "corporation_id": 1000181,
                      "amount": 8240
                    }
                  ],
                  "last_week": [
                    {
                      "corporation_id": 1000180,
                      "amount": 91980
                    },
                    {
                      "corporation_id": 1000181,
                      "amount": 58920
                    }
                  ],
                  "active_total": [
                    {
                      "corporation_id": 1000180,
                      "amount": 18640927
                    },
                    {
                      "corporation_id": 1000181,
                      "amount": 18078265
                    }
                  ]
                }
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "kills",
                "victory_points"
              ],
              "properties": {
                "kills": {
                  "type": "object",
                  "description": "Top 10 rankings of corporations by number of kills from yesterday, last week and in total.",
                  "required": [
                    "yesterday",
                    "last_week",
                    "active_total"
                  ],
                  "properties": {
                    "yesterday": {
                      "description": "Top 10 ranking of corporations by kills in the past day",
                      "type": "array",
                      "maxItems": 10,
                      "items": {
                        "type": "object",
                        "properties": {
                          "corporation_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_corporation_id",
                            "description": "corporation_id integer"
                          },
                          "amount": {
                            "description": "Amount of kills",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_corporations_yesterday",
                        "description": "yesterday object"
                      },
                      "title": "get_fw_leaderboards_corporations_yesterday"
                    },
                    "last_week": {
                      "description": "Top 10 ranking of corporations by kills in the past week",
                      "type": "array",
                      "maxItems": 10,
                      "items": {
                        "type": "object",
                        "properties": {
                          "corporation_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_corporation_id",
                            "description": "corporation_id integer"
                          },
                          "amount": {
                            "description": "Amount of kills",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_corporations_last_week",
                        "description": "last_week object"
                      },
                      "title": "get_fw_leaderboards_corporations_last_week"
                    },
                    "active_total": {
                      "description": "Top 10 ranking of corporations active in faction warfare by total kills. A corporation is considered \"active\" if they have participated in faction warfare in the past 14 days.",
                      "type": "array",
                      "maxItems": 10,
                      "items": {
                        "type": "object",
                        "properties": {
                          "corporation_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_corporation_id",
                            "description": "corporation_id integer"
                          },
                          "amount": {
                            "description": "Amount of kills",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_corporations_active_total",
                        "description": "active_total object"
                      },
                      "title": "get_fw_leaderboards_corporations_active_total"
                    }
                  },
                  "title": "get_fw_leaderboards_corporations_kills"
                },
                "victory_points": {
                  "description": "Top 10 rankings of corporations by victory points from yesterday, last week and in total",
                  "type": "object",
                  "required": [
                    "yesterday",
                    "last_week",
                    "active_total"
                  ],
                  "properties": {
                    "yesterday": {
                      "description": "Top 10 ranking of corporations by victory points in the past day",
                      "type": "array",
                      "maxItems": 10,
                      "items": {
                        "type": "object",
                        "properties": {
                          "corporation_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_corporation_id",
                            "description": "corporation_id integer"
                          },
                          "amount": {
                            "description": "Amount of victory points",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_corporations_yesterday",
                        "description": "yesterday object"
                      },
                      "title": "get_fw_leaderboards_corporations_yesterday"
                    },
                    "last_week": {
                      "description": "Top 10 ranking of corporations by victory points in the past week",
                      "type": "array",
                      "maxItems": 10,
                      "items": {
                        "type": "object",
                        "properties": {
                          "corporation_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_corporation_id",
                            "description": "corporation_id integer"
                          },
                          "amount": {
                            "description": "Amount of victory points",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_corporations_last_week",
                        "description": "last_week object"
                      },
                      "title": "get_fw_leaderboards_corporations_last_week"
                    },
                    "active_total": {
                      "description": "Top 10 ranking of corporations active in faction warfare by total victory points. A corporation is considered \"active\" if they have participated in faction warfare in the past 14 days.",
                      "type": "array",
                      "maxItems": 10,
                      "items": {
                        "type": "object",
                        "properties": {
                          "corporation_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_corporation_id",
                            "description": "corporation_id integer"
                          },
                          "amount": {
                            "description": "Amount of victory points",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_fw_leaderboards_corporations_amount"
                          }
                        },
                        "title": "get_fw_leaderboards_corporations_active_total",
                        "description": "active_total object"
                      },
                      "title": "get_fw_leaderboards_corporations_active_total"
                    }
                  },
                  "title": "get_fw_leaderboards_corporations_victory_points"
                }
              },
              "title": "get_fw_leaderboards_corporations_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_fw_leaderboards_corporations",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/fw/stats/": {
      "get": {
        "summary": "Overview of a corporation involved in faction warfare",
        "description": "Statistics about a corporation involved in faction warfare\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/fw/stats/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/fw/stats/`\n\nAlternate route: `/v1/corporations/{corporation_id}/fw/stats/`\n\n---\nThis route expires daily at 11:05",
        "tags": [
          "Faction Warfare"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Faction warfare statistics for a given corporation",
            "examples": {
              "application/json": {
                "faction_id": 500001,
                "enlisted_on": "2017-10-17T00:00:00Z",
                "pilots": 28863,
                "kills": {
                  "yesterday": 136,
                  "last_week": 893,
                  "total": 684350
                },
                "victory_points": {
                  "yesterday": 15980,
                  "last_week": 102640,
                  "total": 52658260
                }
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "kills",
                "victory_points"
              ],
              "properties": {
                "faction_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The faction the given corporation is enlisted to fight for. Will not be included if corporation is not enlisted in faction warfare",
                  "title": "get_corporations_corporation_id_fw_stats_faction_id"
                },
                "enlisted_on": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The enlistment date of the given corporation into faction warfare. Will not be included if corporation is not enlisted in faction warfare",
                  "title": "get_corporations_corporation_id_fw_stats_enlisted_on"
                },
                "pilots": {
                  "type": "integer",
                  "format": "int32",
                  "description": "How many pilots the enlisted corporation has. Will not be included if corporation is not enlisted in faction warfare",
                  "title": "get_corporations_corporation_id_fw_stats_pilots"
                },
                "kills": {
                  "type": "object",
                  "description": "Summary of kills done by the given corporation against enemy factions",
                  "required": [
                    "yesterday",
                    "last_week",
                    "total"
                  ],
                  "properties": {
                    "yesterday": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Yesterday's total number of kills by members of the given corporation against enemy factions",
                      "title": "get_corporations_corporation_id_fw_stats_yesterday"
                    },
                    "last_week": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Last week's total number of kills by members of the given corporation against enemy factions",
                      "title": "get_corporations_corporation_id_fw_stats_last_week"
                    },
                    "total": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of kills by members of the given corporation against enemy factions since the corporation enlisted",
                      "title": "get_corporations_corporation_id_fw_stats_total"
                    }
                  },
                  "title": "get_corporations_corporation_id_fw_stats_kills"
                },
                "victory_points": {
                  "type": "object",
                  "description": "Summary of victory points gained by the given corporation for the enlisted faction",
                  "required": [
                    "yesterday",
                    "last_week",
                    "total"
                  ],
                  "properties": {
                    "yesterday": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Yesterday's victory points gained by members of the given corporation",
                      "title": "get_corporations_corporation_id_fw_stats_yesterday"
                    },
                    "last_week": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Last week's victory points gained by members of the given corporation",
                      "title": "get_corporations_corporation_id_fw_stats_last_week"
                    },
                    "total": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total victory points gained since the given corporation enlisted",
                      "title": "get_corporations_corporation_id_fw_stats_total"
                    }
                  },
                  "title": "get_corporations_corporation_id_fw_stats_victory_points"
                }
              },
              "title": "get_corporations_corporation_id_fw_stats_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [],
        "security": [
          {
            "evesso": [
              "esi-corporations.read_fw_stats.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_fw_stats",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/fw/stats/": {
      "get": {
        "summary": "Overview of a character involved in faction warfare",
        "description": "Statistical overview of a character involved in faction warfare\n\n---\nAlternate route: `/dev/characters/{character_id}/fw/stats/`\n\nAlternate route: `/legacy/characters/{character_id}/fw/stats/`\n\nAlternate route: `/v1/characters/{character_id}/fw/stats/`\n\n---\nThis route expires daily at 11:05",
        "tags": [
          "Faction Warfare"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Faction warfare statistics for a given character",
            "examples": {
              "application/json": {
                "faction_id": 500001,
                "enlisted_on": "2017-10-17T00:00:00Z",
                "kills": {
                  "yesterday": 136,
                  "last_week": 893,
                  "total": 684350
                },
                "victory_points": {
                  "yesterday": 15980,
                  "last_week": 102640,
                  "total": 52658260
                }
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "kills",
                "victory_points"
              ],
              "properties": {
                "faction_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The faction the given character is enlisted to fight for. Will not be included if character is not enlisted in faction warfare",
                  "title": "get_characters_character_id_fw_stats_faction_id"
                },
                "enlisted_on": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The enlistment date of the given character into faction warfare. Will not be included if character is not enlisted in faction warfare",
                  "title": "get_characters_character_id_fw_stats_enlisted_on"
                },
                "current_rank": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The given character's current faction rank",
                  "minimum": 0,
                  "maximum": 9,
                  "title": "get_characters_character_id_fw_stats_current_rank"
                },
                "highest_rank": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The given character's highest faction rank achieved",
                  "minimum": 0,
                  "maximum": 9,
                  "title": "get_characters_character_id_fw_stats_highest_rank"
                },
                "kills": {
                  "type": "object",
                  "description": "Summary of kills done by the given character against enemy factions",
                  "required": [
                    "yesterday",
                    "last_week",
                    "total"
                  ],
                  "properties": {
                    "yesterday": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Yesterday's total number of kills by a given character against enemy factions",
                      "title": "get_characters_character_id_fw_stats_yesterday"
                    },
                    "last_week": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Last week's total number of kills by a given character against enemy factions",
                      "title": "get_characters_character_id_fw_stats_last_week"
                    },
                    "total": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of kills by a given character against enemy factions since the character enlisted",
                      "title": "get_characters_character_id_fw_stats_total"
                    }
                  },
                  "title": "get_characters_character_id_fw_stats_kills"
                },
                "victory_points": {
                  "type": "object",
                  "description": "Summary of victory points gained by the given character for the enlisted faction",
                  "required": [
                    "yesterday",
                    "last_week",
                    "total"
                  ],
                  "properties": {
                    "yesterday": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Yesterday's victory points gained by the given character",
                      "title": "get_characters_character_id_fw_stats_yesterday"
                    },
                    "last_week": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Last week's victory points gained by the given character",
                      "title": "get_characters_character_id_fw_stats_last_week"
                    },
                    "total": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total victory points gained since the given character enlisted",
                      "title": "get_characters_character_id_fw_stats_total"
                    }
                  },
                  "title": "get_characters_character_id_fw_stats_victory_points"
                }
              },
              "title": "get_characters_character_id_fw_stats_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_fw_stats.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_fw_stats",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/fittings/{fitting_id}/": {
      "delete": {
        "description": "Delete a fitting from a character\n\n---\nAlternate route: `/dev/characters/{character_id}/fittings/{fitting_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/fittings/{fitting_id}/`\n\nAlternate route: `/v1/characters/{character_id}/fittings/{fitting_id}/`\n",
        "summary": "Delete fitting",
        "tags": [
          "Fittings"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fitting_id",
            "in": "path",
            "description": "ID for a fitting of this character",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Fitting deleted"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fittings.write_fittings.v1"
            ]
          }
        ],
        "operationId": "delete_characters_character_id_fittings_fitting_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/fittings/": {
      "get": {
        "description": "Return fittings of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/fittings/`\n\nAlternate route: `/legacy/characters/{character_id}/fittings/`\n\nAlternate route: `/v1/characters/{character_id}/fittings/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get fittings",
        "tags": [
          "Fittings"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of fittings",
            "examples": {
              "application/json": [
                {
                  "fitting_id": 1,
                  "name": "Best Vindicator",
                  "description": "Awesome Vindi fitting",
                  "ship_type_id": 123,
                  "items": [
                    {
                      "type_id": 1234,
                      "flag": 12,
                      "quantity": 1
                    }
                  ]
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 250,
              "items": {
                "type": "object",
                "required": [
                  "fitting_id",
                  "name",
                  "description",
                  "ship_type_id",
                  "items"
                ],
                "properties": {
                  "fitting_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_fittings_fitting_id",
                    "description": "fitting_id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "get_characters_character_id_fittings_name",
                    "description": "name string"
                  },
                  "description": {
                    "type": "string",
                    "title": "get_characters_character_id_fittings_description",
                    "description": "description string"
                  },
                  "ship_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_fittings_ship_type_id",
                    "description": "ship_type_id integer"
                  },
                  "items": {
                    "type": "array",
                    "maxItems": 255,
                    "items": {
                      "type": "object",
                      "required": [
                        "type_id",
                        "flag",
                        "quantity"
                      ],
                      "properties": {
                        "type_id": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_characters_character_id_fittings_type_id",
                          "description": "type_id integer"
                        },
                        "flag": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_characters_character_id_fittings_flag",
                          "description": "flag integer"
                        },
                        "quantity": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_characters_character_id_fittings_quantity",
                          "description": "quantity integer"
                        }
                      },
                      "title": "get_characters_character_id_fittings_item",
                      "description": "item object"
                    },
                    "title": "get_characters_character_id_fittings_items",
                    "description": "items array"
                  }
                },
                "title": "get_characters_character_id_fittings_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_fittings_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fittings.read_fittings.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_fittings",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "post": {
        "description": "Save a new fitting for a character\n\n---\nAlternate route: `/dev/characters/{character_id}/fittings/`\n\nAlternate route: `/legacy/characters/{character_id}/fittings/`\n\nAlternate route: `/v1/characters/{character_id}/fittings/`\n",
        "summary": "Create fitting",
        "tags": [
          "Fittings"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fitting",
            "in": "body",
            "required": true,
            "description": "Details about the new fitting",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "description",
                "ship_type_id",
                "items"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 50,
                  "title": "post_characters_character_id_fittings_name",
                  "description": "name string"
                },
                "description": {
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 500,
                  "title": "post_characters_character_id_fittings_description",
                  "description": "description string"
                },
                "ship_type_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "post_characters_character_id_fittings_ship_type_id",
                  "description": "ship_type_id integer"
                },
                "items": {
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 255,
                  "items": {
                    "type": "object",
                    "required": [
                      "type_id",
                      "flag",
                      "quantity"
                    ],
                    "properties": {
                      "type_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_characters_character_id_fittings_type_id",
                        "description": "type_id integer"
                      },
                      "flag": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_characters_character_id_fittings_flag",
                        "description": "flag integer"
                      },
                      "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_characters_character_id_fittings_quantity",
                        "description": "quantity integer"
                      }
                    },
                    "title": "post_characters_character_id_fittings_item",
                    "description": "item object"
                  },
                  "title": "post_characters_character_id_fittings_items",
                  "description": "items array"
                }
              },
              "title": "post_characters_character_id_fittings_fitting",
              "description": "fitting object"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "201": {
            "description": "A list of fittings",
            "examples": {
              "application/json": {
                "fitting_id": 2
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "fitting_id"
              ],
              "properties": {
                "fitting_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "post_characters_character_id_fittings_fitting_id",
                  "description": "fitting_id integer"
                }
              },
              "title": "post_characters_character_id_fittings_created",
              "description": "201 created object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fittings.write_fittings.v1"
            ]
          }
        ],
        "operationId": "post_characters_character_id_fittings",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fleets/{fleet_id}/": {
      "get": {
        "description": "Return details about a fleet\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/`\n\n---\nThis route is cached for up to 5 seconds",
        "summary": "Get fleet information",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Details about a fleet",
            "examples": {
              "application/json": {
                "motd": "This is an <b>awesome</b> fleet!",
                "is_free_move": false,
                "is_registered": false,
                "is_voice_enabled": false
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "motd",
                "is_free_move",
                "is_registered",
                "is_voice_enabled"
              ],
              "properties": {
                "motd": {
                  "type": "string",
                  "description": "Fleet MOTD in CCP flavoured HTML",
                  "title": "get_fleets_fleet_id_motd"
                },
                "is_free_move": {
                  "type": "boolean",
                  "description": "Is free-move enabled",
                  "title": "get_fleets_fleet_id_is_free_move"
                },
                "is_registered": {
                  "type": "boolean",
                  "description": "Does the fleet have an active fleet advertisement",
                  "title": "get_fleets_fleet_id_is_registered"
                },
                "is_voice_enabled": {
                  "type": "boolean",
                  "description": "Is EVE Voice enabled",
                  "title": "get_fleets_fleet_id_is_voice_enabled"
                }
              },
              "title": "get_fleets_fleet_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "get_fleets_fleet_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_fleets_fleet_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.read_fleet.v1"
            ]
          }
        ],
        "operationId": "get_fleets_fleet_id",
        "x-cached-seconds": 5,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "put": {
        "description": "Update settings about a fleet\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/`\n",
        "summary": "Update fleet",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "new_settings",
            "in": "body",
            "description": "What to update for this fleet",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "motd": {
                  "type": "string",
                  "description": "New fleet MOTD in CCP flavoured HTML",
                  "title": "put_fleets_fleet_id_motd"
                },
                "is_free_move": {
                  "type": "boolean",
                  "description": "Should free-move be enabled in the fleet",
                  "title": "put_fleets_fleet_id_is_free_move"
                }
              },
              "title": "put_fleets_fleet_id_new_settings",
              "description": "new_settings object"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Fleet updated"
          },
          "400": {
            "description": "Invalid request body",
            "schema": {
              "type": "object",
              "title": "put_fleets_fleet_id_bad_request",
              "description": "Bad request",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Bad request message",
                  "title": "put_fleets_fleet_id_400_bad_request"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Bad request message"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "put_fleets_fleet_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "put_fleets_fleet_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.write_fleet.v1"
            ]
          }
        ],
        "operationId": "put_fleets_fleet_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/fleet/": {
      "get": {
        "description": "Return the fleet ID the character is in, if any.\n\n---\nAlternate route: `/dev/characters/{character_id}/fleet/`\n\nAlternate route: `/legacy/characters/{character_id}/fleet/`\n\nAlternate route: `/v1/characters/{character_id}/fleet/`\n\n---\nThis route is cached for up to 60 seconds",
        "summary": "Get character fleet info",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Details about the character's fleet",
            "examples": {
              "application/json": {
                "fleet_id": 1234567890,
                "wing_id": -1,
                "squad_id": -1,
                "role": "fleet_commander"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "fleet_id",
                "wing_id",
                "squad_id",
                "role"
              ],
              "properties": {
                "fleet_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The character's current fleet ID",
                  "title": "get_characters_character_id_fleet_fleet_id"
                },
                "wing_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID of the wing the member is in. If not applicable, will be set to -1",
                  "title": "get_characters_character_id_fleet_wing_id"
                },
                "squad_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID of the squad the member is in. If not applicable, will be set to -1",
                  "title": "get_characters_character_id_fleet_squad_id"
                },
                "role": {
                  "type": "string",
                  "description": "Member\\u2019s role in fleet",
                  "enum": [
                    "fleet_commander",
                    "squad_commander",
                    "squad_member",
                    "wing_commander"
                  ],
                  "title": "get_characters_character_id_fleet_role"
                }
              },
              "title": "get_characters_character_id_fleet_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The character is not in a fleet",
            "schema": {
              "type": "object",
              "title": "get_characters_character_id_fleet_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_characters_character_id_fleet_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.read_fleet.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_fleet",
        "x-cached-seconds": 60,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fleets/{fleet_id}/members/": {
      "get": {
        "description": "Return information about fleet members\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/members/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/members/`\n\nAlternate route: `/v1/fleets/{fleet_id}/members/`\n\n---\nThis route is cached for up to 5 seconds",
        "summary": "Get fleet members",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of fleet members",
            "examples": {
              "application/json": [
                {
                  "character_id": 93265215,
                  "ship_type_id": 33328,
                  "wing_id": 2073711261968,
                  "squad_id": 3129411261968,
                  "role": "squad_commander",
                  "role_name": "Squad Commander (Boss)",
                  "join_time": "2016-04-29T12:34:56Z",
                  "takes_fleet_warp": true,
                  "solar_system_id": 30003729,
                  "station_id": 61000180
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 256,
              "items": {
                "type": "object",
                "required": [
                  "character_id",
                  "ship_type_id",
                  "wing_id",
                  "squad_id",
                  "role",
                  "role_name",
                  "join_time",
                  "takes_fleet_warp",
                  "solar_system_id"
                ],
                "properties": {
                  "character_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fleets_fleet_id_members_character_id",
                    "description": "character_id integer"
                  },
                  "ship_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_fleets_fleet_id_members_ship_type_id",
                    "description": "ship_type_id integer"
                  },
                  "wing_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the wing the member is in. If not applicable, will be set to -1",
                    "title": "get_fleets_fleet_id_members_wing_id"
                  },
                  "squad_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the squad the member is in. If not applicable, will be set to -1",
                    "title": "get_fleets_fleet_id_members_squad_id"
                  },
                  "role": {
                    "type": "string",
                    "description": "Member\\u2019s role in fleet",
                    "enum": [
                      "fleet_commander",
                      "wing_commander",
                      "squad_commander",
                      "squad_member"
                    ],
                    "title": "get_fleets_fleet_id_members_role"
                  },
                  "role_name": {
                    "type": "string",
                    "description": "Localized role names",
                    "title": "get_fleets_fleet_id_members_role_name"
                  },
                  "join_time": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_fleets_fleet_id_members_join_time",
                    "description": "join_time string"
                  },
                  "takes_fleet_warp": {
                    "type": "boolean",
                    "description": "Whether the member take fleet warps",
                    "title": "get_fleets_fleet_id_members_takes_fleet_warp"
                  },
                  "solar_system_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Solar system the member is located in",
                    "title": "get_fleets_fleet_id_members_solar_system_id"
                  },
                  "station_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Station in which the member is docked in, if applicable",
                    "title": "get_fleets_fleet_id_members_station_id"
                  }
                },
                "title": "get_fleets_fleet_id_members_200_ok",
                "description": "200 ok object"
              },
              "title": "get_fleets_fleet_id_members_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "get_fleets_fleet_id_members_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_fleets_fleet_id_members_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.read_fleet.v1"
            ]
          }
        ],
        "operationId": "get_fleets_fleet_id_members",
        "x-cached-seconds": 5,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "post": {
        "description": "Invite a character into the fleet. If a character has a CSPA charge set it is not possible to invite them to the fleet using ESI\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/members/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/members/`\n\nAlternate route: `/v1/fleets/{fleet_id}/members/`\n",
        "summary": "Create fleet invitation",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "invitation",
            "in": "body",
            "description": "Details of the invitation",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "character_id",
                "role"
              ],
              "properties": {
                "character_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The character you want to invite",
                  "title": "post_fleets_fleet_id_members_character_id"
                },
                "role": {
                  "type": "string",
                  "description": "If a character is invited with the `fleet_commander` role, neither `wing_id` or `squad_id` should be specified. If a character is invited with the `wing_commander` role, only `wing_id` should be specified. If a character is invited with the `squad_commander` role, both `wing_id` and `squad_id` should be specified. If a character is invited with the `squad_member` role, `wing_id` and `squad_id` should either both be specified or not specified at all. If they aren\\u2019t specified, the invited character will join any squad with available positions.",
                  "enum": [
                    "fleet_commander",
                    "wing_commander",
                    "squad_commander",
                    "squad_member"
                  ],
                  "title": "post_fleets_fleet_id_members_role"
                },
                "wing_id": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "title": "post_fleets_fleet_id_members_wing_id",
                  "description": "wing_id integer"
                },
                "squad_id": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "title": "post_fleets_fleet_id_members_squad_id",
                  "description": "squad_id integer"
                }
              },
              "title": "post_fleets_fleet_id_members_invitation",
              "description": "invitation object"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Fleet invitation sent"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "post_fleets_fleet_id_members_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "post_fleets_fleet_id_members_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "422": {
            "description": "Errors in invitation",
            "examples": {
              "application/json": {
                "error": "missing wing_id"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "error message",
                  "title": "post_fleets_fleet_id_members_error"
                }
              },
              "title": "post_fleets_fleet_id_members_unprocessable_entity",
              "description": "422 unprocessable entity object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.write_fleet.v1"
            ]
          }
        ],
        "operationId": "post_fleets_fleet_id_members",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fleets/{fleet_id}/members/{member_id}/": {
      "delete": {
        "description": "Kick a fleet member\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`\n",
        "summary": "Kick fleet member",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "member_id",
            "in": "path",
            "description": "The character ID of a member in this fleet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Fleet member kicked"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "delete_fleets_fleet_id_members_member_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "delete_fleets_fleet_id_members_member_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.write_fleet.v1"
            ]
          }
        ],
        "operationId": "delete_fleets_fleet_id_members_member_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "put": {
        "description": "Move a fleet member around\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/members/{member_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`\n",
        "summary": "Move fleet member",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "member_id",
            "in": "path",
            "description": "The character ID of a member in this fleet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "movement",
            "in": "body",
            "description": "Details of the invitation",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "role"
              ],
              "properties": {
                "role": {
                  "type": "string",
                  "description": "If a character is moved to the `fleet_commander` role, neither `wing_id` or `squad_id` should be specified. If a character is moved to the `wing_commander` role, only `wing_id` should be specified. If a character is moved to the `squad_commander` role, both `wing_id` and `squad_id` should be specified. If a character is moved to the `squad_member` role, both `wing_id` and `squad_id` should be specified.",
                  "enum": [
                    "fleet_commander",
                    "wing_commander",
                    "squad_commander",
                    "squad_member"
                  ],
                  "title": "put_fleets_fleet_id_members_member_id_role"
                },
                "wing_id": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "title": "put_fleets_fleet_id_members_member_id_wing_id",
                  "description": "wing_id integer"
                },
                "squad_id": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "title": "put_fleets_fleet_id_members_member_id_squad_id",
                  "description": "squad_id integer"
                }
              },
              "title": "put_fleets_fleet_id_members_member_id_movement",
              "description": "movement object"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Fleet invitation sent"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "put_fleets_fleet_id_members_member_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "put_fleets_fleet_id_members_member_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "422": {
            "description": "Errors in invitation",
            "examples": {
              "application/json": {
                "error": "missing wing_id"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "error message",
                  "title": "put_fleets_fleet_id_members_member_id_error"
                }
              },
              "title": "put_fleets_fleet_id_members_member_id_unprocessable_entity",
              "description": "422 unprocessable entity object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.write_fleet.v1"
            ]
          }
        ],
        "operationId": "put_fleets_fleet_id_members_member_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fleets/{fleet_id}/wings/": {
      "get": {
        "description": "Return information about wings in a fleet\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/wings/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/wings/`\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/`\n\n---\nThis route is cached for up to 5 seconds",
        "summary": "Get fleet wings",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of fleet wings",
            "examples": {
              "application/json": [
                {
                  "name": "Wing 1",
                  "id": 2073711261968,
                  "squads": [
                    {
                      "name": "Squad 1",
                      "id": 3129411261968
                    }
                  ]
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 25,
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "id",
                  "squads"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "get_fleets_fleet_id_wings_name",
                    "description": "name string"
                  },
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_fleets_fleet_id_wings_id",
                    "description": "id integer"
                  },
                  "squads": {
                    "type": "array",
                    "maxItems": 25,
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "id"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "get_fleets_fleet_id_wings_name",
                          "description": "name string"
                        },
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "title": "get_fleets_fleet_id_wings_id",
                          "description": "id integer"
                        }
                      },
                      "title": "get_fleets_fleet_id_wings_squad",
                      "description": "squad object"
                    },
                    "title": "get_fleets_fleet_id_wings_squads",
                    "description": "squads array"
                  }
                },
                "title": "get_fleets_fleet_id_wings_200_ok",
                "description": "200 ok object"
              },
              "title": "get_fleets_fleet_id_wings_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "get_fleets_fleet_id_wings_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_fleets_fleet_id_wings_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.read_fleet.v1"
            ]
          }
        ],
        "operationId": "get_fleets_fleet_id_wings",
        "x-cached-seconds": 5,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "post": {
        "description": "Create a new wing in a fleet\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/wings/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/wings/`\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/`\n",
        "summary": "Create fleet wing",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "201": {
            "description": "Wing created",
            "examples": {
              "application/json": {
                "wing_id": 123
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "wing_id"
              ],
              "properties": {
                "wing_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The wing_id of the newly created wing",
                  "title": "post_fleets_fleet_id_wings_wing_id"
                }
              },
              "title": "post_fleets_fleet_id_wings_created",
              "description": "201 created object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "post_fleets_fleet_id_wings_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "post_fleets_fleet_id_wings_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.write_fleet.v1"
            ]
          }
        ],
        "operationId": "post_fleets_fleet_id_wings",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fleets/{fleet_id}/wings/{wing_id}/": {
      "delete": {
        "description": "Delete a fleet wing, only empty wings can be deleted. The wing may contain squads, but the squads must be empty\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`\n",
        "summary": "Delete fleet wing",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "name": "wing_id",
            "in": "path",
            "description": "The wing to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Wing deleted"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "delete_fleets_fleet_id_wings_wing_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "delete_fleets_fleet_id_wings_wing_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.write_fleet.v1"
            ]
          }
        ],
        "operationId": "delete_fleets_fleet_id_wings_wing_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "put": {
        "description": "Rename a fleet wing\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`\n",
        "summary": "Rename fleet wing",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "naming",
            "in": "body",
            "description": "New name of the wing",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 10,
                  "title": "put_fleets_fleet_id_wings_wing_id_name",
                  "description": "name string"
                }
              },
              "title": "put_fleets_fleet_id_wings_wing_id_naming",
              "description": "naming object"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "name": "wing_id",
            "in": "path",
            "description": "The wing to rename",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Wing renamed"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "put_fleets_fleet_id_wings_wing_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "put_fleets_fleet_id_wings_wing_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.write_fleet.v1"
            ]
          }
        ],
        "operationId": "put_fleets_fleet_id_wings_wing_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fleets/{fleet_id}/wings/{wing_id}/squads/": {
      "post": {
        "description": "Create a new squad in a fleet\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/squads/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/squads/`\n\nAlternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/squads/`\n",
        "summary": "Create fleet squad",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "name": "wing_id",
            "in": "path",
            "description": "The wing_id to create squad in",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "201": {
            "description": "Squad created",
            "examples": {
              "application/json": {
                "squad_id": 123
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "squad_id"
              ],
              "properties": {
                "squad_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The squad_id of the newly created squad",
                  "title": "post_fleets_fleet_id_wings_wing_id_squads_squad_id"
                }
              },
              "title": "post_fleets_fleet_id_wings_wing_id_squads_created",
              "description": "201 created object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "post_fleets_fleet_id_wings_wing_id_squads_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "post_fleets_fleet_id_wings_wing_id_squads_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.write_fleet.v1"
            ]
          }
        ],
        "operationId": "post_fleets_fleet_id_wings_wing_id_squads",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/fleets/{fleet_id}/squads/{squad_id}/": {
      "delete": {
        "description": "Delete a fleet squad, only empty squads can be deleted\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`\n",
        "summary": "Delete fleet squad",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "squad_id",
            "in": "path",
            "description": "The squad to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Squad deleted"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "delete_fleets_fleet_id_squads_squad_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "delete_fleets_fleet_id_squads_squad_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.write_fleet.v1"
            ]
          }
        ],
        "operationId": "delete_fleets_fleet_id_squads_squad_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "put": {
        "description": "Rename a fleet squad\n\n---\nAlternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/legacy/fleets/{fleet_id}/squads/{squad_id}/`\n\nAlternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`\n",
        "summary": "Rename fleet squad",
        "tags": [
          "Fleets"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "fleet_id",
            "in": "path",
            "description": "ID for a fleet",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "naming",
            "in": "body",
            "description": "New name of the squad",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 10,
                  "title": "put_fleets_fleet_id_squads_squad_id_name",
                  "description": "name string"
                }
              },
              "title": "put_fleets_fleet_id_squads_squad_id_naming",
              "description": "naming object"
            }
          },
          {
            "name": "squad_id",
            "in": "path",
            "description": "The squad to rename",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Squad renamed"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "The fleet does not exist or you don't have access to it",
            "schema": {
              "type": "object",
              "title": "put_fleets_fleet_id_squads_squad_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "put_fleets_fleet_id_squads_squad_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-fleets.write_fleet.v1"
            ]
          }
        ],
        "operationId": "put_fleets_fleet_id_squads_squad_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/incursions/": {
      "get": {
        "description": "Return a list of current incursions\n\n---\nAlternate route: `/dev/incursions/`\n\nAlternate route: `/legacy/incursions/`\n\nAlternate route: `/v1/incursions/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "List incursions",
        "tags": [
          "Incursions"
        ],
        "responses": {
          "200": {
            "description": "A list of incursions",
            "examples": {
              "application/json": [
                {
                  "type": "Incursion",
                  "state": "mobilizing",
                  "influence": 0.9,
                  "has_boss": true,
                  "faction_id": 500019,
                  "constellation_id": 20000607,
                  "staging_solar_system_id": 30004154,
                  "infested_solar_systems": [
                    30004148,
                    30004149,
                    30004150,
                    30004151,
                    30004152,
                    30004153,
                    30004154
                  ]
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "state",
                  "influence",
                  "has_boss",
                  "faction_id",
                  "constellation_id",
                  "staging_solar_system_id",
                  "infested_solar_systems"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of this incursion",
                    "title": "get_incursions_type"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "withdrawing",
                      "mobilizing",
                      "established"
                    ],
                    "description": "The state of this incursion",
                    "title": "get_incursions_state"
                  },
                  "influence": {
                    "type": "number",
                    "format": "float",
                    "description": "Influence of this incursion as a float from 0 to 1",
                    "title": "get_incursions_influence"
                  },
                  "has_boss": {
                    "type": "boolean",
                    "description": "Whether the final encounter has boss or not",
                    "title": "get_incursions_has_boss"
                  },
                  "faction_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The attacking faction's id",
                    "title": "get_incursions_faction_id"
                  },
                  "constellation_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The constellation id in which this incursion takes place",
                    "title": "get_incursions_constellation_id"
                  },
                  "staging_solar_system_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Staging solar system for this incursion",
                    "title": "get_incursions_staging_solar_system_id"
                  },
                  "infested_solar_systems": {
                    "type": "array",
                    "description": "A list of infested solar system ids that are a part of this incursion",
                    "maxItems": 100,
                    "items": {
                      "type": "integer",
                      "format": "int32",
                      "title": "get_incursions_infested_solar_system",
                      "description": "infested_solar_system integer"
                    },
                    "title": "get_incursions_infested_solar_systems"
                  }
                },
                "title": "get_incursions_200_ok",
                "description": "200 ok object"
              },
              "title": "get_incursions_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_incursions",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/industry/facilities/": {
      "get": {
        "description": "Return a list of industry facilities\n\n---\nAlternate route: `/dev/industry/facilities/`\n\nAlternate route: `/legacy/industry/facilities/`\n\nAlternate route: `/v1/industry/facilities/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List industry facilities",
        "tags": [
          "Industry"
        ],
        "responses": {
          "200": {
            "description": "A list of facilities",
            "examples": {
              "application/json": [
                {
                  "facility_id": 60012544,
                  "tax": 0.1,
                  "owner_id": 1000126,
                  "type_id": 2502,
                  "solar_system_id": 30000032,
                  "region_id": 10000001
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "facility_id",
                  "owner_id",
                  "type_id",
                  "solar_system_id",
                  "region_id"
                ],
                "properties": {
                  "facility_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the facility",
                    "title": "get_industry_facilities_facility_id"
                  },
                  "tax": {
                    "type": "number",
                    "format": "float",
                    "description": "Tax imposed by the facility",
                    "title": "get_industry_facilities_tax"
                  },
                  "owner_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Owner of the facility",
                    "title": "get_industry_facilities_owner_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Type ID of the facility",
                    "title": "get_industry_facilities_type_id"
                  },
                  "solar_system_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Solar system ID where the facility is",
                    "title": "get_industry_facilities_solar_system_id"
                  },
                  "region_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Region ID where the facility is",
                    "title": "get_industry_facilities_region_id"
                  }
                },
                "title": "get_industry_facilities_200_ok",
                "description": "200 ok object"
              },
              "title": "get_industry_facilities_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_industry_facilities",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/industry/systems/": {
      "get": {
        "description": "Return cost indices for solar systems\n\n---\nAlternate route: `/dev/industry/systems/`\n\nAlternate route: `/legacy/industry/systems/`\n\nAlternate route: `/v1/industry/systems/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List solar system cost indices",
        "tags": [
          "Industry"
        ],
        "responses": {
          "200": {
            "description": "A list of cost indicies",
            "examples": {
              "application/json": [
                {
                  "solar_system_id": 30011392,
                  "cost_indices": [
                    {
                      "activity": "invention",
                      "cost_index": 0.0048
                    }
                  ]
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "solar_system_id",
                  "cost_indices"
                ],
                "properties": {
                  "solar_system_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_industry_systems_solar_system_id",
                    "description": "solar_system_id integer"
                  },
                  "cost_indices": {
                    "type": "array",
                    "maxItems": 10,
                    "items": {
                      "type": "object",
                      "required": [
                        "activity",
                        "cost_index"
                      ],
                      "properties": {
                        "activity": {
                          "type": "string",
                          "enum": [
                            "copying",
                            "duplicating",
                            "invention",
                            "manufacturing",
                            "none",
                            "reaction",
                            "researching_material_efficiency",
                            "researching_technology",
                            "researching_time_efficiency",
                            "reverse_engineering"
                          ],
                          "title": "get_industry_systems_activity",
                          "description": "activity string"
                        },
                        "cost_index": {
                          "type": "number",
                          "format": "float",
                          "title": "get_industry_systems_cost_index",
                          "description": "cost_index number"
                        }
                      },
                      "title": "get_industry_systems_cost_indice",
                      "description": "cost_indice object"
                    },
                    "title": "get_industry_systems_cost_indices",
                    "description": "cost_indices array"
                  }
                },
                "title": "get_industry_systems_200_ok",
                "description": "200 ok object"
              },
              "title": "get_industry_systems_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_industry_systems",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/industry/jobs/": {
      "get": {
        "summary": "List character industry jobs",
        "description": "List industry jobs placed by a character\n\n---\nAlternate route: `/dev/characters/{character_id}/industry/jobs/`\n\nAlternate route: `/legacy/characters/{character_id}/industry/jobs/`\n\nAlternate route: `/v1/characters/{character_id}/industry/jobs/`\n\n---\nThis route is cached for up to 300 seconds",
        "tags": [
          "Industry"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "include_completed",
            "in": "query",
            "description": "Whether retrieve completed character industry jobs as well",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Industry jobs placed by a character",
            "examples": {
              "application/json": [
                {
                  "job_id": 229136101,
                  "installer_id": 498338451,
                  "facility_id": 60006382,
                  "station_id": 60006382,
                  "activity_id": 1,
                  "blueprint_id": 1015116533326,
                  "blueprint_type_id": 2047,
                  "blueprint_location_id": 60006382,
                  "output_location_id": 60006382,
                  "runs": 1,
                  "cost": 118.01,
                  "licensed_runs": 200,
                  "status": "active",
                  "duration": 548,
                  "start_date": "2014-07-19T15:47:06Z",
                  "end_date": "2014-07-19T15:56:14Z"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 2000,
              "items": {
                "type": "object",
                "required": [
                  "job_id",
                  "installer_id",
                  "facility_id",
                  "station_id",
                  "activity_id",
                  "blueprint_id",
                  "blueprint_type_id",
                  "blueprint_location_id",
                  "output_location_id",
                  "runs",
                  "status",
                  "duration",
                  "start_date",
                  "end_date"
                ],
                "properties": {
                  "job_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique job ID",
                    "title": "get_characters_character_id_industry_jobs_job_id"
                  },
                  "installer_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the character which installed this job",
                    "title": "get_characters_character_id_industry_jobs_installer_id"
                  },
                  "facility_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the facility where this job is running",
                    "title": "get_characters_character_id_industry_jobs_facility_id"
                  },
                  "station_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the station where industry facility is located",
                    "title": "get_characters_character_id_industry_jobs_station_id"
                  },
                  "activity_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Job activity ID",
                    "title": "get_characters_character_id_industry_jobs_activity_id"
                  },
                  "blueprint_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_characters_character_id_industry_jobs_blueprint_id",
                    "description": "blueprint_id integer"
                  },
                  "blueprint_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_industry_jobs_blueprint_type_id",
                    "description": "blueprint_type_id integer"
                  },
                  "blueprint_location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Location ID of the location from which the blueprint was installed. Normally a station ID, but can also be an asset (e.g. container) or corporation facility",
                    "title": "get_characters_character_id_industry_jobs_blueprint_location_id"
                  },
                  "output_location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Location ID of the location to which the output of the job will be delivered. Normally a station ID, but can also be a corporation facility",
                    "title": "get_characters_character_id_industry_jobs_output_location_id"
                  },
                  "runs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of runs for a manufacturing job, or number of copies to make for a blueprint copy",
                    "title": "get_characters_character_id_industry_jobs_runs"
                  },
                  "cost": {
                    "type": "number",
                    "format": "double",
                    "description": "The sume of job installation fee and industry facility tax",
                    "title": "get_characters_character_id_industry_jobs_cost"
                  },
                  "licensed_runs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of runs blueprint is licensed for",
                    "title": "get_characters_character_id_industry_jobs_licensed_runs"
                  },
                  "probability": {
                    "type": "number",
                    "format": "float",
                    "description": "Chance of success for invention",
                    "title": "get_characters_character_id_industry_jobs_probability"
                  },
                  "product_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Type ID of product (manufactured, copied or invented)",
                    "title": "get_characters_character_id_industry_jobs_product_type_id"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "cancelled",
                      "delivered",
                      "paused",
                      "ready",
                      "reverted"
                    ],
                    "title": "get_characters_character_id_industry_jobs_status",
                    "description": "status string"
                  },
                  "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Job duration in seconds",
                    "title": "get_characters_character_id_industry_jobs_duration"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this job started",
                    "title": "get_characters_character_id_industry_jobs_start_date"
                  },
                  "end_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this job finished",
                    "title": "get_characters_character_id_industry_jobs_end_date"
                  },
                  "pause_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this job was paused (i.e. time when the facility where this job was installed went offline)",
                    "title": "get_characters_character_id_industry_jobs_pause_date"
                  },
                  "completed_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this job was completed",
                    "title": "get_characters_character_id_industry_jobs_completed_date"
                  },
                  "completed_character_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the character which completed this job",
                    "title": "get_characters_character_id_industry_jobs_completed_character_id"
                  },
                  "successful_runs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of successful runs for this job. Equal to runs unless this is an invention job",
                    "title": "get_characters_character_id_industry_jobs_successful_runs"
                  }
                },
                "title": "get_characters_character_id_industry_jobs_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_industry_jobs_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-industry.read_character_jobs.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_industry_jobs",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/mining/": {
      "get": {
        "summary": "Character mining ledger",
        "description": "Paginated record of all mining done by a character for the past 30 days\n\n\n---\nAlternate route: `/dev/characters/{character_id}/mining/`\n\nAlternate route: `/legacy/characters/{character_id}/mining/`\n\nAlternate route: `/v1/characters/{character_id}/mining/`\n\n---\nThis route is cached for up to 600 seconds",
        "tags": [
          "Industry"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Mining ledger of a character",
            "examples": {
              "application/json": [
                {
                  "date": "2017-09-19",
                  "solar_system_id": 30003707,
                  "type_id": 17471,
                  "quantity": 7004
                },
                {
                  "date": "2017-09-18",
                  "solar_system_id": 30003707,
                  "type_id": 17471,
                  "quantity": 5199
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "date",
                  "solar_system_id",
                  "type_id",
                  "quantity"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "title": "get_characters_character_id_mining_date",
                    "description": "date string"
                  },
                  "solar_system_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_mining_solar_system_id",
                    "description": "solar_system_id integer"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_mining_type_id",
                    "description": "type_id integer"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_characters_character_id_mining_quantity",
                    "description": "quantity integer"
                  }
                },
                "title": "get_characters_character_id_mining_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_mining_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-industry.read_character_mining.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_mining",
        "x-cached-seconds": 600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporation/{corporation_id}/mining/observers/": {
      "get": {
        "summary": "Corporation mining observers",
        "description": "Paginated list of all entities capable of observing and recording mining for a corporation\n\n\n---\nAlternate route: `/dev/corporation/{corporation_id}/mining/observers/`\n\nAlternate route: `/legacy/corporation/{corporation_id}/mining/observers/`\n\nAlternate route: `/v1/corporation/{corporation_id}/mining/observers/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant\n",
        "tags": [
          "Industry"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Observer list of a corporation",
            "examples": {
              "application/json": [
                {
                  "last_updated": "2017-09-19",
                  "observer_id": 1,
                  "observer_type": "structure"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "last_updated",
                  "observer_id",
                  "observer_type"
                ],
                "properties": {
                  "last_updated": {
                    "type": "string",
                    "format": "date",
                    "title": "get_corporation_corporation_id_mining_observers_last_updated",
                    "description": "last_updated string"
                  },
                  "observer_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The entity that was observing the asteroid field when it was mined.\n",
                    "title": "get_corporation_corporation_id_mining_observers_observer_id"
                  },
                  "observer_type": {
                    "description": "The category of the observing entity",
                    "type": "string",
                    "enum": [
                      "structure"
                    ],
                    "title": "get_corporation_corporation_id_mining_observers_observer_type"
                  }
                },
                "title": "get_corporation_corporation_id_mining_observers_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporation_corporation_id_mining_observers_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Accountant"
        ],
        "security": [
          {
            "evesso": [
              "esi-industry.read_corporation_mining.v1"
            ]
          }
        ],
        "operationId": "get_corporation_corporation_id_mining_observers",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporation/{corporation_id}/mining/observers/{observer_id}/": {
      "get": {
        "summary": "Observed corporation mining",
        "description": "Paginated record of all mining seen by an observer\n\n\n---\nAlternate route: `/dev/corporation/{corporation_id}/mining/observers/{observer_id}/`\n\nAlternate route: `/legacy/corporation/{corporation_id}/mining/observers/{observer_id}/`\n\nAlternate route: `/v1/corporation/{corporation_id}/mining/observers/{observer_id}/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant\n",
        "tags": [
          "Industry"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "observer_id",
            "in": "path",
            "description": "A mining observer id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Mining ledger of an observer",
            "examples": {
              "application/json": [
                {
                  "last_updated": "2017-09-19",
                  "character_id": 95465499,
                  "recorded_corporation_id": 109299958,
                  "type_id": 1230,
                  "quantity": 500
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "last_updated",
                  "character_id",
                  "recorded_corporation_id",
                  "type_id",
                  "quantity"
                ],
                "properties": {
                  "last_updated": {
                    "type": "string",
                    "format": "date",
                    "title": "get_corporation_corporation_id_mining_observers_observer_id_last_updated",
                    "description": "last_updated string"
                  },
                  "character_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The character that did the mining\n",
                    "title": "get_corporation_corporation_id_mining_observers_observer_id_character_id"
                  },
                  "recorded_corporation_id": {
                    "description": "The corporation id of the character at the time data was recorded.\n",
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporation_corporation_id_mining_observers_observer_id_recorded_corporation_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporation_corporation_id_mining_observers_observer_id_type_id",
                    "description": "type_id integer"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_corporation_corporation_id_mining_observers_observer_id_quantity",
                    "description": "quantity integer"
                  }
                },
                "title": "get_corporation_corporation_id_mining_observers_observer_id_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporation_corporation_id_mining_observers_observer_id_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Accountant"
        ],
        "security": [
          {
            "evesso": [
              "esi-industry.read_corporation_mining.v1"
            ]
          }
        ],
        "operationId": "get_corporation_corporation_id_mining_observers_observer_id",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/industry/jobs/": {
      "get": {
        "summary": "List corporation industry jobs",
        "description": "List industry jobs run by a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/industry/jobs/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/industry/jobs/`\n\nAlternate route: `/v1/corporations/{corporation_id}/industry/jobs/`\n\n---\nThis route is cached for up to 300 seconds\n\n---\nRequires one of the following EVE corporation role(s): FactoryManager\n",
        "tags": [
          "Industry"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "include_completed",
            "in": "query",
            "description": "Whether retrieve completed industry jobs as well",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of corporation industry jobs",
            "examples": {
              "application/json": [
                {
                  "job_id": 229136101,
                  "installer_id": 498338451,
                  "facility_id": 60006382,
                  "location_id": 60006382,
                  "activity_id": 1,
                  "blueprint_id": 1015116533326,
                  "blueprint_type_id": 2047,
                  "blueprint_location_id": 60006382,
                  "output_location_id": 60006382,
                  "runs": 1,
                  "cost": 118.01,
                  "licensed_runs": 200,
                  "status": "active",
                  "duration": 548,
                  "start_date": "2014-07-19T15:47:06Z",
                  "end_date": "2014-07-19T15:56:14Z"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "job_id",
                  "installer_id",
                  "facility_id",
                  "location_id",
                  "activity_id",
                  "blueprint_id",
                  "blueprint_type_id",
                  "blueprint_location_id",
                  "output_location_id",
                  "runs",
                  "status",
                  "duration",
                  "start_date",
                  "end_date"
                ],
                "properties": {
                  "job_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique job ID",
                    "title": "get_corporations_corporation_id_industry_jobs_job_id"
                  },
                  "installer_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the character which installed this job",
                    "title": "get_corporations_corporation_id_industry_jobs_installer_id"
                  },
                  "facility_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the facility where this job is running",
                    "title": "get_corporations_corporation_id_industry_jobs_facility_id"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the location for the industry facility",
                    "title": "get_corporations_corporation_id_industry_jobs_location_id"
                  },
                  "activity_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Job activity ID",
                    "title": "get_corporations_corporation_id_industry_jobs_activity_id"
                  },
                  "blueprint_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_corporations_corporation_id_industry_jobs_blueprint_id",
                    "description": "blueprint_id integer"
                  },
                  "blueprint_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_industry_jobs_blueprint_type_id",
                    "description": "blueprint_type_id integer"
                  },
                  "blueprint_location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Location ID of the location from which the blueprint was installed. Normally a station ID, but can also be an asset (e.g. container) or corporation facility",
                    "title": "get_corporations_corporation_id_industry_jobs_blueprint_location_id"
                  },
                  "output_location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Location ID of the location to which the output of the job will be delivered. Normally a station ID, but can also be a corporation facility",
                    "title": "get_corporations_corporation_id_industry_jobs_output_location_id"
                  },
                  "runs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of runs for a manufacturing job, or number of copies to make for a blueprint copy",
                    "title": "get_corporations_corporation_id_industry_jobs_runs"
                  },
                  "cost": {
                    "type": "number",
                    "format": "double",
                    "description": "The sume of job installation fee and industry facility tax",
                    "title": "get_corporations_corporation_id_industry_jobs_cost"
                  },
                  "licensed_runs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of runs blueprint is licensed for",
                    "title": "get_corporations_corporation_id_industry_jobs_licensed_runs"
                  },
                  "probability": {
                    "type": "number",
                    "format": "float",
                    "description": "Chance of success for invention",
                    "title": "get_corporations_corporation_id_industry_jobs_probability"
                  },
                  "product_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Type ID of product (manufactured, copied or invented)",
                    "title": "get_corporations_corporation_id_industry_jobs_product_type_id"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "cancelled",
                      "delivered",
                      "paused",
                      "ready",
                      "reverted"
                    ],
                    "title": "get_corporations_corporation_id_industry_jobs_status",
                    "description": "status string"
                  },
                  "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Job duration in seconds",
                    "title": "get_corporations_corporation_id_industry_jobs_duration"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this job started",
                    "title": "get_corporations_corporation_id_industry_jobs_start_date"
                  },
                  "end_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this job finished",
                    "title": "get_corporations_corporation_id_industry_jobs_end_date"
                  },
                  "pause_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this job was paused (i.e. time when the facility where this job was installed went offline)",
                    "title": "get_corporations_corporation_id_industry_jobs_pause_date"
                  },
                  "completed_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this job was completed",
                    "title": "get_corporations_corporation_id_industry_jobs_completed_date"
                  },
                  "completed_character_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the character which completed this job",
                    "title": "get_corporations_corporation_id_industry_jobs_completed_character_id"
                  },
                  "successful_runs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of successful runs for this job. Equal to runs unless this is an invention job",
                    "title": "get_corporations_corporation_id_industry_jobs_successful_runs"
                  }
                },
                "title": "get_corporations_corporation_id_industry_jobs_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_industry_jobs_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "FactoryManager"
        ],
        "security": [
          {
            "evesso": [
              "esi-industry.read_corporation_jobs.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_industry_jobs",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporation/{corporation_id}/mining/extractions/": {
      "get": {
        "summary": "Moon extraction timers",
        "description": "Extraction timers for all moon chunks being extracted by refineries belonging to a corporation.\n\n\n---\nAlternate route: `/dev/corporation/{corporation_id}/mining/extractions/`\n\nAlternate route: `/legacy/corporation/{corporation_id}/mining/extractions/`\n\nAlternate route: `/v1/corporation/{corporation_id}/mining/extractions/`\n\n---\nThis route is cached for up to 1800 seconds\n\n---\nRequires one of the following EVE corporation role(s): Structure_manager\n",
        "tags": [
          "Industry"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of chunk timers",
            "examples": {
              "application/json": [
                {
                  "structure_id": 1000000010579,
                  "moon_id": 40307229,
                  "extraction_start_time": "2017-10-11T10:37:04Z",
                  "chunk_arrival_time": "2017-10-17T11:00:59Z",
                  "natural_decay_time": "2017-10-17T14:00:59Z"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "structure_id",
                  "moon_id",
                  "extraction_start_time",
                  "chunk_arrival_time",
                  "natural_decay_time"
                ],
                "properties": {
                  "structure_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_corporation_corporation_id_mining_extractions_structure_id",
                    "description": "structure_id integer"
                  },
                  "moon_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporation_corporation_id_mining_extractions_moon_id",
                    "description": "moon_id integer"
                  },
                  "extraction_start_time": {
                    "description": "The time at which the current extraction was initiated.\n",
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporation_corporation_id_mining_extractions_extraction_start_time"
                  },
                  "chunk_arrival_time": {
                    "description": "The time at which the chunk being extracted will arrive and can be fractured by the moon mining drill.\n",
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporation_corporation_id_mining_extractions_chunk_arrival_time"
                  },
                  "natural_decay_time": {
                    "description": "The time at which the chunk being extracted will naturally fracture if it is not first fractured by the moon mining drill.\n",
                    "type": "string",
                    "format": "date-time",
                    "title": "get_corporation_corporation_id_mining_extractions_natural_decay_time"
                  }
                },
                "title": "get_corporation_corporation_id_mining_extractions_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporation_corporation_id_mining_extractions_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Structure_manager"
        ],
        "security": [
          {
            "evesso": [
              "esi-industry.read_corporation_mining.v1"
            ]
          }
        ],
        "operationId": "get_corporation_corporation_id_mining_extractions",
        "x-cached-seconds": 1800,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/insurance/prices/": {
      "get": {
        "description": "Return available insurance levels for all ship types\n\n---\nAlternate route: `/dev/insurance/prices/`\n\nAlternate route: `/legacy/insurance/prices/`\n\nAlternate route: `/v1/insurance/prices/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List insurance levels",
        "tags": [
          "Insurance"
        ],
        "responses": {
          "200": {
            "description": "A list of insurance levels for all ship types",
            "examples": {
              "application/json": [
                {
                  "type_id": 1,
                  "levels": [
                    {
                      "cost": 10.01,
                      "payout": 20.01,
                      "name": "Basic"
                    }
                  ]
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "type_id",
                  "levels"
                ],
                "properties": {
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_insurance_prices_type_id",
                    "description": "type_id integer"
                  },
                  "levels": {
                    "type": "array",
                    "description": "A list of a available insurance levels for this ship type",
                    "maxItems": 6,
                    "items": {
                      "type": "object",
                      "required": [
                        "cost",
                        "payout",
                        "name"
                      ],
                      "properties": {
                        "cost": {
                          "type": "number",
                          "format": "float",
                          "title": "get_insurance_prices_cost",
                          "description": "cost number"
                        },
                        "payout": {
                          "type": "number",
                          "format": "float",
                          "title": "get_insurance_prices_payout",
                          "description": "payout number"
                        },
                        "name": {
                          "type": "string",
                          "description": "Localized insurance level",
                          "title": "get_insurance_prices_name"
                        }
                      },
                      "title": "get_insurance_prices_level",
                      "description": "level object"
                    },
                    "title": "get_insurance_prices_levels"
                  }
                },
                "title": "get_insurance_prices_200_ok",
                "description": "200 ok object"
              },
              "title": "get_insurance_prices_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_insurance_prices",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/killmails/{killmail_id}/{killmail_hash}/": {
      "get": {
        "description": "Return a single killmail from its ID and hash\n\n---\nAlternate route: `/dev/killmails/{killmail_id}/{killmail_hash}/`\n\nAlternate route: `/legacy/killmails/{killmail_id}/{killmail_hash}/`\n\nAlternate route: `/v1/killmails/{killmail_id}/{killmail_hash}/`\n\n---\nThis route is cached for up to 1209600 seconds",
        "summary": "Get a single killmail",
        "tags": [
          "Killmails"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "killmail_hash",
            "in": "path",
            "description": "The killmail hash for verification",
            "required": true,
            "type": "string"
          },
          {
            "name": "killmail_id",
            "in": "path",
            "description": "The killmail ID to be queried",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A killmail",
            "examples": {
              "application/json": {
                "solar_system_id": 30002976,
                "killmail_id": 56733821,
                "killmail_time": "2016-10-22T17:13:36Z",
                "attackers": [
                  {
                    "ship_type_id": 17841,
                    "faction_id": 500003,
                    "corporation_id": 1000179,
                    "character_id": 95810944,
                    "weapon_type_id": 3074,
                    "final_blow": true,
                    "security_status": -0.3,
                    "damage_done": 5745
                  }
                ],
                "victim": {
                  "alliance_id": 621338554,
                  "damage_taken": 5745,
                  "items": [
                    {
                      "singleton": 0,
                      "item_type_id": 5973,
                      "flag": 20,
                      "quantity_dropped": 1
                    }
                  ],
                  "character_id": 92796241,
                  "ship_type_id": 17812,
                  "corporation_id": 841363671,
                  "position": {
                    "y": 146704961490.90222,
                    "x": 452186600569.4748,
                    "z": 109514596532.54477
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "killmail_id",
                "killmail_time",
                "victim",
                "attackers",
                "solar_system_id"
              ],
              "properties": {
                "killmail_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ID of the killmail",
                  "title": "get_killmails_killmail_id_killmail_hash_killmail_id"
                },
                "killmail_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time that the victim was killed and the killmail generated\n",
                  "title": "get_killmails_killmail_id_killmail_hash_killmail_time"
                },
                "victim": {
                  "type": "object",
                  "required": [
                    "damage_taken",
                    "ship_type_id"
                  ],
                  "properties": {
                    "character_id": {
                      "type": "integer",
                      "format": "int32",
                      "title": "get_killmails_killmail_id_killmail_hash_character_id",
                      "description": "character_id integer"
                    },
                    "corporation_id": {
                      "type": "integer",
                      "format": "int32",
                      "title": "get_killmails_killmail_id_killmail_hash_corporation_id",
                      "description": "corporation_id integer"
                    },
                    "alliance_id": {
                      "type": "integer",
                      "format": "int32",
                      "title": "get_killmails_killmail_id_killmail_hash_alliance_id",
                      "description": "alliance_id integer"
                    },
                    "faction_id": {
                      "type": "integer",
                      "format": "int32",
                      "title": "get_killmails_killmail_id_killmail_hash_faction_id",
                      "description": "faction_id integer"
                    },
                    "damage_taken": {
                      "type": "integer",
                      "description": "How much total damage was taken by the victim\n",
                      "format": "int32",
                      "title": "get_killmails_killmail_id_killmail_hash_damage_taken"
                    },
                    "ship_type_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The ship that the victim was piloting and was destroyed\n",
                      "title": "get_killmails_killmail_id_killmail_hash_ship_type_id"
                    },
                    "items": {
                      "type": "array",
                      "maxItems": 10000,
                      "items": {
                        "type": "object",
                        "required": [
                          "item_type_id",
                          "singleton",
                          "flag"
                        ],
                        "properties": {
                          "item_type_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_killmails_killmail_id_killmail_hash_item_type_id",
                            "description": "item_type_id integer"
                          },
                          "quantity_destroyed": {
                            "type": "integer",
                            "description": "How many of the item were destroyed if any\n",
                            "format": "int64",
                            "title": "get_killmails_killmail_id_killmail_hash_quantity_destroyed"
                          },
                          "quantity_dropped": {
                            "type": "integer",
                            "description": "How many of the item were dropped if any\n",
                            "format": "int64",
                            "title": "get_killmails_killmail_id_killmail_hash_quantity_dropped"
                          },
                          "singleton": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_killmails_killmail_id_killmail_hash_singleton",
                            "description": "singleton integer"
                          },
                          "flag": {
                            "type": "integer",
                            "description": "Flag for the location of the item\n",
                            "format": "int32",
                            "title": "get_killmails_killmail_id_killmail_hash_flag"
                          },
                          "items": {
                            "type": "array",
                            "maxItems": 10000,
                            "items": {
                              "type": "object",
                              "required": [
                                "item_type_id",
                                "singleton",
                                "flag"
                              ],
                              "properties": {
                                "item_type_id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "title": "get_killmails_killmail_id_killmail_hash_item_type_id",
                                  "description": "item_type_id integer"
                                },
                                "quantity_destroyed": {
                                  "type": "integer",
                                  "format": "int64",
                                  "title": "get_killmails_killmail_id_killmail_hash_quantity_destroyed",
                                  "description": "quantity_destroyed integer"
                                },
                                "quantity_dropped": {
                                  "type": "integer",
                                  "format": "int64",
                                  "title": "get_killmails_killmail_id_killmail_hash_quantity_dropped",
                                  "description": "quantity_dropped integer"
                                },
                                "singleton": {
                                  "type": "integer",
                                  "format": "int32",
                                  "title": "get_killmails_killmail_id_killmail_hash_singleton",
                                  "description": "singleton integer"
                                },
                                "flag": {
                                  "type": "integer",
                                  "format": "int32",
                                  "title": "get_killmails_killmail_id_killmail_hash_flag",
                                  "description": "flag integer"
                                }
                              },
                              "title": "get_killmails_killmail_id_killmail_hash_item",
                              "description": "item object"
                            },
                            "title": "get_killmails_killmail_id_killmail_hash_items",
                            "description": "items array"
                          }
                        },
                        "title": "get_killmails_killmail_id_killmail_hash_item",
                        "description": "item object"
                      },
                      "title": "get_killmails_killmail_id_killmail_hash_items",
                      "description": "items array"
                    },
                    "position": {
                      "type": "object",
                      "description": "Coordinates of the victim in Cartesian space relative to the Sun\n",
                      "required": [
                        "x",
                        "y",
                        "z"
                      ],
                      "properties": {
                        "x": {
                          "type": "number",
                          "format": "double",
                          "title": "get_killmails_killmail_id_killmail_hash_x",
                          "description": "x number"
                        },
                        "y": {
                          "type": "number",
                          "format": "double",
                          "title": "get_killmails_killmail_id_killmail_hash_y",
                          "description": "y number"
                        },
                        "z": {
                          "type": "number",
                          "format": "double",
                          "title": "get_killmails_killmail_id_killmail_hash_z",
                          "description": "z number"
                        }
                      },
                      "title": "get_killmails_killmail_id_killmail_hash_position"
                    }
                  },
                  "title": "get_killmails_killmail_id_killmail_hash_victim",
                  "description": "victim object"
                },
                "attackers": {
                  "type": "array",
                  "maxItems": 10000,
                  "items": {
                    "type": "object",
                    "required": [
                      "security_status",
                      "final_blow",
                      "damage_done"
                    ],
                    "properties": {
                      "character_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_killmails_killmail_id_killmail_hash_character_id",
                        "description": "character_id integer"
                      },
                      "corporation_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_killmails_killmail_id_killmail_hash_corporation_id",
                        "description": "corporation_id integer"
                      },
                      "alliance_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_killmails_killmail_id_killmail_hash_alliance_id",
                        "description": "alliance_id integer"
                      },
                      "faction_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_killmails_killmail_id_killmail_hash_faction_id",
                        "description": "faction_id integer"
                      },
                      "security_status": {
                        "type": "number",
                        "format": "float",
                        "description": "Security status for the attacker\n",
                        "title": "get_killmails_killmail_id_killmail_hash_security_status"
                      },
                      "final_blow": {
                        "type": "boolean",
                        "description": "Was the attacker the one to achieve the final blow\n",
                        "title": "get_killmails_killmail_id_killmail_hash_final_blow"
                      },
                      "damage_done": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_killmails_killmail_id_killmail_hash_damage_done",
                        "description": "damage_done integer"
                      },
                      "ship_type_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "What ship was the attacker flying\n",
                        "title": "get_killmails_killmail_id_killmail_hash_ship_type_id"
                      },
                      "weapon_type_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "What weapon was used by the attacker for the kill\n",
                        "title": "get_killmails_killmail_id_killmail_hash_weapon_type_id"
                      }
                    },
                    "title": "get_killmails_killmail_id_killmail_hash_attacker",
                    "description": "attacker object"
                  },
                  "title": "get_killmails_killmail_id_killmail_hash_attackers",
                  "description": "attackers array"
                },
                "solar_system_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Solar system that the kill took place in\n",
                  "title": "get_killmails_killmail_id_killmail_hash_solar_system_id"
                },
                "moon_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Moon if the kill took place at one",
                  "title": "get_killmails_killmail_id_killmail_hash_moon_id"
                },
                "war_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "War if the killmail is generated in relation to an official war\n",
                  "title": "get_killmails_killmail_id_killmail_hash_war_id"
                }
              },
              "title": "get_killmails_killmail_id_killmail_hash_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Invalid killmail_id and/or killmail_hash",
            "schema": {
              "type": "object",
              "title": "get_killmails_killmail_id_killmail_hash_unprocessable_entity",
              "description": "Unprocessable entity",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Unprocessable entity message",
                  "title": "get_killmails_killmail_id_killmail_hash_422_unprocessable_entity"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Unprocessable entity message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_killmails_killmail_id_killmail_hash",
        "x-cached-seconds": 1209600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/killmails/recent/": {
      "get": {
        "description": "Return a list of character's recent kills and losses\n\n---\nAlternate route: `/dev/characters/{character_id}/killmails/recent/`\n\nAlternate route: `/legacy/characters/{character_id}/killmails/recent/`\n\nAlternate route: `/v1/characters/{character_id}/killmails/recent/`\n\n---\nThis route is cached for up to 120 seconds",
        "summary": "Get character kills and losses",
        "tags": [
          "Killmails"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "max_count",
            "in": "query",
            "description": "How many killmails to return at maximum",
            "type": "integer",
            "format": "int32",
            "required": false,
            "default": 50,
            "maximum": 5000
          },
          {
            "name": "max_kill_id",
            "in": "query",
            "description": "Only return killmails with ID smaller than this.\n",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of killmail IDs and hashes",
            "examples": {
              "application/json": [
                {
                  "killmail_id": 2,
                  "killmail_hash": "8eef5e8fb6b88fe3407c489df33822b2e3b57a5e"
                },
                {
                  "killmail_id": 1,
                  "killmail_hash": "b41ccb498ece33d64019f64c0db392aa3aa701fb"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 5000,
              "items": {
                "type": "object",
                "required": [
                  "killmail_id",
                  "killmail_hash"
                ],
                "properties": {
                  "killmail_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of this killmail",
                    "title": "get_characters_character_id_killmails_recent_killmail_id"
                  },
                  "killmail_hash": {
                    "type": "string",
                    "description": "A hash of this killmail",
                    "title": "get_characters_character_id_killmails_recent_killmail_hash"
                  }
                },
                "title": "get_characters_character_id_killmails_recent_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_killmails_recent_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-killmails.read_killmails.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_killmails_recent",
        "x-cached-seconds": 120,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/killmails/recent/": {
      "get": {
        "description": "Get a list of corporation's recent kills and losses\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/killmails/recent/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/killmails/recent/`\n\nAlternate route: `/v1/corporations/{corporation_id}/killmails/recent/`\n\n---\nThis route is cached for up to 300 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "Get corporation kills and losses",
        "tags": [
          "Killmails"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "max_kill_id",
            "in": "query",
            "description": "Only return killmails with ID smaller than this",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of killmail IDs and hashes",
            "examples": {
              "application/json": [
                {
                  "killmail_id": 2,
                  "killmail_hash": "8eef5e8fb6b88fe3407c489df33822b2e3b57a5e"
                },
                {
                  "killmail_id": 1,
                  "killmail_hash": "b41ccb498ece33d64019f64c0db392aa3aa701fb"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "killmail_id",
                  "killmail_hash"
                ],
                "properties": {
                  "killmail_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of this killmail",
                    "title": "get_corporations_corporation_id_killmails_recent_killmail_id"
                  },
                  "killmail_hash": {
                    "type": "string",
                    "description": "A hash of this killmail",
                    "title": "get_corporations_corporation_id_killmails_recent_killmail_hash"
                  }
                },
                "title": "get_corporations_corporation_id_killmails_recent_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_killmails_recent_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-killmails.read_corporation_killmails.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_killmails_recent",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/location/": {
      "get": {
        "description": "Information about the characters current location. Returns the current solar system id, and also the current station or structure ID if applicable.\n\n---\nAlternate route: `/dev/characters/{character_id}/location/`\n\nAlternate route: `/legacy/characters/{character_id}/location/`\n\nAlternate route: `/v1/characters/{character_id}/location/`\n\n---\nThis route is cached for up to 5 seconds",
        "summary": "Get character location",
        "tags": [
          "Location"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about the characters current location. Returns the current solar system id, and also the current station or structure ID if applicable.",
            "examples": {
              "application/json": {
                "solar_system_id": 30002505,
                "structure_id": 1000000016989
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "solar_system_id"
              ],
              "properties": {
                "solar_system_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_location_solar_system_id",
                  "description": "solar_system_id integer"
                },
                "station_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_location_station_id",
                  "description": "station_id integer"
                },
                "structure_id": {
                  "type": "integer",
                  "format": "int64",
                  "title": "get_characters_character_id_location_structure_id",
                  "description": "structure_id integer"
                }
              },
              "title": "get_characters_character_id_location_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-location.read_location.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_location",
        "x-cached-seconds": 5,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/ship/": {
      "get": {
        "description": "Get the current ship type, name and id\n\n---\nAlternate route: `/dev/characters/{character_id}/ship/`\n\nAlternate route: `/legacy/characters/{character_id}/ship/`\n\nAlternate route: `/v1/characters/{character_id}/ship/`\n\n---\nThis route is cached for up to 5 seconds",
        "summary": "Get current ship",
        "tags": [
          "Location"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Get the current ship type, name and id",
            "examples": {
              "application/json": {
                "ship_type_id": 1233,
                "ship_name": "SPACESHIPS!!!",
                "ship_item_id": 1000000016991
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "ship_type_id",
                "ship_item_id",
                "ship_name"
              ],
              "properties": {
                "ship_type_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_ship_ship_type_id",
                  "description": "ship_type_id integer"
                },
                "ship_item_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Item id's are unique to a ship and persist until it is repackaged. This value can be used to track repeated uses of a ship, or detect when a pilot changes into a different instance of the same ship type.",
                  "title": "get_characters_character_id_ship_ship_item_id"
                },
                "ship_name": {
                  "type": "string",
                  "title": "get_characters_character_id_ship_ship_name",
                  "description": "ship_name string"
                }
              },
              "title": "get_characters_character_id_ship_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-location.read_ship_type.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_ship",
        "x-cached-seconds": 5,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/online/": {
      "get": {
        "description": "Checks if the character is currently online\n\n---\nAlternate route: `/dev/characters/{character_id}/online/`\n\nAlternate route: `/v2/characters/{character_id}/online/`\n\n---\nThis route is cached for up to 60 seconds",
        "summary": "Get character online",
        "tags": [
          "Location"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Object describing the character's online status",
            "examples": {
              "application/json": {
                "online": true,
                "last_login": "2017-01-02T03:04:05Z",
                "last_logout": "2017-01-02T04:05:06Z",
                "logins": 9001
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "online"
              ],
              "properties": {
                "online": {
                  "type": "boolean",
                  "description": "If the character is online",
                  "title": "get_characters_character_id_online_online"
                },
                "last_login": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the last login",
                  "title": "get_characters_character_id_online_last_login"
                },
                "last_logout": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the last logout",
                  "title": "get_characters_character_id_online_last_logout"
                },
                "logins": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Total number of times the character has logged in",
                  "title": "get_characters_character_id_online_logins"
                }
              },
              "title": "get_characters_character_id_online_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-location.read_online.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_online",
        "x-cached-seconds": 60,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/loyalty/stores/{corporation_id}/offers/": {
      "get": {
        "description": "Return a list of offers from a specific corporation's loyalty store\n\n---\nAlternate route: `/dev/loyalty/stores/{corporation_id}/offers/`\n\nAlternate route: `/legacy/loyalty/stores/{corporation_id}/offers/`\n\nAlternate route: `/v1/loyalty/stores/{corporation_id}/offers/`\n\n---\nThis route expires daily at 11:05",
        "summary": "List loyalty store offers",
        "tags": [
          "Loyalty"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of offers",
            "examples": {
              "application/json": [
                {
                  "offer_id": 1,
                  "type_id": 123,
                  "quantity": 1,
                  "lp_cost": 100,
                  "isk_cost": 0,
                  "ak_cost": 35000,
                  "required_items": []
                },
                {
                  "offer_id": 2,
                  "type_id": 1235,
                  "quantity": 10,
                  "lp_cost": 100,
                  "isk_cost": 1000,
                  "required_items": [
                    {
                      "type_id": 1234,
                      "quantity": 10
                    }
                  ]
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "offer_id",
                  "type_id",
                  "quantity",
                  "lp_cost",
                  "isk_cost",
                  "required_items"
                ],
                "properties": {
                  "offer_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_loyalty_stores_corporation_id_offers_offer_id",
                    "description": "offer_id integer"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_loyalty_stores_corporation_id_offers_type_id",
                    "description": "type_id integer"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_loyalty_stores_corporation_id_offers_quantity",
                    "description": "quantity integer"
                  },
                  "lp_cost": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_loyalty_stores_corporation_id_offers_lp_cost",
                    "description": "lp_cost integer"
                  },
                  "isk_cost": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_loyalty_stores_corporation_id_offers_isk_cost",
                    "description": "isk_cost integer"
                  },
                  "ak_cost": {
                    "description": "Analysis kredit cost",
                    "type": "integer",
                    "format": "int32",
                    "title": "get_loyalty_stores_corporation_id_offers_ak_cost"
                  },
                  "required_items": {
                    "type": "array",
                    "maxItems": 100,
                    "items": {
                      "type": "object",
                      "required": [
                        "type_id",
                        "quantity"
                      ],
                      "properties": {
                        "type_id": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_loyalty_stores_corporation_id_offers_type_id",
                          "description": "type_id integer"
                        },
                        "quantity": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_loyalty_stores_corporation_id_offers_quantity",
                          "description": "quantity integer"
                        }
                      },
                      "title": "get_loyalty_stores_corporation_id_offers_required_item",
                      "description": "required_item object"
                    },
                    "title": "get_loyalty_stores_corporation_id_offers_required_items",
                    "description": "required_items array"
                  }
                },
                "title": "get_loyalty_stores_corporation_id_offers_200_ok",
                "description": "200 ok object"
              },
              "title": "get_loyalty_stores_corporation_id_offers_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "No loyalty point store found for the provided corporation",
            "schema": {
              "type": "object",
              "title": "get_loyalty_stores_corporation_id_offers_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_loyalty_stores_corporation_id_offers_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_loyalty_stores_corporation_id_offers",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/loyalty/points/": {
      "get": {
        "description": "Return a list of loyalty points for all corporations the character has worked for\n\n---\nAlternate route: `/dev/characters/{character_id}/loyalty/points/`\n\nAlternate route: `/legacy/characters/{character_id}/loyalty/points/`\n\nAlternate route: `/v1/characters/{character_id}/loyalty/points/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get loyalty points",
        "tags": [
          "Loyalty"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of loyalty points",
            "examples": {
              "application/json": [
                {
                  "corporation_id": 123,
                  "loyalty_points": 100
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 500,
              "items": {
                "type": "object",
                "required": [
                  "corporation_id",
                  "loyalty_points"
                ],
                "properties": {
                  "corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_loyalty_points_corporation_id",
                    "description": "corporation_id integer"
                  },
                  "loyalty_points": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_loyalty_points_loyalty_points",
                    "description": "loyalty_points integer"
                  }
                },
                "title": "get_characters_character_id_loyalty_points_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_loyalty_points_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_loyalty.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_loyalty_points",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/mail/": {
      "get": {
        "description": "Return the 50 most recent mail headers belonging to the character that match the query criteria. Queries can be filtered by label, and last_mail_id can be used to paginate backwards.\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/`\n\nAlternate route: `/v1/characters/{character_id}/mail/`\n\n---\nThis route is cached for up to 30 seconds",
        "summary": "Return mail headers",
        "tags": [
          "Mail"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "labels",
            "in": "query",
            "required": false,
            "description": "Fetch only mails that match one or more of the given labels",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "maxItems": 25,
            "items": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "last_mail_id",
            "in": "query",
            "description": "List only mail with an ID lower than the given ID, if present",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested mail",
            "examples": {
              "application/json": [
                {
                  "mail_id": 7,
                  "subject": "Title for EVE Mail",
                  "from": 90000001,
                  "timestamp": "2015-09-30T16:07:00Z",
                  "labels": [
                    3
                  ],
                  "recipients": [
                    {
                      "recipient_type": "character",
                      "recipient_id": 90000002
                    }
                  ],
                  "is_read": true
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 50,
              "items": {
                "type": "object",
                "properties": {
                  "mail_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_characters_character_id_mail_mail_id",
                    "description": "mail_id integer"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Mail subject",
                    "title": "get_characters_character_id_mail_subject"
                  },
                  "from": {
                    "type": "integer",
                    "format": "int32",
                    "description": "From whom the mail was sent",
                    "title": "get_characters_character_id_mail_from"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the mail was sent",
                    "title": "get_characters_character_id_mail_timestamp"
                  },
                  "labels": {
                    "type": "array",
                    "uniqueItems": true,
                    "maxItems": 25,
                    "minimum": 0,
                    "items": {
                      "type": "integer",
                      "format": "int64",
                      "title": "get_characters_character_id_mail_label",
                      "description": "label integer"
                    },
                    "title": "get_characters_character_id_mail_labels",
                    "description": "labels array"
                  },
                  "recipients": {
                    "type": "array",
                    "description": "Recipients of the mail",
                    "uniqueItems": true,
                    "minItems": 1,
                    "maxItems": 52,
                    "items": {
                      "type": "object",
                      "required": [
                        "recipient_type",
                        "recipient_id"
                      ],
                      "properties": {
                        "recipient_type": {
                          "type": "string",
                          "enum": [
                            "alliance",
                            "character",
                            "corporation",
                            "mailing_list"
                          ],
                          "title": "get_characters_character_id_mail_recipient_type",
                          "description": "recipient_type string"
                        },
                        "recipient_id": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_characters_character_id_mail_recipient_id",
                          "description": "recipient_id integer"
                        }
                      },
                      "title": "get_characters_character_id_mail_recipient",
                      "description": "recipient object"
                    },
                    "title": "get_characters_character_id_mail_recipients"
                  },
                  "is_read": {
                    "type": "boolean",
                    "title": "get_characters_character_id_mail_is_read",
                    "description": "is_read boolean"
                  }
                },
                "title": "get_characters_character_id_mail_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_mail_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-mail.read_mail.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_mail",
        "x-cached-seconds": 30,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "post": {
        "description": "Create and send a new mail\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/`\n\nAlternate route: `/v1/characters/{character_id}/mail/`\n",
        "summary": "Send a new mail",
        "tags": [
          "Mail"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "mail",
            "in": "body",
            "required": true,
            "description": "The mail to send",
            "schema": {
              "type": "object",
              "required": [
                "recipients",
                "subject",
                "body"
              ],
              "properties": {
                "recipients": {
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 50,
                  "items": {
                    "type": "object",
                    "required": [
                      "recipient_type",
                      "recipient_id"
                    ],
                    "properties": {
                      "recipient_type": {
                        "type": "string",
                        "enum": [
                          "alliance",
                          "character",
                          "corporation",
                          "mailing_list"
                        ],
                        "title": "post_characters_character_id_mail_recipient_type",
                        "description": "recipient_type string"
                      },
                      "recipient_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_characters_character_id_mail_recipient_id",
                        "description": "recipient_id integer"
                      }
                    },
                    "title": "post_characters_character_id_mail_recipient",
                    "description": "recipient object"
                  },
                  "title": "post_characters_character_id_mail_recipients",
                  "description": "recipients array"
                },
                "subject": {
                  "type": "string",
                  "maxLength": 1000,
                  "title": "post_characters_character_id_mail_subject",
                  "description": "subject string"
                },
                "body": {
                  "type": "string",
                  "maxLength": 10000,
                  "title": "post_characters_character_id_mail_body",
                  "description": "body string"
                },
                "approved_cost": {
                  "type": "integer",
                  "format": "int64",
                  "default": 0,
                  "title": "post_characters_character_id_mail_approved_cost",
                  "description": "approved_cost integer"
                }
              },
              "title": "post_characters_character_id_mail_mail",
              "description": "mail object"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "201": {
            "description": "Mail created",
            "examples": {
              "application/json": 13
            },
            "schema": {
              "type": "integer",
              "format": "int32",
              "description": "Mail ID",
              "title": "post_characters_character_id_mail_created"
            }
          },
          "400": {
            "description": "Only one corporation, alliance, or mailing list can be the recipient of a mail",
            "schema": {
              "type": "object",
              "title": "post_characters_character_id_mail_bad_request",
              "description": "Bad request",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Bad request message",
                  "title": "post_characters_character_id_mail_400_bad_request"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Bad request message"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-mail.send_mail.v1"
            ]
          }
        ],
        "operationId": "post_characters_character_id_mail",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/mail/labels/": {
      "get": {
        "description": "Return a list of the users mail labels, unread counts for each label and a total unread count.\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/labels/`\n\nAlternate route: `/v3/characters/{character_id}/mail/labels/`\n\n---\nThis route is cached for up to 30 seconds",
        "summary": "Get mail labels and unread counts",
        "tags": [
          "Mail"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of mail labels and unread counts",
            "examples": {
              "application/json": {
                "total_unread_count": 5,
                "labels": [
                  {
                    "label_id": 16,
                    "name": "PINK",
                    "color_hex": "#660066",
                    "unread_count": 4
                  },
                  {
                    "label_id": 17,
                    "name": "WHITE",
                    "color_hex": "#ffffff",
                    "unread_count": 1
                  }
                ]
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "total_unread_count": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "title": "get_characters_character_id_mail_labels_total_unread_count",
                  "description": "total_unread_count integer"
                },
                "labels": {
                  "type": "array",
                  "maxItems": 30,
                  "items": {
                    "type": "object",
                    "properties": {
                      "unread_count": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "title": "get_characters_character_id_mail_labels_unread_count",
                        "description": "unread_count integer"
                      },
                      "label_id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "title": "get_characters_character_id_mail_labels_label_id",
                        "description": "label_id integer"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 40,
                        "title": "get_characters_character_id_mail_labels_name",
                        "description": "name string"
                      },
                      "color": {
                        "type": "string",
                        "default": "#ffffff",
                        "enum": [
                          "#0000fe",
                          "#006634",
                          "#0099ff",
                          "#00ff33",
                          "#01ffff",
                          "#349800",
                          "#660066",
                          "#666666",
                          "#999999",
                          "#99ffff",
                          "#9a0000",
                          "#ccff9a",
                          "#e6e6e6",
                          "#fe0000",
                          "#ff6600",
                          "#ffff01",
                          "#ffffcd",
                          "#ffffff"
                        ],
                        "title": "get_characters_character_id_mail_labels_color",
                        "description": "color string"
                      }
                    },
                    "title": "get_characters_character_id_mail_labels_label",
                    "description": "label object"
                  },
                  "title": "get_characters_character_id_mail_labels_labels",
                  "description": "labels array"
                }
              },
              "title": "get_characters_character_id_mail_labels_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-mail.read_mail.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_mail_labels",
        "x-cached-seconds": 30,
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      },
      "post": {
        "description": "Create a mail label\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/labels/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/labels/`\n\nAlternate route: `/v2/characters/{character_id}/mail/labels/`\n",
        "summary": "Create a mail label",
        "tags": [
          "Mail"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "label",
            "description": "Label to create",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 40,
                  "title": "post_characters_character_id_mail_labels_name",
                  "description": "name string"
                },
                "color": {
                  "type": "string",
                  "description": "Hexadecimal string representing label color, in RGB format",
                  "default": "#ffffff",
                  "enum": [
                    "#0000fe",
                    "#006634",
                    "#0099ff",
                    "#00ff33",
                    "#01ffff",
                    "#349800",
                    "#660066",
                    "#666666",
                    "#999999",
                    "#99ffff",
                    "#9a0000",
                    "#ccff9a",
                    "#e6e6e6",
                    "#fe0000",
                    "#ff6600",
                    "#ffff01",
                    "#ffffcd",
                    "#ffffff"
                  ],
                  "title": "post_characters_character_id_mail_labels_color"
                }
              },
              "title": "post_characters_character_id_mail_labels_label",
              "description": "label object"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "201": {
            "description": "Label created",
            "examples": {
              "application/json": 128
            },
            "schema": {
              "type": "integer",
              "format": "int64",
              "description": "Label ID",
              "title": "post_characters_character_id_mail_labels_created"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-mail.organize_mail.v1"
            ]
          }
        ],
        "operationId": "post_characters_character_id_mail_labels",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v2"
        ]
      }
    },
    "/characters/{character_id}/mail/labels/{label_id}/": {
      "delete": {
        "description": "Delete a mail label\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/labels/{label_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/labels/{label_id}/`\n\nAlternate route: `/v1/characters/{character_id}/mail/labels/{label_id}/`\n",
        "summary": "Delete a mail label",
        "tags": [
          "Mail"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "label_id",
            "in": "path",
            "description": "An EVE label id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Label deleted"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "422": {
            "description": "Default labels cannot be deleted",
            "schema": {
              "type": "object",
              "title": "delete_characters_character_id_mail_labels_label_id_unprocessable_entity",
              "description": "Unprocessable entity",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Unprocessable entity message",
                  "title": "delete_characters_character_id_mail_labels_label_id_422_unprocessable_entity"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Unprocessable entity message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-mail.organize_mail.v1"
            ]
          }
        ],
        "operationId": "delete_characters_character_id_mail_labels_label_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/mail/lists/": {
      "get": {
        "description": "Return all mailing lists that the character is subscribed to\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/lists/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/lists/`\n\nAlternate route: `/v1/characters/{character_id}/mail/lists/`\n\n---\nThis route is cached for up to 120 seconds",
        "summary": "Return mailing list subscriptions",
        "tags": [
          "Mail"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Mailing lists",
            "examples": {
              "application/json": [
                {
                  "mailing_list_id": 1,
                  "name": "test_mailing_list"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "mailing_list_id",
                  "name"
                ],
                "properties": {
                  "mailing_list_id": {
                    "description": "Mailing list ID",
                    "format": "int32",
                    "type": "integer",
                    "title": "get_characters_character_id_mail_lists_mailing_list_id"
                  },
                  "name": {
                    "type": "string",
                    "title": "get_characters_character_id_mail_lists_name",
                    "description": "name string"
                  }
                },
                "title": "get_characters_character_id_mail_lists_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_mail_lists_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-mail.read_mail.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_mail_lists",
        "x-cached-seconds": 120,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/mail/{mail_id}/": {
      "delete": {
        "description": "Delete a mail\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n",
        "summary": "Delete a mail",
        "tags": [
          "Mail"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "mail_id",
            "in": "path",
            "description": "An EVE mail ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Mail deleted"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-mail.organize_mail.v1"
            ]
          }
        ],
        "operationId": "delete_characters_character_id_mail_mail_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "get": {
        "description": "Return the contents of an EVE mail\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n\n---\nThis route is cached for up to 30 seconds",
        "summary": "Return a mail",
        "tags": [
          "Mail"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "mail_id",
            "in": "path",
            "description": "An EVE mail ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Contents of a mail",
            "examples": {
              "application/json": {
                "subject": "test",
                "from": 90000001,
                "timestamp": "2015-09-30T16:07:00Z",
                "body": "blah blah blah",
                "labels": [
                  2,
                  32
                ],
                "read": true
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "type": "string",
                  "description": "Mail subject",
                  "title": "get_characters_character_id_mail_mail_id_subject"
                },
                "from": {
                  "type": "integer",
                  "format": "int32",
                  "description": "From whom the mail was sent",
                  "title": "get_characters_character_id_mail_mail_id_from"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When the mail was sent",
                  "title": "get_characters_character_id_mail_mail_id_timestamp"
                },
                "recipients": {
                  "type": "array",
                  "description": "Recipients of the mail",
                  "uniqueItems": true,
                  "minItems": 1,
                  "maxItems": 52,
                  "items": {
                    "type": "object",
                    "required": [
                      "recipient_type",
                      "recipient_id"
                    ],
                    "properties": {
                      "recipient_type": {
                        "type": "string",
                        "enum": [
                          "alliance",
                          "character",
                          "corporation",
                          "mailing_list"
                        ],
                        "title": "get_characters_character_id_mail_mail_id_recipient_type",
                        "description": "recipient_type string"
                      },
                      "recipient_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_mail_mail_id_recipient_id",
                        "description": "recipient_id integer"
                      }
                    },
                    "title": "get_characters_character_id_mail_mail_id_recipient",
                    "description": "recipient object"
                  },
                  "title": "get_characters_character_id_mail_mail_id_recipients"
                },
                "body": {
                  "type": "string",
                  "description": "Mail's body",
                  "title": "get_characters_character_id_mail_mail_id_body"
                },
                "labels": {
                  "type": "array",
                  "maxItems": 25,
                  "description": "Labels attached to the mail",
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "uniqueItems": true,
                    "minimum": 0,
                    "title": "get_characters_character_id_mail_mail_id_label",
                    "description": "label integer"
                  },
                  "title": "get_characters_character_id_mail_mail_id_labels"
                },
                "read": {
                  "type": "boolean",
                  "description": "Whether the mail is flagged as read",
                  "title": "get_characters_character_id_mail_mail_id_read"
                }
              },
              "title": "get_characters_character_id_mail_mail_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "Mail not found",
            "schema": {
              "type": "object",
              "title": "get_characters_character_id_mail_mail_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_characters_character_id_mail_mail_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-mail.read_mail.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_mail_mail_id",
        "x-cached-seconds": 30,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      },
      "put": {
        "description": "Update metadata about a mail\n\n---\nAlternate route: `/dev/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`\n\nAlternate route: `/v1/characters/{character_id}/mail/{mail_id}/`\n",
        "summary": "Update metadata about a mail",
        "tags": [
          "Mail"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "name": "contents",
            "in": "body",
            "description": "Data used to update the mail",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "read": {
                  "type": "boolean",
                  "description": "Whether the mail is flagged as read",
                  "title": "put_characters_character_id_mail_mail_id_read"
                },
                "labels": {
                  "type": "array",
                  "maxItems": 25,
                  "description": "Labels to assign to the mail. Pre-existing labels are unassigned.",
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "uniqueItems": true,
                    "minimum": 0,
                    "title": "put_characters_character_id_mail_mail_id_label",
                    "description": "label integer"
                  },
                  "title": "put_characters_character_id_mail_mail_id_labels"
                }
              },
              "title": "put_characters_character_id_mail_mail_id_contents",
              "description": "contents object"
            }
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "mail_id",
            "in": "path",
            "description": "An EVE mail ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Mail updated"
          },
          "400": {
            "description": "Invalid label ID; or No parameters in body -- nothing to do",
            "schema": {
              "type": "object",
              "title": "put_characters_character_id_mail_mail_id_bad_request",
              "description": "Bad request",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Bad request message",
                  "title": "put_characters_character_id_mail_mail_id_400_bad_request"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Bad request message"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-mail.organize_mail.v1"
            ]
          }
        ],
        "operationId": "put_characters_character_id_mail_mail_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/markets/prices/": {
      "get": {
        "description": "Return a list of prices\n\n---\nAlternate route: `/dev/markets/prices/`\n\nAlternate route: `/legacy/markets/prices/`\n\nAlternate route: `/v1/markets/prices/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List market prices",
        "tags": [
          "Market"
        ],
        "responses": {
          "200": {
            "description": "A list of prices",
            "examples": {
              "application/json": [
                {
                  "type_id": 32772,
                  "average_price": 306292.67,
                  "adjusted_price": 306988.09
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 20000,
              "items": {
                "type": "object",
                "required": [
                  "type_id"
                ],
                "properties": {
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_prices_type_id",
                    "description": "type_id integer"
                  },
                  "average_price": {
                    "type": "number",
                    "format": "double",
                    "title": "get_markets_prices_average_price",
                    "description": "average_price number"
                  },
                  "adjusted_price": {
                    "type": "number",
                    "format": "double",
                    "title": "get_markets_prices_adjusted_price",
                    "description": "adjusted_price number"
                  }
                },
                "title": "get_markets_prices_200_ok",
                "description": "200 ok object"
              },
              "title": "get_markets_prices_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_markets_prices",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/markets/{region_id}/orders/": {
      "get": {
        "description": "Return a list of orders in a region\n\n---\nAlternate route: `/dev/markets/{region_id}/orders/`\n\nAlternate route: `/legacy/markets/{region_id}/orders/`\n\nAlternate route: `/v1/markets/{region_id}/orders/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "List orders in a region",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Filter buy/sell orders, return all orders by default. If you query without type_id, we always return both buy and sell orders.",
            "required": true,
            "type": "string",
            "enum": [
              "buy",
              "sell",
              "all"
            ],
            "default": "all"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "name": "region_id",
            "in": "path",
            "description": "Return orders in this region",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "Return orders only for this type",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of orders",
            "examples": {
              "application/json": [
                {
                  "order_id": 4623824223,
                  "type_id": 34,
                  "location_id": 60005599,
                  "volume_total": 2000000,
                  "volume_remain": 1296000,
                  "min_volume": 1,
                  "price": 9.9,
                  "is_buy_order": false,
                  "duration": 90,
                  "issued": "2016-09-03T05:12:25Z",
                  "range": "region"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "order_id",
                  "type_id",
                  "location_id",
                  "volume_total",
                  "volume_remain",
                  "min_volume",
                  "price",
                  "is_buy_order",
                  "duration",
                  "issued",
                  "range"
                ],
                "properties": {
                  "order_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_markets_region_id_orders_order_id",
                    "description": "order_id integer"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_region_id_orders_type_id",
                    "description": "type_id integer"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_markets_region_id_orders_location_id",
                    "description": "location_id integer"
                  },
                  "volume_total": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_region_id_orders_volume_total",
                    "description": "volume_total integer"
                  },
                  "volume_remain": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_region_id_orders_volume_remain",
                    "description": "volume_remain integer"
                  },
                  "min_volume": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_region_id_orders_min_volume",
                    "description": "min_volume integer"
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "title": "get_markets_region_id_orders_price",
                    "description": "price number"
                  },
                  "is_buy_order": {
                    "type": "boolean",
                    "title": "get_markets_region_id_orders_is_buy_order",
                    "description": "is_buy_order boolean"
                  },
                  "duration": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_region_id_orders_duration",
                    "description": "duration integer"
                  },
                  "issued": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_markets_region_id_orders_issued",
                    "description": "issued string"
                  },
                  "range": {
                    "type": "string",
                    "enum": [
                      "station",
                      "region",
                      "solarsystem",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "10",
                      "20",
                      "30",
                      "40"
                    ],
                    "title": "get_markets_region_id_orders_range",
                    "description": "range string"
                  }
                },
                "title": "get_markets_region_id_orders_200_ok",
                "description": "200 ok object"
              },
              "title": "get_markets_region_id_orders_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "title": "get_markets_region_id_orders_unprocessable_entity",
              "description": "Unprocessable entity",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Unprocessable entity message",
                  "title": "get_markets_region_id_orders_422_unprocessable_entity"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Unprocessable entity message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_markets_region_id_orders",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/markets/{region_id}/history/": {
      "get": {
        "description": "Return a list of historical market statistics for the specified type in a region\n\n---\nAlternate route: `/dev/markets/{region_id}/history/`\n\nAlternate route: `/legacy/markets/{region_id}/history/`\n\nAlternate route: `/v1/markets/{region_id}/history/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List historical market statistics in a region",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "region_id",
            "in": "path",
            "description": "Return statistics in this region",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "Return statistics for this type",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of historical market statistics",
            "examples": {
              "application/json": [
                {
                  "date": "2015-05-01",
                  "order_count": 2267,
                  "volume": 16276782035,
                  "highest": 5.27,
                  "average": 5.25,
                  "lowest": 5.11
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 500,
              "items": {
                "type": "object",
                "required": [
                  "date",
                  "order_count",
                  "volume",
                  "highest",
                  "average",
                  "lowest"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "The date of this historical statistic entry",
                    "title": "get_markets_region_id_history_date"
                  },
                  "order_count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total number of orders happened that day",
                    "title": "get_markets_region_id_history_order_count"
                  },
                  "volume": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total",
                    "title": "get_markets_region_id_history_volume"
                  },
                  "highest": {
                    "type": "number",
                    "format": "double",
                    "title": "get_markets_region_id_history_highest",
                    "description": "highest number"
                  },
                  "average": {
                    "type": "number",
                    "format": "double",
                    "title": "get_markets_region_id_history_average",
                    "description": "average number"
                  },
                  "lowest": {
                    "type": "number",
                    "format": "double",
                    "title": "get_markets_region_id_history_lowest",
                    "description": "lowest number"
                  }
                },
                "title": "get_markets_region_id_history_200_ok",
                "description": "200 ok object"
              },
              "title": "get_markets_region_id_history_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "title": "get_markets_region_id_history_unprocessable_entity",
              "description": "Unprocessable entity",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Unprocessable entity message",
                  "title": "get_markets_region_id_history_422_unprocessable_entity"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Unprocessable entity message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_markets_region_id_history",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/markets/structures/{structure_id}/": {
      "get": {
        "description": "Return all orders in a structure\n\n---\nAlternate route: `/dev/markets/structures/{structure_id}/`\n\nAlternate route: `/legacy/markets/structures/{structure_id}/`\n\nAlternate route: `/v1/markets/structures/{structure_id}/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "List orders in a structure",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "name": "structure_id",
            "in": "path",
            "description": "Return orders in this structure",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of orders",
            "examples": {
              "application/json": [
                {
                  "order_id": 4623824223,
                  "type_id": 34,
                  "location_id": 1020988381992,
                  "volume_total": 2000000,
                  "volume_remain": 1296000,
                  "min_volume": 1,
                  "price": 9.9,
                  "is_buy_order": false,
                  "duration": 90,
                  "issued": "2016-09-03T05:12:25Z",
                  "range": "region"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 5000,
              "items": {
                "type": "object",
                "required": [
                  "order_id",
                  "type_id",
                  "location_id",
                  "volume_total",
                  "volume_remain",
                  "min_volume",
                  "price",
                  "is_buy_order",
                  "duration",
                  "issued",
                  "range"
                ],
                "properties": {
                  "order_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_markets_structures_structure_id_order_id",
                    "description": "order_id integer"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_structures_structure_id_type_id",
                    "description": "type_id integer"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_markets_structures_structure_id_location_id",
                    "description": "location_id integer"
                  },
                  "volume_total": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_structures_structure_id_volume_total",
                    "description": "volume_total integer"
                  },
                  "volume_remain": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_structures_structure_id_volume_remain",
                    "description": "volume_remain integer"
                  },
                  "min_volume": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_structures_structure_id_min_volume",
                    "description": "min_volume integer"
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "title": "get_markets_structures_structure_id_price",
                    "description": "price number"
                  },
                  "is_buy_order": {
                    "type": "boolean",
                    "title": "get_markets_structures_structure_id_is_buy_order",
                    "description": "is_buy_order boolean"
                  },
                  "duration": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_structures_structure_id_duration",
                    "description": "duration integer"
                  },
                  "issued": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_markets_structures_structure_id_issued",
                    "description": "issued string"
                  },
                  "range": {
                    "type": "string",
                    "enum": [
                      "station",
                      "region",
                      "solarsystem",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "10",
                      "20",
                      "30",
                      "40"
                    ],
                    "title": "get_markets_structures_structure_id_range",
                    "description": "range string"
                  }
                },
                "title": "get_markets_structures_structure_id_200_ok",
                "description": "200 ok object"
              },
              "title": "get_markets_structures_structure_id_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-markets.structure_markets.v1"
            ]
          }
        ],
        "operationId": "get_markets_structures_structure_id",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/markets/groups/": {
      "get": {
        "description": "Get a list of item groups\n\n---\nAlternate route: `/dev/markets/groups/`\n\nAlternate route: `/legacy/markets/groups/`\n\nAlternate route: `/v1/markets/groups/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get item groups",
        "tags": [
          "Market"
        ],
        "responses": {
          "200": {
            "description": "A list of item group ids",
            "examples": {
              "application/json": [
                1,
                2,
                3
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 5000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_markets_groups_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_markets_groups_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_markets_groups",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/markets/groups/{market_group_id}/": {
      "get": {
        "description": "Get information on an item group\n\n---\nAlternate route: `/dev/markets/groups/{market_group_id}/`\n\nAlternate route: `/legacy/markets/groups/{market_group_id}/`\n\nAlternate route: `/v1/markets/groups/{market_group_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get item group information",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "name": "market_group_id",
            "in": "path",
            "description": "An Eve item group ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about an item group",
            "examples": {
              "application/json": {
                "market_group_id": 5,
                "name": "Standard Frigates",
                "description": "Small, fast vessels suited to a variety of purposes.",
                "types": [
                  582,
                  583
                ],
                "parent_group_id": 1361
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "market_group_id",
                "name",
                "description",
                "types"
              ],
              "properties": {
                "market_group_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_markets_groups_market_group_id_market_group_id",
                  "description": "market_group_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_markets_groups_market_group_id_name",
                  "description": "name string"
                },
                "description": {
                  "type": "string",
                  "title": "get_markets_groups_market_group_id_description",
                  "description": "description string"
                },
                "types": {
                  "type": "array",
                  "maxItems": 5000,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_markets_groups_market_group_id_type",
                    "description": "type integer"
                  },
                  "title": "get_markets_groups_market_group_id_types",
                  "description": "types array"
                },
                "parent_group_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_markets_groups_market_group_id_parent_group_id",
                  "description": "parent_group_id integer"
                }
              },
              "title": "get_markets_groups_market_group_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Market group not found",
            "schema": {
              "type": "object",
              "title": "get_markets_groups_market_group_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_markets_groups_market_group_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_markets_groups_market_group_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/orders/": {
      "get": {
        "summary": "List open orders from a character",
        "description": "List market orders placed by a character\n\n---\nAlternate route: `/legacy/characters/{character_id}/orders/`\n\nAlternate route: `/v1/characters/{character_id}/orders/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\n[This route has an available update](https://esi.tech.ccp.is/diff/latest/dev/#GET-/characters/{character_id}/orders/)",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Market orders placed by a character",
            "examples": {
              "application/json": [
                {
                  "order_id": 123,
                  "type_id": 456,
                  "region_id": 123,
                  "location_id": 456,
                  "range": "station",
                  "is_buy_order": true,
                  "price": 33.3,
                  "volume_total": 123456,
                  "volume_remain": 4422,
                  "issued": "2016-09-03T05:12:25Z",
                  "state": "open",
                  "min_volume": 1,
                  "account_id": 1000,
                  "duration": 30,
                  "is_corp": false,
                  "escrow": 45.6
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 500,
              "items": {
                "type": "object",
                "required": [
                  "order_id",
                  "type_id",
                  "region_id",
                  "location_id",
                  "range",
                  "is_buy_order",
                  "price",
                  "volume_total",
                  "volume_remain",
                  "issued",
                  "state",
                  "min_volume",
                  "account_id",
                  "duration",
                  "is_corp",
                  "escrow"
                ],
                "properties": {
                  "order_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique order ID",
                    "title": "get_characters_character_id_orders_order_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The type ID of the item transacted in this order",
                    "title": "get_characters_character_id_orders_type_id"
                  },
                  "region_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the region where order was placed",
                    "title": "get_characters_character_id_orders_region_id"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the location where order was placed",
                    "title": "get_characters_character_id_orders_location_id"
                  },
                  "range": {
                    "type": "string",
                    "description": "Valid order range, numbers are ranges in jumps",
                    "enum": [
                      "1",
                      "10",
                      "2",
                      "20",
                      "3",
                      "30",
                      "4",
                      "40",
                      "5",
                      "region",
                      "solarsystem",
                      "station"
                    ],
                    "title": "get_characters_character_id_orders_range"
                  },
                  "is_buy_order": {
                    "type": "boolean",
                    "description": "True for a bid (buy) order. False for an offer (sell) order",
                    "title": "get_characters_character_id_orders_is_buy_order"
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Cost per unit for this order",
                    "title": "get_characters_character_id_orders_price"
                  },
                  "volume_total": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Quantity of items required or offered at time order was placed",
                    "title": "get_characters_character_id_orders_volume_total"
                  },
                  "volume_remain": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Quantity of items still required or offered",
                    "title": "get_characters_character_id_orders_volume_remain"
                  },
                  "issued": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this order was issued",
                    "title": "get_characters_character_id_orders_issued"
                  },
                  "state": {
                    "type": "string",
                    "description": "Current order state",
                    "enum": [
                      "cancelled",
                      "character_deleted",
                      "closed",
                      "expired",
                      "open",
                      "pending"
                    ],
                    "title": "get_characters_character_id_orders_state"
                  },
                  "min_volume": {
                    "type": "integer",
                    "format": "int32",
                    "description": "For bids (buy orders), the minimum quantity that will be accepted in a matching offer (sell order)",
                    "title": "get_characters_character_id_orders_min_volume"
                  },
                  "account_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Wallet division for the buyer or seller of this order. Always 1000 for characters. Currently 1000 through 1006 for corporations",
                    "title": "get_characters_character_id_orders_account_id"
                  },
                  "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days the order is valid for (starting from the issued date). An order expires at time issued + duration",
                    "title": "get_characters_character_id_orders_duration"
                  },
                  "is_corp": {
                    "type": "boolean",
                    "title": "get_characters_character_id_orders_is_corp",
                    "description": "is_corp boolean"
                  },
                  "escrow": {
                    "type": "number",
                    "format": "double",
                    "description": "For buy orders, the amount of ISK in escrow",
                    "title": "get_characters_character_id_orders_escrow"
                  }
                },
                "title": "get_characters_character_id_orders_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_orders_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-markets.read_character_orders.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_orders",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/orders/history/": {
      "get": {
        "summary": "List historical orders by a character",
        "description": "List cancelled and expired market orders placed by a character up to 90 days in the past.\n\n---\nAlternate route: `/dev/characters/{character_id}/orders/history/`\n\nAlternate route: `/legacy/characters/{character_id}/orders/history/`\n\nAlternate route: `/v1/characters/{character_id}/orders/history/`\n\n---\nThis route is cached for up to 3600 seconds",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Expired and cancelled market orders placed by a character",
            "examples": {
              "application/json": [
                {
                  "order_id": 123,
                  "type_id": 456,
                  "region_id": 123,
                  "location_id": 456,
                  "range": "station",
                  "is_buy_order": true,
                  "price": 33.3,
                  "volume_total": 123456,
                  "volume_remain": 4422,
                  "issued": "2016-09-03T05:12:25Z",
                  "state": "expired",
                  "min_volume": 1,
                  "duration": 30,
                  "is_corporation": false,
                  "escrow": 45.6
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "is_corporation",
                  "duration",
                  "state",
                  "order_id",
                  "type_id",
                  "region_id",
                  "location_id",
                  "range",
                  "price",
                  "volume_total",
                  "volume_remain",
                  "issued"
                ],
                "properties": {
                  "order_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique order ID",
                    "title": "get_characters_character_id_orders_history_order_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The type ID of the item transacted in this order",
                    "title": "get_characters_character_id_orders_history_type_id"
                  },
                  "region_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the region where order was placed",
                    "title": "get_characters_character_id_orders_history_region_id"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the location where order was placed",
                    "title": "get_characters_character_id_orders_history_location_id"
                  },
                  "range": {
                    "type": "string",
                    "description": "Valid order range, numbers are ranges in jumps",
                    "enum": [
                      "1",
                      "10",
                      "2",
                      "20",
                      "3",
                      "30",
                      "4",
                      "40",
                      "5",
                      "region",
                      "solarsystem",
                      "station"
                    ],
                    "title": "get_characters_character_id_orders_history_range"
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Cost per unit for this order",
                    "title": "get_characters_character_id_orders_history_price"
                  },
                  "volume_total": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Quantity of items required or offered at time order was placed",
                    "title": "get_characters_character_id_orders_history_volume_total"
                  },
                  "volume_remain": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Quantity of items still required or offered",
                    "title": "get_characters_character_id_orders_history_volume_remain"
                  },
                  "issued": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this order was issued",
                    "title": "get_characters_character_id_orders_history_issued"
                  },
                  "is_buy_order": {
                    "type": "boolean",
                    "description": "True if the order is a bid (buy) order",
                    "title": "get_characters_character_id_orders_history_is_buy_order"
                  },
                  "min_volume": {
                    "type": "integer",
                    "format": "int32",
                    "description": "For buy orders, the minimum quantity that will be accepted in a matching sell order",
                    "title": "get_characters_character_id_orders_history_min_volume"
                  },
                  "escrow": {
                    "type": "number",
                    "format": "double",
                    "description": "For buy orders, the amount of ISK in escrow",
                    "title": "get_characters_character_id_orders_history_escrow"
                  },
                  "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days the order was valid for (starting from the issued date). An order expires at time issued + duration",
                    "title": "get_characters_character_id_orders_history_duration"
                  },
                  "state": {
                    "type": "string",
                    "description": "Current order state",
                    "enum": [
                      "cancelled",
                      "expired"
                    ],
                    "title": "get_characters_character_id_orders_history_state"
                  },
                  "is_corporation": {
                    "type": "boolean",
                    "description": "Signifies whether the buy/sell order was placed on behalf of a corporation.",
                    "title": "get_characters_character_id_orders_history_is_corporation"
                  }
                },
                "title": "get_characters_character_id_orders_history_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_orders_history_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-markets.read_character_orders.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_orders_history",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/markets/{region_id}/types/": {
      "get": {
        "description": "Return a list of type IDs that have active orders in the region, for efficient market indexing.\n\n---\nAlternate route: `/dev/markets/{region_id}/types/`\n\nAlternate route: `/legacy/markets/{region_id}/types/`\n\nAlternate route: `/v1/markets/{region_id}/types/`\n\n---\nThis route is cached for up to 600 seconds",
        "summary": "List type IDs relevant to a market",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "name": "region_id",
            "in": "path",
            "description": "Return statistics in this region",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of type IDs",
            "examples": {
              "application/json": [
                587,
                593,
                597
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_markets_region_id_types_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_markets_region_id_types_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_markets_region_id_types",
        "x-cached-seconds": 600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/orders/": {
      "get": {
        "summary": "List open orders from a corporation",
        "description": "List open market orders placed on behalf of a corporation\n\n---\nAlternate route: `/legacy/corporations/{corporation_id}/orders/`\n\nAlternate route: `/v1/corporations/{corporation_id}/orders/`\n\n---\nThis route is cached for up to 1200 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant, Trader\n\n\n---\n[This route has an available update](https://esi.tech.ccp.is/diff/latest/dev/#GET-/corporations/{corporation_id}/orders/)",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of open market orders",
            "examples": {
              "application/json": [
                {
                  "order_id": 123,
                  "type_id": 456,
                  "region_id": 123,
                  "location_id": 456,
                  "range": "station",
                  "is_buy_order": true,
                  "price": 33.3,
                  "volume_total": 123456,
                  "volume_remain": 4422,
                  "issued": "2016-09-03T05:12:25Z",
                  "state": "open",
                  "min_volume": 1,
                  "wallet_division": 1,
                  "duration": 30,
                  "escrow": 45.6
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "order_id",
                  "type_id",
                  "region_id",
                  "location_id",
                  "range",
                  "is_buy_order",
                  "price",
                  "volume_total",
                  "volume_remain",
                  "issued",
                  "state",
                  "min_volume",
                  "wallet_division",
                  "duration",
                  "escrow"
                ],
                "properties": {
                  "order_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique order ID",
                    "title": "get_corporations_corporation_id_orders_order_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The type ID of the item transacted in this order",
                    "title": "get_corporations_corporation_id_orders_type_id"
                  },
                  "region_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the region where order was placed",
                    "title": "get_corporations_corporation_id_orders_region_id"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the location where order was placed",
                    "title": "get_corporations_corporation_id_orders_location_id"
                  },
                  "range": {
                    "type": "string",
                    "description": "Valid order range, numbers are ranges in jumps",
                    "enum": [
                      "1",
                      "10",
                      "2",
                      "20",
                      "3",
                      "30",
                      "4",
                      "40",
                      "5",
                      "region",
                      "solarsystem",
                      "station"
                    ],
                    "title": "get_corporations_corporation_id_orders_range"
                  },
                  "is_buy_order": {
                    "type": "boolean",
                    "description": "True for a bid (buy) order. False for an offer (sell) order",
                    "title": "get_corporations_corporation_id_orders_is_buy_order"
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Cost per unit for this order",
                    "title": "get_corporations_corporation_id_orders_price"
                  },
                  "volume_total": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Quantity of items required or offered at time order was placed",
                    "title": "get_corporations_corporation_id_orders_volume_total"
                  },
                  "volume_remain": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Quantity of items still required or offered",
                    "title": "get_corporations_corporation_id_orders_volume_remain"
                  },
                  "issued": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this order was issued",
                    "title": "get_corporations_corporation_id_orders_issued"
                  },
                  "state": {
                    "type": "string",
                    "description": "Current order state",
                    "enum": [
                      "cancelled",
                      "character_deleted",
                      "closed",
                      "expired",
                      "open",
                      "pending"
                    ],
                    "title": "get_corporations_corporation_id_orders_state"
                  },
                  "min_volume": {
                    "type": "integer",
                    "format": "int32",
                    "description": "For bids (buy orders), the minimum quantity that will be accepted in a matching offer (sell order)",
                    "title": "get_corporations_corporation_id_orders_min_volume"
                  },
                  "wallet_division": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 7,
                    "description": "The corporation wallet division used for this order.",
                    "title": "get_corporations_corporation_id_orders_wallet_division"
                  },
                  "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days the order is valid for (starting from the issued date). An order expires at time issued + duration",
                    "title": "get_corporations_corporation_id_orders_duration"
                  },
                  "escrow": {
                    "type": "number",
                    "format": "double",
                    "description": "For buy orders, the amount of ISK in escrow",
                    "title": "get_corporations_corporation_id_orders_escrow"
                  }
                },
                "title": "get_corporations_corporation_id_orders_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_orders_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Accountant",
          "Trader"
        ],
        "security": [
          {
            "evesso": [
              "esi-markets.read_corporation_orders.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_orders",
        "x-cached-seconds": 1200,
        "x-alternate-versions": [
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/orders/history/": {
      "get": {
        "summary": "List historical orders from a corporation",
        "description": "List cancelled and expired market orders placed on behalf of a corporation up to 90 days in the past.\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/orders/history/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/orders/history/`\n\nAlternate route: `/v1/corporations/{corporation_id}/orders/history/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant, Trader\n",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Expired and cancelled market orders placed on behalf of a corporation",
            "examples": {
              "application/json": [
                {
                  "order_id": 123,
                  "type_id": 456,
                  "region_id": 123,
                  "location_id": 456,
                  "range": "station",
                  "is_buy_order": true,
                  "price": 33.3,
                  "volume_total": 123456,
                  "volume_remain": 4422,
                  "issued": "2016-09-03T05:12:25Z",
                  "state": "expired",
                  "min_volume": 1,
                  "wallet_division": 1,
                  "duration": 30,
                  "escrow": 45.6
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "wallet_division",
                  "duration",
                  "state",
                  "order_id",
                  "type_id",
                  "region_id",
                  "location_id",
                  "range",
                  "price",
                  "volume_total",
                  "volume_remain",
                  "issued"
                ],
                "properties": {
                  "order_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique order ID",
                    "title": "get_corporations_corporation_id_orders_history_order_id"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The type ID of the item transacted in this order",
                    "title": "get_corporations_corporation_id_orders_history_type_id"
                  },
                  "region_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the region where order was placed",
                    "title": "get_corporations_corporation_id_orders_history_region_id"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the location where order was placed",
                    "title": "get_corporations_corporation_id_orders_history_location_id"
                  },
                  "range": {
                    "type": "string",
                    "description": "Valid order range, numbers are ranges in jumps",
                    "enum": [
                      "1",
                      "10",
                      "2",
                      "20",
                      "3",
                      "30",
                      "4",
                      "40",
                      "5",
                      "region",
                      "solarsystem",
                      "station"
                    ],
                    "title": "get_corporations_corporation_id_orders_history_range"
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Cost per unit for this order",
                    "title": "get_corporations_corporation_id_orders_history_price"
                  },
                  "volume_total": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Quantity of items required or offered at time order was placed",
                    "title": "get_corporations_corporation_id_orders_history_volume_total"
                  },
                  "volume_remain": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Quantity of items still required or offered",
                    "title": "get_corporations_corporation_id_orders_history_volume_remain"
                  },
                  "issued": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time when this order was issued",
                    "title": "get_corporations_corporation_id_orders_history_issued"
                  },
                  "is_buy_order": {
                    "type": "boolean",
                    "description": "True if the order is a bid (buy) order",
                    "title": "get_corporations_corporation_id_orders_history_is_buy_order"
                  },
                  "min_volume": {
                    "type": "integer",
                    "format": "int32",
                    "description": "For buy orders, the minimum quantity that will be accepted in a matching sell order",
                    "title": "get_corporations_corporation_id_orders_history_min_volume"
                  },
                  "escrow": {
                    "type": "number",
                    "format": "double",
                    "description": "For buy orders, the amount of ISK in escrow",
                    "title": "get_corporations_corporation_id_orders_history_escrow"
                  },
                  "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days the order was valid for (starting from the issued date). An order expires at time issued + duration",
                    "title": "get_corporations_corporation_id_orders_history_duration"
                  },
                  "state": {
                    "type": "string",
                    "description": "Current order state",
                    "enum": [
                      "cancelled",
                      "expired"
                    ],
                    "title": "get_corporations_corporation_id_orders_history_state"
                  },
                  "wallet_division": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 7,
                    "description": "The corporation wallet division used for this order.",
                    "title": "get_corporations_corporation_id_orders_history_wallet_division"
                  }
                },
                "title": "get_corporations_corporation_id_orders_history_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_orders_history_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Accountant",
          "Trader"
        ],
        "security": [
          {
            "evesso": [
              "esi-markets.read_corporation_orders.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_orders_history",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/opportunities/groups/": {
      "get": {
        "description": "Return a list of opportunities groups\n\n---\nAlternate route: `/dev/opportunities/groups/`\n\nAlternate route: `/legacy/opportunities/groups/`\n\nAlternate route: `/v1/opportunities/groups/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get opportunities groups",
        "tags": [
          "Opportunities"
        ],
        "responses": {
          "200": {
            "description": "A list of opportunities group ids",
            "examples": {
              "application/json": [
                100,
                101,
                102,
                103
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 50,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_opportunities_groups_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_opportunities_groups_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_opportunities_groups",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/opportunities/groups/{group_id}/": {
      "get": {
        "description": "Return information of an opportunities group\n\n---\nAlternate route: `/dev/opportunities/groups/{group_id}/`\n\nAlternate route: `/legacy/opportunities/groups/{group_id}/`\n\nAlternate route: `/v1/opportunities/groups/{group_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get opportunities group",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of an opportunities group",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of an opportunities group",
            "examples": {
              "application/json": {
                "group_id": 103,
                "name": "Welcome to New Eden",
                "description": "As a capsuleer...",
                "notification": "Completed:<br>Welcome to New Eden",
                "required_tasks": [
                  19
                ],
                "connected_groups": [
                  100
                ]
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "group_id",
                "name",
                "description",
                "notification",
                "required_tasks",
                "connected_groups"
              ],
              "properties": {
                "group_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_opportunities_groups_group_id_group_id",
                  "description": "group_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_opportunities_groups_group_id_name",
                  "description": "name string"
                },
                "description": {
                  "type": "string",
                  "title": "get_opportunities_groups_group_id_description",
                  "description": "description string"
                },
                "notification": {
                  "type": "string",
                  "title": "get_opportunities_groups_group_id_notification",
                  "description": "notification string"
                },
                "required_tasks": {
                  "description": "Tasks need to complete for this group",
                  "type": "array",
                  "maxItems": 100,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_opportunities_groups_group_id_required_task",
                    "description": "required_task integer"
                  },
                  "title": "get_opportunities_groups_group_id_required_tasks"
                },
                "connected_groups": {
                  "description": "The groups that are connected to this group on the opportunities map",
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_opportunities_groups_group_id_connected_group",
                    "description": "connected_group integer"
                  },
                  "title": "get_opportunities_groups_group_id_connected_groups"
                }
              },
              "title": "get_opportunities_groups_group_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_opportunities_groups_group_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/opportunities/tasks/": {
      "get": {
        "description": "Return a list of opportunities tasks\n\n---\nAlternate route: `/dev/opportunities/tasks/`\n\nAlternate route: `/legacy/opportunities/tasks/`\n\nAlternate route: `/v1/opportunities/tasks/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get opportunities tasks",
        "tags": [
          "Opportunities"
        ],
        "responses": {
          "200": {
            "description": "A list of opportunities task ids",
            "examples": {
              "application/json": [
                1,
                2,
                3,
                4
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_opportunities_tasks_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_opportunities_tasks_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_opportunities_tasks",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/opportunities/tasks/{task_id}/": {
      "get": {
        "description": "Return information of an opportunities task\n\n---\nAlternate route: `/dev/opportunities/tasks/{task_id}/`\n\nAlternate route: `/legacy/opportunities/tasks/{task_id}/`\n\nAlternate route: `/v1/opportunities/tasks/{task_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get opportunities task",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "task_id",
            "in": "path",
            "description": "ID of an opportunities task",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of an opportunities task",
            "examples": {
              "application/json": {
                "task_id": 10,
                "name": "Dock in the station",
                "description": "To use station services...",
                "notification": "Completed:<br>Docked in a station!"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "task_id",
                "name",
                "description",
                "notification"
              ],
              "properties": {
                "task_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_opportunities_tasks_task_id_task_id",
                  "description": "task_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_opportunities_tasks_task_id_name",
                  "description": "name string"
                },
                "description": {
                  "type": "string",
                  "title": "get_opportunities_tasks_task_id_description",
                  "description": "description string"
                },
                "notification": {
                  "type": "string",
                  "title": "get_opportunities_tasks_task_id_notification",
                  "description": "notification string"
                }
              },
              "title": "get_opportunities_tasks_task_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_opportunities_tasks_task_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/opportunities/": {
      "get": {
        "description": "Return a list of tasks finished by a character\n\n---\nAlternate route: `/dev/characters/{character_id}/opportunities/`\n\nAlternate route: `/legacy/characters/{character_id}/opportunities/`\n\nAlternate route: `/v1/characters/{character_id}/opportunities/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get a character's completed tasks",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of opportunities task ids",
            "examples": {
              "application/json": [
                {
                  "task_id": 1,
                  "completed_at": "2016-04-29T12:34:56Z"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "object",
                "required": [
                  "task_id",
                  "completed_at"
                ],
                "properties": {
                  "task_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_opportunities_task_id",
                    "description": "task_id integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_characters_character_id_opportunities_completed_at",
                    "description": "completed_at string"
                  }
                },
                "title": "get_characters_character_id_opportunities_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_opportunities_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-characters.read_opportunities.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_opportunities",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/planets/": {
      "get": {
        "description": "Returns a list of all planetary colonies owned by a character.\n\n---\nAlternate route: `/dev/characters/{character_id}/planets/`\n\nAlternate route: `/legacy/characters/{character_id}/planets/`\n\nAlternate route: `/v1/characters/{character_id}/planets/`\n\n---\nThis route is cached for up to 600 seconds",
        "summary": "Get colonies",
        "tags": [
          "Planetary Interaction"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of colonies",
            "examples": {
              "application/json": [
                {
                  "solar_system_id": 30000379,
                  "upgrade_level": 0,
                  "planet_id": 40023691,
                  "last_update": "2016-11-28T16:42:51Z",
                  "owner_id": 90000001,
                  "planet_type": "plasma",
                  "num_pins": 1
                },
                {
                  "solar_system_id": 30000379,
                  "upgrade_level": 0,
                  "planet_id": 40023697,
                  "last_update": "2016-11-28T16:41:54Z",
                  "owner_id": 90000001,
                  "planet_type": "barren",
                  "num_pins": 1
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10,
              "items": {
                "type": "object",
                "required": [
                  "solar_system_id",
                  "planet_id",
                  "planet_type",
                  "owner_id",
                  "last_update",
                  "upgrade_level",
                  "num_pins"
                ],
                "properties": {
                  "solar_system_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_planets_solar_system_id",
                    "description": "solar_system_id integer"
                  },
                  "planet_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_planets_planet_id",
                    "description": "planet_id integer"
                  },
                  "owner_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_planets_owner_id",
                    "description": "owner_id integer"
                  },
                  "upgrade_level": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 5,
                    "title": "get_characters_character_id_planets_upgrade_level",
                    "description": "upgrade_level integer"
                  },
                  "num_pins": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "title": "get_characters_character_id_planets_num_pins",
                    "description": "num_pins integer"
                  },
                  "last_update": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_characters_character_id_planets_last_update",
                    "description": "last_update string"
                  },
                  "planet_type": {
                    "type": "string",
                    "enum": [
                      "temperate",
                      "barren",
                      "oceanic",
                      "ice",
                      "gas",
                      "lava",
                      "storm",
                      "plasma"
                    ],
                    "title": "get_characters_character_id_planets_planet_type",
                    "description": "planet_type string"
                  }
                },
                "title": "get_characters_character_id_planets_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_planets_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-planets.manage_planets.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_planets",
        "x-cached-seconds": 600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/planets/{planet_id}/": {
      "get": {
        "description": "Returns full details on the layout of a single planetary colony, including links, pins and routes. Note: Planetary information is only recalculated when the colony is viewed through the client. Information will not update until this criteria is met.\n\n---\nAlternate route: `/dev/characters/{character_id}/planets/{planet_id}/`\n\nAlternate route: `/v3/characters/{character_id}/planets/{planet_id}/`\n\n---\nThis route is cached for up to 600 seconds",
        "summary": "Get colony layout",
        "tags": [
          "Planetary Interaction"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "description": "Planet id of the target planet",
            "format": "int32",
            "in": "path",
            "name": "planet_id",
            "required": true,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Colony layout",
            "examples": {
              "application/json": {
                "links": [
                  {
                    "source_pin_id": 1000000017021,
                    "destination_pin_id": 1000000017022,
                    "link_level": 0
                  }
                ],
                "pins": [
                  {
                    "longitude": 0.717145933308,
                    "is_running": true,
                    "type_id": 2254,
                    "pin_id": 1000000017021,
                    "latitude": 1.55087844973
                  },
                  {
                    "longitude": 0.709775584394,
                    "is_running": true,
                    "type_id": 2256,
                    "pin_id": 1000000017022,
                    "latitude": 1.53360639935
                  }
                ],
                "routes": [
                  {
                    "source_pin_id": 1000000017029,
                    "quantity": 20,
                    "content_type_id": 2393,
                    "route_id": 4,
                    "destination_pin_id": 1000000017030
                  }
                ]
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "links",
                "pins",
                "routes"
              ],
              "properties": {
                "links": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "object",
                    "required": [
                      "source_pin_id",
                      "destination_pin_id",
                      "link_level"
                    ],
                    "properties": {
                      "source_pin_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_planets_planet_id_source_pin_id",
                        "description": "source_pin_id integer"
                      },
                      "destination_pin_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_planets_planet_id_destination_pin_id",
                        "description": "destination_pin_id integer"
                      },
                      "link_level": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 10,
                        "title": "get_characters_character_id_planets_planet_id_link_level",
                        "description": "link_level integer"
                      }
                    },
                    "title": "get_characters_character_id_planets_planet_id_link",
                    "description": "link object"
                  },
                  "title": "get_characters_character_id_planets_planet_id_links",
                  "description": "links array"
                },
                "pins": {
                  "type": "array",
                  "maxItems": 100,
                  "items": {
                    "type": "object",
                    "required": [
                      "pin_id",
                      "type_id",
                      "latitude",
                      "longitude"
                    ],
                    "properties": {
                      "latitude": {
                        "type": "number",
                        "format": "float",
                        "title": "get_characters_character_id_planets_planet_id_latitude",
                        "description": "latitude number"
                      },
                      "longitude": {
                        "type": "number",
                        "format": "float",
                        "title": "get_characters_character_id_planets_planet_id_longitude",
                        "description": "longitude number"
                      },
                      "pin_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_planets_planet_id_pin_id",
                        "description": "pin_id integer"
                      },
                      "type_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_planets_planet_id_type_id",
                        "description": "type_id integer"
                      },
                      "schematic_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_planets_planet_id_schematic_id",
                        "description": "schematic_id integer"
                      },
                      "extractor_details": {
                        "type": "object",
                        "required": [
                          "heads"
                        ],
                        "properties": {
                          "heads": {
                            "type": "array",
                            "maxItems": 10,
                            "items": {
                              "type": "object",
                              "required": [
                                "head_id",
                                "latitude",
                                "longitude"
                              ],
                              "properties": {
                                "head_id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0,
                                  "maximum": 9,
                                  "title": "get_characters_character_id_planets_planet_id_head_id",
                                  "description": "head_id integer"
                                },
                                "latitude": {
                                  "type": "number",
                                  "format": "float",
                                  "title": "get_characters_character_id_planets_planet_id_latitude",
                                  "description": "latitude number"
                                },
                                "longitude": {
                                  "type": "number",
                                  "format": "float",
                                  "title": "get_characters_character_id_planets_planet_id_longitude",
                                  "description": "longitude number"
                                }
                              },
                              "title": "get_characters_character_id_planets_planet_id_head",
                              "description": "head object"
                            },
                            "title": "get_characters_character_id_planets_planet_id_heads",
                            "description": "heads array"
                          },
                          "product_type_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_characters_character_id_planets_planet_id_product_type_id",
                            "description": "product_type_id integer"
                          },
                          "cycle_time": {
                            "description": "in seconds",
                            "type": "integer",
                            "format": "int32",
                            "title": "get_characters_character_id_planets_planet_id_cycle_time"
                          },
                          "head_radius": {
                            "type": "number",
                            "format": "float",
                            "title": "get_characters_character_id_planets_planet_id_head_radius",
                            "description": "head_radius number"
                          },
                          "qty_per_cycle": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_characters_character_id_planets_planet_id_qty_per_cycle",
                            "description": "qty_per_cycle integer"
                          }
                        },
                        "title": "get_characters_character_id_planets_planet_id_extractor_details",
                        "description": "extractor_details object"
                      },
                      "factory_details": {
                        "type": "object",
                        "required": [
                          "schematic_id"
                        ],
                        "properties": {
                          "schematic_id": {
                            "type": "integer",
                            "format": "int32",
                            "title": "get_characters_character_id_planets_planet_id_schematic_id",
                            "description": "schematic_id integer"
                          }
                        },
                        "title": "get_characters_character_id_planets_planet_id_factory_details",
                        "description": "factory_details object"
                      },
                      "contents": {
                        "type": "array",
                        "maxItems": 90,
                        "items": {
                          "type": "object",
                          "required": [
                            "type_id",
                            "amount"
                          ],
                          "properties": {
                            "type_id": {
                              "type": "integer",
                              "format": "int32",
                              "title": "get_characters_character_id_planets_planet_id_type_id",
                              "description": "type_id integer"
                            },
                            "amount": {
                              "type": "integer",
                              "format": "int64",
                              "title": "get_characters_character_id_planets_planet_id_amount",
                              "description": "amount integer"
                            }
                          },
                          "title": "get_characters_character_id_planets_planet_id_content",
                          "description": "content object"
                        },
                        "title": "get_characters_character_id_planets_planet_id_contents",
                        "description": "contents array"
                      },
                      "install_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "get_characters_character_id_planets_planet_id_install_time",
                        "description": "install_time string"
                      },
                      "expiry_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "get_characters_character_id_planets_planet_id_expiry_time",
                        "description": "expiry_time string"
                      },
                      "last_cycle_start": {
                        "type": "string",
                        "format": "date-time",
                        "title": "get_characters_character_id_planets_planet_id_last_cycle_start",
                        "description": "last_cycle_start string"
                      }
                    },
                    "title": "get_characters_character_id_planets_planet_id_pin",
                    "description": "pin object"
                  },
                  "title": "get_characters_character_id_planets_planet_id_pins",
                  "description": "pins array"
                },
                "routes": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "required": [
                      "route_id",
                      "source_pin_id",
                      "destination_pin_id",
                      "content_type_id",
                      "quantity"
                    ],
                    "properties": {
                      "route_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_planets_planet_id_route_id",
                        "description": "route_id integer"
                      },
                      "source_pin_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_planets_planet_id_source_pin_id",
                        "description": "source_pin_id integer"
                      },
                      "destination_pin_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_planets_planet_id_destination_pin_id",
                        "description": "destination_pin_id integer"
                      },
                      "content_type_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_planets_planet_id_content_type_id",
                        "description": "content_type_id integer"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "float",
                        "title": "get_characters_character_id_planets_planet_id_quantity",
                        "description": "quantity number"
                      },
                      "waypoints": {
                        "type": "array",
                        "maxItems": 5,
                        "description": "list of pin ID waypoints",
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "title": "get_characters_character_id_planets_planet_id_waypoint",
                          "description": "waypoint integer"
                        },
                        "title": "get_characters_character_id_planets_planet_id_waypoints"
                      }
                    },
                    "title": "get_characters_character_id_planets_planet_id_route",
                    "description": "route object"
                  },
                  "title": "get_characters_character_id_planets_planet_id_routes",
                  "description": "routes array"
                }
              },
              "title": "get_characters_character_id_planets_planet_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "Colony not found",
            "examples": {
              "application/json": {
                "error": "Colony not found"
              }
            },
            "schema": {
              "type": "object",
              "description": "Colony not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "error message",
                  "title": "get_characters_character_id_planets_planet_id_error"
                }
              },
              "title": "get_characters_character_id_planets_planet_id_not_found"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-planets.manage_planets.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_planets_planet_id",
        "x-cached-seconds": 600,
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      }
    },
    "/universe/schematics/{schematic_id}/": {
      "get": {
        "description": "Get information on a planetary factory schematic\n\n---\nAlternate route: `/dev/universe/schematics/{schematic_id}/`\n\nAlternate route: `/legacy/universe/schematics/{schematic_id}/`\n\nAlternate route: `/v1/universe/schematics/{schematic_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get schematic information",
        "tags": [
          "Planetary Interaction"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "schematic_id",
            "in": "path",
            "description": "A PI schematic ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Public data about a schematic",
            "examples": {
              "application/json": {
                "schematic_name": "Bacteria",
                "cycle_time": 1800
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "schematic_name",
                "cycle_time"
              ],
              "properties": {
                "schematic_name": {
                  "type": "string",
                  "title": "get_universe_schematics_schematic_id_schematic_name",
                  "description": "schematic_name string"
                },
                "cycle_time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Time in seconds to process a run",
                  "title": "get_universe_schematics_schematic_id_cycle_time"
                }
              },
              "title": "get_universe_schematics_schematic_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Schematic not found",
            "examples": {
              "application/json": {
                "error": "Schematic not found"
              }
            },
            "schema": {
              "type": "object",
              "description": "Schematic not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "error message",
                  "title": "get_universe_schematics_schematic_id_error"
                }
              },
              "title": "get_universe_schematics_schematic_id_not_found"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_schematics_schematic_id",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/customs_offices/": {
      "get": {
        "description": "List customs offices owned by a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/customs_offices/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/customs_offices/`\n\nAlternate route: `/v1/corporations/{corporation_id}/customs_offices/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Director\n",
        "summary": "List corporation customs offices",
        "tags": [
          "Planetary Interaction"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of customs offices and their settings",
            "examples": {
              "application/json": [
                {
                  "office_id": 1000000014530,
                  "system_id": 30003657,
                  "reinforce_exit_start": 23,
                  "reinforce_exit_end": 1,
                  "allow_alliance_access": false,
                  "allow_access_with_standings": true,
                  "standing_level": "neutral",
                  "corporation_tax_rate": 0.02,
                  "alliance_tax_rate": 0.1,
                  "excellent_standing_tax_rate": 0.05,
                  "good_standing_tax_rate": 0.2,
                  "neutral_standing_tax_rate": 0.5
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "office_id",
                  "system_id",
                  "reinforce_exit_start",
                  "reinforce_exit_end",
                  "allow_alliance_access",
                  "allow_access_with_standings"
                ],
                "properties": {
                  "office_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "unique ID of this customs office",
                    "title": "get_corporations_corporation_id_customs_offices_office_id"
                  },
                  "system_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the solar system this customs office is located in",
                    "title": "get_corporations_corporation_id_customs_offices_system_id"
                  },
                  "reinforce_exit_start": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 23,
                    "description": "Together with reinforce_exit_end, marks a 2-hour period where this customs office could exit reinforcement mode during the day after initial attack",
                    "title": "get_corporations_corporation_id_customs_offices_reinforce_exit_start"
                  },
                  "reinforce_exit_end": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 23,
                    "title": "get_corporations_corporation_id_customs_offices_reinforce_exit_end",
                    "description": "reinforce_exit_end integer"
                  },
                  "corporation_tax_rate": {
                    "type": "number",
                    "format": "float",
                    "title": "get_corporations_corporation_id_customs_offices_corporation_tax_rate",
                    "description": "corporation_tax_rate number"
                  },
                  "allow_alliance_access": {
                    "type": "boolean",
                    "title": "get_corporations_corporation_id_customs_offices_allow_alliance_access",
                    "description": "allow_alliance_access boolean"
                  },
                  "alliance_tax_rate": {
                    "type": "number",
                    "format": "float",
                    "description": "Only present if alliance access is allowed",
                    "title": "get_corporations_corporation_id_customs_offices_alliance_tax_rate"
                  },
                  "allow_access_with_standings": {
                    "type": "boolean",
                    "description": "standing_level and any standing related tax rate only present when this is true",
                    "title": "get_corporations_corporation_id_customs_offices_allow_access_with_standings"
                  },
                  "standing_level": {
                    "type": "string",
                    "enum": [
                      "bad",
                      "excellent",
                      "good",
                      "neutral",
                      "terrible"
                    ],
                    "description": "Access is allowed only for entities with this level of standing or better",
                    "title": "get_corporations_corporation_id_customs_offices_standing_level"
                  },
                  "excellent_standing_tax_rate": {
                    "type": "number",
                    "format": "float",
                    "description": "Tax rate for entities with excellent level of standing, only present if this level is allowed, same for all other standing related tax rates",
                    "title": "get_corporations_corporation_id_customs_offices_excellent_standing_tax_rate"
                  },
                  "good_standing_tax_rate": {
                    "type": "number",
                    "format": "float",
                    "title": "get_corporations_corporation_id_customs_offices_good_standing_tax_rate",
                    "description": "good_standing_tax_rate number"
                  },
                  "neutral_standing_tax_rate": {
                    "type": "number",
                    "format": "float",
                    "title": "get_corporations_corporation_id_customs_offices_neutral_standing_tax_rate",
                    "description": "neutral_standing_tax_rate number"
                  },
                  "bad_standing_tax_rate": {
                    "type": "number",
                    "format": "float",
                    "title": "get_corporations_corporation_id_customs_offices_bad_standing_tax_rate",
                    "description": "bad_standing_tax_rate number"
                  },
                  "terrible_standing_tax_rate": {
                    "type": "number",
                    "format": "float",
                    "title": "get_corporations_corporation_id_customs_offices_terrible_standing_tax_rate",
                    "description": "terrible_standing_tax_rate number"
                  }
                },
                "title": "get_corporations_corporation_id_customs_offices_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_customs_offices_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Director"
        ],
        "security": [
          {
            "evesso": [
              "esi-planets.read_customs_offices.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_customs_offices",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/route/{origin}/{destination}/": {
      "get": {
        "description": "Get the systems between origin and destination\n\n---\nAlternate route: `/dev/route/{origin}/{destination}/`\n\nAlternate route: `/legacy/route/{origin}/{destination}/`\n\nAlternate route: `/v1/route/{origin}/{destination}/`\n\n---\nThis route is cached for up to 86400 seconds",
        "summary": "Get route",
        "tags": [
          "Routes"
        ],
        "parameters": [
          {
            "name": "avoid",
            "in": "query",
            "description": "avoid solar system ID(s)",
            "type": "array",
            "maxItems": 100,
            "uniqueItems": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "connections",
            "in": "query",
            "type": "array",
            "description": "connected solar system pairs",
            "maxItems": 100,
            "uniqueItems": true,
            "items": {
              "type": "array",
              "minItems": 2,
              "maxItems": 2,
              "uniqueItems": true,
              "collectionFormat": "pipes",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "destination",
            "in": "path",
            "description": "destination solar system ID",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "flag",
            "in": "query",
            "description": "route security preference",
            "default": "shortest",
            "type": "string",
            "enum": [
              "shortest",
              "secure",
              "insecure"
            ]
          },
          {
            "name": "origin",
            "in": "path",
            "description": "origin solar system ID",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Solar systems in route from origin to destination",
            "examples": {
              "application/json": [
                30002771,
                30002770,
                30002769,
                30002772
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "description": "Solar systems in route",
              "items": {
                "description": "Solar system in route",
                "type": "integer",
                "format": "int32",
                "title": "Solar system ID"
              },
              "title": "get_route_origin_destination_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "No route found",
            "schema": {
              "type": "object",
              "title": "get_route_origin_destination_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_route_origin_destination_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_route_origin_destination",
        "x-cached-seconds": 86400,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/search/": {
      "get": {
        "description": "Search for entities that match a given sub-string.\n\n---\nAlternate route: `/dev/characters/{character_id}/search/`\n\nAlternate route: `/v3/characters/{character_id}/search/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Search on a string",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "categories",
            "in": "query",
            "description": "Type of entities to search for",
            "required": true,
            "type": "array",
            "minItems": 1,
            "maxItems": 11,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "agent",
                "alliance",
                "character",
                "constellation",
                "corporation",
                "faction",
                "inventory_type",
                "region",
                "solar_system",
                "station",
                "structure"
              ]
            }
          },
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "name": "search",
            "in": "query",
            "description": "The string to search on",
            "required": true,
            "type": "string",
            "minLength": 3
          },
          {
            "name": "strict",
            "in": "query",
            "description": "Whether the search should be a strict match",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of search results",
            "examples": {
              "application/json": {
                "station": [
                  60004588,
                  60004594,
                  60005725,
                  60009106,
                  60012721,
                  60012724,
                  60012727
                ],
                "solar_system": [
                  30002510
                ]
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "agent": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_search_agent",
                    "description": "agent integer"
                  },
                  "title": "get_characters_character_id_search_agent",
                  "description": "agent array"
                },
                "alliance": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_search_alliance",
                    "description": "alliance integer"
                  },
                  "title": "get_characters_character_id_search_alliance",
                  "description": "alliance array"
                },
                "character": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_search_character",
                    "description": "character integer"
                  },
                  "title": "get_characters_character_id_search_character",
                  "description": "character array"
                },
                "constellation": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_search_constellation",
                    "description": "constellation integer"
                  },
                  "title": "get_characters_character_id_search_constellation",
                  "description": "constellation array"
                },
                "corporation": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_search_corporation",
                    "description": "corporation integer"
                  },
                  "title": "get_characters_character_id_search_corporation",
                  "description": "corporation array"
                },
                "faction": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_search_faction",
                    "description": "faction integer"
                  },
                  "title": "get_characters_character_id_search_faction",
                  "description": "faction array"
                },
                "inventory_type": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_search_inventory_type",
                    "description": "inventory_type integer"
                  },
                  "title": "get_characters_character_id_search_inventory_type",
                  "description": "inventory_type array"
                },
                "region": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_search_region",
                    "description": "region integer"
                  },
                  "title": "get_characters_character_id_search_region",
                  "description": "region array"
                },
                "solar_system": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_search_solar_system",
                    "description": "solar_system integer"
                  },
                  "title": "get_characters_character_id_search_solar_system",
                  "description": "solar_system array"
                },
                "station": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_search_station",
                    "description": "station integer"
                  },
                  "title": "get_characters_character_id_search_station",
                  "description": "station array"
                },
                "structure": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_characters_character_id_search_structure",
                    "description": "structure integer"
                  },
                  "title": "get_characters_character_id_search_structure",
                  "description": "structure array"
                }
              },
              "title": "get_characters_character_id_search_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-search.search_structures.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_search",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      }
    },
    "/search/": {
      "get": {
        "description": "Search for entities that match a given sub-string.\n\n---\nAlternate route: `/dev/search/`\n\nAlternate route: `/v2/search/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Search on a string",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "categories",
            "in": "query",
            "description": "Type of entities to search for",
            "required": true,
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "agent",
                "alliance",
                "character",
                "constellation",
                "corporation",
                "faction",
                "inventory_type",
                "region",
                "solar_system",
                "station"
              ]
            }
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "name": "search",
            "in": "query",
            "description": "The string to search on",
            "required": true,
            "type": "string",
            "minLength": 3
          },
          {
            "name": "strict",
            "in": "query",
            "description": "Whether the search should be a strict match",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of search results",
            "examples": {
              "application/json": {
                "station": [
                  60004588,
                  60004594,
                  60005725,
                  60009106,
                  60012721,
                  60012724,
                  60012727
                ],
                "solar_system": [
                  30002510
                ]
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "agent": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_search_agent",
                    "description": "agent integer"
                  },
                  "title": "get_search_agent",
                  "description": "agent array"
                },
                "alliance": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_search_alliance",
                    "description": "alliance integer"
                  },
                  "title": "get_search_alliance",
                  "description": "alliance array"
                },
                "character": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_search_character",
                    "description": "character integer"
                  },
                  "title": "get_search_character",
                  "description": "character array"
                },
                "constellation": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_search_constellation",
                    "description": "constellation integer"
                  },
                  "title": "get_search_constellation",
                  "description": "constellation array"
                },
                "corporation": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_search_corporation",
                    "description": "corporation integer"
                  },
                  "title": "get_search_corporation",
                  "description": "corporation array"
                },
                "faction": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_search_faction",
                    "description": "faction integer"
                  },
                  "title": "get_search_faction",
                  "description": "faction array"
                },
                "inventory_type": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_search_inventory_type",
                    "description": "inventory_type integer"
                  },
                  "title": "get_search_inventory_type",
                  "description": "inventory_type array"
                },
                "region": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_search_region",
                    "description": "region integer"
                  },
                  "title": "get_search_region",
                  "description": "region array"
                },
                "solar_system": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_search_solar_system",
                    "description": "solar_system integer"
                  },
                  "title": "get_search_solar_system",
                  "description": "solar_system array"
                },
                "station": {
                  "type": "array",
                  "maxItems": 500,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_search_station",
                    "description": "station integer"
                  },
                  "title": "get_search_station",
                  "description": "station array"
                }
              },
              "title": "get_search_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_search",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/characters/{character_id}/skillqueue/": {
      "get": {
        "description": "List the configured skill queue for the given character\n\n---\nAlternate route: `/dev/characters/{character_id}/skillqueue/`\n\nAlternate route: `/legacy/characters/{character_id}/skillqueue/`\n\nAlternate route: `/v2/characters/{character_id}/skillqueue/`\n\n---\nThis route is cached for up to 120 seconds",
        "summary": "Get character's skill queue",
        "tags": [
          "Skills"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "The current skill queue, sorted ascending by finishing time",
            "examples": {
              "application/json": [
                {
                  "skill_id": 1,
                  "finish_date": "2016-06-29T10:47:00Z",
                  "start_date": "2016-06-29T10:46:00Z",
                  "finished_level": 3,
                  "queue_position": 0
                },
                {
                  "skill_id": 1,
                  "finish_date": "2016-07-15T10:47:00Z",
                  "start_date": "2016-06-29T10:47:00Z",
                  "finished_level": 4,
                  "queue_position": 1
                },
                {
                  "skill_id": 2,
                  "finish_date": "2016-08-30T10:47:00Z",
                  "start_date": "2016-07-15T10:47:00Z",
                  "finished_level": 2,
                  "queue_position": 2
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 51,
              "items": {
                "type": "object",
                "required": [
                  "skill_id",
                  "finished_level",
                  "queue_position"
                ],
                "properties": {
                  "skill_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_skillqueue_skill_id",
                    "description": "skill_id integer"
                  },
                  "finish_date": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_characters_character_id_skillqueue_finish_date",
                    "description": "finish_date string"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "title": "get_characters_character_id_skillqueue_start_date",
                    "description": "start_date string"
                  },
                  "finished_level": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 5,
                    "title": "get_characters_character_id_skillqueue_finished_level",
                    "description": "finished_level integer"
                  },
                  "queue_position": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_skillqueue_queue_position",
                    "description": "queue_position integer"
                  },
                  "training_start_sp": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_skillqueue_training_start_sp",
                    "description": "training_start_sp integer"
                  },
                  "level_end_sp": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_skillqueue_level_end_sp",
                    "description": "level_end_sp integer"
                  },
                  "level_start_sp": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Amount of SP that was in the skill when it started training it's current level. Used to calculate % of current level complete.",
                    "title": "get_characters_character_id_skillqueue_level_start_sp"
                  }
                },
                "title": "get_characters_character_id_skillqueue_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_skillqueue_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-skills.read_skillqueue.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_skillqueue",
        "x-cached-seconds": 120,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v2"
        ]
      }
    },
    "/characters/{character_id}/skills/": {
      "get": {
        "description": "List all trained skills for the given character\n\n---\nAlternate route: `/dev/characters/{character_id}/skills/`\n\nAlternate route: `/v4/characters/{character_id}/skills/`\n\n---\nThis route is cached for up to 120 seconds",
        "summary": "Get character skills",
        "tags": [
          "Skills"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Known skills for the character",
            "examples": {
              "application/json": {
                "skills": [
                  {
                    "skill_id": 1,
                    "skillpoints_in_skill": 10000,
                    "trained_skill_level": 4,
                    "active_skill_level": 3
                  },
                  {
                    "skill_id": 2,
                    "skillpoints_in_skill": 10000,
                    "trained_skill_level": 1,
                    "active_skill_level": 1
                  }
                ],
                "total_sp": 20000
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "skills",
                "total_sp"
              ],
              "properties": {
                "skills": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "required": [
                      "skill_id",
                      "skillpoints_in_skill",
                      "trained_skill_level",
                      "active_skill_level"
                    ],
                    "properties": {
                      "skill_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_skills_skill_id",
                        "description": "skill_id integer"
                      },
                      "skillpoints_in_skill": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_skills_skillpoints_in_skill",
                        "description": "skillpoints_in_skill integer"
                      },
                      "trained_skill_level": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_skills_trained_skill_level",
                        "description": "trained_skill_level integer"
                      },
                      "active_skill_level": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_skills_active_skill_level",
                        "description": "active_skill_level integer"
                      }
                    },
                    "title": "get_characters_character_id_skills_skill",
                    "description": "skill object"
                  },
                  "title": "get_characters_character_id_skills_skills",
                  "description": "skills array"
                },
                "total_sp": {
                  "type": "integer",
                  "format": "int64",
                  "title": "get_characters_character_id_skills_total_sp",
                  "description": "total_sp integer"
                },
                "unallocated_sp": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Skill points available to be assigned",
                  "title": "get_characters_character_id_skills_unallocated_sp"
                }
              },
              "title": "get_characters_character_id_skills_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-skills.read_skills.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_skills",
        "x-cached-seconds": 120,
        "x-alternate-versions": [
          "dev",
          "v4"
        ]
      }
    },
    "/characters/{character_id}/attributes/": {
      "get": {
        "description": "Return attributes of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/attributes/`\n\nAlternate route: `/legacy/characters/{character_id}/attributes/`\n\nAlternate route: `/v1/characters/{character_id}/attributes/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get character attributes",
        "tags": [
          "Skills"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Attributes of a character",
            "examples": {
              "application/json": {
                "charisma": 20,
                "intelligence": 20,
                "memory": 20,
                "perception": 20,
                "willpower": 20
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "charisma",
                "intelligence",
                "memory",
                "perception",
                "willpower"
              ],
              "properties": {
                "charisma": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_attributes_charisma",
                  "description": "charisma integer"
                },
                "intelligence": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_attributes_intelligence",
                  "description": "intelligence integer"
                },
                "memory": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_attributes_memory",
                  "description": "memory integer"
                },
                "perception": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_attributes_perception",
                  "description": "perception integer"
                },
                "willpower": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_characters_character_id_attributes_willpower",
                  "description": "willpower integer"
                },
                "bonus_remaps": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of available bonus character neural remaps",
                  "title": "get_characters_character_id_attributes_bonus_remaps"
                },
                "last_remap_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Datetime of last neural remap, including usage of bonus remaps",
                  "title": "get_characters_character_id_attributes_last_remap_date"
                },
                "accrued_remap_cooldown_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Neural remapping cooldown after a character uses remap accrued over time",
                  "title": "get_characters_character_id_attributes_accrued_remap_cooldown_date"
                }
              },
              "title": "get_characters_character_id_attributes_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-skills.read_skills.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_attributes",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/sovereignty/structures/": {
      "get": {
        "description": "Shows sovereignty data for structures.\n\n---\nAlternate route: `/dev/sovereignty/structures/`\n\nAlternate route: `/legacy/sovereignty/structures/`\n\nAlternate route: `/v1/sovereignty/structures/`\n\n---\nThis route is cached for up to 120 seconds",
        "summary": "List sovereignty structures",
        "tags": [
          "Sovereignty"
        ],
        "responses": {
          "200": {
            "description": "A list of sovereignty structures",
            "examples": {
              "application/json": [
                {
                  "alliance_id": 498125261,
                  "solar_system_id": 30000570,
                  "structure_id": 1018253388776,
                  "structure_type_id": 32226,
                  "vulnerability_occupancy_level": 2,
                  "vulnerable_start_time": "2016-10-28T20:30:00Z",
                  "vulnerable_end_time": "2016-10-29T05:30:00Z"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "alliance_id",
                  "solar_system_id",
                  "structure_id",
                  "structure_type_id"
                ],
                "properties": {
                  "alliance_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The alliance that owns the structure.\n",
                    "title": "get_sovereignty_structures_alliance_id"
                  },
                  "solar_system_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Solar system in which the structure is located.\n",
                    "title": "get_sovereignty_structures_solar_system_id"
                  },
                  "structure_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique item ID for this structure.",
                    "title": "get_sovereignty_structures_structure_id"
                  },
                  "structure_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A reference to the type of structure this is.\n",
                    "title": "get_sovereignty_structures_structure_type_id"
                  },
                  "vulnerability_occupancy_level": {
                    "type": "number",
                    "format": "float",
                    "description": "The occupancy level for the next or current vulnerability window. This takes into account all development indexes and capital system bonuses. Also known as Activity Defense Multiplier from in the client. It increases the time that attackers must spend using their entosis links on the structure.\n",
                    "title": "get_sovereignty_structures_vulnerability_occupancy_level"
                  },
                  "vulnerable_start_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The next time at which the structure will become vulnerable. Or the start time of the current window if current time is between this and vulnerableEndTime.\n",
                    "title": "get_sovereignty_structures_vulnerable_start_time"
                  },
                  "vulnerable_end_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which the next or current vulnerability window ends. At the end of a vulnerability window the next window is recalculated and locked in along with the vulnerabilityOccupancyLevel. If the structure is not in 100% entosis control of the defender, it will go in to 'overtime' and stay vulnerable for as long as that situation persists. Only once the defenders have 100% entosis control and has the vulnerableEndTime passed does the vulnerability interval expire and a new one is calculated.\n",
                    "title": "get_sovereignty_structures_vulnerable_end_time"
                  }
                },
                "title": "get_sovereignty_structures_200_ok",
                "description": "200 ok object"
              },
              "title": "get_sovereignty_structures_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_sovereignty_structures",
        "x-cached-seconds": 120,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/sovereignty/campaigns/": {
      "get": {
        "description": "Shows sovereignty data for campaigns.\n\n---\nAlternate route: `/dev/sovereignty/campaigns/`\n\nAlternate route: `/legacy/sovereignty/campaigns/`\n\nAlternate route: `/v1/sovereignty/campaigns/`\n\n---\nThis route is cached for up to 5 seconds",
        "summary": "List sovereignty campaigns",
        "tags": [
          "Sovereignty"
        ],
        "responses": {
          "200": {
            "description": "A list of sovereignty campaigns",
            "examples": {
              "application/json": [
                {
                  "campaign_id": 32833,
                  "structure_id": 61001096,
                  "solar_system_id": 30000856,
                  "constellation_id": 20000125,
                  "event_type": "station_defense",
                  "start_time": "2016-10-29T14:34:40Z",
                  "defender_id": 1695357456,
                  "defender_score": 0.6,
                  "attackers_score": 0.4
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "campaign_id",
                  "structure_id",
                  "solar_system_id",
                  "constellation_id",
                  "event_type",
                  "start_time"
                ],
                "properties": {
                  "campaign_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique ID for this campaign.",
                    "title": "get_sovereignty_campaigns_campaign_id"
                  },
                  "structure_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The structure item ID that is related to this campaign.\n",
                    "title": "get_sovereignty_campaigns_structure_id"
                  },
                  "solar_system_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The solar system the structure is located in.\n",
                    "title": "get_sovereignty_campaigns_solar_system_id"
                  },
                  "constellation_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The constellation in which the campaign will take place.\n",
                    "title": "get_sovereignty_campaigns_constellation_id"
                  },
                  "event_type": {
                    "type": "string",
                    "description": "Type of event this campaign is for. tcu_defense, ihub_defense and station_defense are referred to as \"Defense Events\", station_freeport as \"Freeport Events\".\n",
                    "enum": [
                      "tcu_defense",
                      "ihub_defense",
                      "station_defense",
                      "station_freeport"
                    ],
                    "title": "get_sovereignty_campaigns_event_type"
                  },
                  "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time the event is scheduled to start.\n",
                    "title": "get_sovereignty_campaigns_start_time"
                  },
                  "defender_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Defending alliance, only present in Defense Events\n",
                    "title": "get_sovereignty_campaigns_defender_id"
                  },
                  "defender_score": {
                    "type": "number",
                    "format": "float",
                    "description": "Score for the defending alliance, only present in Defense Events.\n",
                    "title": "get_sovereignty_campaigns_defender_score"
                  },
                  "attackers_score": {
                    "type": "number",
                    "format": "float",
                    "description": "Score for all attacking parties, only present in Defense Events.\n",
                    "title": "get_sovereignty_campaigns_attackers_score"
                  },
                  "participants": {
                    "type": "array",
                    "description": "Alliance participating and their respective scores, only present in Freeport Events.\n",
                    "maxItems": 5000,
                    "items": {
                      "type": "object",
                      "required": [
                        "alliance_id",
                        "score"
                      ],
                      "properties": {
                        "alliance_id": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_sovereignty_campaigns_alliance_id",
                          "description": "alliance_id integer"
                        },
                        "score": {
                          "type": "number",
                          "format": "float",
                          "title": "get_sovereignty_campaigns_score",
                          "description": "score number"
                        }
                      },
                      "title": "get_sovereignty_campaigns_participant",
                      "description": "participant object"
                    },
                    "title": "get_sovereignty_campaigns_participants"
                  }
                },
                "title": "get_sovereignty_campaigns_200_ok",
                "description": "200 ok object"
              },
              "title": "get_sovereignty_campaigns_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_sovereignty_campaigns",
        "x-cached-seconds": 5,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/sovereignty/map/": {
      "get": {
        "description": "Shows sovereignty information for solar systems\n\n---\nAlternate route: `/dev/sovereignty/map/`\n\nAlternate route: `/legacy/sovereignty/map/`\n\nAlternate route: `/v1/sovereignty/map/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List sovereignty of systems",
        "tags": [
          "Sovereignty"
        ],
        "responses": {
          "200": {
            "description": "A list of sovereignty information for solar systems in New Eden",
            "examples": {
              "application/json": [
                {
                  "system_id": 30045334,
                  "faction_id": 500001
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "system_id"
                ],
                "properties": {
                  "system_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_sovereignty_map_system_id",
                    "description": "system_id integer"
                  },
                  "alliance_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_sovereignty_map_alliance_id",
                    "description": "alliance_id integer"
                  },
                  "corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_sovereignty_map_corporation_id",
                    "description": "corporation_id integer"
                  },
                  "faction_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_sovereignty_map_faction_id",
                    "description": "faction_id integer"
                  }
                },
                "title": "get_sovereignty_map_200_ok",
                "description": "200 ok object"
              },
              "title": "get_sovereignty_map_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_sovereignty_map",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/status/": {
      "get": {
        "description": "EVE Server status\n\n---\nAlternate route: `/dev/status/`\n\nAlternate route: `/legacy/status/`\n\nAlternate route: `/v1/status/`\n\n---\nThis route is cached for up to 30 seconds",
        "summary": "Retrieve the uptime and player counts",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Server status",
            "examples": {
              "application/json": {
                "start_time": "2017-01-02T12:34:56Z",
                "players": 12345,
                "server_version": "1132976"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "start_time",
                "players",
                "server_version"
              ],
              "properties": {
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Server start timestamp",
                  "title": "get_status_start_time"
                },
                "players": {
                  "type": "integer",
                  "description": "Current online player count",
                  "title": "get_status_players"
                },
                "server_version": {
                  "type": "string",
                  "description": "Running version as string",
                  "title": "get_status_server_version"
                },
                "vip": {
                  "type": "boolean",
                  "description": "If the server is in VIP mode",
                  "title": "get_status_vip"
                }
              },
              "title": "get_status_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_status",
        "x-cached-seconds": 30,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/ids/": {
      "post": {
        "description": "Resolve a set of names to IDs in the following categories: agents, alliances, characters, constellations, corporations factions, inventory_types, regions, stations, and systems. Only exact matches will be returned. All names searched for are cached for 12 hours.\n\n---\nAlternate route: `/dev/universe/ids/`\n\nAlternate route: `/legacy/universe/ids/`\n\nAlternate route: `/v1/universe/ids/`\n",
        "summary": "Bulk names to IDs",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "name": "names",
            "in": "body",
            "description": "The names to resolve",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1000,
              "uniqueItems": true,
              "items": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "title": "post_universe_ids_name",
                "description": "name string"
              },
              "example": [
                "CCP Zoetrope"
              ],
              "title": "post_universe_ids_names",
              "description": "names array"
            }
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of id/name associations for a set of names divided by category. Any name passed in that did not have a match will be ommitted.",
            "examples": {
              "application/json": {
                "characters": [
                  {
                    "id": 95465499,
                    "name": "CCP Bartender"
                  },
                  {
                    "id": 2112625428,
                    "name": "CCP Zoetrope"
                  }
                ],
                "systems": [
                  {
                    "id": 30000142,
                    "name": "Jita"
                  }
                ]
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "agents": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_universe_ids_id",
                        "description": "id integer"
                      },
                      "name": {
                        "type": "string",
                        "title": "post_universe_ids_name",
                        "description": "name string"
                      }
                    },
                    "title": "post_universe_ids_agent",
                    "description": "agent object"
                  },
                  "title": "post_universe_ids_agents",
                  "description": "agents array"
                },
                "alliances": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_universe_ids_id",
                        "description": "id integer"
                      },
                      "name": {
                        "type": "string",
                        "title": "post_universe_ids_name",
                        "description": "name string"
                      }
                    },
                    "title": "post_universe_ids_alliance",
                    "description": "alliance object"
                  },
                  "title": "post_universe_ids_alliances",
                  "description": "alliances array"
                },
                "characters": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_universe_ids_id",
                        "description": "id integer"
                      },
                      "name": {
                        "type": "string",
                        "title": "post_universe_ids_name",
                        "description": "name string"
                      }
                    },
                    "title": "post_universe_ids_character",
                    "description": "character object"
                  },
                  "title": "post_universe_ids_characters",
                  "description": "characters array"
                },
                "constellations": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_universe_ids_id",
                        "description": "id integer"
                      },
                      "name": {
                        "type": "string",
                        "title": "post_universe_ids_name",
                        "description": "name string"
                      }
                    },
                    "title": "post_universe_ids_constellation",
                    "description": "constellation object"
                  },
                  "title": "post_universe_ids_constellations",
                  "description": "constellations array"
                },
                "corporations": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_universe_ids_id",
                        "description": "id integer"
                      },
                      "name": {
                        "type": "string",
                        "title": "post_universe_ids_name",
                        "description": "name string"
                      }
                    },
                    "title": "post_universe_ids_corporation",
                    "description": "corporation object"
                  },
                  "title": "post_universe_ids_corporations",
                  "description": "corporations array"
                },
                "factions": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_universe_ids_id",
                        "description": "id integer"
                      },
                      "name": {
                        "type": "string",
                        "title": "post_universe_ids_name",
                        "description": "name string"
                      }
                    },
                    "title": "post_universe_ids_faction",
                    "description": "faction object"
                  },
                  "title": "post_universe_ids_factions",
                  "description": "factions array"
                },
                "inventory_types": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_universe_ids_id",
                        "description": "id integer"
                      },
                      "name": {
                        "type": "string",
                        "title": "post_universe_ids_name",
                        "description": "name string"
                      }
                    },
                    "title": "post_universe_ids_inventory_type",
                    "description": "inventory_type object"
                  },
                  "title": "post_universe_ids_inventory_types",
                  "description": "inventory_types array"
                },
                "regions": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_universe_ids_id",
                        "description": "id integer"
                      },
                      "name": {
                        "type": "string",
                        "title": "post_universe_ids_name",
                        "description": "name string"
                      }
                    },
                    "title": "post_universe_ids_region",
                    "description": "region object"
                  },
                  "title": "post_universe_ids_regions",
                  "description": "regions array"
                },
                "systems": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_universe_ids_id",
                        "description": "id integer"
                      },
                      "name": {
                        "type": "string",
                        "title": "post_universe_ids_name",
                        "description": "name string"
                      }
                    },
                    "title": "post_universe_ids_system",
                    "description": "system object"
                  },
                  "title": "post_universe_ids_systems",
                  "description": "systems array"
                },
                "stations": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "post_universe_ids_id",
                        "description": "id integer"
                      },
                      "name": {
                        "type": "string",
                        "title": "post_universe_ids_name",
                        "description": "name string"
                      }
                    },
                    "title": "post_universe_ids_station",
                    "description": "station object"
                  },
                  "title": "post_universe_ids_stations",
                  "description": "stations array"
                }
              },
              "title": "post_universe_ids_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          },
          "503": {
            "description": "Search backend is unreachable, try again later.",
            "schema": {
              "type": "object",
              "title": "post_universe_ids_service_unavailable",
              "description": "Service unavailable",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Service unavailable message",
                  "title": "post_universe_ids_503_service_unavailable"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Service unavailable message"
              }
            }
          }
        },
        "operationId": "post_universe_ids",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/planets/{planet_id}/": {
      "get": {
        "description": "Get information on a planet\n\n---\nAlternate route: `/dev/universe/planets/{planet_id}/`\n\nAlternate route: `/legacy/universe/planets/{planet_id}/`\n\nAlternate route: `/v1/universe/planets/{planet_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get planet information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "planet_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "planet_id integer"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a planet",
            "examples": {
              "application/json": {
                "planet_id": 40000046,
                "name": "Akpivem III",
                "type_id": 13,
                "position": {
                  "x": -189226344497,
                  "y": 9901605317,
                  "z": -254852632979
                },
                "system_id": 30000003
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "planet_id",
                "name",
                "type_id",
                "position",
                "system_id"
              ],
              "properties": {
                "planet_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_planets_planet_id_planet_id",
                  "description": "planet_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_universe_planets_planet_id_name",
                  "description": "name string"
                },
                "type_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_planets_planet_id_type_id",
                  "description": "type_id integer"
                },
                "position": {
                  "type": "object",
                  "required": [
                    "x",
                    "y",
                    "z"
                  ],
                  "properties": {
                    "x": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_planets_planet_id_x",
                      "description": "x number"
                    },
                    "y": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_planets_planet_id_y",
                      "description": "y number"
                    },
                    "z": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_planets_planet_id_z",
                      "description": "z number"
                    }
                  },
                  "title": "get_universe_planets_planet_id_position",
                  "description": "position object"
                },
                "system_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The solar system this planet is in",
                  "title": "get_universe_planets_planet_id_system_id"
                }
              },
              "title": "get_universe_planets_planet_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Planet not found",
            "schema": {
              "type": "object",
              "title": "get_universe_planets_planet_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_planets_planet_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_planets_planet_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/stations/{station_id}/": {
      "get": {
        "description": "Get information on a station\n\n---\nAlternate route: `/dev/universe/stations/{station_id}/`\n\nAlternate route: `/v2/universe/stations/{station_id}/`\n\n---\nThis route is cached for up to 300 seconds",
        "summary": "Get station information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "station_id integer"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a station",
            "examples": {
              "application/json": {
                "station_id": 60000277,
                "name": "Jakanerva III - Moon 15 - Prompt Delivery Storage",
                "type_id": 1531,
                "position": {
                  "x": 165632286720,
                  "y": 2771804160,
                  "z": -2455331266560
                },
                "system_id": 30000148,
                "reprocessing_efficiency": 0.5,
                "reprocessing_stations_take": 0.05,
                "max_dockable_ship_volume": 50000000,
                "office_rental_cost": 10000,
                "services": [
                  "courier-missions",
                  "reprocessing-plant",
                  "market",
                  "repair-facilities",
                  "fitting",
                  "news",
                  "storage",
                  "insurance",
                  "docking",
                  "office-rental",
                  "loyalty-point-store",
                  "navy-offices"
                ],
                "owner": 1000003,
                "race_id": 1
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "station_id",
                "name",
                "type_id",
                "position",
                "system_id",
                "reprocessing_efficiency",
                "reprocessing_stations_take",
                "max_dockable_ship_volume",
                "office_rental_cost",
                "services"
              ],
              "properties": {
                "station_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_stations_station_id_station_id",
                  "description": "station_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_universe_stations_station_id_name",
                  "description": "name string"
                },
                "owner": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ID of the corporation that controls this station",
                  "title": "get_universe_stations_station_id_owner"
                },
                "type_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_stations_station_id_type_id",
                  "description": "type_id integer"
                },
                "race_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_stations_station_id_race_id",
                  "description": "race_id integer"
                },
                "position": {
                  "type": "object",
                  "required": [
                    "x",
                    "y",
                    "z"
                  ],
                  "properties": {
                    "x": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_stations_station_id_x",
                      "description": "x number"
                    },
                    "y": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_stations_station_id_y",
                      "description": "y number"
                    },
                    "z": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_stations_station_id_z",
                      "description": "z number"
                    }
                  },
                  "title": "get_universe_stations_station_id_position",
                  "description": "position object"
                },
                "system_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The solar system this station is in",
                  "title": "get_universe_stations_station_id_system_id"
                },
                "reprocessing_efficiency": {
                  "type": "number",
                  "format": "float",
                  "title": "get_universe_stations_station_id_reprocessing_efficiency",
                  "description": "reprocessing_efficiency number"
                },
                "reprocessing_stations_take": {
                  "type": "number",
                  "format": "float",
                  "title": "get_universe_stations_station_id_reprocessing_stations_take",
                  "description": "reprocessing_stations_take number"
                },
                "max_dockable_ship_volume": {
                  "type": "number",
                  "format": "float",
                  "title": "get_universe_stations_station_id_max_dockable_ship_volume",
                  "description": "max_dockable_ship_volume number"
                },
                "office_rental_cost": {
                  "type": "number",
                  "format": "float",
                  "title": "get_universe_stations_station_id_office_rental_cost",
                  "description": "office_rental_cost number"
                },
                "services": {
                  "type": "array",
                  "maxItems": 30,
                  "items": {
                    "type": "string",
                    "enum": [
                      "bounty-missions",
                      "assasination-missions",
                      "courier-missions",
                      "interbus",
                      "reprocessing-plant",
                      "refinery",
                      "market",
                      "black-market",
                      "stock-exchange",
                      "cloning",
                      "surgery",
                      "dna-therapy",
                      "repair-facilities",
                      "factory",
                      "labratory",
                      "gambling",
                      "fitting",
                      "paintshop",
                      "news",
                      "storage",
                      "insurance",
                      "docking",
                      "office-rental",
                      "jump-clone-facility",
                      "loyalty-point-store",
                      "navy-offices",
                      "security-offices"
                    ],
                    "title": "get_universe_stations_station_id_service",
                    "description": "service string"
                  },
                  "title": "get_universe_stations_station_id_services",
                  "description": "services array"
                }
              },
              "title": "get_universe_stations_station_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Station not found",
            "schema": {
              "type": "object",
              "title": "get_universe_stations_station_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_stations_station_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_stations_station_id",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/universe/structures/{structure_id}/": {
      "get": {
        "description": "Returns information on requested structure, if you are on the ACL. Otherwise, returns \"Forbidden\" for all inputs.\n\n---\nAlternate route: `/dev/universe/structures/{structure_id}/`\n\nAlternate route: `/legacy/universe/structures/{structure_id}/`\n\nAlternate route: `/v1/universe/structures/{structure_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get structure information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "structure_id",
            "in": "path",
            "description": "An Eve structure ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Data about a structure",
            "examples": {
              "application/json": {
                "name": "V-3YG7 VI - The Capital",
                "solar_system_id": 30000142
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "name",
                "solar_system_id"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The full name of the structure",
                  "title": "get_universe_structures_structure_id_name"
                },
                "solar_system_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_structures_structure_id_solar_system_id",
                  "description": "solar_system_id integer"
                },
                "type_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_structures_structure_id_type_id",
                  "description": "type_id integer"
                },
                "position": {
                  "type": "object",
                  "description": "Coordinates of the structure in Cartesian space relative to the Sun, in metres.\n",
                  "required": [
                    "x",
                    "y",
                    "z"
                  ],
                  "properties": {
                    "x": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_structures_structure_id_x",
                      "description": "x number"
                    },
                    "y": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_structures_structure_id_y",
                      "description": "y number"
                    },
                    "z": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_structures_structure_id_z",
                      "description": "z number"
                    }
                  },
                  "title": "get_universe_structures_structure_id_position"
                }
              },
              "title": "get_universe_structures_structure_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "404": {
            "description": "Structure not found",
            "schema": {
              "type": "object",
              "title": "get_universe_structures_structure_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_structures_structure_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-universe.read_structures.v1"
            ]
          }
        ],
        "operationId": "get_universe_structures_structure_id",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/systems/{system_id}/": {
      "get": {
        "description": "Get information on a solar system\n\n---\nAlternate route: `/dev/universe/systems/{system_id}/`\n\nAlternate route: `/v3/universe/systems/{system_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get solar system information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "name": "system_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "system_id integer"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a solar system",
            "examples": {
              "application/json": {
                "system_id": 30000003,
                "name": "Akpivem",
                "position": {
                  "x": -91174141133075340,
                  "y": 43938227486247170,
                  "z": -56482824383339900
                },
                "security_status": 0.8462923765182495,
                "constellation_id": 20000001,
                "planets": [
                  {
                    "planet_id": 40000041,
                    "moons": [
                      40000042
                    ]
                  },
                  {
                    "planet_id": 40000043
                  }
                ],
                "stargates": [
                  50000342
                ],
                "star_id": 40000040,
                "security_class": "B"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "star_id",
                "system_id",
                "name",
                "position",
                "security_status",
                "constellation_id",
                "planets"
              ],
              "properties": {
                "star_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_systems_system_id_star_id",
                  "description": "star_id integer"
                },
                "system_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_systems_system_id_system_id",
                  "description": "system_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_universe_systems_system_id_name",
                  "description": "name string"
                },
                "position": {
                  "type": "object",
                  "required": [
                    "x",
                    "y",
                    "z"
                  ],
                  "properties": {
                    "x": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_systems_system_id_x",
                      "description": "x number"
                    },
                    "y": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_systems_system_id_y",
                      "description": "y number"
                    },
                    "z": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_systems_system_id_z",
                      "description": "z number"
                    }
                  },
                  "title": "get_universe_systems_system_id_position",
                  "description": "position object"
                },
                "security_status": {
                  "type": "number",
                  "format": "float",
                  "title": "get_universe_systems_system_id_security_status",
                  "description": "security_status number"
                },
                "security_class": {
                  "type": "string",
                  "title": "get_universe_systems_system_id_security_class",
                  "description": "security_class string"
                },
                "constellation_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The constellation this solar system is in",
                  "title": "get_universe_systems_system_id_constellation_id"
                },
                "planets": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "required": [
                      "planet_id"
                    ],
                    "properties": {
                      "planet_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_universe_systems_system_id_planet_id",
                        "description": "planet_id integer"
                      },
                      "moons": {
                        "type": "array",
                        "maxItems": 1000,
                        "items": {
                          "type": "integer",
                          "format": "int32",
                          "title": "get_universe_systems_system_id_moon",
                          "description": "moon integer"
                        },
                        "title": "get_universe_systems_system_id_moons",
                        "description": "moons array"
                      }
                    },
                    "title": "get_universe_systems_system_id_planet",
                    "description": "planet object"
                  },
                  "title": "get_universe_systems_system_id_planets",
                  "description": "planets array"
                },
                "stargates": {
                  "type": "array",
                  "maxItems": 25,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_systems_system_id_stargate",
                    "description": "stargate integer"
                  },
                  "title": "get_universe_systems_system_id_stargates",
                  "description": "stargates array"
                },
                "stations": {
                  "type": "array",
                  "maxItems": 25,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_systems_system_id_station",
                    "description": "station integer"
                  },
                  "title": "get_universe_systems_system_id_stations",
                  "description": "stations array"
                }
              },
              "title": "get_universe_systems_system_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Solar system not found",
            "schema": {
              "type": "object",
              "title": "get_universe_systems_system_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_systems_system_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_systems_system_id",
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      }
    },
    "/universe/systems/": {
      "get": {
        "description": "Get a list of solar systems\n\n---\nAlternate route: `/dev/universe/systems/`\n\nAlternate route: `/legacy/universe/systems/`\n\nAlternate route: `/v1/universe/systems/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get solar systems",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "A list of solar system ids",
            "examples": {
              "application/json": [
                30000001,
                30000002
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_universe_systems_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_universe_systems_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_systems",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/types/{type_id}/": {
      "get": {
        "description": "Get information on a type\n\n---\nAlternate route: `/dev/universe/types/{type_id}/`\n\nAlternate route: `/v3/universe/types/{type_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get type information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "name": "type_id",
            "in": "path",
            "description": "An Eve item type ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a type",
            "examples": {
              "application/json": {
                "type_id": 587,
                "name": "Rifter",
                "description": "The Rifter is a...",
                "published": true,
                "group_id": 25
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "type_id",
                "name",
                "description",
                "published",
                "group_id"
              ],
              "properties": {
                "type_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_types_type_id_type_id",
                  "description": "type_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_universe_types_type_id_name",
                  "description": "name string"
                },
                "description": {
                  "type": "string",
                  "title": "get_universe_types_type_id_description",
                  "description": "description string"
                },
                "published": {
                  "type": "boolean",
                  "title": "get_universe_types_type_id_published",
                  "description": "published boolean"
                },
                "group_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_types_type_id_group_id",
                  "description": "group_id integer"
                },
                "market_group_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This only exists for types that can be put on the market",
                  "title": "get_universe_types_type_id_market_group_id"
                },
                "radius": {
                  "type": "number",
                  "format": "float",
                  "title": "get_universe_types_type_id_radius",
                  "description": "radius number"
                },
                "volume": {
                  "type": "number",
                  "format": "float",
                  "title": "get_universe_types_type_id_volume",
                  "description": "volume number"
                },
                "packaged_volume": {
                  "type": "number",
                  "format": "float",
                  "title": "get_universe_types_type_id_packaged_volume",
                  "description": "packaged_volume number"
                },
                "icon_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_types_type_id_icon_id",
                  "description": "icon_id integer"
                },
                "capacity": {
                  "type": "number",
                  "format": "float",
                  "title": "get_universe_types_type_id_capacity",
                  "description": "capacity number"
                },
                "portion_size": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_types_type_id_portion_size",
                  "description": "portion_size integer"
                },
                "mass": {
                  "type": "number",
                  "format": "float",
                  "title": "get_universe_types_type_id_mass",
                  "description": "mass number"
                },
                "graphic_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_types_type_id_graphic_id",
                  "description": "graphic_id integer"
                },
                "dogma_attributes": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "required": [
                      "attribute_id",
                      "value"
                    ],
                    "properties": {
                      "attribute_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_universe_types_type_id_attribute_id",
                        "description": "attribute_id integer"
                      },
                      "value": {
                        "type": "number",
                        "format": "float",
                        "title": "get_universe_types_type_id_value",
                        "description": "value number"
                      }
                    },
                    "title": "get_universe_types_type_id_dogma_attribute",
                    "description": "dogma_attribute object"
                  },
                  "title": "get_universe_types_type_id_dogma_attributes",
                  "description": "dogma_attributes array"
                },
                "dogma_effects": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "object",
                    "required": [
                      "effect_id",
                      "is_default"
                    ],
                    "properties": {
                      "effect_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_universe_types_type_id_effect_id",
                        "description": "effect_id integer"
                      },
                      "is_default": {
                        "type": "boolean",
                        "title": "get_universe_types_type_id_is_default",
                        "description": "is_default boolean"
                      }
                    },
                    "title": "get_universe_types_type_id_dogma_effect",
                    "description": "dogma_effect object"
                  },
                  "title": "get_universe_types_type_id_dogma_effects",
                  "description": "dogma_effects array"
                }
              },
              "title": "get_universe_types_type_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Type not found",
            "schema": {
              "type": "object",
              "title": "get_universe_types_type_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_types_type_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_types_type_id",
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      }
    },
    "/universe/types/": {
      "get": {
        "description": "Get a list of type ids\n\n---\nAlternate route: `/dev/universe/types/`\n\nAlternate route: `/legacy/universe/types/`\n\nAlternate route: `/v1/universe/types/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get types",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of type ids",
            "examples": {
              "application/json": [
                1,
                2,
                3
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_universe_types_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_universe_types_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_types",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/groups/": {
      "get": {
        "description": "Get a list of item groups\n\n---\nAlternate route: `/dev/universe/groups/`\n\nAlternate route: `/legacy/universe/groups/`\n\nAlternate route: `/v1/universe/groups/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get item groups",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of item group ids",
            "examples": {
              "application/json": [
                1,
                2,
                3
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_universe_groups_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_universe_groups_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_groups",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/groups/{group_id}/": {
      "get": {
        "description": "Get information on an item group\n\n---\nAlternate route: `/dev/universe/groups/{group_id}/`\n\nAlternate route: `/legacy/universe/groups/{group_id}/`\n\nAlternate route: `/v1/universe/groups/{group_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get item group information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "An Eve item group ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about an item group",
            "examples": {
              "application/json": {
                "group_id": 25,
                "name": "Frigate",
                "published": true,
                "category_id": 6,
                "types": [
                  587,
                  586,
                  585
                ]
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "group_id",
                "name",
                "published",
                "category_id",
                "types"
              ],
              "properties": {
                "group_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_groups_group_id_group_id",
                  "description": "group_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_universe_groups_group_id_name",
                  "description": "name string"
                },
                "published": {
                  "type": "boolean",
                  "title": "get_universe_groups_group_id_published",
                  "description": "published boolean"
                },
                "category_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_groups_group_id_category_id",
                  "description": "category_id integer"
                },
                "types": {
                  "type": "array",
                  "maxItems": 10000,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_groups_group_id_type",
                    "description": "type integer"
                  },
                  "title": "get_universe_groups_group_id_types",
                  "description": "types array"
                }
              },
              "title": "get_universe_groups_group_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Group not found",
            "schema": {
              "type": "object",
              "title": "get_universe_groups_group_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_groups_group_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_groups_group_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/categories/": {
      "get": {
        "description": "Get a list of item categories\n\n---\nAlternate route: `/dev/universe/categories/`\n\nAlternate route: `/legacy/universe/categories/`\n\nAlternate route: `/v1/universe/categories/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get item categories",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "A list of item category ids",
            "examples": {
              "application/json": [
                1,
                2,
                3
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_universe_categories_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_universe_categories_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_categories",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/categories/{category_id}/": {
      "get": {
        "description": "Get information of an item category\n\n---\nAlternate route: `/dev/universe/categories/{category_id}/`\n\nAlternate route: `/legacy/universe/categories/{category_id}/`\n\nAlternate route: `/v1/universe/categories/{category_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get item category information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "An Eve item category ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about an item category",
            "examples": {
              "application/json": {
                "category_id": 6,
                "name": "Ship",
                "published": true,
                "groups": [
                  25,
                  26,
                  27
                ]
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "category_id",
                "name",
                "published",
                "groups"
              ],
              "properties": {
                "category_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_categories_category_id_category_id",
                  "description": "category_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_universe_categories_category_id_name",
                  "description": "name string"
                },
                "published": {
                  "type": "boolean",
                  "title": "get_universe_categories_category_id_published",
                  "description": "published boolean"
                },
                "groups": {
                  "type": "array",
                  "maxItems": 10000,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_categories_category_id_group",
                    "description": "group integer"
                  },
                  "title": "get_universe_categories_category_id_groups",
                  "description": "groups array"
                }
              },
              "title": "get_universe_categories_category_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "type": "object",
              "title": "get_universe_categories_category_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_categories_category_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_categories_category_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/names/": {
      "post": {
        "description": "Resolve a set of IDs to names and categories. Supported ID's for resolving are: Characters, Corporations, Alliances, Stations, Solar Systems, Constellations, Regions, Types.\n\n---\nAlternate route: `/dev/universe/names/`\n\nAlternate route: `/v2/universe/names/`\n",
        "summary": "Get names and categories for a set of ID's",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "ids",
            "in": "body",
            "description": "The ids to resolve",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1000,
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "post_universe_names_id",
                "description": "id integer"
              },
              "example": [
                95465499,
                30000142
              ],
              "title": "post_universe_names_ids",
              "description": "ids array"
            }
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of id/name associations for a set of ID's. All ID's must resolve to a name, or nothing will be returned.",
            "examples": {
              "application/json": [
                {
                  "id": 95465499,
                  "name": "CCP Bartender",
                  "category": "character"
                },
                {
                  "id": 30000142,
                  "name": "Jita",
                  "category": "solar_system"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "category"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "post_universe_names_id",
                    "description": "id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "post_universe_names_name",
                    "description": "name string"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "alliance",
                      "character",
                      "constellation",
                      "corporation",
                      "inventory_type",
                      "region",
                      "solar_system",
                      "station"
                    ],
                    "title": "post_universe_names_category",
                    "description": "category string"
                  }
                },
                "title": "post_universe_names_200_ok",
                "description": "200 ok object"
              },
              "title": "post_universe_names_ok",
              "description": "200 ok array"
            }
          },
          "404": {
            "description": "Ensure all IDs are valid before resolving.",
            "schema": {
              "type": "object",
              "title": "post_universe_names_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "post_universe_names_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "post_universe_names",
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/universe/structures/": {
      "get": {
        "description": "List all public structures\n\n---\nAlternate route: `/dev/universe/structures/`\n\nAlternate route: `/legacy/universe/structures/`\n\nAlternate route: `/v1/universe/structures/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List all public structures",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "List of public structure IDs",
            "examples": {
              "application/json": [
                1020988381992,
                1020988381991
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "title": "get_universe_structures_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_universe_structures_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_structures",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/races/": {
      "get": {
        "description": "Get a list of character races\n\n---\nAlternate route: `/dev/universe/races/`\n\nAlternate route: `/legacy/universe/races/`\n\nAlternate route: `/v1/universe/races/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get character races",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "A list of character races",
            "examples": {
              "application/json": [
                {
                  "race_id": 1,
                  "name": "Caldari",
                  "description": "Founded on the tenets of patriotism and hard work...",
                  "alliance_id": 500001
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 4,
              "items": {
                "type": "object",
                "required": [
                  "race_id",
                  "name",
                  "description",
                  "alliance_id"
                ],
                "properties": {
                  "race_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_races_race_id",
                    "description": "race_id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "get_universe_races_name",
                    "description": "name string"
                  },
                  "description": {
                    "type": "string",
                    "title": "get_universe_races_description",
                    "description": "description string"
                  },
                  "alliance_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The alliance generally associated with this race",
                    "title": "get_universe_races_alliance_id"
                  }
                },
                "title": "get_universe_races_200_ok",
                "description": "200 ok object"
              },
              "title": "get_universe_races_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_races",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/factions/": {
      "get": {
        "description": "Get a list of factions\n\n---\nAlternate route: `/dev/universe/factions/`\n\nAlternate route: `/v2/universe/factions/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get factions",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "A list of factions",
            "examples": {
              "application/json": [
                {
                  "faction_id": 1,
                  "name": "Faction",
                  "description": "blah blah",
                  "solar_system_id": 123,
                  "corporation_id": 456,
                  "size_factor": 1,
                  "station_count": 1000,
                  "station_system_count": 100,
                  "is_unique": true
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "faction_id",
                  "name",
                  "description",
                  "size_factor",
                  "station_count",
                  "station_system_count",
                  "is_unique"
                ],
                "properties": {
                  "faction_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_factions_faction_id",
                    "description": "faction_id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "get_universe_factions_name",
                    "description": "name string"
                  },
                  "description": {
                    "type": "string",
                    "title": "get_universe_factions_description",
                    "description": "description string"
                  },
                  "solar_system_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_factions_solar_system_id",
                    "description": "solar_system_id integer"
                  },
                  "corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_factions_corporation_id",
                    "description": "corporation_id integer"
                  },
                  "militia_corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_factions_militia_corporation_id",
                    "description": "militia_corporation_id integer"
                  },
                  "size_factor": {
                    "type": "number",
                    "format": "float",
                    "title": "get_universe_factions_size_factor",
                    "description": "size_factor number"
                  },
                  "station_count": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_factions_station_count",
                    "description": "station_count integer"
                  },
                  "station_system_count": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_factions_station_system_count",
                    "description": "station_system_count integer"
                  },
                  "is_unique": {
                    "type": "boolean",
                    "title": "get_universe_factions_is_unique",
                    "description": "is_unique boolean"
                  }
                },
                "title": "get_universe_factions_200_ok",
                "description": "200 ok object"
              },
              "title": "get_universe_factions_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_factions",
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/universe/bloodlines/": {
      "get": {
        "description": "Get a list of bloodlines\n\n---\nAlternate route: `/dev/universe/bloodlines/`\n\nAlternate route: `/legacy/universe/bloodlines/`\n\nAlternate route: `/v1/universe/bloodlines/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get bloodlines",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "A list of bloodlines",
            "examples": {
              "application/json": [
                {
                  "bloodline_id": 1,
                  "name": "Deteis",
                  "description": "The Deteis are regarded as ...",
                  "race_id": 1,
                  "ship_type_id": 601,
                  "corporation_id": 1000006,
                  "perception": 5,
                  "willpower": 5,
                  "charisma": 6,
                  "memory": 7,
                  "intelligence": 7
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "object",
                "required": [
                  "bloodline_id",
                  "name",
                  "description",
                  "race_id",
                  "ship_type_id",
                  "corporation_id",
                  "perception",
                  "willpower",
                  "charisma",
                  "memory",
                  "intelligence"
                ],
                "properties": {
                  "bloodline_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_bloodlines_bloodline_id",
                    "description": "bloodline_id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "get_universe_bloodlines_name",
                    "description": "name string"
                  },
                  "description": {
                    "type": "string",
                    "title": "get_universe_bloodlines_description",
                    "description": "description string"
                  },
                  "race_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_bloodlines_race_id",
                    "description": "race_id integer"
                  },
                  "ship_type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_bloodlines_ship_type_id",
                    "description": "ship_type_id integer"
                  },
                  "corporation_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_bloodlines_corporation_id",
                    "description": "corporation_id integer"
                  },
                  "perception": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_bloodlines_perception",
                    "description": "perception integer"
                  },
                  "willpower": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_bloodlines_willpower",
                    "description": "willpower integer"
                  },
                  "charisma": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_bloodlines_charisma",
                    "description": "charisma integer"
                  },
                  "memory": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_bloodlines_memory",
                    "description": "memory integer"
                  },
                  "intelligence": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_bloodlines_intelligence",
                    "description": "intelligence integer"
                  }
                },
                "title": "get_universe_bloodlines_200_ok",
                "description": "200 ok object"
              },
              "title": "get_universe_bloodlines_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_bloodlines",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/regions/": {
      "get": {
        "description": "Get a list of regions\n\n---\nAlternate route: `/dev/universe/regions/`\n\nAlternate route: `/legacy/universe/regions/`\n\nAlternate route: `/v1/universe/regions/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get regions",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "A list of region ids",
            "examples": {
              "application/json": [
                11000001,
                11000002
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 1000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_universe_regions_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_universe_regions_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_regions",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/regions/{region_id}/": {
      "get": {
        "description": "Get information on a region\n\n---\nAlternate route: `/dev/universe/regions/{region_id}/`\n\nAlternate route: `/legacy/universe/regions/{region_id}/`\n\nAlternate route: `/v1/universe/regions/{region_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get region information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "name": "region_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "region_id integer"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a region",
            "examples": {
              "application/json": {
                "region_id": 10000042,
                "name": "Metropolis",
                "description": "It has long been an established fact of civilization...",
                "constellations": [
                  20000302,
                  20000303
                ]
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "region_id",
                "name",
                "constellations"
              ],
              "properties": {
                "region_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_regions_region_id_region_id",
                  "description": "region_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_universe_regions_region_id_name",
                  "description": "name string"
                },
                "description": {
                  "type": "string",
                  "title": "get_universe_regions_region_id_description",
                  "description": "description string"
                },
                "constellations": {
                  "type": "array",
                  "maxItems": 1000,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_regions_region_id_constellation",
                    "description": "constellation integer"
                  },
                  "title": "get_universe_regions_region_id_constellations",
                  "description": "constellations array"
                }
              },
              "title": "get_universe_regions_region_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Region not found",
            "schema": {
              "type": "object",
              "title": "get_universe_regions_region_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_regions_region_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_regions_region_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/constellations/": {
      "get": {
        "description": "Get a list of constellations\n\n---\nAlternate route: `/dev/universe/constellations/`\n\nAlternate route: `/legacy/universe/constellations/`\n\nAlternate route: `/v1/universe/constellations/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get constellations",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "A list of constellation ids",
            "examples": {
              "application/json": [
                20000001,
                20000002
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_universe_constellations_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_universe_constellations_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_constellations",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/constellations/{constellation_id}/": {
      "get": {
        "description": "Get information on a constellation\n\n---\nAlternate route: `/dev/universe/constellations/{constellation_id}/`\n\nAlternate route: `/legacy/universe/constellations/{constellation_id}/`\n\nAlternate route: `/v1/universe/constellations/{constellation_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get constellation information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "name": "constellation_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "constellation_id integer"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a constellation",
            "examples": {
              "application/json": {
                "constellation_id": 20000009,
                "name": "Mekashtad",
                "position": {
                  "x": 67796138757472320,
                  "y": -70591121348560960,
                  "z": -59587016159270070
                },
                "region_id": 10000001,
                "systems": [
                  20000302,
                  20000303
                ]
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "constellation_id",
                "name",
                "position",
                "region_id",
                "systems"
              ],
              "properties": {
                "constellation_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_constellations_constellation_id_constellation_id",
                  "description": "constellation_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_universe_constellations_constellation_id_name",
                  "description": "name string"
                },
                "position": {
                  "type": "object",
                  "required": [
                    "x",
                    "y",
                    "z"
                  ],
                  "properties": {
                    "x": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_constellations_constellation_id_x",
                      "description": "x number"
                    },
                    "y": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_constellations_constellation_id_y",
                      "description": "y number"
                    },
                    "z": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_constellations_constellation_id_z",
                      "description": "z number"
                    }
                  },
                  "title": "get_universe_constellations_constellation_id_position",
                  "description": "position object"
                },
                "region_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The region this constellation is in",
                  "title": "get_universe_constellations_constellation_id_region_id"
                },
                "systems": {
                  "type": "array",
                  "maxItems": 10000,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_constellations_constellation_id_system",
                    "description": "system integer"
                  },
                  "title": "get_universe_constellations_constellation_id_systems",
                  "description": "systems array"
                }
              },
              "title": "get_universe_constellations_constellation_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Constellation not found",
            "schema": {
              "type": "object",
              "title": "get_universe_constellations_constellation_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_constellations_constellation_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_constellations_constellation_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/moons/{moon_id}/": {
      "get": {
        "description": "Get information on a moon\n\n---\nAlternate route: `/dev/universe/moons/{moon_id}/`\n\nAlternate route: `/legacy/universe/moons/{moon_id}/`\n\nAlternate route: `/v1/universe/moons/{moon_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get moon information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "moon_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "moon_id integer"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a moon",
            "examples": {
              "application/json": {
                "moon_id": 40000042,
                "name": "Akpivem I - Moon 1",
                "position": {
                  "x": 58605102008,
                  "y": -3066616285,
                  "z": -55193617920
                },
                "system_id": 30000003
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "moon_id",
                "name",
                "position",
                "system_id"
              ],
              "properties": {
                "moon_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_moons_moon_id_moon_id",
                  "description": "moon_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_universe_moons_moon_id_name",
                  "description": "name string"
                },
                "position": {
                  "type": "object",
                  "required": [
                    "x",
                    "y",
                    "z"
                  ],
                  "properties": {
                    "x": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_moons_moon_id_x",
                      "description": "x number"
                    },
                    "y": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_moons_moon_id_y",
                      "description": "y number"
                    },
                    "z": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_moons_moon_id_z",
                      "description": "z number"
                    }
                  },
                  "title": "get_universe_moons_moon_id_position",
                  "description": "position object"
                },
                "system_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The solar system this moon is in",
                  "title": "get_universe_moons_moon_id_system_id"
                }
              },
              "title": "get_universe_moons_moon_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Moon not found",
            "schema": {
              "type": "object",
              "title": "get_universe_moons_moon_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_moons_moon_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_moons_moon_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/stargates/{stargate_id}/": {
      "get": {
        "description": "Get information on a stargate\n\n---\nAlternate route: `/dev/universe/stargates/{stargate_id}/`\n\nAlternate route: `/legacy/universe/stargates/{stargate_id}/`\n\nAlternate route: `/v1/universe/stargates/{stargate_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get stargate information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "stargate_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "stargate_id integer"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a stargate",
            "examples": {
              "application/json": {
                "stargate_id": 50000342,
                "name": "Stargate (Tanoo)",
                "type_id": 29624,
                "position": {
                  "x": -101092761600,
                  "y": 5279539200,
                  "z": 1550503403520
                },
                "system_id": 30000003,
                "destination": {
                  "system_id": 30000001,
                  "stargate_id": 50000056
                }
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "stargate_id",
                "name",
                "type_id",
                "position",
                "system_id",
                "destination"
              ],
              "properties": {
                "stargate_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_stargates_stargate_id_stargate_id",
                  "description": "stargate_id integer"
                },
                "name": {
                  "type": "string",
                  "title": "get_universe_stargates_stargate_id_name",
                  "description": "name string"
                },
                "type_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_stargates_stargate_id_type_id",
                  "description": "type_id integer"
                },
                "position": {
                  "type": "object",
                  "required": [
                    "x",
                    "y",
                    "z"
                  ],
                  "properties": {
                    "x": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_stargates_stargate_id_x",
                      "description": "x number"
                    },
                    "y": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_stargates_stargate_id_y",
                      "description": "y number"
                    },
                    "z": {
                      "type": "number",
                      "format": "double",
                      "title": "get_universe_stargates_stargate_id_z",
                      "description": "z number"
                    }
                  },
                  "title": "get_universe_stargates_stargate_id_position",
                  "description": "position object"
                },
                "system_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The solar system this stargate is in",
                  "title": "get_universe_stargates_stargate_id_system_id"
                },
                "destination": {
                  "type": "object",
                  "required": [
                    "system_id",
                    "stargate_id"
                  ],
                  "properties": {
                    "system_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The solar system this stargate connects to",
                      "title": "get_universe_stargates_stargate_id_system_id"
                    },
                    "stargate_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The stargate this stargate connects to",
                      "title": "get_universe_stargates_stargate_id_stargate_id"
                    }
                  },
                  "title": "get_universe_stargates_stargate_id_destination",
                  "description": "destination object"
                }
              },
              "title": "get_universe_stargates_stargate_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Stargate not found",
            "schema": {
              "type": "object",
              "title": "get_universe_stargates_stargate_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_stargates_stargate_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_stargates_stargate_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/graphics/": {
      "get": {
        "description": "Get a list of graphics\n\n---\nAlternate route: `/dev/universe/graphics/`\n\nAlternate route: `/legacy/universe/graphics/`\n\nAlternate route: `/v1/universe/graphics/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get graphics",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "A list of graphic ids",
            "examples": {
              "application/json": [
                10,
                4106
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_universe_graphics_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_universe_graphics_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_graphics",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/graphics/{graphic_id}/": {
      "get": {
        "description": "Get information on a graphic\n\n---\nAlternate route: `/dev/universe/graphics/{graphic_id}/`\n\nAlternate route: `/legacy/universe/graphics/{graphic_id}/`\n\nAlternate route: `/v1/universe/graphics/{graphic_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get graphic information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "graphic_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "graphic_id integer"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a graphic",
            "examples": {
              "application/json": {
                "graphic_id": 10,
                "graphic_file": "res:/dx9/model/worldobject/planet/moon.red"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "graphic_id"
              ],
              "properties": {
                "graphic_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_graphics_graphic_id_graphic_id",
                  "description": "graphic_id integer"
                },
                "graphic_file": {
                  "type": "string",
                  "title": "get_universe_graphics_graphic_id_graphic_file",
                  "description": "graphic_file string"
                },
                "sof_race_name": {
                  "type": "string",
                  "title": "get_universe_graphics_graphic_id_sof_race_name",
                  "description": "sof_race_name string"
                },
                "sof_fation_name": {
                  "type": "string",
                  "title": "get_universe_graphics_graphic_id_sof_fation_name",
                  "description": "sof_fation_name string"
                },
                "sof_dna": {
                  "type": "string",
                  "title": "get_universe_graphics_graphic_id_sof_dna",
                  "description": "sof_dna string"
                },
                "sof_hull_name": {
                  "type": "string",
                  "title": "get_universe_graphics_graphic_id_sof_hull_name",
                  "description": "sof_hull_name string"
                },
                "collision_file": {
                  "type": "string",
                  "title": "get_universe_graphics_graphic_id_collision_file",
                  "description": "collision_file string"
                },
                "icon_folder": {
                  "type": "string",
                  "title": "get_universe_graphics_graphic_id_icon_folder",
                  "description": "icon_folder string"
                }
              },
              "title": "get_universe_graphics_graphic_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Graphic not found",
            "schema": {
              "type": "object",
              "title": "get_universe_graphics_graphic_id_not_found",
              "description": "Not found",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Not found message",
                  "title": "get_universe_graphics_graphic_id_404_not_found"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Not found message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_graphics_graphic_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/system_jumps/": {
      "get": {
        "description": "Get the number of jumps in solar systems within the last hour ending at the timestamp of the Last-Modified header, excluding wormhole space. Only systems with jumps will be listed\n\n---\nAlternate route: `/dev/universe/system_jumps/`\n\nAlternate route: `/legacy/universe/system_jumps/`\n\nAlternate route: `/v1/universe/system_jumps/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get system jumps",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "A list of systems and number of jumps",
            "examples": {
              "application/json": [
                {
                  "system_id": 30002410,
                  "ship_jumps": 42
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "system_id",
                  "ship_jumps"
                ],
                "properties": {
                  "system_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_system_jumps_system_id",
                    "description": "system_id integer"
                  },
                  "ship_jumps": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_system_jumps_ship_jumps",
                    "description": "ship_jumps integer"
                  }
                },
                "title": "get_universe_system_jumps_200_ok",
                "description": "200 ok object"
              },
              "title": "get_universe_system_jumps_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_system_jumps",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/system_kills/": {
      "get": {
        "description": "Get the number of ship, pod and NPC kills per solar system within the last hour ending at the timestamp of the Last-Modified header, excluding wormhole space. Only systems with kills will be listed\n\n---\nAlternate route: `/dev/universe/system_kills/`\n\nAlternate route: `/v2/universe/system_kills/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get system kills",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "A list of systems and number of ship, pod and NPC kills",
            "examples": {
              "application/json": [
                {
                  "system_id": 30002410,
                  "ship_kills": 42,
                  "npc_kills": 0,
                  "pod_kills": 24
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 10000,
              "items": {
                "type": "object",
                "required": [
                  "system_id",
                  "ship_kills",
                  "npc_kills",
                  "pod_kills"
                ],
                "properties": {
                  "system_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_system_kills_system_id",
                    "description": "system_id integer"
                  },
                  "ship_kills": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of player ships killed in this system",
                    "title": "get_universe_system_kills_ship_kills"
                  },
                  "npc_kills": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of NPC ships killed in this system",
                    "title": "get_universe_system_kills_npc_kills"
                  },
                  "pod_kills": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of pods killed in this system",
                    "title": "get_universe_system_kills_pod_kills"
                  }
                },
                "title": "get_universe_system_kills_200_ok",
                "description": "200 ok object"
              },
              "title": "get_universe_system_kills_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_system_kills",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/universe/stars/{star_id}/": {
      "get": {
        "description": "Get information on a star\n\n---\nAlternate route: `/dev/universe/stars/{star_id}/`\n\nAlternate route: `/legacy/universe/stars/{star_id}/`\n\nAlternate route: `/v1/universe/stars/{star_id}/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get star information",
        "tags": [
          "Universe"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "star_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "star_id integer"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Information about a star",
            "examples": {
              "application/json": {
                "type_id": 45033,
                "age": 9398686722,
                "name": "BKG-Q2 - Star",
                "luminosity": 0.06615000218153,
                "radius": 346600000,
                "spectral_class": "K2 V",
                "temperature": 3953,
                "solar_system_id": 30004333
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "name",
                "type_id",
                "age",
                "luminosity",
                "radius",
                "spectral_class",
                "temperature",
                "solar_system_id"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "get_universe_stars_star_id_name",
                  "description": "name string"
                },
                "solar_system_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_stars_star_id_solar_system_id",
                  "description": "solar_system_id integer"
                },
                "type_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_stars_star_id_type_id",
                  "description": "type_id integer"
                },
                "age": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Age of star in years",
                  "title": "get_universe_stars_star_id_age"
                },
                "luminosity": {
                  "type": "number",
                  "format": "float",
                  "title": "get_universe_stars_star_id_luminosity",
                  "description": "luminosity number"
                },
                "radius": {
                  "type": "integer",
                  "format": "int64",
                  "title": "get_universe_stars_star_id_radius",
                  "description": "radius integer"
                },
                "spectral_class": {
                  "type": "string",
                  "enum": [
                    "K2 V",
                    "K4 V",
                    "G2 V",
                    "G8 V",
                    "M7 V",
                    "K7 V",
                    "M2 V",
                    "K5 V",
                    "M3 V",
                    "G0 V",
                    "G7 V",
                    "G3 V",
                    "F9 V",
                    "G5 V",
                    "F6 V",
                    "K8 V",
                    "K9 V",
                    "K6 V",
                    "G9 V",
                    "G6 V",
                    "G4 VI",
                    "G4 V",
                    "F8 V",
                    "F2 V",
                    "F1 V",
                    "K3 V",
                    "F0 VI",
                    "G1 VI",
                    "G0 VI",
                    "K1 V",
                    "M4 V",
                    "M1 V",
                    "M6 V",
                    "M0 V",
                    "K2 IV",
                    "G2 VI",
                    "K0 V",
                    "K5 IV",
                    "F5 VI",
                    "G6 VI",
                    "F6 VI",
                    "F2 IV",
                    "G3 VI",
                    "M8 V",
                    "F1 VI",
                    "K1 IV",
                    "F7 V",
                    "G5 VI",
                    "M5 V",
                    "G7 VI",
                    "F5 V",
                    "F4 VI",
                    "F8 VI",
                    "K3 IV",
                    "F4 IV",
                    "F0 V",
                    "G7 IV",
                    "G8 VI",
                    "F2 VI",
                    "F4 V",
                    "F7 VI",
                    "F3 V",
                    "G1 V",
                    "G9 VI",
                    "F3 IV",
                    "F9 VI",
                    "M9 V",
                    "K0 IV",
                    "F1 IV",
                    "G4 IV",
                    "F3 VI",
                    "K4 IV",
                    "G5 IV",
                    "G3 IV",
                    "G1 IV",
                    "K7 IV",
                    "G0 IV",
                    "K6 IV",
                    "K9 IV",
                    "G2 IV",
                    "F9 IV",
                    "F0 IV",
                    "K8 IV",
                    "G8 IV",
                    "F6 IV",
                    "F5 IV",
                    "A0",
                    "A0IV",
                    "A0IV2"
                  ],
                  "title": "get_universe_stars_star_id_spectral_class",
                  "description": "spectral_class string"
                },
                "temperature": {
                  "type": "integer",
                  "format": "int32",
                  "title": "get_universe_stars_star_id_temperature",
                  "description": "temperature integer"
                }
              },
              "title": "get_universe_stars_star_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_universe_stars_star_id",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/universe/ancestries/": {
      "get": {
        "description": "Get all character ancestries\n\n---\nAlternate route: `/dev/universe/ancestries/`\n\nAlternate route: `/legacy/universe/ancestries/`\n\nAlternate route: `/v1/universe/ancestries/`\n\n---\nThis route expires daily at 11:05",
        "summary": "Get ancestries",
        "tags": [
          "Universe"
        ],
        "responses": {
          "200": {
            "description": "A list of ancestries",
            "examples": {
              "application/json": [
                {
                  "id": 12,
                  "name": "Tube Child",
                  "description": "Acutely aware of the small population...",
                  "bloodline_id": 1,
                  "short_description": "Manufactured citizens of the State."
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 42,
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "bloodline_id",
                  "description"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_ancestries_id",
                    "description": "id integer"
                  },
                  "name": {
                    "type": "string",
                    "title": "get_universe_ancestries_name",
                    "description": "name string"
                  },
                  "bloodline_id": {
                    "description": "The bloodline associated with this ancestry",
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_ancestries_bloodline_id"
                  },
                  "description": {
                    "type": "string",
                    "title": "get_universe_ancestries_description",
                    "description": "description string"
                  },
                  "short_description": {
                    "type": "string",
                    "title": "get_universe_ancestries_short_description",
                    "description": "short_description string"
                  },
                  "icon_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_universe_ancestries_icon_id",
                    "description": "icon_id integer"
                  }
                },
                "title": "get_universe_ancestries_200_ok",
                "description": "200 ok object"
              },
              "title": "get_universe_ancestries_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Content-Language": {
                "description": "The language used in the response",
                "type": "string",
                "enum": [
                  "de",
                  "en-us",
                  "fr",
                  "ja",
                  "ru",
                  "zh"
                ]
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "operationId": "get_universe_ancestries",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/ui/openwindow/marketdetails/": {
      "post": {
        "description": "Open the market details window for a specific typeID inside the client\n\n---\nAlternate route: `/dev/ui/openwindow/marketdetails/`\n\nAlternate route: `/legacy/ui/openwindow/marketdetails/`\n\nAlternate route: `/v1/ui/openwindow/marketdetails/`\n",
        "summary": "Open Market Details",
        "tags": [
          "User Interface"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "The item type to open in market window",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Open window request received"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-ui.open_window.v1"
            ]
          }
        ],
        "operationId": "post_ui_openwindow_marketdetails",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/ui/openwindow/contract/": {
      "post": {
        "description": "Open the contract window inside the client\n\n---\nAlternate route: `/dev/ui/openwindow/contract/`\n\nAlternate route: `/legacy/ui/openwindow/contract/`\n\nAlternate route: `/v1/ui/openwindow/contract/`\n",
        "summary": "Open Contract Window",
        "tags": [
          "User Interface"
        ],
        "parameters": [
          {
            "name": "contract_id",
            "in": "query",
            "description": "The contract to open",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Open window request received"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-ui.open_window.v1"
            ]
          }
        ],
        "operationId": "post_ui_openwindow_contract",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/ui/openwindow/information/": {
      "post": {
        "description": "Open the information window for a character, corporation or alliance inside the client\n\n---\nAlternate route: `/dev/ui/openwindow/information/`\n\nAlternate route: `/legacy/ui/openwindow/information/`\n\nAlternate route: `/v1/ui/openwindow/information/`\n",
        "summary": "Open Information Window",
        "tags": [
          "User Interface"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "target_id",
            "in": "query",
            "description": "The target to open",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Open window request received"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-ui.open_window.v1"
            ]
          }
        ],
        "operationId": "post_ui_openwindow_information",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/ui/autopilot/waypoint/": {
      "post": {
        "description": "Set a solar system as autopilot waypoint\n\n---\nAlternate route: `/dev/ui/autopilot/waypoint/`\n\nAlternate route: `/v2/ui/autopilot/waypoint/`\n",
        "summary": "Set Autopilot Waypoint",
        "tags": [
          "User Interface"
        ],
        "parameters": [
          {
            "name": "add_to_beginning",
            "in": "query",
            "description": "Whether this solar system should be added to the beginning of all waypoints",
            "required": true,
            "type": "boolean",
            "default": false
          },
          {
            "name": "clear_other_waypoints",
            "in": "query",
            "description": "Whether clean other waypoints beforing adding this one",
            "required": true,
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "destination_id",
            "in": "query",
            "description": "The destination to travel to, can be solar system, station or structure's id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Open window request received"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-ui.write_waypoint.v1"
            ]
          }
        ],
        "operationId": "post_ui_autopilot_waypoint",
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/ui/openwindow/newmail/": {
      "post": {
        "description": "Open the New Mail window, according to settings from the request if applicable\n\n---\nAlternate route: `/dev/ui/openwindow/newmail/`\n\nAlternate route: `/legacy/ui/openwindow/newmail/`\n\nAlternate route: `/v1/ui/openwindow/newmail/`\n",
        "summary": "Open New Mail Window",
        "tags": [
          "User Interface"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "new_mail",
            "in": "body",
            "description": "The details of mail to create",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "subject",
                "body",
                "recipients"
              ],
              "properties": {
                "subject": {
                  "type": "string",
                  "maxLength": 1000,
                  "title": "post_ui_openwindow_newmail_subject",
                  "description": "subject string"
                },
                "body": {
                  "type": "string",
                  "maxLength": 10000,
                  "title": "post_ui_openwindow_newmail_body",
                  "description": "body string"
                },
                "recipients": {
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 50,
                  "items": {
                    "type": "integer",
                    "format": "int32",
                    "title": "post_ui_openwindow_newmail_recipient",
                    "description": "recipient integer"
                  },
                  "title": "post_ui_openwindow_newmail_recipients",
                  "description": "recipients array"
                },
                "to_mailing_list_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Corporations, alliances and mailing lists are all types of mailing groups. You may only send to one mailing group, at a time, so you may fill out either this field or the to_corp_or_alliance_ids field",
                  "title": "post_ui_openwindow_newmail_to_mailing_list_id"
                },
                "to_corp_or_alliance_id": {
                  "type": "integer",
                  "format": "int32",
                  "title": "post_ui_openwindow_newmail_to_corp_or_alliance_id",
                  "description": "to_corp_or_alliance_id integer"
                }
              },
              "title": "post_ui_openwindow_newmail_new_mail",
              "description": "new_mail object"
            }
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "204": {
            "description": "Open window request received"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "title": "post_ui_openwindow_newmail_unprocessable_entity",
              "description": "Unprocessable entity",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Unprocessable entity message",
                  "title": "post_ui_openwindow_newmail_422_unprocessable_entity"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Unprocessable entity message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-ui.open_window.v1"
            ]
          }
        ],
        "operationId": "post_ui_openwindow_newmail",
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/wallet/": {
      "get": {
        "summary": "Get a character's wallet balance",
        "description": "Returns a character's wallet balance\n\n---\nAlternate route: `/dev/characters/{character_id}/wallet/`\n\nAlternate route: `/legacy/characters/{character_id}/wallet/`\n\nAlternate route: `/v1/characters/{character_id}/wallet/`\n\n---\nThis route is cached for up to 120 seconds",
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet balance",
            "examples": {
              "application/json": 29500.01
            },
            "schema": {
              "type": "number",
              "format": "double",
              "description": "Wallet balance",
              "title": "get_characters_character_id_wallet_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-wallet.read_character_wallet.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_wallet",
        "x-cached-seconds": 120,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/characters/{character_id}/wallet/journal/": {
      "get": {
        "description": "Retrieve character wallet journal\n\n---\nAlternate route: `/dev/characters/{character_id}/wallet/journal/`\n\nAlternate route: `/v3/characters/{character_id}/wallet/journal/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get character wallet journal",
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "from_id",
            "in": "query",
            "description": "Only show journal entries happened before the transaction referenced by this id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Journal entries",
            "examples": {
              "application/json": [
                {
                  "date": "2016-10-24T09:00:00Z",
                  "ref_id": 1234567890,
                  "ref_type": "player_trading"
                }
              ]
            },
            "schema": {
              "type": "array",
              "description": "Journal entries",
              "maxItems": 2500,
              "items": {
                "type": "object",
                "required": [
                  "date",
                  "ref_id",
                  "ref_type"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of transaction",
                    "title": "get_characters_character_id_wallet_journal_date"
                  },
                  "ref_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique journal reference ID",
                    "title": "get_characters_character_id_wallet_journal_ref_id"
                  },
                  "ref_type": {
                    "type": "string",
                    "description": "Transaction type, different type of transaction will populate different fields in `extra_info` Note: If you have an existing XML API application that is using ref_types, you will need to know which string ESI ref_type maps to which integer. You can use the following gist to see string->int mappings: https://gist.github.com/ccp-zoetrope/c03db66d90c2148724c06171bc52e0ec",
                    "enum": [
                      "acceleration_gate_fee",
                      "advertisement_listing_fee",
                      "agent_donation",
                      "agent_location_services",
                      "agent_miscellaneous",
                      "agent_mission_collateral_paid",
                      "agent_mission_collateral_refunded",
                      "agent_mission_reward",
                      "agent_mission_reward_corporation_tax",
                      "agent_mission_time_bonus_reward",
                      "agent_mission_time_bonus_reward_corporation_tax",
                      "agent_security_services",
                      "agent_services_rendered",
                      "agents_preward",
                      "alliance_maintainance_fee",
                      "alliance_registration_fee",
                      "asset_safety_recovery_tax",
                      "bounty",
                      "bounty_prize",
                      "bounty_prize_corporation_tax",
                      "bounty_prizes",
                      "bounty_reimbursement",
                      "bounty_surcharge",
                      "brokers_fee",
                      "clone_activation",
                      "clone_transfer",
                      "contraband_fine",
                      "contract_auction_bid",
                      "contract_auction_bid_corp",
                      "contract_auction_bid_refund",
                      "contract_auction_sold",
                      "contract_brokers_fee",
                      "contract_brokers_fee_corp",
                      "contract_collateral",
                      "contract_collateral_deposited_corp",
                      "contract_collateral_payout",
                      "contract_collateral_refund",
                      "contract_deposit",
                      "contract_deposit_corp",
                      "contract_deposit_refund",
                      "contract_deposit_sales_tax",
                      "contract_price",
                      "contract_price_payment_corp",
                      "contract_reversal",
                      "contract_reward",
                      "contract_reward_deposited",
                      "contract_reward_deposited_corp",
                      "contract_reward_refund",
                      "contract_sales_tax",
                      "copying",
                      "corporate_reward_payout",
                      "corporate_reward_tax",
                      "corporation_account_withdrawal",
                      "corporation_bulk_payment",
                      "corporation_dividend_payment",
                      "corporation_liquidation",
                      "corporation_logo_change_cost",
                      "corporation_payment",
                      "corporation_registration_fee",
                      "courier_mission_escrow",
                      "cspa",
                      "cspaofflinerefund",
                      "datacore_fee",
                      "dna_modification_fee",
                      "docking_fee",
                      "duel_wager_escrow",
                      "duel_wager_payment",
                      "duel_wager_refund",
                      "factory_slot_rental_fee",
                      "gm_cash_transfer",
                      "industry_job_tax",
                      "infrastructure_hub_maintenance",
                      "inheritance",
                      "insurance",
                      "jump_clone_activation_fee",
                      "jump_clone_installation_fee",
                      "kill_right_fee",
                      "lp_store",
                      "manufacturing",
                      "market_escrow",
                      "market_fine_paid",
                      "market_transaction",
                      "medal_creation",
                      "medal_issued",
                      "mission_completion",
                      "mission_cost",
                      "mission_expiration",
                      "mission_reward",
                      "office_rental_fee",
                      "operation_bonus",
                      "opportunity_reward",
                      "planetary_construction",
                      "planetary_export_tax",
                      "planetary_import_tax",
                      "player_donation",
                      "player_trading",
                      "project_discovery_reward",
                      "project_discovery_tax",
                      "reaction",
                      "release_of_impounded_property",
                      "repair_bill",
                      "reprocessing_tax",
                      "researching_material_productivity",
                      "researching_technology",
                      "researching_time_productivity",
                      "resource_wars_reward",
                      "reverse_engineering",
                      "security_processing_fee",
                      "shares",
                      "sovereignity_bill",
                      "store_purchase",
                      "store_purchase_refund",
                      "transaction_tax",
                      "upkeep_adjustment_fee",
                      "war_ally_contract",
                      "war_fee",
                      "war_fee_surrender"
                    ],
                    "title": "get_characters_character_id_wallet_journal_ref_type"
                  },
                  "first_party_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_wallet_journal_first_party_id",
                    "description": "first_party_id integer"
                  },
                  "first_party_type": {
                    "type": "string",
                    "enum": [
                      "character",
                      "corporation",
                      "alliance",
                      "faction",
                      "system"
                    ],
                    "title": "get_characters_character_id_wallet_journal_first_party_type",
                    "description": "first_party_type string"
                  },
                  "second_party_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_wallet_journal_second_party_id",
                    "description": "second_party_id integer"
                  },
                  "second_party_type": {
                    "type": "string",
                    "enum": [
                      "character",
                      "corporation",
                      "alliance",
                      "faction",
                      "system"
                    ],
                    "title": "get_characters_character_id_wallet_journal_second_party_type",
                    "description": "second_party_type string"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Transaction amount. Positive when value transferred to the first party. Negative otherwise",
                    "title": "get_characters_character_id_wallet_journal_amount"
                  },
                  "balance": {
                    "type": "number",
                    "format": "double",
                    "description": "Wallet balance after transaction occurred",
                    "title": "get_characters_character_id_wallet_journal_balance"
                  },
                  "reason": {
                    "type": "string",
                    "title": "get_characters_character_id_wallet_journal_reason",
                    "description": "reason string"
                  },
                  "tax_receiver_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "the corporation ID receiving any tax paid",
                    "title": "get_characters_character_id_wallet_journal_tax_receiver_id"
                  },
                  "tax": {
                    "type": "number",
                    "format": "double",
                    "description": "Tax amount received for tax related transactions",
                    "title": "get_characters_character_id_wallet_journal_tax"
                  },
                  "extra_info": {
                    "type": "object",
                    "description": "Extra information for different type of transaction",
                    "properties": {
                      "location_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_wallet_journal_location_id",
                        "description": "location_id integer"
                      },
                      "transaction_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_characters_character_id_wallet_journal_transaction_id",
                        "description": "transaction_id integer"
                      },
                      "npc_name": {
                        "type": "string",
                        "title": "get_characters_character_id_wallet_journal_npc_name",
                        "description": "npc_name string"
                      },
                      "npc_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_wallet_journal_npc_id",
                        "description": "npc_id integer"
                      },
                      "destroyed_ship_type_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_wallet_journal_destroyed_ship_type_id",
                        "description": "destroyed_ship_type_id integer"
                      },
                      "character_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_wallet_journal_character_id",
                        "description": "character_id integer"
                      },
                      "corporation_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_wallet_journal_corporation_id",
                        "description": "corporation_id integer"
                      },
                      "alliance_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_wallet_journal_alliance_id",
                        "description": "alliance_id integer"
                      },
                      "job_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_wallet_journal_job_id",
                        "description": "job_id integer"
                      },
                      "contract_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_wallet_journal_contract_id",
                        "description": "contract_id integer"
                      },
                      "system_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_wallet_journal_system_id",
                        "description": "system_id integer"
                      },
                      "planet_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_characters_character_id_wallet_journal_planet_id",
                        "description": "planet_id integer"
                      }
                    },
                    "title": "get_characters_character_id_wallet_journal_extra_info"
                  }
                },
                "title": "get_characters_character_id_wallet_journal_200_ok",
                "description": "200 ok object"
              },
              "title": "get_characters_character_id_wallet_journal_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-wallet.read_character_wallet.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_wallet_journal",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v3"
        ]
      }
    },
    "/characters/{character_id}/wallet/transactions/": {
      "get": {
        "description": "Get wallet transactions of a character\n\n---\nAlternate route: `/dev/characters/{character_id}/wallet/transactions/`\n\nAlternate route: `/legacy/characters/{character_id}/wallet/transactions/`\n\nAlternate route: `/v1/characters/{character_id}/wallet/transactions/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get wallet transactions",
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/character_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "from_id",
            "in": "query",
            "description": "Only show transactions happened before the one referenced by this id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet transactions",
            "examples": {
              "application/json": [
                {
                  "transaction_id": 1234567890,
                  "date": "2016-10-24T09:00:00Z",
                  "location_id": 60014719,
                  "type_id": 587,
                  "unit_price": 1,
                  "quantity": 1,
                  "client_id": 54321,
                  "is_buy": true,
                  "is_personal": true,
                  "journal_ref_id": 67890
                }
              ]
            },
            "schema": {
              "type": "array",
              "description": "Wallet transactions",
              "maxItems": 2500,
              "items": {
                "type": "object",
                "description": "wallet transaction",
                "required": [
                  "transaction_id",
                  "date",
                  "location_id",
                  "type_id",
                  "unit_price",
                  "quantity",
                  "client_id",
                  "is_buy",
                  "is_personal",
                  "journal_ref_id"
                ],
                "properties": {
                  "transaction_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique transaction ID",
                    "title": "get_characters_character_id_wallet_transactions_transaction_id"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of transaction",
                    "title": "get_characters_character_id_wallet_transactions_date"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_wallet_transactions_type_id",
                    "description": "type_id integer"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_characters_character_id_wallet_transactions_location_id",
                    "description": "location_id integer"
                  },
                  "unit_price": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount paid per unit",
                    "title": "get_characters_character_id_wallet_transactions_unit_price"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_wallet_transactions_quantity",
                    "description": "quantity integer"
                  },
                  "client_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_characters_character_id_wallet_transactions_client_id",
                    "description": "client_id integer"
                  },
                  "is_buy": {
                    "type": "boolean",
                    "title": "get_characters_character_id_wallet_transactions_is_buy",
                    "description": "is_buy boolean"
                  },
                  "is_personal": {
                    "type": "boolean",
                    "title": "get_characters_character_id_wallet_transactions_is_personal",
                    "description": "is_personal boolean"
                  },
                  "journal_ref_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_characters_character_id_wallet_transactions_journal_ref_id",
                    "description": "journal_ref_id integer"
                  }
                },
                "title": "get_characters_character_id_wallet_transactions_200_ok"
              },
              "title": "get_characters_character_id_wallet_transactions_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "security": [
          {
            "evesso": [
              "esi-wallet.read_character_wallet.v1"
            ]
          }
        ],
        "operationId": "get_characters_character_id_wallet_transactions",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/wallets/": {
      "get": {
        "description": "Get a corporation's wallets\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/wallets/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/wallets/`\n\nAlternate route: `/v1/corporations/{corporation_id}/wallets/`\n\n---\nThis route is cached for up to 300 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant, Junior_Accountant\n",
        "summary": "Returns a corporation's wallet balance",
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "List of corporation wallets",
            "examples": {
              "application/json": [
                {
                  "division": 1,
                  "balance": 123.45
                },
                {
                  "division": 2,
                  "balance": 123.45
                },
                {
                  "division": 3,
                  "balance": 123.45
                },
                {
                  "division": 4,
                  "balance": 123.45
                },
                {
                  "division": 5,
                  "balance": 123.45
                },
                {
                  "division": 6,
                  "balance": 123.45
                },
                {
                  "division": 7,
                  "balance": 123.45
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 7,
              "items": {
                "type": "object",
                "required": [
                  "division",
                  "balance"
                ],
                "properties": {
                  "division": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 7,
                    "title": "get_corporations_corporation_id_wallets_division",
                    "description": "division integer"
                  },
                  "balance": {
                    "type": "number",
                    "format": "double",
                    "title": "get_corporations_corporation_id_wallets_balance",
                    "description": "balance number"
                  }
                },
                "title": "get_corporations_corporation_id_wallets_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_wallets_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Accountant",
          "Junior_Accountant"
        ],
        "security": [
          {
            "evesso": [
              "esi-wallet.read_corporation_wallets.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_wallets",
        "x-cached-seconds": 300,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/corporations/{corporation_id}/wallets/{division}/journal/": {
      "get": {
        "description": "Retrieve corporation wallet journal\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/wallets/{division}/journal/`\n\nAlternate route: `/v2/corporations/{corporation_id}/wallets/{division}/journal/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant, Junior_Accountant\n",
        "summary": "Get corporation wallet journal",
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "division",
            "in": "path",
            "description": "Wallet key of the division to fetch journals from",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 7
          },
          {
            "name": "from_id",
            "in": "query",
            "description": "Only show journal entries happened before the transaction referenced by this id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Journal entries",
            "examples": {
              "application/json": [
                {
                  "date": "2016-10-24T09:00:00Z",
                  "ref_id": 1234567890,
                  "ref_type": "player_trading"
                }
              ]
            },
            "schema": {
              "type": "array",
              "description": "Journal entries",
              "maxItems": 2500,
              "items": {
                "type": "object",
                "required": [
                  "date",
                  "ref_id",
                  "ref_type"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of transaction",
                    "title": "get_corporations_corporation_id_wallets_division_journal_date"
                  },
                  "ref_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique journal reference ID",
                    "title": "get_corporations_corporation_id_wallets_division_journal_ref_id"
                  },
                  "ref_type": {
                    "type": "string",
                    "description": "Transaction type, different type of transaction will populate different fields in `extra_info` Note: If you have an existing XML API application that is using ref_types, you will need to know which string ESI ref_type maps to which integer. You can use the following gist to see string->int mappings: https://gist.github.com/ccp-zoetrope/c03db66d90c2148724c06171bc52e0ec",
                    "enum": [
                      "acceleration_gate_fee",
                      "advertisement_listing_fee",
                      "agent_donation",
                      "agent_location_services",
                      "agent_miscellaneous",
                      "agent_mission_collateral_paid",
                      "agent_mission_collateral_refunded",
                      "agent_mission_reward",
                      "agent_mission_reward_corporation_tax",
                      "agent_mission_time_bonus_reward",
                      "agent_mission_time_bonus_reward_corporation_tax",
                      "agent_security_services",
                      "agent_services_rendered",
                      "agents_preward",
                      "alliance_maintainance_fee",
                      "alliance_registration_fee",
                      "asset_safety_recovery_tax",
                      "bounty",
                      "bounty_prize",
                      "bounty_prize_corporation_tax",
                      "bounty_prizes",
                      "bounty_reimbursement",
                      "bounty_surcharge",
                      "brokers_fee",
                      "clone_activation",
                      "clone_transfer",
                      "contraband_fine",
                      "contract_auction_bid",
                      "contract_auction_bid_corp",
                      "contract_auction_bid_refund",
                      "contract_auction_sold",
                      "contract_brokers_fee",
                      "contract_brokers_fee_corp",
                      "contract_collateral",
                      "contract_collateral_deposited_corp",
                      "contract_collateral_payout",
                      "contract_collateral_refund",
                      "contract_deposit",
                      "contract_deposit_corp",
                      "contract_deposit_refund",
                      "contract_deposit_sales_tax",
                      "contract_price",
                      "contract_price_payment_corp",
                      "contract_reversal",
                      "contract_reward",
                      "contract_reward_deposited",
                      "contract_reward_deposited_corp",
                      "contract_reward_refund",
                      "contract_sales_tax",
                      "copying",
                      "corporate_reward_payout",
                      "corporate_reward_tax",
                      "corporation_account_withdrawal",
                      "corporation_bulk_payment",
                      "corporation_dividend_payment",
                      "corporation_liquidation",
                      "corporation_logo_change_cost",
                      "corporation_payment",
                      "corporation_registration_fee",
                      "courier_mission_escrow",
                      "cspa",
                      "cspaofflinerefund",
                      "datacore_fee",
                      "dna_modification_fee",
                      "docking_fee",
                      "duel_wager_escrow",
                      "duel_wager_payment",
                      "duel_wager_refund",
                      "factory_slot_rental_fee",
                      "gm_cash_transfer",
                      "industry_job_tax",
                      "infrastructure_hub_maintenance",
                      "inheritance",
                      "insurance",
                      "jump_clone_activation_fee",
                      "jump_clone_installation_fee",
                      "kill_right_fee",
                      "lp_store",
                      "manufacturing",
                      "market_escrow",
                      "market_fine_paid",
                      "market_transaction",
                      "medal_creation",
                      "medal_issued",
                      "mission_completion",
                      "mission_cost",
                      "mission_expiration",
                      "mission_reward",
                      "office_rental_fee",
                      "operation_bonus",
                      "opportunity_reward",
                      "planetary_construction",
                      "planetary_export_tax",
                      "planetary_import_tax",
                      "player_donation",
                      "player_trading",
                      "project_discovery_reward",
                      "project_discovery_tax",
                      "reaction",
                      "release_of_impounded_property",
                      "repair_bill",
                      "reprocessing_tax",
                      "researching_material_productivity",
                      "researching_technology",
                      "researching_time_productivity",
                      "resource_wars_reward",
                      "reverse_engineering",
                      "security_processing_fee",
                      "shares",
                      "sovereignity_bill",
                      "store_purchase",
                      "store_purchase_refund",
                      "transaction_tax",
                      "upkeep_adjustment_fee",
                      "war_ally_contract",
                      "war_fee",
                      "war_fee_surrender"
                    ],
                    "title": "get_corporations_corporation_id_wallets_division_journal_ref_type"
                  },
                  "first_party_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_wallets_division_journal_first_party_id",
                    "description": "first_party_id integer"
                  },
                  "first_party_type": {
                    "type": "string",
                    "enum": [
                      "character",
                      "corporation",
                      "alliance",
                      "faction",
                      "system"
                    ],
                    "title": "get_corporations_corporation_id_wallets_division_journal_first_party_type",
                    "description": "first_party_type string"
                  },
                  "second_party_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_wallets_division_journal_second_party_id",
                    "description": "second_party_id integer"
                  },
                  "second_party_type": {
                    "type": "string",
                    "enum": [
                      "character",
                      "corporation",
                      "alliance",
                      "faction",
                      "system"
                    ],
                    "title": "get_corporations_corporation_id_wallets_division_journal_second_party_type",
                    "description": "second_party_type string"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Transaction amount. Positive when value transferred to the first party. Negative otherwise",
                    "title": "get_corporations_corporation_id_wallets_division_journal_amount"
                  },
                  "balance": {
                    "type": "number",
                    "format": "double",
                    "description": "Wallet balance after transaction occurred",
                    "title": "get_corporations_corporation_id_wallets_division_journal_balance"
                  },
                  "reason": {
                    "type": "string",
                    "title": "get_corporations_corporation_id_wallets_division_journal_reason",
                    "description": "reason string"
                  },
                  "tax_receiver_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "the corporation ID receiving any tax paid",
                    "title": "get_corporations_corporation_id_wallets_division_journal_tax_receiver_id"
                  },
                  "tax": {
                    "type": "number",
                    "format": "double",
                    "description": "Tax amount received for tax related transactions",
                    "title": "get_corporations_corporation_id_wallets_division_journal_tax"
                  },
                  "extra_info": {
                    "type": "object",
                    "description": "Extra information for different type of transaction",
                    "properties": {
                      "location_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_corporations_corporation_id_wallets_division_journal_location_id",
                        "description": "location_id integer"
                      },
                      "transaction_id": {
                        "type": "integer",
                        "format": "int64",
                        "title": "get_corporations_corporation_id_wallets_division_journal_transaction_id",
                        "description": "transaction_id integer"
                      },
                      "npc_name": {
                        "type": "string",
                        "title": "get_corporations_corporation_id_wallets_division_journal_npc_name",
                        "description": "npc_name string"
                      },
                      "npc_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_wallets_division_journal_npc_id",
                        "description": "npc_id integer"
                      },
                      "destroyed_ship_type_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_wallets_division_journal_destroyed_ship_type_id",
                        "description": "destroyed_ship_type_id integer"
                      },
                      "character_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_wallets_division_journal_character_id",
                        "description": "character_id integer"
                      },
                      "corporation_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_wallets_division_journal_corporation_id",
                        "description": "corporation_id integer"
                      },
                      "alliance_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_wallets_division_journal_alliance_id",
                        "description": "alliance_id integer"
                      },
                      "job_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_wallets_division_journal_job_id",
                        "description": "job_id integer"
                      },
                      "contract_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_wallets_division_journal_contract_id",
                        "description": "contract_id integer"
                      },
                      "system_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_wallets_division_journal_system_id",
                        "description": "system_id integer"
                      },
                      "planet_id": {
                        "type": "integer",
                        "format": "int32",
                        "title": "get_corporations_corporation_id_wallets_division_journal_planet_id",
                        "description": "planet_id integer"
                      }
                    },
                    "title": "get_corporations_corporation_id_wallets_division_journal_extra_info"
                  }
                },
                "title": "get_corporations_corporation_id_wallets_division_journal_200_ok",
                "description": "200 ok object"
              },
              "title": "get_corporations_corporation_id_wallets_division_journal_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Accountant",
          "Junior_Accountant"
        ],
        "security": [
          {
            "evesso": [
              "esi-wallet.read_corporation_wallets.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_wallets_division_journal",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "v2"
        ]
      }
    },
    "/corporations/{corporation_id}/wallets/{division}/transactions/": {
      "get": {
        "description": "Get wallet transactions of a corporation\n\n---\nAlternate route: `/dev/corporations/{corporation_id}/wallets/{division}/transactions/`\n\nAlternate route: `/legacy/corporations/{corporation_id}/wallets/{division}/transactions/`\n\nAlternate route: `/v1/corporations/{corporation_id}/wallets/{division}/transactions/`\n\n---\nThis route is cached for up to 3600 seconds\n\n---\nRequires one of the following EVE corporation role(s): Accountant, Junior_Accountant\n",
        "summary": "Get corporation wallet transactions",
        "tags": [
          "Wallet"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/corporation_id"
          },
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "division",
            "in": "path",
            "description": "Wallet key of the division to fetch journals from",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 7
          },
          {
            "name": "from_id",
            "in": "query",
            "description": "Only show journal entries happened before the transaction referenced by this id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet transactions",
            "examples": {
              "application/json": [
                {
                  "transaction_id": 1234567890,
                  "date": "2016-10-24T09:00:00Z",
                  "location_id": 60014719,
                  "type_id": 587,
                  "unit_price": 1,
                  "quantity": 1,
                  "client_id": 54321,
                  "is_buy": true,
                  "journal_ref_id": 67890
                }
              ]
            },
            "schema": {
              "type": "array",
              "description": "Wallet transactions",
              "maxItems": 2500,
              "items": {
                "type": "object",
                "description": "wallet transaction",
                "required": [
                  "transaction_id",
                  "date",
                  "location_id",
                  "type_id",
                  "unit_price",
                  "quantity",
                  "client_id",
                  "is_buy",
                  "journal_ref_id"
                ],
                "properties": {
                  "transaction_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique transaction ID",
                    "title": "get_corporations_corporation_id_wallets_division_transactions_transaction_id"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of transaction",
                    "title": "get_corporations_corporation_id_wallets_division_transactions_date"
                  },
                  "type_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_wallets_division_transactions_type_id",
                    "description": "type_id integer"
                  },
                  "location_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_corporations_corporation_id_wallets_division_transactions_location_id",
                    "description": "location_id integer"
                  },
                  "unit_price": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount paid per unit",
                    "title": "get_corporations_corporation_id_wallets_division_transactions_unit_price"
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_wallets_division_transactions_quantity",
                    "description": "quantity integer"
                  },
                  "client_id": {
                    "type": "integer",
                    "format": "int32",
                    "title": "get_corporations_corporation_id_wallets_division_transactions_client_id",
                    "description": "client_id integer"
                  },
                  "is_buy": {
                    "type": "boolean",
                    "title": "get_corporations_corporation_id_wallets_division_transactions_is_buy",
                    "description": "is_buy boolean"
                  },
                  "journal_ref_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "get_corporations_corporation_id_wallets_division_transactions_journal_ref_id",
                    "description": "journal_ref_id integer"
                  }
                },
                "title": "get_corporations_corporation_id_wallets_division_transactions_200_ok"
              },
              "title": "get_corporations_corporation_id_wallets_division_transactions_ok"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/forbidden"
            },
            "examples": {
              "application/json": {
                "error": "Forbidden message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "x-required-roles": [
          "Accountant",
          "Junior_Accountant"
        ],
        "security": [
          {
            "evesso": [
              "esi-wallet.read_corporation_wallets.v1"
            ]
          }
        ],
        "operationId": "get_corporations_corporation_id_wallets_division_transactions",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/wars/": {
      "get": {
        "description": "Return a list of wars\n\n---\nAlternate route: `/dev/wars/`\n\nAlternate route: `/legacy/wars/`\n\nAlternate route: `/v1/wars/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List wars",
        "tags": [
          "Wars"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "name": "max_war_id",
            "in": "query",
            "description": "Only return wars with ID smaller than this.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of war IDs, in decending order by war_id.",
            "examples": {
              "application/json": [
                3,
                2,
                1
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 2000,
              "items": {
                "type": "integer",
                "format": "int32",
                "title": "get_wars_200_ok",
                "description": "200 ok integer"
              },
              "title": "get_wars_ok",
              "description": "200 ok array"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_wars",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/wars/{war_id}/": {
      "get": {
        "description": "Return details about a war\n\n---\nAlternate route: `/dev/wars/{war_id}/`\n\nAlternate route: `/legacy/wars/{war_id}/`\n\nAlternate route: `/v1/wars/{war_id}/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "Get war information",
        "tags": [
          "Wars"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "name": "war_id",
            "in": "path",
            "description": "ID for a war",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Details about a war",
            "examples": {
              "application/json": {
                "id": 1941,
                "declared": "2004-05-22T05:20:00Z",
                "mutual": false,
                "open_for_allies": false,
                "aggressor": {
                  "corporation_id": 986665792,
                  "ships_killed": 0,
                  "isk_destroyed": 0
                },
                "defender": {
                  "corporation_id": 1001562011,
                  "ships_killed": 0,
                  "isk_destroyed": 0
                }
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "id",
                "declared",
                "mutual",
                "open_for_allies",
                "aggressor",
                "defender"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ID of the specified war",
                  "title": "get_wars_war_id_id"
                },
                "declared": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time that the war was declared",
                  "title": "get_wars_war_id_declared"
                },
                "started": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the war started and both sides could shoot each other",
                  "title": "get_wars_war_id_started"
                },
                "retracted": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time the war was retracted but both sides could still shoot each other",
                  "title": "get_wars_war_id_retracted"
                },
                "finished": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time the war ended and shooting was no longer allowed",
                  "title": "get_wars_war_id_finished"
                },
                "mutual": {
                  "type": "boolean",
                  "description": "Was the war declared mutual by both parties",
                  "title": "get_wars_war_id_mutual"
                },
                "open_for_allies": {
                  "type": "boolean",
                  "description": "Is the war currently open for allies or not",
                  "title": "get_wars_war_id_open_for_allies"
                },
                "aggressor": {
                  "type": "object",
                  "description": "The aggressor corporation or alliance that declared this war, only contains either corporation_id or alliance_id",
                  "required": [
                    "ships_killed",
                    "isk_destroyed"
                  ],
                  "properties": {
                    "corporation_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Corporation ID if and only if the aggressor is a corporation",
                      "title": "get_wars_war_id_corporation_id"
                    },
                    "alliance_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Alliance ID if and only if the aggressor is an alliance",
                      "title": "get_wars_war_id_alliance_id"
                    },
                    "ships_killed": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of ships the aggressor has killed",
                      "title": "get_wars_war_id_ships_killed"
                    },
                    "isk_destroyed": {
                      "type": "number",
                      "format": "float",
                      "description": "ISK value of ships the aggressor has destroyed",
                      "title": "get_wars_war_id_isk_destroyed"
                    }
                  },
                  "title": "get_wars_war_id_aggressor"
                },
                "defender": {
                  "type": "object",
                  "description": "The defending corporation or alliance that declared this war, only contains either corporation_id or alliance_id",
                  "required": [
                    "ships_killed",
                    "isk_destroyed"
                  ],
                  "properties": {
                    "corporation_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Corporation ID if and only if the defender is a corporation",
                      "title": "get_wars_war_id_corporation_id"
                    },
                    "alliance_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Alliance ID if and only if the defender is an alliance",
                      "title": "get_wars_war_id_alliance_id"
                    },
                    "ships_killed": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of ships the defender has killed",
                      "title": "get_wars_war_id_ships_killed"
                    },
                    "isk_destroyed": {
                      "type": "number",
                      "format": "float",
                      "description": "ISK value of ships the defender has killed",
                      "title": "get_wars_war_id_isk_destroyed"
                    }
                  },
                  "title": "get_wars_war_id_defender"
                },
                "allies": {
                  "type": "array",
                  "description": "allied corporations or alliances, each object contains either corporation_id or alliance_id",
                  "maxItems": 10000,
                  "items": {
                    "type": "object",
                    "properties": {
                      "corporation_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Corporation ID if and only if this ally is a corporation",
                        "title": "get_wars_war_id_corporation_id"
                      },
                      "alliance_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Alliance ID if and only if this ally is an alliance",
                        "title": "get_wars_war_id_alliance_id"
                      }
                    },
                    "title": "get_wars_war_id_ally",
                    "description": "ally object"
                  },
                  "title": "get_wars_war_id_allies"
                }
              },
              "title": "get_wars_war_id_ok",
              "description": "200 ok object"
            },
            "headers": {
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "422": {
            "description": "War not found",
            "schema": {
              "type": "object",
              "title": "get_wars_war_id_unprocessable_entity",
              "description": "Unprocessable entity",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Unprocessable entity message",
                  "title": "get_wars_war_id_422_unprocessable_entity"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Unprocessable entity message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_wars_war_id",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    },
    "/wars/{war_id}/killmails/": {
      "get": {
        "description": "Return a list of kills related to a war\n\n---\nAlternate route: `/dev/wars/{war_id}/killmails/`\n\nAlternate route: `/legacy/wars/{war_id}/killmails/`\n\nAlternate route: `/v1/wars/{war_id}/killmails/`\n\n---\nThis route is cached for up to 3600 seconds",
        "summary": "List kills for a war",
        "tags": [
          "Wars"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/datasource"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/user_agent"
          },
          {
            "name": "war_id",
            "in": "path",
            "description": "A valid war ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/X-User-Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of killmail IDs and hashes",
            "examples": {
              "application/json": [
                {
                  "killmail_id": 2,
                  "killmail_hash": "8eef5e8fb6b88fe3407c489df33822b2e3b57a5e"
                },
                {
                  "killmail_id": 1,
                  "killmail_hash": "b41ccb498ece33d64019f64c0db392aa3aa701fb"
                }
              ]
            },
            "schema": {
              "type": "array",
              "maxItems": 2000,
              "items": {
                "type": "object",
                "required": [
                  "killmail_id",
                  "killmail_hash"
                ],
                "properties": {
                  "killmail_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of this killmail",
                    "title": "get_wars_war_id_killmails_killmail_id"
                  },
                  "killmail_hash": {
                    "type": "string",
                    "description": "A hash of this killmail",
                    "title": "get_wars_war_id_killmails_killmail_hash"
                  }
                },
                "title": "get_wars_war_id_killmails_200_ok",
                "description": "200 ok object"
              },
              "title": "get_wars_war_id_killmails_ok",
              "description": "200 ok array"
            },
            "headers": {
              "X-Pages": {
                "description": "Maximum page number",
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "Cache-Control": {
                "description": "The caching mechanism used",
                "type": "string"
              },
              "Last-Modified": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              },
              "Expires": {
                "description": "RFC7231 formatted datetime string",
                "type": "string"
              }
            }
          },
          "422": {
            "description": "War not found",
            "schema": {
              "type": "object",
              "title": "get_wars_war_id_killmails_unprocessable_entity",
              "description": "Unprocessable entity",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Unprocessable entity message",
                  "title": "get_wars_war_id_killmails_422_unprocessable_entity"
                }
              }
            },
            "examples": {
              "application/json": {
                "error": "Unprocessable entity message"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/internal_server_error"
            },
            "examples": {
              "application/json": {
                "error": "Internal server error message"
              }
            }
          }
        },
        "operationId": "get_wars_war_id_killmails",
        "x-cached-seconds": 3600,
        "x-alternate-versions": [
          "dev",
          "legacy",
          "v1"
        ]
      }
    }
  },
  "securityDefinitions": {
    "evesso": {
      "type": "oauth2",
      "authorizationUrl": "https://login.eveonline.com/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "esi-alliances.read_contacts.v1": "EVE SSO scope esi-alliances.read_contacts.v1",
        "esi-assets.read_assets.v1": "EVE SSO scope esi-assets.read_assets.v1",
        "esi-assets.read_corporation_assets.v1": "EVE SSO scope esi-assets.read_corporation_assets.v1",
        "esi-bookmarks.read_character_bookmarks.v1": "EVE SSO scope esi-bookmarks.read_character_bookmarks.v1",
        "esi-bookmarks.read_corporation_bookmarks.v1": "EVE SSO scope esi-bookmarks.read_corporation_bookmarks.v1",
        "esi-calendar.read_calendar_events.v1": "EVE SSO scope esi-calendar.read_calendar_events.v1",
        "esi-calendar.respond_calendar_events.v1": "EVE SSO scope esi-calendar.respond_calendar_events.v1",
        "esi-characters.read_agents_research.v1": "EVE SSO scope esi-characters.read_agents_research.v1",
        "esi-characters.read_blueprints.v1": "EVE SSO scope esi-characters.read_blueprints.v1",
        "esi-characters.read_chat_channels.v1": "EVE SSO scope esi-characters.read_chat_channels.v1",
        "esi-characters.read_contacts.v1": "EVE SSO scope esi-characters.read_contacts.v1",
        "esi-characters.read_corporation_roles.v1": "EVE SSO scope esi-characters.read_corporation_roles.v1",
        "esi-characters.read_fatigue.v1": "EVE SSO scope esi-characters.read_fatigue.v1",
        "esi-characters.read_fw_stats.v1": "EVE SSO scope esi-characters.read_fw_stats.v1",
        "esi-characters.read_loyalty.v1": "EVE SSO scope esi-characters.read_loyalty.v1",
        "esi-characters.read_medals.v1": "EVE SSO scope esi-characters.read_medals.v1",
        "esi-characters.read_notifications.v1": "EVE SSO scope esi-characters.read_notifications.v1",
        "esi-characters.read_opportunities.v1": "EVE SSO scope esi-characters.read_opportunities.v1",
        "esi-characters.read_standings.v1": "EVE SSO scope esi-characters.read_standings.v1",
        "esi-characters.read_titles.v1": "EVE SSO scope esi-characters.read_titles.v1",
        "esi-characters.write_contacts.v1": "EVE SSO scope esi-characters.write_contacts.v1",
        "esi-characterstats.read.v1": "EVE SSO scope esi-characterstats.read.v1",
        "esi-clones.read_clones.v1": "EVE SSO scope esi-clones.read_clones.v1",
        "esi-clones.read_implants.v1": "EVE SSO scope esi-clones.read_implants.v1",
        "esi-contracts.read_character_contracts.v1": "EVE SSO scope esi-contracts.read_character_contracts.v1",
        "esi-contracts.read_corporation_contracts.v1": "EVE SSO scope esi-contracts.read_corporation_contracts.v1",
        "esi-corporations.read_blueprints.v1": "EVE SSO scope esi-corporations.read_blueprints.v1",
        "esi-corporations.read_contacts.v1": "EVE SSO scope esi-corporations.read_contacts.v1",
        "esi-corporations.read_container_logs.v1": "EVE SSO scope esi-corporations.read_container_logs.v1",
        "esi-corporations.read_corporation_membership.v1": "EVE SSO scope esi-corporations.read_corporation_membership.v1",
        "esi-corporations.read_divisions.v1": "EVE SSO scope esi-corporations.read_divisions.v1",
        "esi-corporations.read_facilities.v1": "EVE SSO scope esi-corporations.read_facilities.v1",
        "esi-corporations.read_fw_stats.v1": "EVE SSO scope esi-corporations.read_fw_stats.v1",
        "esi-corporations.read_medals.v1": "EVE SSO scope esi-corporations.read_medals.v1",
        "esi-corporations.read_outposts.v1": "EVE SSO scope esi-corporations.read_outposts.v1",
        "esi-corporations.read_standings.v1": "EVE SSO scope esi-corporations.read_standings.v1",
        "esi-corporations.read_starbases.v1": "EVE SSO scope esi-corporations.read_starbases.v1",
        "esi-corporations.read_structures.v1": "EVE SSO scope esi-corporations.read_structures.v1",
        "esi-corporations.read_titles.v1": "EVE SSO scope esi-corporations.read_titles.v1",
        "esi-corporations.track_members.v1": "EVE SSO scope esi-corporations.track_members.v1",
        "esi-fittings.read_fittings.v1": "EVE SSO scope esi-fittings.read_fittings.v1",
        "esi-fittings.write_fittings.v1": "EVE SSO scope esi-fittings.write_fittings.v1",
        "esi-fleets.read_fleet.v1": "EVE SSO scope esi-fleets.read_fleet.v1",
        "esi-fleets.write_fleet.v1": "EVE SSO scope esi-fleets.write_fleet.v1",
        "esi-industry.read_character_jobs.v1": "EVE SSO scope esi-industry.read_character_jobs.v1",
        "esi-industry.read_character_mining.v1": "EVE SSO scope esi-industry.read_character_mining.v1",
        "esi-industry.read_corporation_jobs.v1": "EVE SSO scope esi-industry.read_corporation_jobs.v1",
        "esi-industry.read_corporation_mining.v1": "EVE SSO scope esi-industry.read_corporation_mining.v1",
        "esi-killmails.read_corporation_killmails.v1": "EVE SSO scope esi-killmails.read_corporation_killmails.v1",
        "esi-killmails.read_killmails.v1": "EVE SSO scope esi-killmails.read_killmails.v1",
        "esi-location.read_location.v1": "EVE SSO scope esi-location.read_location.v1",
        "esi-location.read_online.v1": "EVE SSO scope esi-location.read_online.v1",
        "esi-location.read_ship_type.v1": "EVE SSO scope esi-location.read_ship_type.v1",
        "esi-mail.organize_mail.v1": "EVE SSO scope esi-mail.organize_mail.v1",
        "esi-mail.read_mail.v1": "EVE SSO scope esi-mail.read_mail.v1",
        "esi-mail.send_mail.v1": "EVE SSO scope esi-mail.send_mail.v1",
        "esi-markets.read_character_orders.v1": "EVE SSO scope esi-markets.read_character_orders.v1",
        "esi-markets.read_corporation_orders.v1": "EVE SSO scope esi-markets.read_corporation_orders.v1",
        "esi-markets.structure_markets.v1": "EVE SSO scope esi-markets.structure_markets.v1",
        "esi-planets.manage_planets.v1": "EVE SSO scope esi-planets.manage_planets.v1",
        "esi-planets.read_customs_offices.v1": "EVE SSO scope esi-planets.read_customs_offices.v1",
        "esi-search.search_structures.v1": "EVE SSO scope esi-search.search_structures.v1",
        "esi-skills.read_skillqueue.v1": "EVE SSO scope esi-skills.read_skillqueue.v1",
        "esi-skills.read_skills.v1": "EVE SSO scope esi-skills.read_skills.v1",
        "esi-ui.open_window.v1": "EVE SSO scope esi-ui.open_window.v1",
        "esi-ui.write_waypoint.v1": "EVE SSO scope esi-ui.write_waypoint.v1",
        "esi-universe.read_structures.v1": "EVE SSO scope esi-universe.read_structures.v1",
        "esi-wallet.read_character_wallet.v1": "EVE SSO scope esi-wallet.read_character_wallet.v1",
        "esi-wallet.read_corporation_wallets.v1": "EVE SSO scope esi-wallet.read_corporation_wallets.v1"
      }
    }
  },
  "parameters": {
    "datasource": {
      "name": "datasource",
      "description": "The server name you would like data from",
      "in": "query",
      "type": "string",
      "default": "tranquility",
      "enum": [
        "tranquility",
        "singularity"
      ]
    },
    "user_agent": {
      "name": "user_agent",
      "description": "Client identifier, takes precedence over headers",
      "in": "query",
      "type": "string"
    },
    "X-User-Agent": {
      "name": "X-User-Agent",
      "description": "Client identifier, takes precedence over User-Agent",
      "in": "header",
      "type": "string"
    },
    "token": {
      "name": "token",
      "description": "Access token to use if unable to set a header",
      "in": "query",
      "type": "string"
    },
    "character_id": {
      "description": "An EVE character ID",
      "format": "int32",
      "in": "path",
      "minimum": 1,
      "name": "character_id",
      "required": true,
      "type": "integer"
    },
    "corporation_id": {
      "description": "An EVE corporation ID",
      "format": "int32",
      "in": "path",
      "minimum": 1,
      "name": "corporation_id",
      "required": true,
      "type": "integer"
    },
    "language": {
      "name": "language",
      "description": "Language to use in the response",
      "in": "query",
      "type": "string",
      "default": "en-us",
      "enum": [
        "de",
        "en-us",
        "fr",
        "ja",
        "ru",
        "zh"
      ]
    },
    "page": {
      "name": "page",
      "description": "Which page of results to return",
      "in": "query",
      "type": "integer",
      "format": "int32",
      "default": 1
    },
    "alliance_id": {
      "description": "An EVE alliance ID",
      "format": "int32",
      "in": "path",
      "minimum": 1,
      "name": "alliance_id",
      "required": true,
      "type": "integer"
    }
  },
  "definitions": {
    "internal_server_error": {
      "type": "object",
      "description": "Internal server error model",
      "title": "Internal server error",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "string",
          "description": "Internal server error message"
        }
      }
    },
    "forbidden": {
      "type": "object",
      "description": "Forbidden model",
      "title": "Forbidden",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "string",
          "description": "Forbidden message"
        },
        "sso_status": {
          "type": "integer",
          "description": "Status code received from SSO"
        }
      }
    }
  }
}
