swagger: '2.0'

info:
  version: "1.0.0"
  title: "check nested AllOf validations (from Pouch Engine API)"
  description: |
    The breakage with allOf occurs when a schema with an allOf has itself a  
    property which is an allOf construct
produces:
  - application/json
consumes:
  - application/json
paths:
  /models:
    get:
      operationId: modelOp
      summary: many model variations
      description: nothing
      tags:
        - testcgen
      responses:
        default:
          description: Generic Out
definitions:
  ContainerCreateConfig:
    allOf:
      - $ref: "#/definitions/ContainerConfig"
      - type: "object"
        properties:
          HostConfig:
            $ref: "#/definitions/HostConfig"
          NetworkingConfig:
            $ref: "#/definitions/NetworkingConfig"
  ContainerConfig:
    type: "object"
    description: "Configuration for a container that is portable between hosts"
    required: 
      - Image
    properties:
      Hostname:
        description: "The hostname to use for the container, as a valid RFC 1123 hostname."
        type: "string"
        format: hostname
        minLength: 1
      Domainname:
        description: "The domain name to use for the container."
        type: "string"
      User:
        description: "The user that commands are run as inside the container."
        type: "string"
      AttachStdin:
        description: "Whether to attach to `stdin`."
        type: "boolean"
        x-nullable: false
      AttachStdout:
        description: "Whether to attach to `stdout`."
        type: "boolean"
        x-nullable: false
        default: true
      AttachStderr:
        description: "Whether to attach to `stderr`."
        type: "boolean"
        x-nullable: false
        default: true
      ExposedPorts:
        description: "An object mapping ports to an empty object in the form:`{<port>/<tcp|udp>: {}}`"
        type: "object"
        additionalProperties:
          type: "object"
          enum:
            - {}
          default: {}
      Tty:
        description: "Attach standard streams to a TTY, including `stdin` if it is not closed."
        type: "boolean"
        x-nullable: false
      OpenStdin:
        description: "Open `stdin`"
        type: "boolean"
        x-nullable: false
      StdinOnce:
        description: "Close `stdin` after one attached client disconnects"
        type: "boolean"
        x-nullable: false
      Env:
        description: |
          A list of environment variables to set inside the container in the form `["VAR=value", ...]`. A variable without `=` is removed from the environment, rather than to have an empty value.
        type: "array"
        items:
          type: "string"
      Cmd:
        description: "Command to run specified an array of strings."
        type: "array"
        items:
          type: "string"
      ArgsEscaped:
        description: "Command is already escaped (Windows only)"
        type: "boolean"
        x-nullable: false
      Image:
        description: "The name of the image to use when creating the container"
        type: "string"
        x-nullable: false
      Volumes:
        description: "An object mapping mount point paths inside the container to empty objects."
        type: "object"
        additionalProperties:
          type: "object"
          enum:
            - {}
          default: {}
      WorkingDir:
        description: "The working directory for commands to run in."
        type: "string"
      Entrypoint:
        description: |
          The entry point for the container as a string or an array of strings.
          If the array consists of exactly one empty string (`[""]`) then the entry point is reset to system default.
        type: "array"
        items:
          type: "string"
      NetworkDisabled:
        description: "Disable networking for the container."
        type: "boolean"
      MacAddress:
        description: "MAC address of the container."
        type: "string"
      OnBuild:
        description: "`ONBUILD` metadata that were defined."
        type: "array"
        items:
          type: "string"
      Labels:
        description: "User-defined key/value metadata."
        type: "object"
        additionalProperties:
          type: "string"
      StopSignal:
        description: "Signal to stop a container as a string or unsigned integer."
        type: "string"
        default: "SIGTERM"
        x-nullable: false
      StopTimeout:
        description: "Timeout to stop a container in seconds."
        type: "integer"
        default: 10
      Shell:
        description: "Shell for when `RUN`, `CMD`, and `ENTRYPOINT` uses a shell."
        type: "array"
        items:
          type: "string"
      Rich:
        type: "boolean"
        description: "Whether to start container in rich container mode. (default false)"
        x-nullable: false
      RichMode:
        type: "string"
        description: "Choose one rich container mode.(default dumb-init)"
        enum:
          - "dumb-init"
          - "sbin-init"
          - "systemd"
      InitScript:
        type: "string"
        description: "Initial script executed in container. The script will be executed before entrypoint or command"
      DiskQuota:
        type: "object"
        description: "Set disk quota for container"
        x-nullable: true
        additionalProperties:
          type: "string"
      SpecAnnotation:
        description: "annotations send to runtime spec."
        type: "object"
        additionalProperties:
          type: "string"
      QuotaID:
        type: "string"
        description: "set disk quota by specified quota id, if id < 0, it means pouchd alloc a unique quota id"
 
  NetworkingConfig:
    description: "Configuration for a network used to create a container."
    type: "object"
    properties:
      EndpointsConfig:
        additionalProperties:
          $ref: "#/definitions/EndpointSettings"
          x-nullable: true

  EndpointSettings:
    description: "Configuration for a network endpoint."
    type: "object"
    properties:
      # Configurations
      IPAMConfig:
        $ref: "#/definitions/EndpointIPAMConfig"
        x-nullable: true
      Links:
        type: "array"
        items:
          type: "string"
        example:
          - "container_1"
          - "container_2"
      Aliases:
        type: "array"
        items:
          type: "string"
        example:
          - "server_x"
          - "server_y"

      # Operational data
      NetworkID:
        description: |
          Unique ID of the network.
        type: "string"
        example: "08754567f1f40222263eab4102e1c733ae697e8e354aa9cd6e18d7402835292a"
      EndpointID:
        description: |
          Unique ID for the service endpoint in a Sandbox.
        type: "string"
        example: "b88f5b905aabf2893f3cbc4ee42d1ea7980bbc0a92e2c8922b1e1795298afb0b"
      Gateway:
        description: |
          Gateway address for this network.
        type: "string"
        example: "172.17.0.1"
      IPAddress:
        description: |
          IPv4 address.
        type: "string"
        example: "172.17.0.4"
      IPPrefixLen:
        description: |
          Mask length of the IPv4 address.
        type: "integer"
        example: 16
      IPv6Gateway:
        description: |
          IPv6 gateway address.
        type: "string"
        example: "2001:db8:2::100"
      GlobalIPv6Address:
        description: |
          Global IPv6 address.
        type: "string"
        example: "2001:db8::5689"
      GlobalIPv6PrefixLen:
        description: |
          Mask length of the global IPv6 address.
        type: "integer"
        format: "int64"
        example: 64
      MacAddress:
        description: |
          MAC address for the endpoint on this network.
        type: "string"
        example: "02:42:ac:11:00:04"
      DriverOpts:
        description: |
          DriverOpts is a mapping of driver options and values. These options
          are passed directly to the driver and are driver specific.
        type: "object"
        x-nullable: true
        additionalProperties:
          type: "string"
        example:
          com.example.some-label: "some-value"
          com.example.some-other-label: "some-other-value"

  EndpointIPAMConfig:
    description: "IPAM configurations for the endpoint"
    type: "object"
    properties:
      IPv4Address:
        description: "ipv4 address"
        type: "string"
      IPv6Address:
        description: "ipv6 address"
        type: "string"
      LinkLocalIPs:
        description: "link to the list of local ip"
        type: "array"
        x-nullable: false
        items:
          type: "string"

  HostConfig:
    description: "Container configuration that depends on the host we are running on"
    type: "object"
    allOf:
      - properties:
          # Applicable to all platforms
          Binds:
            type: "array"
            description: |
              A list of volume bindings for this container. Each volume binding is a string in one of these forms:

              - `host-src:container-dest` to bind-mount a host path into the container. Both `host-src`, and `container-dest` must be an _absolute_ path.
              - `host-src:container-dest:ro` to make the bind mount read-only inside the container. Both `host-src`, and `container-dest` must be an _absolute_ path.
              - `volume-name:container-dest` to bind-mount a volume managed by a volume driver into the container. `container-dest` must be an _absolute_ path.
              - `volume-name:container-dest:ro` to mount the volume read-only inside the container.  `container-dest` must be an _absolute_ path.
            items:
              type: "string"
          ContainerIDFile:
            type: "string"
            description: "Path to a file where the container ID is written"
          LogConfig:
            type: "object"
            description: "The logging configuration for this container"
            properties:
              Type:
                type: "string"
                enum:
                  - "json-file"
                  - "syslog"
                  - "journald"
                  - "gelf"
                  - "fluentd"
                  - "awslogs"
                  - "splunk"
                  - "etwlogs"
                  - "none"
              Config:
                type: "object"
                additionalProperties:
                  type: "string"
          RestartPolicy:
            type: "object"
            description: "Restart policy to be used to manage the container"
            $ref: "#/definitions/RestartPolicy"
          NetworkMode:
            type: "string"
            description: "Network mode to use for this container. Supported standard values are: `bridge`, `host`, `none`, and `container:<name|id>`. Any other value is taken as a custom network's name to which this container should connect to."
          AutoRemove:
            type: "boolean"
            description: "Automatically remove the container when the container's process exits. This has no effect if `RestartPolicy` is set."
          VolumeDriver:
            type: "string"
            description: "Driver that this container uses to mount volumes."
          VolumesFrom:
            type: "array"
            description: "A list of volumes to inherit from another container, specified in the form `<container name>[:<ro|rw>]`."
            items:
              type: "string"
          CapAdd:
            type: "array"
            description: "A list of kernel capabilities to add to the container."
            items:
              type: "string"
          CapDrop:
            type: "array"
            description: "A list of kernel capabilities to drop from the container."
            items:
              type: "string"
          Dns:
            type: "array"
            description: "A list of DNS servers for the container to use."
            items:
              type: "string"
          DnsOptions:
            type: "array"
            description: "A list of DNS options."
            items:
              type: "string"
          DnsSearch:
            type: "array"
            description: "A list of DNS search domains."
            items:
              type: "string"
          ExtraHosts:
            type: "array"
            description: |
              A list of hostnames/IP mappings to add to the container's `/etc/hosts` file. Specified in the form `["hostname:IP"]`.
            items:
              type: "string"
          GroupAdd:
            type: "array"
            description: "A list of additional groups that the container process will run as."
            items:
              type: "string"
          IpcMode:
            type: "string"
            description: |
                    IPC sharing mode for the container. Possible values are:
                    - `"none"`: own private IPC namespace, with /dev/shm not mounted
                    - `"private"`: own private IPC namespace
                    - `"shareable"`: own private IPC namespace, with a possibility to share it with other containers
                    - `"container:<name|id>"`: join another (shareable) container's IPC namespace
                    - `"host"`: use the host system's IPC namespace
                    If not specified, daemon default is used, which can either be `"private"`
                    or `"shareable"`, depending on daemon version and configuration.
          Cgroup:
            type: "string"
            description: "Cgroup to use for the container."
          Links:
            type: "array"
            description: "A list of links for the container in the form `container_name:alias`."
            items:
              type: "string"
          OomScoreAdj:
            type: "integer"
            description: |
                An integer value containing the score given to the container in order to tune OOM killer preferences.
                The range is in [-1000, 1000].
            type: "integer"
            format: "int"
            x-nullable: false
            minimum: -1000
            maximum: 1000
          PidMode:
            type: "string"
            description: |
              Set the PID (Process) Namespace mode for the container. It can be either:
              - `"container:<name|id>"`: joins another container's PID namespace
              - `"host"`: use the host's PID namespace inside the container
          Privileged:
            type: "boolean"
            description: "Gives the container full access to the host."
          PublishAllPorts:
            type: "boolean"
            description: "Allocates a random host port for all of a container's exposed ports."
          ReadonlyRootfs:
            type: "boolean"
            description: "Mount the container's root filesystem as read only."
          SecurityOpt:
            type: "array"
            description: "A list of string values to customize labels for MLS systems, such as SELinux."
            items:
              type: "string"
          StorageOpt:
            type: "object"
            description: |
              Storage driver options for this container, in the form `{"size": "120G"}`.
            additionalProperties:
              type: "string"
          Tmpfs:
            type: "object"
            description: |
              A map of container directories which should be replaced by tmpfs mounts, and their corresponding mount options. For example: `{ "/run": "rw,noexec,nosuid,size=65536k" }`.
            additionalProperties:
              type: "string"
          UTSMode:
            type: "string"
            description: "UTS namespace to use for the container."
          UsernsMode:
            type: "string"
            description: "Sets the usernamespace mode for the container when usernamespace remapping option is enabled."
          ShmSize:
            type: "integer"
            description: "Size of `/dev/shm` in bytes. If omitted, the system uses 64MB."
            minimum: 0
          Sysctls:
            type: "object"
            description: |
              A list of kernel parameters (sysctls) to set in the container. For example: `{"net.ipv4.ip_forward": "1"}`
            additionalProperties:
              type: "string"
          Runtime:
            type: "string"
            description: "Runtime to use with this container."
          # Applicable to Windows
          ConsoleSize:
            type: "array"
            description: "Initial console size, as an `[height, width]` array. (Windows only)"
            minItems: 2
            maxItems: 2
            items:
              type: "integer"
              minimum: 0
          Isolation:
            type: "string"
            description: "Isolation technology of the container. (Windows only)"
            enum:
              - "default"
              - "process"
              - "hyperv"
          EnableLxcfs:
            description: "Whether to enable lxcfs."
            type: "boolean"
            x-nullable: false
          Rich:
            type: "boolean"
            description: "Whether to start container in rich container mode. (default false)"
            x-nullable: false
          RichMode:
            type: "string"
            description: "Choose one rich container mode.(default dumb-init)"
            enum:
             - "dumb-init"
             - "sbin-init"
             - "systemd"
          InitScript:
            type: "string"
            description: "Initial script executed in container. The script will be executed before entrypoint or command"
      - $ref: "#/definitions/Resources"

  Resources:
    description: "A container's resources (cgroups config, ulimits, etc)"
    type: "object"
    properties:
      # Applicable to all platforms
      CpuShares:
        description: "An integer value representing this container's relative CPU weight versus other containers."
        type: "integer"
      Memory:
        description: "Memory limit in bytes."
        type: "integer"
        default: 0
      # Applicable to UNIX platforms
      CgroupParent:
        description: "Path to `cgroups` under which the container's `cgroup` is created. If the path is not absolute, the path is considered to be relative to the `cgroups` path of the init process. Cgroups are created if they do not already exist."
        type: "string"
      BlkioWeight:
        description: "Block IO weight (relative weight)."
        type: "integer"
        format: "uint16"
        x-nullable: false
        minimum: 0
        maximum: 1000

  RestartPolicy:
    description: "Define container's restart policy"
    type: "object"
    properties:
      Name:
        type: "string"
      MaximumRetryCount:
        type: "integer"

