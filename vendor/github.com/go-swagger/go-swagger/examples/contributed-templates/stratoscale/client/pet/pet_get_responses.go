// Code generated by go-swagger; DO NOT EDIT.

package pet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/go-swagger/go-swagger/examples/contributed-templates/stratoscale/models"
)

// PetGetReader is a Reader for the PetGet structure.
type PetGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PetGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPetGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPetGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPetGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPetGetOK creates a PetGetOK with default headers values
func NewPetGetOK() *PetGetOK {
	return &PetGetOK{}
}

/*PetGetOK handles this case with default header values.

successful operation
*/
type PetGetOK struct {
	Payload *models.Pet
}

func (o *PetGetOK) Error() string {
	return fmt.Sprintf("[GET /pet/{petId}][%d] petGetOK  %+v", 200, o.Payload)
}

func (o *PetGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Pet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPetGetBadRequest creates a PetGetBadRequest with default headers values
func NewPetGetBadRequest() *PetGetBadRequest {
	return &PetGetBadRequest{}
}

/*PetGetBadRequest handles this case with default header values.

Invalid ID supplied
*/
type PetGetBadRequest struct {
}

func (o *PetGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /pet/{petId}][%d] petGetBadRequest ", 400)
}

func (o *PetGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPetGetNotFound creates a PetGetNotFound with default headers values
func NewPetGetNotFound() *PetGetNotFound {
	return &PetGetNotFound{}
}

/*PetGetNotFound handles this case with default header values.

Pet not found
*/
type PetGetNotFound struct {
}

func (o *PetGetNotFound) Error() string {
	return fmt.Sprintf("[GET /pet/{petId}][%d] petGetNotFound ", 404)
}

func (o *PetGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
